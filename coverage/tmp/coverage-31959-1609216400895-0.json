{"result":[{"scriptId":"6","url":"internal/per_context/primordials.js","functions":[{"functionName":"uncurryThis","ranges":[{"startOffset":1000,"endOffset":1096,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1093,"count":6195}],"isBlockCoverage":true}]},{"scriptId":"9","url":"internal/bootstrap/loaders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10110,"count":1}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":3556,"endOffset":3953,"count":0}],"isBlockCoverage":false},{"functionName":"_linkedBinding","ranges":[{"startOffset":3983,"endOffset":4191,"count":0}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":4371,"endOffset":4618,"count":805},{"startOffset":4473,"endOffset":4598,"count":42}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":4763,"endOffset":4917,"count":2634},{"startOffset":4899,"endOffset":4914,"count":0}],"isBlockCoverage":true},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5284,"endOffset":5355,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5319,"endOffset":5353,"count":224}],"isBlockCoverage":true},{"functionName":"NativeModule","ranges":[{"startOffset":5360,"endOffset":6096,"count":224}],"isBlockCoverage":true},{"functionName":"exposeInternals","ranges":[{"startOffset":6246,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6483,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":6547,"endOffset":6663,"count":2144},{"startOffset":6631,"endOffset":6658,"count":73}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":6735,"endOffset":7413,"count":73},{"startOffset":6798,"endOffset":6990,"count":0},{"startOffset":7054,"endOffset":7335,"count":15},{"startOffset":7297,"endOffset":7301,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":7417,"endOffset":7968,"count":74},{"startOffset":7455,"endOffset":7474,"count":59},{"startOffset":7474,"endOffset":7967,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7695,"endOffset":7808,"count":15}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":8264,"endOffset":8608,"count":88},{"startOffset":8383,"endOffset":8598,"count":2634},{"startOffset":8460,"endOffset":8469,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":8612,"endOffset":9166,"count":899},{"startOffset":8661,"endOffset":8676,"count":119},{"startOffset":8678,"endOffset":8712,"count":785},{"startOffset":8712,"endOffset":8835,"count":114},{"startOffset":8835,"endOffset":8870,"count":0},{"startOffset":8871,"endOffset":8892,"count":114},{"startOffset":9046,"endOffset":9165,"count":114}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":9364,"endOffset":9735,"count":832},{"startOffset":9422,"endOffset":9453,"count":6},{"startOffset":9453,"endOffset":9637,"count":826},{"startOffset":9637,"endOffset":9692,"count":0},{"startOffset":9692,"endOffset":9734,"count":826}],"isBlockCoverage":true},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":9851,"endOffset":10023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"10","url":"internal/bootstrap/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12573,"count":1}],"isBlockCoverage":true},{"functionName":"process.openStdin","ranges":[{"startOffset":3374,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6135,"endOffset":6297,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6399,"endOffset":6571,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":9358,"endOffset":9944,"count":1}],"isBlockCoverage":true},{"functionName":"setupProcessObject","ranges":[{"startOffset":9946,"endOffset":10533,"count":1}],"isBlockCoverage":true},{"functionName":"setupGlobalProxy","ranges":[{"startOffset":10535,"endOffset":10712,"count":1}],"isBlockCoverage":true},{"functionName":"setupBuffer","ranges":[{"startOffset":10714,"endOffset":11150,"count":1}],"isBlockCoverage":true},{"functionName":"createGlobalConsole","ranges":[{"startOffset":11152,"endOffset":11833,"count":1}],"isBlockCoverage":true},{"functionName":"exposeNamespace","ranges":[{"startOffset":11885,"endOffset":12083,"count":1}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":12135,"endOffset":12333,"count":4}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":12393,"endOffset":12572,"count":7}],"isBlockCoverage":true}]},{"scriptId":"11","url":"internal/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52879,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":1343,"endOffset":2055,"count":32},{"startOffset":1520,"endOffset":1636,"count":0},{"startOffset":1785,"endOffset":2054,"count":0}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":2097,"endOffset":2803,"count":32},{"startOffset":2431,"endOffset":2802,"count":0}],"isBlockCoverage":true},{"functionName":"lazyInternalUtil","ranges":[{"startOffset":2893,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":3053,"endOffset":3215,"count":0}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":3229,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"SystemError","ranges":[{"startOffset":3840,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6382,"endOffset":6457,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6461,"endOffset":6650,"count":0}],"isBlockCoverage":false},{"functionName":"makeSystemErrorWithCode","ranges":[{"startOffset":6654,"endOffset":6799,"count":3}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6745,"endOffset":6792,"count":0}],"isBlockCoverage":false},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":6801,"endOffset":7556,"count":232}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6889,"endOffset":7470,"count":30},{"startOffset":6979,"endOffset":7188,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":7476,"endOffset":7549,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":7628,"endOffset":8039,"count":25}],"isBlockCoverage":true},{"functionName":"hidden","ranges":[{"startOffset":7668,"endOffset":8036,"count":7918},{"startOffset":7832,"endOffset":7896,"count":5634},{"startOffset":7980,"endOffset":8026,"count":5634}],"isBlockCoverage":true},{"functionName":"addCodeToName","ranges":[{"startOffset":8041,"endOffset":8711,"count":30},{"startOffset":8139,"endOffset":8248,"count":0},{"startOffset":8533,"endOffset":8677,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":8823,"endOffset":9331,"count":232},{"startOffset":9065,"endOffset":9110,"count":3},{"startOffset":9110,"endOffset":9164,"count":229},{"startOffset":9199,"endOffset":9309,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9226,"endOffset":9303,"count":3}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":9333,"endOffset":10137,"count":30},{"startOffset":9434,"endOffset":9470,"count":1},{"startOffset":9761,"endOffset":9819,"count":0},{"startOffset":10041,"endOffset":10136,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":10155,"endOffset":10259,"count":16},{"startOffset":10193,"endOffset":10237,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":10316,"endOffset":10486,"count":16},{"startOffset":10394,"endOffset":10447,"count":1}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":10779,"endOffset":12029,"count":16},{"startOffset":10856,"endOffset":10874,"count":0},{"startOffset":11068,"endOffset":11137,"count":0},{"startOffset":11677,"endOffset":11799,"count":48},{"startOffset":11725,"endOffset":11743,"count":32},{"startOffset":11745,"endOffset":11768,"count":16},{"startOffset":11768,"endOffset":11799,"count":32},{"startOffset":11871,"endOffset":11897,"count":0}],"isBlockCoverage":true},{"functionName":"uvExceptionWithHostPort","ranges":[{"startOffset":12342,"endOffset":13301,"count":0}],"isBlockCoverage":false},{"functionName":"errnoException","ranges":[{"startOffset":13480,"endOffset":14239,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionWithHostPort","ranges":[{"startOffset":14592,"endOffset":15862,"count":0}],"isBlockCoverage":false},{"functionName":"dnsException","ranges":[{"startOffset":16026,"endOffset":17595,"count":0}],"isBlockCoverage":false},{"functionName":"connResetException","ranges":[{"startOffset":17597,"endOffset":17752,"count":0}],"isBlockCoverage":false},{"functionName":"isStackOverflowError","ranges":[{"startOffset":18042,"endOffset":18420,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericalSeparator","ranges":[{"startOffset":18501,"endOffset":18737,"count":0}],"isBlockCoverage":false},{"functionName":"beforeInspector","ranges":[{"startOffset":19016,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"afterInspector","ranges":[{"startOffset":19411,"endOffset":20749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22516,"endOffset":22680,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25519,"endOffset":25634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25923,"endOffset":26017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28242,"endOffset":28470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30203,"endOffset":30421,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32114,"endOffset":32414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32456,"endOffset":32600,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32643,"endOffset":35848,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35889,"endOffset":36145,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36537,"endOffset":36700,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37362,"endOffset":37497,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37538,"endOffset":37619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37782,"endOffset":37977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38021,"endOffset":38795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39173,"endOffset":39337,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39390,"endOffset":39721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39765,"endOffset":40072,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40442,"endOffset":40517,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40561,"endOffset":40849,"count":1},{"startOffset":40716,"endOffset":40772,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41177,"endOffset":41608,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42258,"endOffset":42781,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42875,"endOffset":42976,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43678,"endOffset":44376,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44427,"endOffset":44619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44668,"endOffset":44984,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45017,"endOffset":45917,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46369,"endOffset":46628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":47978,"endOffset":48147,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50045,"endOffset":50176,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":51936,"endOffset":52034,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52228,"endOffset":52484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"12","url":"internal/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12301,"count":1}],"isBlockCoverage":false},{"functionName":"removeColors","ranges":[{"startOffset":975,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":1046,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":1581,"endOffset":2678,"count":34},{"startOffset":1655,"endOffset":1675,"count":0},{"startOffset":1702,"endOffset":1729,"count":32},{"startOffset":1735,"endOffset":1790,"count":0},{"startOffset":2432,"endOffset":2654,"count":29}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":1816,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorStack","ranges":[{"startOffset":2680,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":3021,"endOffset":3095,"count":1},{"startOffset":3067,"endOffset":3093,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":3274,"endOffset":3405,"count":676},{"startOffset":3344,"endOffset":3362,"count":0},{"startOffset":3378,"endOffset":3404,"count":0}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":3407,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"emitExperimentalWarning","ranges":[{"startOffset":4989,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":5279,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":5589,"endOffset":5732,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5640,"endOffset":5729,"count":0}],"isBlockCoverage":false},{"functionName":"createClassWrapper","ranges":[{"startOffset":5997,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsToNamesMapping","ranges":[{"startOffset":6391,"endOffset":6669,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":6671,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorOf","ranges":[{"startOffset":6980,"endOffset":7326,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7328,"endOffset":7457,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":7602,"endOffset":9073,"count":4},{"startOffset":7675,"endOffset":7740,"count":0},{"startOffset":7784,"endOffset":8105,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":8305,"endOffset":8786,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8351,"endOffset":8780,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8409,"endOffset":8772,"count":1},{"startOffset":8448,"endOffset":8489,"count":0},{"startOffset":8530,"endOffset":8550,"count":0},{"startOffset":8552,"endOffset":8717,"count":0}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":9168,"endOffset":9490,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":9631,"endOffset":9758,"count":2},{"startOffset":9712,"endOffset":9742,"count":0}],"isBlockCoverage":true},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":9840,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":11014,"endOffset":11172,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":11195,"endOffset":11410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"13","url":"events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22387,"count":1}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":1814,"endOffset":1883,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2194,"endOffset":2250,"count":4}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2254,"endOffset":2488,"count":0}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":3041,"endOffset":3191,"count":23},{"startOffset":3114,"endOffset":3189,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3280,"endOffset":3328,"count":11}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3337,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":3638,"endOffset":4368,"count":7},{"startOffset":3689,"endOffset":3749,"count":2},{"startOffset":3751,"endOffset":3822,"count":5},{"startOffset":3893,"endOffset":3918,"count":4},{"startOffset":3920,"endOffset":4179,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":4371,"endOffset":4930,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":4932,"endOffset":5590,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":5761,"endOffset":5960,"count":1},{"startOffset":5847,"endOffset":5917,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":5963,"endOffset":6112,"count":7},{"startOffset":6081,"endOffset":6111,"count":0}],"isBlockCoverage":true},{"functionName":"getMaxListeners","ranges":[{"startOffset":6155,"endOffset":6218,"count":0}],"isBlockCoverage":false},{"functionName":"identicalSequenceRange","ranges":[{"startOffset":6346,"endOffset":6922,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceStackTrace","ranges":[{"startOffset":6924,"endOffset":7530,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":7562,"endOffset":9903,"count":23},{"startOffset":7707,"endOffset":7745,"count":0},{"startOffset":7753,"endOffset":7787,"count":0},{"startOffset":7811,"endOffset":7840,"count":0},{"startOffset":7846,"endOffset":7883,"count":0},{"startOffset":7955,"endOffset":8945,"count":0},{"startOffset":9013,"endOffset":9026,"count":1},{"startOffset":9026,"endOffset":9065,"count":22},{"startOffset":9065,"endOffset":9354,"count":3},{"startOffset":9281,"endOffset":9299,"count":0},{"startOffset":9301,"endOffset":9350,"count":0},{"startOffset":9354,"endOffset":9885,"count":19},{"startOffset":9471,"endOffset":9881,"count":38},{"startOffset":9802,"endOffset":9820,"count":0},{"startOffset":9822,"endOffset":9875,"count":0},{"startOffset":9885,"endOffset":9902,"count":22}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":9906,"endOffset":11961,"count":18},{"startOffset":10086,"endOffset":10170,"count":0},{"startOffset":10355,"endOffset":10635,"count":15},{"startOffset":10432,"endOffset":10451,"count":0},{"startOffset":10700,"endOffset":10838,"count":11},{"startOffset":10838,"endOffset":11941,"count":7},{"startOffset":10997,"endOffset":11019,"count":0},{"startOffset":11102,"endOffset":11206,"count":0},{"startOffset":11310,"endOffset":11329,"count":0},{"startOffset":11331,"endOffset":11937,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":12000,"endOffset":12092,"count":18}],"isBlockCoverage":true},{"functionName":"prependListener","ranges":[{"startOffset":12205,"endOffset":12308,"count":0}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":12311,"endOffset":12575,"count":0}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":12577,"endOffset":12818,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":12850,"endOffset":12976,"count":0}],"isBlockCoverage":false},{"functionName":"prependOnceListener","ranges":[{"startOffset":13028,"endOffset":13198,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":13320,"endOffset":14614,"count":5},{"startOffset":13469,"endOffset":13481,"count":0},{"startOffset":13554,"endOffset":13566,"count":0},{"startOffset":13596,"endOffset":13625,"count":4},{"startOffset":13627,"endOffset":13887,"count":1},{"startOffset":13678,"endOffset":13712,"count":0},{"startOffset":13887,"endOffset":14588,"count":4},{"startOffset":14006,"endOffset":14145,"count":6},{"startOffset":14043,"endOffset":14075,"count":2},{"startOffset":14077,"endOffset":14135,"count":4},{"startOffset":14183,"endOffset":14195,"count":0},{"startOffset":14235,"endOffset":14409,"count":2},{"startOffset":14315,"endOffset":14362,"count":1}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":14734,"endOffset":16060,"count":0}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":16063,"endOffset":16458,"count":0}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":16495,"endOffset":16562,"count":0}],"isBlockCoverage":false},{"functionName":"rawListeners","ranges":[{"startOffset":16603,"endOffset":16674,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.listenerCount","ranges":[{"startOffset":16706,"endOffset":16874,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":16931,"endOffset":17221,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":17259,"endOffset":17352,"count":0}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":17355,"endOffset":17815,"count":19},{"startOffset":17564,"endOffset":17604,"count":0},{"startOffset":17609,"endOffset":17657,"count":0},{"startOffset":17662,"endOffset":17718,"count":0},{"startOffset":17723,"endOffset":17787,"count":0},{"startOffset":17791,"endOffset":17814,"count":0}],"isBlockCoverage":true},{"functionName":"unwrapListeners","ranges":[{"startOffset":17817,"endOffset":18031,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":18033,"endOffset":18598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18676,"endOffset":18697,"count":0}],"isBlockCoverage":false},{"functionName":"createIterResult","ranges":[{"startOffset":18712,"endOffset":18780,"count":0}],"isBlockCoverage":false},{"functionName":"addErrorHandlerIfEventEmitter","ranges":[{"startOffset":18782,"endOffset":18965,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticRemoveListener","ranges":[{"startOffset":18967,"endOffset":19352,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":19354,"endOffset":19943,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":19945,"endOffset":22386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"internal/util/inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":71051,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2714,"endOffset":2750,"count":62}],"isBlockCoverage":true},{"functionName":"isUndetectableObject","ranges":[{"startOffset":2841,"endOffset":2891,"count":0}],"isBlockCoverage":false},{"functionName":"getUserOptions","ranges":[{"startOffset":6036,"endOffset":7487,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7782,"endOffset":9699,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9791,"endOffset":9836,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":9840,"endOffset":10048,"count":0}],"isBlockCoverage":false},{"functionName":"defineColorAlias","ranges":[{"startOffset":11785,"endOffset":12027,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11880,"endOffset":11920,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":11926,"endOffset":11972,"count":0}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":13037,"endOffset":13195,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":13214,"endOffset":13246,"count":0}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":13359,"endOffset":14985,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":14987,"endOffset":15253,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":15255,"endOffset":15301,"count":0}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":15380,"endOffset":15427,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":15429,"endOffset":16685,"count":0}],"isBlockCoverage":false},{"functionName":"addPrototypeProperties","ranges":[{"startOffset":16872,"endOffset":18709,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":18711,"endOffset":19078,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":19115,"endOffset":20057,"count":0}],"isBlockCoverage":false},{"functionName":"getCtxStyle","ranges":[{"startOffset":20059,"endOffset":20322,"count":0}],"isBlockCoverage":false},{"functionName":"formatProxy","ranges":[{"startOffset":20324,"endOffset":20773,"count":0}],"isBlockCoverage":false},{"functionName":"findTypedConstructor","ranges":[{"startOffset":20775,"endOffset":21298,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":21480,"endOffset":24019,"count":0}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":24021,"endOffset":34465,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorBraces","ranges":[{"startOffset":34467,"endOffset":34649,"count":0}],"isBlockCoverage":false},{"functionName":"getBoxedBase","ranges":[{"startOffset":34651,"endOffset":35825,"count":0}],"isBlockCoverage":false},{"functionName":"getClassBase","ranges":[{"startOffset":35827,"endOffset":36427,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionBase","ranges":[{"startOffset":36429,"endOffset":37522,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":37524,"endOffset":40645,"count":0}],"isBlockCoverage":false},{"functionName":"groupArrayElements","ranges":[{"startOffset":40647,"endOffset":44898,"count":0}],"isBlockCoverage":false},{"functionName":"handleMaxCallStackSize","ranges":[{"startOffset":44900,"endOffset":45252,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":45254,"endOffset":45431,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigInt","ranges":[{"startOffset":45433,"endOffset":45505,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":45507,"endOffset":46690,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamespaceObject","ranges":[{"startOffset":46692,"endOffset":47840,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpecialArray","ranges":[{"startOffset":47887,"endOffset":49094,"count":0}],"isBlockCoverage":false},{"functionName":"formatArrayBuffer","ranges":[{"startOffset":49096,"endOffset":49696,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":49698,"endOffset":50292,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypedArray","ranges":[{"startOffset":50294,"endOffset":51310,"count":0}],"isBlockCoverage":false},{"functionName":"formatSet","ranges":[{"startOffset":51312,"endOffset":51544,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":51546,"endOffset":51844,"count":0}],"isBlockCoverage":false},{"functionName":"formatSetIterInner","ranges":[{"startOffset":51846,"endOffset":52659,"count":0}],"isBlockCoverage":false},{"functionName":"formatMapIterInner","ranges":[{"startOffset":52661,"endOffset":53983,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakCollection","ranges":[{"startOffset":53985,"endOffset":54077,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakSet","ranges":[{"startOffset":54079,"endOffset":54236,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakMap","ranges":[{"startOffset":54238,"endOffset":54395,"count":0}],"isBlockCoverage":false},{"functionName":"formatIterator","ranges":[{"startOffset":54397,"endOffset":54788,"count":0}],"isBlockCoverage":false},{"functionName":"formatPromise","ranges":[{"startOffset":54790,"endOffset":55255,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":55257,"endOffset":57523,"count":0}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":57525,"endOffset":58467,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":58469,"endOffset":61219,"count":0}],"isBlockCoverage":false},{"functionName":"hasBuiltInToString","ranges":[{"startOffset":61221,"endOffset":62240,"count":0}],"isBlockCoverage":false},{"functionName":"firstErrorLine","ranges":[{"startOffset":62265,"endOffset":62304,"count":0}],"isBlockCoverage":false},{"functionName":"tryStringify","ranges":[{"startOffset":62334,"endOffset":62803,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":62805,"endOffset":62889,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":62891,"endOffset":63169,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":63171,"endOffset":66865,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":67294,"endOffset":67845,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":67960,"endOffset":68372,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidthCodePoint","ranges":[{"startOffset":68540,"endOffset":70149,"count":0}],"isBlockCoverage":false},{"functionName":"isZeroWidthCodePoint","ranges":[{"startOffset":70183,"endOffset":70751,"count":0}],"isBlockCoverage":false},{"functionName":"stripVTControlCharacters","ranges":[{"startOffset":70841,"endOffset":70915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"15","url":"internal/util/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1893,"count":1}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":496,"endOffset":590,"count":1575}],"isBlockCoverage":true},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":592,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":702,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":800,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":898,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":992,"endOffset":1086,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":1088,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":1184,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":1284,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1384,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1486,"endOffset":1588,"count":5}],"isBlockCoverage":true}]},{"scriptId":"16","url":"internal/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":false},{"functionName":"lazyError","ranges":[{"startOffset":26,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":758},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":309,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35521,"count":1}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":3878,"endOffset":4014,"count":229}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4016,"endOffset":4175,"count":80}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4191,"endOffset":4313,"count":533},{"startOffset":4265,"endOffset":4311,"count":463}],"isBlockCoverage":true},{"functionName":"showFlaggedDeprecation","ranges":[{"startOffset":4617,"endOffset":5297,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5299,"endOffset":5517,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":5519,"endOffset":6784,"count":0}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6786,"endOffset":7388,"count":0}],"isBlockCoverage":false},{"functionName":"Buffer","ranges":[{"startOffset":7964,"endOffset":8297,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8390,"endOffset":8418,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8675,"endOffset":9639,"count":13},{"startOffset":8761,"endOffset":8804,"count":7},{"startOffset":8804,"endOffset":8855,"count":6},{"startOffset":8857,"endOffset":9494,"count":6},{"startOffset":8954,"endOffset":9008,"count":0},{"startOffset":9034,"endOffset":9062,"count":0},{"startOffset":9063,"endOffset":9134,"count":0},{"startOffset":9136,"endOffset":9490,"count":0},{"startOffset":9494,"endOffset":9638,"count":0}],"isBlockCoverage":true},{"functionName":"of","ranges":[{"startOffset":10010,"endOffset":10162,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10451,"endOffset":10672,"count":678},{"startOffset":10495,"endOffset":10560,"count":0},{"startOffset":10603,"endOffset":10670,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10775,"endOffset":11020,"count":2},{"startOffset":10859,"endOffset":10872,"count":0},{"startOffset":10873,"endOffset":10884,"count":0},{"startOffset":10886,"endOffset":10987,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11199,"endOffset":11274,"count":675}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11515,"endOffset":11604,"count":1}],"isBlockCoverage":true},{"functionName":"SlowBuffer","ranges":[{"startOffset":11700,"endOffset":11790,"count":0}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":11905,"endOffset":12237,"count":675},{"startOffset":11948,"endOffset":11982,"count":0},{"startOffset":12021,"endOffset":12200,"count":527},{"startOffset":12069,"endOffset":12082,"count":79},{"startOffset":12200,"endOffset":12236,"count":148}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12239,"endOffset":12785,"count":6},{"startOffset":12365,"endOffset":12414,"count":0},{"startOffset":12460,"endOffset":12473,"count":0},{"startOffset":12606,"endOffset":12732,"count":0}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12787,"endOffset":13240,"count":7},{"startOffset":12873,"endOffset":12897,"count":4},{"startOffset":12899,"endOffset":13018,"count":3},{"startOffset":12936,"endOffset":12960,"count":0},{"startOffset":13018,"endOffset":13200,"count":4},{"startOffset":13095,"endOffset":13136,"count":0},{"startOffset":13172,"endOffset":13196,"count":1},{"startOffset":13200,"endOffset":13239,"count":6}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13242,"endOffset":13939,"count":6},{"startOffset":13386,"endOffset":13482,"count":0},{"startOffset":13559,"endOffset":13604,"count":0},{"startOffset":13663,"endOffset":13886,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":13941,"endOffset":14315,"count":0}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":14317,"endOffset":14623,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":14662,"endOffset":14716,"count":57}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":14736,"endOffset":15061,"count":0}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15084,"endOffset":15235,"count":675}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":15301,"endOffset":16507,"count":1},{"startOffset":15360,"endOffset":15424,"count":0},{"startOffset":15479,"endOffset":16506,"count":0}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16510,"endOffset":16746,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16881,"endOffset":16945,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":16958,"endOffset":17004,"count":674}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17019,"endOffset":17115,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17208,"endOffset":17237,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17250,"endOffset":17314,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17327,"endOffset":17373,"count":1}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17388,"endOffset":17487,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17586,"endOffset":17615,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17628,"endOffset":17692,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17705,"endOffset":17751,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17766,"endOffset":17865,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17961,"endOffset":17986,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17999,"endOffset":18065,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18078,"endOffset":18126,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18141,"endOffset":18239,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18332,"endOffset":18357,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18370,"endOffset":18435,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18448,"endOffset":18495,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18510,"endOffset":18722,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18818,"endOffset":18869,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18882,"endOffset":18948,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18961,"endOffset":19009,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19024,"endOffset":19238,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19325,"endOffset":19356,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19369,"endOffset":19432,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19445,"endOffset":19490,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19505,"endOffset":19713,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":19721,"endOffset":21276,"count":679},{"startOffset":19808,"endOffset":20093,"count":676},{"startOffset":19847,"endOffset":19871,"count":675},{"startOffset":19871,"endOffset":19927,"count":1},{"startOffset":19927,"endOffset":20093,"count":0},{"startOffset":20098,"endOffset":20503,"count":3},{"startOffset":20138,"endOffset":20162,"count":0},{"startOffset":20220,"endOffset":20503,"count":0},{"startOffset":20508,"endOffset":20638,"count":0},{"startOffset":20643,"endOffset":20775,"count":0},{"startOffset":20780,"endOffset":21147,"count":0},{"startOffset":21152,"endOffset":21270,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":21278,"endOffset":21935,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22075,"endOffset":22169,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22247,"endOffset":22345,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":22377,"endOffset":22510,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":22791,"endOffset":23370,"count":677},{"startOffset":22863,"endOffset":22911,"count":0},{"startOffset":22963,"endOffset":22973,"count":0},{"startOffset":23003,"endOffset":23013,"count":0},{"startOffset":23062,"endOffset":23074,"count":0},{"startOffset":23090,"endOffset":23111,"count":0},{"startOffset":23137,"endOffset":23147,"count":2},{"startOffset":23147,"endOffset":23183,"count":675},{"startOffset":23183,"endOffset":23217,"count":0},{"startOffset":23217,"endOffset":23288,"count":675},{"startOffset":23288,"endOffset":23329,"count":0},{"startOffset":23329,"endOffset":23369,"count":675}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":23399,"endOffset":23753,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":23881,"endOffset":24876,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":24972,"endOffset":26123,"count":0}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":26551,"endOffset":27858,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":27887,"endOffset":28004,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":28038,"endOffset":28160,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":28191,"endOffset":28296,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":28474,"endOffset":28573,"count":0}],"isBlockCoverage":false},{"functionName":"_fill","ranges":[{"startOffset":28576,"endOffset":30486,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":30513,"endOffset":31526,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":31555,"endOffset":31789,"count":0}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":31792,"endOffset":32226,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":32253,"endOffset":32553,"count":0}],"isBlockCoverage":false},{"functionName":"swap","ranges":[{"startOffset":32556,"endOffset":32627,"count":0}],"isBlockCoverage":false},{"functionName":"swap16","ranges":[{"startOffset":32655,"endOffset":33059,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":33088,"endOffset":33532,"count":0}],"isBlockCoverage":false},{"functionName":"swap64","ranges":[{"startOffset":33561,"endOffset":34069,"count":0}],"isBlockCoverage":false},{"functionName":"transcode","ranges":[{"startOffset":34382,"endOffset":35122,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35434,"endOffset":35469,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":35475,"endOffset":35512,"count":0}],"isBlockCoverage":false}]},{"scriptId":"18","url":"internal/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6360,"count":1}],"isBlockCoverage":false},{"functionName":"isInt32","ranges":[{"startOffset":526,"endOffset":585,"count":1352}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":587,"endOffset":649,"count":1351}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1271,"endOffset":1746,"count":675},{"startOffset":1334,"endOffset":1354,"count":0},{"startOffset":1356,"endOffset":1377,"count":0},{"startOffset":1425,"endOffset":1745,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1791,"endOffset":2172,"count":675},{"startOffset":1911,"endOffset":1965,"count":0},{"startOffset":2005,"endOffset":2059,"count":0},{"startOffset":2102,"endOffset":2168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2218,"endOffset":2799,"count":1352},{"startOffset":2380,"endOffset":2678,"count":0},{"startOffset":2715,"endOffset":2795,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2843,"endOffset":3353,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":3357,"endOffset":3489,"count":22627},{"startOffset":3433,"endOffset":3487,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3491,"endOffset":3623,"count":1},{"startOffset":3567,"endOffset":3621,"count":0}],"isBlockCoverage":true},{"functionName":"validateBoolean","ranges":[{"startOffset":3625,"endOffset":3760,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3804,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4071,"endOffset":4358,"count":0}],"isBlockCoverage":false},{"functionName":"validateSignalName","ranges":[{"startOffset":4362,"endOffset":4783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4824,"endOffset":5054,"count":675},{"startOffset":4889,"endOffset":5052,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":5058,"endOffset":5392,"count":0}],"isBlockCoverage":false},{"functionName":"validatePort","ranges":[{"startOffset":5536,"endOffset":5910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5953,"endOffset":6054,"count":1},{"startOffset":6011,"endOffset":6052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"19","url":"internal/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28952,"count":1}],"isBlockCoverage":false},{"functionName":"checkBounds","ranges":[{"startOffset":1077,"endOffset":1293,"count":1},{"startOffset":1240,"endOffset":1291,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1295,"endOffset":1913,"count":1},{"startOffset":1391,"endOffset":1871,"count":0}],"isBlockCoverage":true},{"functionName":"boundsError","ranges":[{"startOffset":1915,"endOffset":2318,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64LE","ranges":[{"startOffset":2338,"endOffset":2837,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64BE","ranges":[{"startOffset":2839,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64LE","ranges":[{"startOffset":3340,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64BE","ranges":[{"startOffset":3843,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntLE","ranges":[{"startOffset":4340,"endOffset":4892,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48LE","ranges":[{"startOffset":4894,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40LE","ranges":[{"startOffset":5279,"endOffset":5635,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5637,"endOffset":5963,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":5965,"endOffset":6253,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6255,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt8","ranges":[{"startOffset":6517,"endOffset":6697,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntBE","ranges":[{"startOffset":6699,"endOffset":7251,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48BE","ranges":[{"startOffset":7253,"endOffset":7636,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40BE","ranges":[{"startOffset":7638,"endOffset":7994,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32BE","ranges":[{"startOffset":7996,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24BE","ranges":[{"startOffset":8324,"endOffset":8612,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16BE","ranges":[{"startOffset":8614,"endOffset":8874,"count":0}],"isBlockCoverage":false},{"functionName":"readIntLE","ranges":[{"startOffset":8876,"endOffset":9421,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48LE","ranges":[{"startOffset":9423,"endOffset":9854,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40LE","ranges":[{"startOffset":9856,"endOffset":10243,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32LE","ranges":[{"startOffset":10245,"endOffset":10580,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":10582,"endOffset":10914,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":10916,"endOffset":11222,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":11224,"endOffset":11432,"count":0}],"isBlockCoverage":false},{"functionName":"readIntBE","ranges":[{"startOffset":11434,"endOffset":11979,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48BE","ranges":[{"startOffset":11981,"endOffset":12410,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40BE","ranges":[{"startOffset":12412,"endOffset":12800,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32BE","ranges":[{"startOffset":12802,"endOffset":13137,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":13139,"endOffset":13471,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16BE","ranges":[{"startOffset":13473,"endOffset":13779,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatBackwards","ranges":[{"startOffset":13796,"endOffset":14201,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatForwards","ranges":[{"startOffset":14203,"endOffset":14607,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleBackwards","ranges":[{"startOffset":14609,"endOffset":15179,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleForwards","ranges":[{"startOffset":15181,"endOffset":15750,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64LE","ranges":[{"startOffset":15771,"endOffset":16253,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64LE","ranges":[{"startOffset":16255,"endOffset":16377,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64BE","ranges":[{"startOffset":16379,"endOffset":16877,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64BE","ranges":[{"startOffset":16879,"endOffset":17001,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64LE","ranges":[{"startOffset":17003,"endOffset":17147,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64BE","ranges":[{"startOffset":17149,"endOffset":17293,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntLE","ranges":[{"startOffset":17295,"endOffset":17904,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48LE","ranges":[{"startOffset":17906,"endOffset":18319,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40LE","ranges":[{"startOffset":18321,"endOffset":18700,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":18702,"endOffset":19009,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":19011,"endOffset":19117,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24LE","ranges":[{"startOffset":19119,"endOffset":19378,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":19380,"endOffset":19576,"count":1}],"isBlockCoverage":true},{"functionName":"writeUInt16LE","ranges":[{"startOffset":19578,"endOffset":19680,"count":1}],"isBlockCoverage":true},{"functionName":"writeU_Int8","ranges":[{"startOffset":19682,"endOffset":20094,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20096,"endOffset":20190,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntBE","ranges":[{"startOffset":20192,"endOffset":20801,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48BE","ranges":[{"startOffset":20803,"endOffset":21224,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40BE","ranges":[{"startOffset":21226,"endOffset":21588,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":21590,"endOffset":21905,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32BE","ranges":[{"startOffset":21907,"endOffset":22013,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24BE","ranges":[{"startOffset":22015,"endOffset":22280,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":22282,"endOffset":22478,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16BE","ranges":[{"startOffset":22480,"endOffset":22582,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntLE","ranges":[{"startOffset":22584,"endOffset":23246,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32LE","ranges":[{"startOffset":23248,"endOffset":23363,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16LE","ranges":[{"startOffset":23365,"endOffset":23472,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt8","ranges":[{"startOffset":23474,"endOffset":23571,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntBE","ranges":[{"startOffset":23573,"endOffset":24235,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32BE","ranges":[{"startOffset":24237,"endOffset":24352,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16BE","ranges":[{"startOffset":24354,"endOffset":24461,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":24480,"endOffset":24946,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleBackwards","ranges":[{"startOffset":24948,"endOffset":25415,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatForwards","ranges":[{"startOffset":25417,"endOffset":25718,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatBackwards","ranges":[{"startOffset":25720,"endOffset":26022,"count":0}],"isBlockCoverage":false},{"functionName":"addBufferPrototypeMethods","ranges":[{"startOffset":26064,"endOffset":28441,"count":1},{"startOffset":27467,"endOffset":27487,"count":0},{"startOffset":27541,"endOffset":27560,"count":0},{"startOffset":27616,"endOffset":27637,"count":0},{"startOffset":27693,"endOffset":27713,"count":0},{"startOffset":27770,"endOffset":27791,"count":0},{"startOffset":27847,"endOffset":27867,"count":0},{"startOffset":27925,"endOffset":27947,"count":0},{"startOffset":28005,"endOffset":28026,"count":0}],"isBlockCoverage":true},{"functionName":"markAsUntransferable","ranges":[{"startOffset":28597,"endOffset":28861,"count":80},{"startOffset":28665,"endOffset":28693,"count":0},{"startOffset":28716,"endOffset":28723,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"internal/worker/js_transferable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1310,"count":1}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":304,"endOffset":1091,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":585,"endOffset":1087,"count":0}],"isBlockCoverage":false}]},{"scriptId":"21","url":"internal/process/per_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10567,"count":1}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":765,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProcessMethods","ranges":[{"startOffset":931,"endOffset":6672,"count":1}],"isBlockCoverage":true},{"functionName":"_rawDebug","ranges":[{"startOffset":1142,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"cpuUsage","ranges":[{"startOffset":1435,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"previousValueIsValid","ranges":[{"startOffset":3147,"endOffset":3284,"count":0}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":3508,"endOffset":4111,"count":0}],"isBlockCoverage":false},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":4298,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"memoryUsage","ranges":[{"startOffset":4437,"endOffset":4663,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4667,"endOffset":5105,"count":1},{"startOffset":4723,"endOffset":4747,"count":0}],"isBlockCoverage":true},{"functionName":"kill","ranges":[{"startOffset":5109,"endOffset":5754,"count":0}],"isBlockCoverage":false},{"functionName":"resourceUsage","ranges":[{"startOffset":5805,"endOffset":6538,"count":0}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":6883,"endOffset":9943,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":10133,"endOffset":10463,"count":1},{"startOffset":10213,"endOffset":10388,"count":0},{"startOffset":10420,"endOffset":10461,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"internal/async_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18833,"count":1}],"isBlockCoverage":false},{"functionName":"useDomainTrampoline","ranges":[{"startOffset":5160,"endOffset":5214,"count":0}],"isBlockCoverage":false},{"functionName":"callbackTrampoline","ranges":[{"startOffset":5216,"endOffset":5796,"count":0}],"isBlockCoverage":false},{"functionName":"executionAsyncResource","ranges":[{"startOffset":5872,"endOffset":6370,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError","ranges":[{"startOffset":6431,"endOffset":6860,"count":0}],"isBlockCoverage":false},{"functionName":"lookupPublicResource","ranges":[{"startOffset":6862,"endOffset":7211,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitNative","ranges":[{"startOffset":7402,"endOffset":8495,"count":0}],"isBlockCoverage":false},{"functionName":"emitHook","ranges":[{"startOffset":8596,"endOffset":9546,"count":0}],"isBlockCoverage":false},{"functionName":"emitHookFactory","ranges":[{"startOffset":9548,"endOffset":9808,"count":4}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":9837,"endOffset":10327,"count":0}],"isBlockCoverage":false},{"functionName":"storeActiveHooks","ranges":[{"startOffset":10330,"endOffset":10617,"count":0}],"isBlockCoverage":false},{"functionName":"copyHooks","ranges":[{"startOffset":10619,"endOffset":10884,"count":0}],"isBlockCoverage":false},{"functionName":"restoreActiveHooks","ranges":[{"startOffset":10999,"endOffset":11204,"count":0}],"isBlockCoverage":false},{"functionName":"trackPromise","ranges":[{"startOffset":11206,"endOffset":11563,"count":0}],"isBlockCoverage":false},{"functionName":"fastPromiseHook","ranges":[{"startOffset":11565,"endOffset":12701,"count":0}],"isBlockCoverage":false},{"functionName":"enableHooks","ranges":[{"startOffset":12732,"endOffset":12792,"count":0}],"isBlockCoverage":false},{"functionName":"updatePromiseHookMode","ranges":[{"startOffset":12820,"endOffset":13111,"count":0}],"isBlockCoverage":false},{"functionName":"disableHooks","ranges":[{"startOffset":13113,"endOffset":13388,"count":0}],"isBlockCoverage":false},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":13390,"endOffset":13516,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":13717,"endOffset":13787,"count":14}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":13789,"endOffset":13979,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14162,"endOffset":14452,"count":14},{"startOffset":14418,"endOffset":14451,"count":0}],"isBlockCoverage":true},{"functionName":"clearDefaultTriggerAsyncId","ranges":[{"startOffset":14455,"endOffset":14544,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":14547,"endOffset":15022,"count":0}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":15024,"endOffset":15087,"count":70}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":15089,"endOffset":15148,"count":14}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":15150,"endOffset":15205,"count":14}],"isBlockCoverage":true},{"functionName":"afterHooksExist","ranges":[{"startOffset":15207,"endOffset":15264,"count":0}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":15266,"endOffset":15327,"count":14}],"isBlockCoverage":true},{"functionName":"emitInitScript","ranges":[{"startOffset":15330,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":15741,"endOffset":15917,"count":14},{"startOffset":15889,"endOffset":15915,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":15920,"endOffset":16040,"count":14},{"startOffset":15984,"endOffset":16009,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":16043,"endOffset":16253,"count":0}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":16256,"endOffset":16319,"count":0}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":16385,"endOffset":16955,"count":14},{"startOffset":16605,"endOffset":16655,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":17020,"endOffset":17631,"count":14},{"startOffset":17136,"endOffset":17149,"count":0},{"startOffset":17228,"endOffset":17334,"count":0}],"isBlockCoverage":true},{"functionName":"executionAsyncId","ranges":[{"startOffset":17634,"endOffset":17710,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":17712,"endOffset":17784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"internal/process/task_queues.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4577,"count":1}],"isBlockCoverage":false},{"functionName":"hasTickScheduled","ranges":[{"startOffset":956,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1033,"endOffset":1119,"count":8},{"startOffset":1109,"endOffset":1112,"count":5},{"startOffset":1113,"endOffset":1116,"count":3}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1221,"endOffset":1417,"count":0}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1419,"endOffset":2387,"count":4},{"startOffset":1475,"endOffset":2267,"count":5},{"startOffset":1510,"endOffset":2242,"count":13},{"startOffset":1711,"endOffset":1744,"count":3},{"startOffset":1744,"endOffset":2118,"count":10},{"startOffset":1831,"endOffset":1864,"count":8},{"startOffset":1877,"endOffset":1919,"count":0},{"startOffset":1932,"endOffset":1983,"count":2},{"startOffset":1996,"endOffset":2056,"count":0},{"startOffset":2069,"endOffset":2096,"count":0},{"startOffset":2180,"endOffset":2201,"count":0},{"startOffset":2267,"endOffset":2321,"count":3}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2531,"endOffset":3446,"count":13},{"startOffset":2603,"endOffset":2644,"count":0},{"startOffset":2674,"endOffset":2681,"count":0},{"startOffset":2729,"endOffset":2743,"count":3},{"startOffset":2748,"endOffset":2785,"count":8},{"startOffset":2790,"endOffset":2841,"count":0},{"startOffset":2846,"endOffset":2911,"count":2},{"startOffset":2916,"endOffset":3059,"count":0},{"startOffset":3088,"endOffset":3114,"count":5},{"startOffset":3358,"endOffset":3418,"count":0}],"isBlockCoverage":true},{"functionName":"createMicrotaskResource","ranges":[{"startOffset":3536,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"runMicrotask","ranges":[{"startOffset":3784,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":3962,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"setupTaskQueue","ranges":[{"startOffset":4298,"endOffset":4555,"count":1}],"isBlockCoverage":true}]},{"scriptId":"24","url":"internal/process/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9605,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":1918,"endOffset":2008,"count":3},{"startOffset":1998,"endOffset":2001,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":2010,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2091,"endOffset":2626,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":2628,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"resolveError","ranges":[{"startOffset":3199,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":3451,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":3747,"endOffset":4563,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionWarning","ranges":[{"startOffset":4635,"endOffset":5531,"count":0}],"isBlockCoverage":false},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":5564,"endOffset":5849,"count":0}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6022,"endOffset":8506,"count":3},{"startOffset":6180,"endOffset":6346,"count":0},{"startOffset":6411,"endOffset":8410,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithoutStack","ranges":[{"startOffset":8508,"endOffset":8926,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnhandledRejectionError","ranges":[{"startOffset":8928,"endOffset":9398,"count":0}],"isBlockCoverage":false},{"functionName":"listenForRejections","ranges":[{"startOffset":9400,"endOffset":9484,"count":1}],"isBlockCoverage":true}]},{"scriptId":"25","url":"internal/fixed_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":false},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":2959,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":35}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":13}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":13}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":18},{"startOffset":3388,"endOffset":3400,"count":5},{"startOffset":3400,"endOffset":3509,"count":13}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":3552,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":17}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":13},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4180,"count":18},{"startOffset":4041,"endOffset":4062,"count":10},{"startOffset":4064,"endOffset":4159,"count":0}],"isBlockCoverage":true}]},{"scriptId":"26","url":"internal/console/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1896,"count":1}],"isBlockCoverage":false}]},{"scriptId":"27","url":"internal/console/constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19193,"count":1}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2291,"endOffset":4444,"count":1},{"startOffset":2556,"endOffset":2599,"count":0},{"startOffset":2656,"endOffset":2768,"count":0},{"startOffset":2973,"endOffset":3031,"count":0},{"startOffset":3085,"endOffset":3143,"count":0},{"startOffset":3182,"endOffset":3205,"count":0},{"startOffset":3211,"endOffset":3267,"count":0},{"startOffset":3307,"endOffset":3416,"count":0},{"startOffset":3459,"endOffset":3485,"count":0},{"startOffset":3487,"endOffset":3730,"count":0},{"startOffset":3770,"endOffset":3882,"count":0},{"startOffset":4015,"endOffset":4330,"count":19}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":4653,"endOffset":4707,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":4955,"endOffset":5161,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5364,"endOffset":5952,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5546,"endOffset":5641,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5653,"endOffset":5683,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5785,"endOffset":5884,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5896,"endOffset":5926,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6022,"endOffset":7042,"count":2}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":7112,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":8599,"endOffset":9089,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9160,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9359,"endOffset":9487,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":9576,"endOffset":10465,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9644,"endOffset":10462,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":10494,"endOffset":10581,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":10587,"endOffset":10675,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":10681,"endOffset":10866,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":10871,"endOffset":11229,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":11234,"endOffset":11523,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":11528,"endOffset":11766,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":11778,"endOffset":12018,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":12023,"endOffset":12241,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":12302,"endOffset":12732,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":12793,"endOffset":13249,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":13315,"endOffset":13603,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":13608,"endOffset":13754,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":13759,"endOffset":13901,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":13950,"endOffset":17225,"count":0}],"isBlockCoverage":false},{"functionName":"timeLogImpl","ranges":[{"startOffset":17266,"endOffset":17762,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":17764,"endOffset":17825,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":17827,"endOffset":18507,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":18641,"endOffset":18697,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":18700,"endOffset":18718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"28","url":"internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1582,"count":1}],"isBlockCoverage":false}]},{"scriptId":"29","url":"internal/util/inspector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":false},{"functionName":"sendInspectorCommand","ranges":[{"startOffset":92,"endOffset":434,"count":0}],"isBlockCoverage":false},{"functionName":"installConsoleExtensions","ranges":[{"startOffset":508,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConsole","ranges":[{"startOffset":1141,"endOffset":1931,"count":1},{"startOffset":1299,"endOffset":1929,"count":23},{"startOffset":1514,"endOffset":1807,"count":19},{"startOffset":1807,"endOffset":1925,"count":4}],"isBlockCoverage":true},{"functionName":"get consoleFromVM","ranges":[{"startOffset":2103,"endOffset":2154,"count":0}],"isBlockCoverage":false},{"functionName":"set consoleFromVM","ranges":[{"startOffset":2158,"endOffset":2211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"30","url":"internal/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40563,"count":1}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":2176,"endOffset":2472,"count":3},{"startOffset":2429,"endOffset":2471,"count":0}],"isBlockCoverage":true},{"functionName":"serializeTupleOrigin","ranges":[{"startOffset":2684,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"URLContext","ranges":[{"startOffset":3206,"endOffset":3429,"count":2120}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":3719,"endOffset":6082,"count":2091},{"startOffset":3834,"endOffset":6020,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6086,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"onParseComplete","ranges":[{"startOffset":7160,"endOffset":7853,"count":2091},{"startOffset":7415,"endOffset":7425,"count":0},{"startOffset":7488,"endOffset":7498,"count":0},{"startOffset":7579,"endOffset":7583,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":7855,"endOffset":7930,"count":29}],"isBlockCoverage":true},{"functionName":"onParseProtocolComplete","ranges":[{"startOffset":7932,"endOffset":8277,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostnameComplete","ranges":[{"startOffset":8279,"endOffset":8625,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePortComplete","ranges":[{"startOffset":8627,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostComplete","ranges":[{"startOffset":8791,"endOffset":9097,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePathComplete","ranges":[{"startOffset":9099,"endOffset":9593,"count":1315},{"startOffset":9365,"endOffset":9433,"count":0}],"isBlockCoverage":true},{"functionName":"onParseSearchComplete","ranges":[{"startOffset":9595,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHashComplete","ranges":[{"startOffset":9765,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":9951,"endOffset":10279,"count":2120},{"startOffset":10086,"endOffset":10138,"count":59}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10368,"endOffset":10461,"count":4908}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10536,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10740,"endOffset":11673,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":11842,"endOffset":13033,"count":1404},{"startOffset":11927,"endOffset":11988,"count":0},{"startOffset":12215,"endOffset":12722,"count":1403},{"startOffset":12398,"endOffset":12559,"count":0},{"startOffset":12591,"endOffset":12633,"count":0},{"startOffset":12692,"endOffset":12714,"count":0},{"startOffset":12722,"endOffset":12786,"count":1},{"startOffset":12756,"endOffset":12786,"count":0},{"startOffset":12898,"endOffset":12921,"count":0},{"startOffset":12983,"endOffset":13009,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":13307,"endOffset":13366,"count":705}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13432,"endOffset":13477,"count":699}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13483,"endOffset":13663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13744,"endOffset":14372,"count":50},{"startOffset":13884,"endOffset":14128,"count":0},{"startOffset":14137,"endOffset":14149,"count":0},{"startOffset":14158,"endOffset":14173,"count":0},{"startOffset":14182,"endOffset":14195,"count":0},{"startOffset":14204,"endOffset":14218,"count":0},{"startOffset":14227,"endOffset":14238,"count":0},{"startOffset":14247,"endOffset":14330,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14442,"endOffset":14490,"count":708}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":14496,"endOffset":14865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14935,"endOffset":14985,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":14991,"endOffset":15389,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15459,"endOffset":15509,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15515,"endOffset":15913,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15979,"endOffset":16135,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16141,"endOffset":16432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16502,"endOffset":16554,"count":2096}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":16560,"endOffset":16859,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16925,"endOffset":17025,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17031,"endOffset":17348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17418,"endOffset":17613,"count":3593},{"startOffset":17497,"endOffset":17516,"count":4},{"startOffset":17516,"endOffset":17558,"count":3589},{"startOffset":17558,"endOffset":17568,"count":0},{"startOffset":17568,"endOffset":17612,"count":3589}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17619,"endOffset":17838,"count":1315},{"startOffset":17729,"endOffset":17736,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17906,"endOffset":18045,"count":3},{"startOffset":17978,"endOffset":17993,"count":0},{"startOffset":18013,"endOffset":18044,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18051,"endOffset":18543,"count":3},{"startOffset":18237,"endOffset":18485,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18630,"endOffset":18676,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18742,"endOffset":18893,"count":3},{"startOffset":18820,"endOffset":18838,"count":0},{"startOffset":18858,"endOffset":18892,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18899,"endOffset":19317,"count":3},{"startOffset":19121,"endOffset":19316,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":19463,"endOffset":19520,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":19530,"endOffset":19835,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":19837,"endOffset":19977,"count":2094},{"startOffset":19934,"endOffset":19976,"count":0}],"isBlockCoverage":true},{"functionName":"parseParams","ranges":[{"startOffset":20086,"endOffset":22387,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":23351,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":23966,"endOffset":24654,"count":2},{"startOffset":24304,"endOffset":24450,"count":13},{"startOffset":24505,"endOffset":24652,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":24674,"endOffset":25304,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":25371,"endOffset":25758,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":25763,"endOffset":26262,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26267,"endOffset":26701,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":26706,"endOffset":27174,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":27179,"endOffset":27607,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27612,"endOffset":28638,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":28643,"endOffset":29820,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":29983,"endOffset":30192,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":30197,"endOffset":30769,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":30824,"endOffset":31024,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":31029,"endOffset":31233,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":31366,"endOffset":31566,"count":0}],"isBlockCoverage":false},{"functionName":"createSearchParamsIterator","ranges":[{"startOffset":31846,"endOffset":32049,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":32273,"endOffset":33026,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":33030,"endOffset":34244,"count":0}],"isBlockCoverage":false},{"functionName":"domainToASCII","ranges":[{"startOffset":34250,"endOffset":34425,"count":0}],"isBlockCoverage":false},{"functionName":"domainToUnicode","ranges":[{"startOffset":34427,"endOffset":34606,"count":0}],"isBlockCoverage":false},{"functionName":"urlToOptions","ranges":[{"startOffset":34749,"endOffset":35292,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":35328,"endOffset":36721,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":36723,"endOffset":37227,"count":693},{"startOffset":36786,"endOffset":36842,"count":0},{"startOffset":36920,"endOffset":37186,"count":104763},{"startOffset":36951,"endOffset":37182,"count":693},{"startOffset":37061,"endOffset":37176,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":37229,"endOffset":37576,"count":694},{"startOffset":37296,"endOffset":37317,"count":645},{"startOffset":37317,"endOffset":37419,"count":49},{"startOffset":37355,"endOffset":37419,"count":0},{"startOffset":37457,"endOffset":37498,"count":1},{"startOffset":37498,"endOffset":37518,"count":693},{"startOffset":37518,"endOffset":37545,"count":0},{"startOffset":37546,"endOffset":37573,"count":693}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":38335,"endOffset":39300,"count":1315},{"startOffset":38586,"endOffset":38647,"count":1298},{"startOffset":38607,"endOffset":38646,"count":0},{"startOffset":38649,"endOffset":38700,"count":17},{"startOffset":38706,"endOffset":38722,"count":17},{"startOffset":38794,"endOffset":38843,"count":0},{"startOffset":38942,"endOffset":38993,"count":0},{"startOffset":39029,"endOffset":39078,"count":0},{"startOffset":39114,"endOffset":39170,"count":0},{"startOffset":39206,"endOffset":39251,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":39302,"endOffset":39421,"count":1624},{"startOffset":39395,"endOffset":39418,"count":50}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":39423,"endOffset":39568,"count":1575},{"startOffset":39506,"endOffset":39527,"count":1574},{"startOffset":39527,"endOffset":39567,"count":1}],"isBlockCoverage":true},{"functionName":"constructUrl","ranges":[{"startOffset":39570,"endOffset":40270,"count":0}],"isBlockCoverage":false}]},{"scriptId":"31","url":"internal/querystring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2875,"count":1}],"isBlockCoverage":false},{"functionName":"encodeStr","ranges":[{"startOffset":1190,"endOffset":2813,"count":0}],"isBlockCoverage":false}]},{"scriptId":"32","url":"path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41803,"count":1}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":1492,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1598,"endOffset":1675,"count":1263850}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1677,"endOffset":1847,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":1910,"endOffset":3714,"count":8469},{"startOffset":2127,"endOffset":3698,"count":1263822},{"startOffset":2160,"endOffset":2186,"count":1255353},{"startOffset":2186,"endOffset":2277,"count":8469},{"startOffset":2229,"endOffset":2235,"count":8441},{"startOffset":2235,"endOffset":2277,"count":28},{"startOffset":2277,"endOffset":2310,"count":1255381},{"startOffset":2310,"endOffset":3599,"count":105991},{"startOffset":2342,"endOffset":2355,"count":97504},{"startOffset":2357,"endOffset":2382,"count":9053},{"startOffset":2382,"endOffset":3556,"count":96938},{"startOffset":2404,"endOffset":3343,"count":208},{"startOffset":2460,"endOffset":2518,"count":0},{"startOffset":2519,"endOffset":2577,"count":0},{"startOffset":2715,"endOffset":2791,"count":0},{"startOffset":3024,"endOffset":3193,"count":0},{"startOffset":3203,"endOffset":3335,"count":0},{"startOffset":3343,"endOffset":3556,"count":96730},{"startOffset":3389,"endOffset":3442,"count":88261},{"startOffset":3442,"endOffset":3501,"count":8469},{"startOffset":3556,"endOffset":3599,"count":105783},{"startOffset":3599,"endOffset":3694,"count":1149390},{"startOffset":3627,"endOffset":3641,"count":7829},{"startOffset":3643,"endOffset":3664,"count":986},{"startOffset":3664,"endOffset":3694,"count":1148404}],"isBlockCoverage":true},{"functionName":"_format","ranges":[{"startOffset":3716,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4195,"endOffset":8598,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":8603,"endOffset":11354,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":11359,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":11732,"endOffset":13788,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":14002,"endOffset":17476,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":17481,"endOffset":18509,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":18514,"endOffset":20842,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":20847,"endOffset":23482,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":23487,"endOffset":25496,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":25538,"endOffset":30004,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":30123,"endOffset":31019,"count":8441},{"startOffset":30246,"endOffset":30266,"count":22472},{"startOffset":30273,"endOffset":30573,"count":14039},{"startOffset":30301,"endOffset":30310,"count":14031},{"startOffset":30311,"endOffset":30326,"count":8},{"startOffset":30423,"endOffset":30450,"count":0},{"startOffset":30958,"endOffset":31008,"count":0},{"startOffset":31009,"endOffset":31014,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":31024,"endOffset":31599,"count":28},{"startOffset":31110,"endOffset":31121,"count":0},{"startOffset":31411,"endOffset":31505,"count":0},{"startOffset":31539,"endOffset":31551,"count":0},{"startOffset":31588,"endOffset":31594,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":31604,"endOffset":31733,"count":1689}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":31738,"endOffset":32152,"count":28},{"startOffset":31787,"endOffset":31798,"count":0},{"startOffset":31857,"endOffset":32064,"count":56},{"startOffset":31993,"endOffset":32050,"count":28},{"startOffset":32101,"endOffset":32112,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":32157,"endOffset":34367,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":34372,"endOffset":34448,"count":5912}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":34453,"endOffset":35081,"count":3412},{"startOffset":34536,"endOffset":34547,"count":7},{"startOffset":34547,"endOffset":34705,"count":3405},{"startOffset":34705,"endOffset":34942,"count":42634},{"startOffset":34760,"endOffset":34844,"count":3405},{"startOffset":34844,"endOffset":34936,"count":39229},{"startOffset":34942,"endOffset":34970,"count":3405},{"startOffset":34970,"endOffset":34997,"count":0},{"startOffset":34997,"endOffset":35026,"count":3405},{"startOffset":35034,"endOffset":35046,"count":0},{"startOffset":35046,"endOffset":35080,"count":3405}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":35086,"endOffset":37406,"count":655},{"startOffset":35141,"endOffset":35168,"count":0},{"startOffset":35297,"endOffset":35314,"count":0},{"startOffset":35315,"endOffset":35343,"count":0},{"startOffset":35345,"endOffset":36812,"count":0},{"startOffset":36860,"endOffset":37329,"count":8246},{"startOffset":36915,"endOffset":37139,"count":648},{"startOffset":37139,"endOffset":37323,"count":7598},{"startOffset":37161,"endOffset":37323,"count":655},{"startOffset":37357,"endOffset":37367,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":37411,"endOffset":39069,"count":38},{"startOffset":37744,"endOffset":38690,"count":559},{"startOffset":37824,"endOffset":38070,"count":31},{"startOffset":38044,"endOffset":38070,"count":0},{"startOffset":38070,"endOffset":38093,"count":528},{"startOffset":38093,"endOffset":38250,"count":38},{"startOffset":38250,"endOffset":38280,"count":528},{"startOffset":38280,"endOffset":38480,"count":60},{"startOffset":38396,"endOffset":38409,"count":31},{"startOffset":38409,"endOffset":38472,"count":29},{"startOffset":38480,"endOffset":38684,"count":468},{"startOffset":38507,"endOffset":38684,"count":329},{"startOffset":38716,"endOffset":38737,"count":31},{"startOffset":38738,"endOffset":38831,"count":31},{"startOffset":38832,"endOffset":39001,"count":31},{"startOffset":38929,"endOffset":38961,"count":0},{"startOffset":38962,"endOffset":39000,"count":0},{"startOffset":39003,"endOffset":39027,"count":7},{"startOffset":39027,"endOffset":39068,"count":31}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":39110,"endOffset":41464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"33","url":"internal/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15844,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":929,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1040,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1167,"endOffset":1292,"count":2},{"startOffset":1248,"endOffset":1290,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgument","ranges":[{"startOffset":1294,"endOffset":1461,"count":3},{"startOffset":1398,"endOffset":1459,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8202,"endOffset":8684,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8686,"endOffset":8865,"count":1},{"startOffset":8797,"endOffset":8864,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":8936,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":8986,"endOffset":9053,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9057,"endOffset":9149,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9153,"endOffset":9463,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9467,"endOffset":9862,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10233,"endOffset":11894,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10371,"endOffset":11098,"count":1},{"startOffset":10603,"endOffset":10650,"count":0},{"startOffset":10734,"endOffset":10757,"count":0},{"startOffset":10798,"endOffset":10826,"count":0},{"startOffset":10928,"endOffset":10975,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":11105,"endOffset":11865,"count":2},{"startOffset":11207,"endOffset":11258,"count":0},{"startOffset":11295,"endOffset":11474,"count":0},{"startOffset":11621,"endOffset":11624,"count":0},{"startOffset":11742,"endOffset":11824,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":11896,"endOffset":14437,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":14562,"endOffset":14643,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":14650,"endOffset":14777,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":14784,"endOffset":14939,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":14946,"endOffset":15560,"count":0}],"isBlockCoverage":false}]},{"scriptId":"34","url":"timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8194,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1752,"endOffset":1777,"count":0}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2039,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"enroll","ranges":[{"startOffset":3351,"endOffset":3604,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":3636,"endOffset":4281,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout.<computed>","ranges":[{"startOffset":4313,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":4549,"endOffset":4670,"count":14},{"startOffset":4592,"endOffset":4611,"count":0},{"startOffset":4613,"endOffset":4668,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":4672,"endOffset":5319,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":5321,"endOffset":5619,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":5647,"endOffset":5698,"count":0}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":5739,"endOffset":6061,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":6065,"endOffset":6238,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":6242,"endOffset":6418,"count":0}],"isBlockCoverage":false},{"functionName":"hasRef","ranges":[{"startOffset":6422,"endOffset":6463,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":6468,"endOffset":7009,"count":1},{"startOffset":6643,"endOffset":6684,"count":0},{"startOffset":6689,"endOffset":6736,"count":0},{"startOffset":6741,"endOffset":6962,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate.<computed>","ranges":[{"startOffset":7043,"endOffset":7130,"count":0}],"isBlockCoverage":false},{"functionName":"clearImmediate","ranges":[{"startOffset":7133,"endOffset":7555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"35","url":"internal/linkedlist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1112,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":15,"endOffset":88,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":118,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":245,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":528,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":982,"endOffset":1042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"36","url":"internal/timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17616,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4328,"endOffset":4353,"count":0}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5296,"endOffset":5574,"count":1},{"startOffset":5522,"endOffset":5572,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5659,"endOffset":6625,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":6738,"endOffset":6909,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.refresh","ranges":[{"startOffset":6940,"endOffset":7038,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref","ranges":[{"startOffset":7067,"endOffset":7195,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.ref","ranges":[{"startOffset":7222,"endOffset":7350,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.hasRef","ranges":[{"startOffset":7380,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":7420,"endOffset":7720,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList.<computed>","ranges":[{"startOffset":7836,"endOffset":8007,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList","ranges":[{"startOffset":8065,"endOffset":8133,"count":2}],"isBlockCoverage":true},{"functionName":"ImmediateList.append","ranges":[{"startOffset":8294,"endOffset":8461,"count":1},{"startOffset":8337,"endOffset":8406,"count":0}],"isBlockCoverage":true},{"functionName":"ImmediateList.remove","ranges":[{"startOffset":8639,"endOffset":8994,"count":0}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":8997,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":9075,"endOffset":9152,"count":0}],"isBlockCoverage":false},{"functionName":"active","ranges":[{"startOffset":9235,"endOffset":9289,"count":0}],"isBlockCoverage":false},{"functionName":"unrefActive","ranges":[{"startOffset":9436,"endOffset":9496,"count":0}],"isBlockCoverage":false},{"functionName":"insertGuarded","ranges":[{"startOffset":9717,"endOffset":10233,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":10235,"endOffset":10886,"count":0}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":10888,"endOffset":11194,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerDuration","ranges":[{"startOffset":11261,"endOffset":11783,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":11785,"endOffset":11990,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":11992,"endOffset":12063,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerCallbacks","ranges":[{"startOffset":12065,"endOffset":17162,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12377,"endOffset":14178,"count":1},{"startOffset":12456,"endOffset":12480,"count":0},{"startOffset":12917,"endOffset":12932,"count":0},{"startOffset":13249,"endOffset":13345,"count":0},{"startOffset":13775,"endOffset":13831,"count":0},{"startOffset":13933,"endOffset":13954,"count":0},{"startOffset":14105,"endOffset":14134,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14183,"endOffset":14657,"count":0}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":14661,"endOffset":17103,"count":0}],"isBlockCoverage":false}]},{"scriptId":"37","url":"internal/priority_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2924,"count":1}],"isBlockCoverage":false},{"functionName":"PriorityQueue","ranges":[{"startOffset":570,"endOffset":811,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":815,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":859,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1048,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1091,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1763,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2258,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":2595,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2765,"endOffset":2920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"38","url":"internal/util/debuglog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2226,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDebugEnv","ranges":[{"startOffset":362,"endOffset":634,"count":1},{"startOffset":433,"endOffset":632,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":708,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1035,"endOffset":1053,"count":4625}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1055,"endOffset":1638,"count":5},{"startOffset":1144,"endOffset":1614,"count":3},{"startOffset":1179,"endOffset":1571,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1264,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":1858,"endOffset":2169,"count":13}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1901,"endOffset":2117,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2128,"endOffset":2166,"count":5}],"isBlockCoverage":true}]},{"scriptId":"39","url":"internal/process/execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6931,"count":1}],"isBlockCoverage":false},{"functionName":"tryGetCwd","ranges":[{"startOffset":569,"endOffset":899,"count":1},{"startOffset":630,"endOffset":897,"count":0}],"isBlockCoverage":true},{"functionName":"evalModule","ranges":[{"startOffset":901,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"evalScript","ranges":[{"startOffset":1336,"endOffset":2917,"count":0}],"isBlockCoverage":false},{"functionName":"setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":2971,"endOffset":3440,"count":0}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3442,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3545,"endOffset":3563,"count":0}],"isBlockCoverage":false},{"functionName":"createOnGlobalUncaughtException","ranges":[{"startOffset":4106,"endOffset":6505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4375,"endOffset":6502,"count":0}],"isBlockCoverage":false},{"functionName":"readStdin","ranges":[{"startOffset":6507,"endOffset":6712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"internal/process/warning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4849,"count":1}],"isBlockCoverage":false},{"functionName":"lazyOption","ranges":[{"startOffset":241,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":896,"endOffset":1018,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFile","ranges":[{"startOffset":1020,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1406,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"onWarning","ranges":[{"startOffset":1516,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":2817,"endOffset":3961,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarningSync","ranges":[{"startOffset":3963,"endOffset":4057,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":4059,"endOffset":4778,"count":0}],"isBlockCoverage":false}]},{"scriptId":"41","url":"internal/bootstrap/switches/is_main_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6397,"count":1}],"isBlockCoverage":true},{"functionName":"process._startProfilerIdleNotifier","ranges":[{"startOffset":513,"endOffset":521,"count":0}],"isBlockCoverage":false},{"functionName":"process._stopProfilerIdleNotifier","ranges":[{"startOffset":559,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"defineStream","ranges":[{"startOffset":570,"endOffset":717,"count":3}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1278,"endOffset":2845,"count":2},{"startOffset":1430,"endOffset":1556,"count":0},{"startOffset":1562,"endOffset":1748,"count":0},{"startOffset":2083,"endOffset":2303,"count":0},{"startOffset":2479,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2667,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"dummyDestroy","ranges":[{"startOffset":2847,"endOffset":3230,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3268,"endOffset":3599,"count":2},{"startOffset":3305,"endOffset":3518,"count":1},{"startOffset":3518,"endOffset":3580,"count":0},{"startOffset":3580,"endOffset":3598,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3547,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":3601,"endOffset":3932,"count":7},{"startOffset":3638,"endOffset":3652,"count":6},{"startOffset":3652,"endOffset":3851,"count":1},{"startOffset":3851,"endOffset":3913,"count":0},{"startOffset":3913,"endOffset":3931,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3880,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":3934,"endOffset":6253,"count":0}],"isBlockCoverage":false},{"functionName":"rawMethods.resetStdioForTesting","ranges":[{"startOffset":6316,"endOffset":6395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"42","url":"internal/process/signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"isSignal","ranges":[{"startOffset":205,"endOffset":301,"count":15}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":365,"endOffset":853,"count":15},{"startOffset":426,"endOffset":451,"count":0},{"startOffset":453,"endOffset":851,"count":0}],"isBlockCoverage":true},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":855,"endOffset":1050,"count":5},{"startOffset":957,"endOffset":993,"count":0},{"startOffset":995,"endOffset":1048,"count":0}],"isBlockCoverage":true}]},{"scriptId":"43","url":"internal/bootstrap/switches/does_own_process_state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3480,"count":1}],"isBlockCoverage":true},{"functionName":"wrapPosixCredentialSetters","ranges":[{"startOffset":817,"endOffset":2914,"count":1}],"isBlockCoverage":true},{"functionName":"initgroups","ranges":[{"startOffset":1278,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"setgroups","ranges":[{"startOffset":1699,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"wrapIdSetter","ranges":[{"startOffset":2183,"endOffset":2465,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2232,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"validateId","ranges":[{"startOffset":2469,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedChdir","ranges":[{"startOffset":3065,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedUmask","ranges":[{"startOffset":3238,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedCwd","ranges":[{"startOffset":3376,"endOffset":3479,"count":10},{"startOffset":3428,"endOffset":3457,"count":1}],"isBlockCoverage":true}]},{"scriptId":"44","url":"internal/main/run_main_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"45","url":"internal/bootstrap/pre_execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14841,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":333,"endOffset":2460,"count":1},{"startOffset":1071,"endOffset":1293,"count":0}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2462,"endOffset":4017,"count":1},{"startOffset":3036,"endOffset":3044,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":4019,"endOffset":4276,"count":13},{"startOffset":4140,"endOffset":4274,"count":2}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":4278,"endOffset":4507,"count":1},{"startOffset":4417,"endOffset":4460,"count":0},{"startOffset":4462,"endOffset":4505,"count":0}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":4619,"endOffset":5296,"count":1},{"startOffset":5089,"endOffset":5266,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":5298,"endOffset":5523,"count":1},{"startOffset":5400,"endOffset":5522,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":5525,"endOffset":5749,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5707,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":5751,"endOffset":5983,"count":1},{"startOffset":5902,"endOffset":5981,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":6045,"endOffset":6180,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":6182,"endOffset":6489,"count":1},{"startOffset":6317,"endOffset":6488,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6449,"endOffset":6485,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":6491,"endOffset":6750,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":6752,"endOffset":7333,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":7528,"endOffset":10049,"count":1},{"startOffset":8239,"endOffset":8541,"count":16},{"startOffset":8284,"endOffset":8516,"count":0},{"startOffset":8858,"endOffset":9031,"count":0},{"startOffset":9059,"endOffset":9453,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9702,"endOffset":9738,"count":443}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9744,"endOffset":9786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9912,"endOffset":9947,"count":11}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9953,"endOffset":9994,"count":0}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":10051,"endOffset":10610,"count":1},{"startOffset":10447,"endOffset":10456,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":10612,"endOffset":10882,"count":1},{"startOffset":10699,"endOffset":10880,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":10884,"endOffset":12695,"count":1},{"startOffset":11010,"endOffset":12693,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":12697,"endOffset":12926,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":12928,"endOffset":13214,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":13216,"endOffset":13884,"count":1},{"startOffset":13425,"endOffset":13432,"count":0}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":13886,"endOffset":14143,"count":1},{"startOffset":13971,"endOffset":14141,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":14145,"endOffset":14492,"count":1},{"startOffset":14339,"endOffset":14490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"46","url":"internal/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":175,"endOffset":314,"count":815},{"startOffset":262,"endOffset":289,"count":1},{"startOffset":289,"endOffset":313,"count":814}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":316,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"internal/inspector_async_hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1964,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":71,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1251,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1834,"endOffset":1920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"48","url":"internal/source_map/source_map_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8219,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":305,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":665,"endOffset":690,"count":1}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":1287,"endOffset":2534,"count":644},{"startOffset":1400,"endOffset":1474,"count":1},{"startOffset":1512,"endOffset":1537,"count":0},{"startOffset":1540,"endOffset":1547,"count":0},{"startOffset":1672,"endOffset":1810,"count":1},{"startOffset":1810,"endOffset":1914,"count":643},{"startOffset":1914,"endOffset":2532,"count":24},{"startOffset":2015,"endOffset":2046,"count":0},{"startOffset":2075,"endOffset":2303,"count":23},{"startOffset":2096,"endOffset":2151,"count":1},{"startOffset":2303,"endOffset":2528,"count":1}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":2536,"endOffset":3068,"count":24},{"startOffset":2672,"endOffset":2746,"count":0},{"startOffset":2753,"endOffset":2833,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":3258,"endOffset":3566,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3523,"endOffset":3562,"count":14150}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":3568,"endOffset":3839,"count":24},{"startOffset":3781,"endOffset":3837,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":3933,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":4753,"endOffset":5203,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4828,"endOffset":5060,"count":57}],"isBlockCoverage":true},{"functionName":"rekeySourceMap","ranges":[{"startOffset":5272,"endOffset":5467,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":5905,"endOffset":6274,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":6513,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":7386,"endOffset":8111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"49","url":"fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56511,"count":1}],"isBlockCoverage":false},{"functionName":"showTruncateDeprecation","ranges":[{"startOffset":3553,"endOffset":3840,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":3842,"endOffset":3958,"count":1},{"startOffset":3917,"endOffset":3957,"count":0}],"isBlockCoverage":true},{"functionName":"makeCallback","ranges":[{"startOffset":4161,"endOffset":4304,"count":0}],"isBlockCoverage":false},{"functionName":"makeStatsCallback","ranges":[{"startOffset":4485,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"isFileType","ranges":[{"startOffset":4726,"endOffset":4986,"count":14938},{"startOffset":4925,"endOffset":4945,"count":930}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":4988,"endOffset":5322,"count":0}],"isBlockCoverage":false},{"functionName":"accessSync","ranges":[{"startOffset":5324,"endOffset":5562,"count":3}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":5564,"endOffset":5802,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5875,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":6370,"endOffset":6900,"count":12},{"startOffset":6445,"endOffset":6474,"count":0},{"startOffset":6782,"endOffset":6808,"count":0},{"startOffset":6810,"endOffset":6863,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":6902,"endOffset":7182,"count":1},{"startOffset":6984,"endOffset":7028,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterStat","ranges":[{"startOffset":7184,"endOffset":7685,"count":1},{"startOffset":7273,"endOffset":7299,"count":0},{"startOffset":7369,"endOffset":7372,"count":0},{"startOffset":7402,"endOffset":7481,"count":0},{"startOffset":7511,"endOffset":7546,"count":0},{"startOffset":7617,"endOffset":7665,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":7687,"endOffset":8477,"count":1},{"startOffset":8170,"endOffset":8268,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":8193,"endOffset":8250,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":8479,"endOffset":8709,"count":675},{"startOffset":8622,"endOffset":8634,"count":0},{"startOffset":8636,"endOffset":8691,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":8711,"endOffset":9022,"count":674},{"startOffset":8829,"endOffset":8881,"count":0},{"startOffset":8968,"endOffset":8980,"count":0},{"startOffset":8982,"endOffset":8999,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":9024,"endOffset":9279,"count":675},{"startOffset":9222,"endOffset":9234,"count":0},{"startOffset":9236,"endOffset":9253,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":9281,"endOffset":10664,"count":675},{"startOffset":9450,"endOffset":9456,"count":0},{"startOffset":9596,"endOffset":9599,"count":0},{"startOffset":9729,"endOffset":9752,"count":1},{"startOffset":9752,"endOffset":9813,"count":674},{"startOffset":9851,"endOffset":10004,"count":674},{"startOffset":10004,"endOffset":10358,"count":1},{"startOffset":10240,"endOffset":10299,"count":0},{"startOffset":10418,"endOffset":10514,"count":1},{"startOffset":10514,"endOffset":10576,"count":674},{"startOffset":10536,"endOffset":10576,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":10666,"endOffset":10832,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":10834,"endOffset":10977,"count":675}],"isBlockCoverage":true},{"functionName":"open","ranges":[{"startOffset":10979,"endOffset":11556,"count":0}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":11559,"endOffset":11955,"count":675}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":12062,"endOffset":13560,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":13829,"endOffset":14744,"count":675},{"startOffset":13947,"endOffset":14096,"count":0},{"startOffset":14147,"endOffset":14168,"count":0},{"startOffset":14256,"endOffset":14275,"count":0},{"startOffset":14308,"endOffset":14438,"count":0}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":14746,"endOffset":15177,"count":0}],"isBlockCoverage":false},{"functionName":"readvSync","ranges":[{"startOffset":15320,"endOffset":15630,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15776,"endOffset":17036,"count":0}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":17313,"endOffset":18179,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":18240,"endOffset":18669,"count":0}],"isBlockCoverage":false},{"functionName":"writevSync","ranges":[{"startOffset":18798,"endOffset":19111,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":19113,"endOffset":19494,"count":0}],"isBlockCoverage":false},{"functionName":"renameSync","ranges":[{"startOffset":19496,"endOffset":19843,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":19845,"endOffset":20463,"count":0}],"isBlockCoverage":false},{"functionName":"truncateSync","ranges":[{"startOffset":20465,"endOffset":20868,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20870,"endOffset":21186,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncateSync","ranges":[{"startOffset":21188,"endOffset":21408,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadRimraf","ranges":[{"startOffset":21411,"endOffset":21530,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21532,"endOffset":22001,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":22003,"endOffset":22361,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":22363,"endOffset":22537,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasyncSync","ranges":[{"startOffset":22539,"endOffset":22689,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22691,"endOffset":22857,"count":0}],"isBlockCoverage":false},{"functionName":"fsyncSync","ranges":[{"startOffset":22859,"endOffset":23001,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":23003,"endOffset":23784,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":23786,"endOffset":24558,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":24560,"endOffset":25141,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":25143,"endOffset":25569,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":25571,"endOffset":25886,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":25888,"endOffset":26262,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":26264,"endOffset":26636,"count":0}],"isBlockCoverage":false},{"functionName":"fstatSync","ranges":[{"startOffset":26638,"endOffset":26880,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":26882,"endOffset":27192,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":27194,"endOffset":27501,"count":18}],"isBlockCoverage":true},{"functionName":"readlink","ranges":[{"startOffset":27503,"endOffset":27851,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":27853,"endOffset":28184,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":28186,"endOffset":29653,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkSync","ranges":[{"startOffset":29655,"endOffset":30312,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":30314,"endOffset":30715,"count":0}],"isBlockCoverage":false},{"functionName":"linkSync","ranges":[{"startOffset":30717,"endOffset":31166,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":31168,"endOffset":31395,"count":0}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":31397,"endOffset":31583,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":31585,"endOffset":31827,"count":0}],"isBlockCoverage":false},{"functionName":"fchmodSync","ranges":[{"startOffset":31829,"endOffset":32023,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":32025,"endOffset":32462,"count":0}],"isBlockCoverage":false},{"functionName":"lchmodSync","ranges":[{"startOffset":32464,"endOffset":32786,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":32789,"endOffset":33065,"count":0}],"isBlockCoverage":false},{"functionName":"chmodSync","ranges":[{"startOffset":33067,"endOffset":33302,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":33304,"endOffset":33645,"count":0}],"isBlockCoverage":false},{"functionName":"lchownSync","ranges":[{"startOffset":33647,"endOffset":33947,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":33949,"endOffset":34232,"count":0}],"isBlockCoverage":false},{"functionName":"fchownSync","ranges":[{"startOffset":34234,"endOffset":34493,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":34495,"endOffset":34835,"count":0}],"isBlockCoverage":false},{"functionName":"chownSync","ranges":[{"startOffset":34837,"endOffset":35135,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":35137,"endOffset":35478,"count":0}],"isBlockCoverage":false},{"functionName":"utimesSync","ranges":[{"startOffset":35480,"endOffset":35762,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":35764,"endOffset":36048,"count":0}],"isBlockCoverage":false},{"functionName":"futimesSync","ranges":[{"startOffset":36050,"endOffset":36310,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":36312,"endOffset":36658,"count":0}],"isBlockCoverage":false},{"functionName":"lutimesSync","ranges":[{"startOffset":36660,"endOffset":36964,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":36966,"endOffset":37616,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":37618,"endOffset":38337,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":38339,"endOffset":39041,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":39043,"endOffset":39483,"count":0}],"isBlockCoverage":false},{"functionName":"appendFileSync","ranges":[{"startOffset":39485,"endOffset":39864,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":39866,"endOffset":40758,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":40794,"endOffset":41907,"count":0}],"isBlockCoverage":false},{"functionName":"unwatchFile","ranges":[{"startOffset":41909,"endOffset":42597,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":42813,"endOffset":42879,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":42904,"endOffset":43082,"count":651},{"startOffset":42971,"endOffset":43062,"count":1302},{"startOffset":43033,"endOffset":43056,"count":651},{"startOffset":43062,"endOffset":43081,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":43087,"endOffset":43374,"count":651},{"startOffset":43172,"endOffset":43202,"count":0},{"startOffset":43222,"endOffset":43373,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":43497,"endOffset":43740,"count":0}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":43764,"endOffset":43817,"count":7596}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":43859,"endOffset":47794,"count":866},{"startOffset":43915,"endOffset":43934,"count":0},{"startOffset":44042,"endOffset":44060,"count":0},{"startOffset":44229,"endOffset":44264,"count":215},{"startOffset":44264,"endOffset":44835,"count":651},{"startOffset":44835,"endOffset":44854,"count":0},{"startOffset":44856,"endOffset":45031,"count":0},{"startOffset":45031,"endOffset":45168,"count":651},{"startOffset":45168,"endOffset":47711,"count":7596},{"startOffset":45280,"endOffset":45395,"count":651},{"startOffset":45395,"endOffset":45521,"count":6945},{"startOffset":45644,"endOffset":45781,"count":6666},{"startOffset":45735,"endOffset":45759,"count":0},{"startOffset":45781,"endOffset":45861,"count":930},{"startOffset":45892,"endOffset":45941,"count":0},{"startOffset":45941,"endOffset":47225,"count":930},{"startOffset":46394,"endOffset":47219,"count":0},{"startOffset":47225,"endOffset":47520,"count":0},{"startOffset":47522,"endOffset":47707,"count":0},{"startOffset":47711,"endOffset":47793,"count":651}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":47819,"endOffset":48058,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":48062,"endOffset":51509,"count":0}],"isBlockCoverage":false},{"functionName":"realpath.native","ranges":[{"startOffset":51530,"endOffset":51800,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":51803,"endOffset":52274,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtempSync","ranges":[{"startOffset":52277,"endOffset":52751,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":52754,"endOffset":53284,"count":0}],"isBlockCoverage":false},{"functionName":"copyFileSync","ranges":[{"startOffset":53287,"endOffset":53659,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":53661,"endOffset":53855,"count":52},{"startOffset":53709,"endOffset":53853,"count":1}],"isBlockCoverage":true},{"functionName":"createReadStream","ranges":[{"startOffset":53857,"endOffset":53962,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":53964,"endOffset":54071,"count":0}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":55278,"endOffset":55346,"count":13}],"isBlockCoverage":true},{"functionName":"set ReadStream","ranges":[{"startOffset":55351,"endOffset":55398,"count":0}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":55403,"endOffset":55473,"count":13}],"isBlockCoverage":true},{"functionName":"set WriteStream","ranges":[{"startOffset":55478,"endOffset":55527,"count":0}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":55665,"endOffset":55741,"count":13}],"isBlockCoverage":true},{"functionName":"set FileReadStream","ranges":[{"startOffset":55746,"endOffset":55801,"count":0}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":55806,"endOffset":55884,"count":13}],"isBlockCoverage":true},{"functionName":"set FileWriteStream","ranges":[{"startOffset":55889,"endOffset":55946,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":56377,"endOffset":56502,"count":13},{"startOffset":56422,"endOffset":56473,"count":1}],"isBlockCoverage":true}]},{"scriptId":"50","url":"internal/fs/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19876,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFs","ranges":[{"startOffset":2265,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":2346,"endOffset":2493,"count":1541},{"startOffset":2397,"endOffset":2428,"count":675},{"startOffset":2430,"endOffset":2491,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":2512,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":2591,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":2656,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":2717,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":2786,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":2858,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":2927,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":2988,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":3094,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats.<computed>","ranges":[{"startOffset":3318,"endOffset":3367,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":3372,"endOffset":3500,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3550,"endOffset":4157,"count":0}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":4159,"endOffset":5254,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":5256,"endOffset":5978,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":5980,"endOffset":6520,"count":1542},{"startOffset":6115,"endOffset":6147,"count":1},{"startOffset":6147,"endOffset":6184,"count":1541},{"startOffset":6184,"endOffset":6302,"count":675},{"startOffset":6302,"endOffset":6424,"count":866},{"startOffset":6341,"endOffset":6424,"count":0},{"startOffset":6424,"endOffset":6519,"count":1541}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":6522,"endOffset":7159,"count":2976},{"startOffset":6592,"endOffset":6781,"count":16},{"startOffset":6781,"endOffset":6813,"count":2960},{"startOffset":6813,"endOffset":7157,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7300,"endOffset":7853,"count":1575},{"startOffset":7530,"endOffset":7550,"count":0},{"startOffset":7604,"endOffset":7652,"count":0},{"startOffset":7671,"endOffset":7852,"count":0}],"isBlockCoverage":true},{"functionName":"preprocessSymlinkDestination","ranges":[{"startOffset":7857,"endOffset":8528,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":8561,"endOffset":8868,"count":11}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":8904,"endOffset":8961,"count":9}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":8993,"endOffset":9050,"count":3}],"isBlockCoverage":true},{"functionName":"StatsBase.isBlockDevice","ranges":[{"startOffset":9089,"endOffset":9146,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isCharacterDevice","ranges":[{"startOffset":9189,"endOffset":9246,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":9286,"endOffset":9343,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":9375,"endOffset":9432,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSocket","ranges":[{"startOffset":9466,"endOffset":9524,"count":0}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":9649,"endOffset":9731,"count":20}],"isBlockCoverage":true},{"functionName":"nsFromTimeSpecBigInt","ranges":[{"startOffset":9733,"endOffset":9816,"count":0}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":10165,"endOffset":10229,"count":44}],"isBlockCoverage":true},{"functionName":"BigIntStats","ranges":[{"startOffset":10231,"endOffset":10967,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats._checkModeProperty","ranges":[{"startOffset":11125,"endOffset":11371,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":11374,"endOffset":11891,"count":11}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":12232,"endOffset":12462,"count":12},{"startOffset":12269,"endOffset":12347,"count":0},{"startOffset":12349,"endOffset":12416,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":12465,"endOffset":13543,"count":5},{"startOffset":12546,"endOffset":13071,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":13545,"endOffset":14753,"count":676},{"startOffset":13610,"endOffset":13633,"count":0},{"startOffset":13656,"endOffset":13682,"count":1},{"startOffset":13682,"endOffset":13734,"count":675},{"startOffset":13739,"endOffset":13750,"count":0},{"startOffset":13772,"endOffset":13809,"count":0},{"startOffset":13814,"endOffset":13840,"count":0},{"startOffset":13845,"endOffset":13857,"count":0},{"startOffset":13879,"endOffset":13915,"count":0},{"startOffset":13921,"endOffset":13968,"count":0},{"startOffset":13973,"endOffset":13984,"count":0},{"startOffset":14006,"endOffset":14063,"count":0},{"startOffset":14069,"endOffset":14115,"count":0},{"startOffset":14120,"endOffset":14131,"count":0},{"startOffset":14153,"endOffset":14208,"count":0},{"startOffset":14214,"endOffset":14262,"count":0},{"startOffset":14267,"endOffset":14278,"count":0},{"startOffset":14300,"endOffset":14358,"count":0},{"startOffset":14363,"endOffset":14374,"count":0},{"startOffset":14396,"endOffset":14454,"count":0},{"startOffset":14460,"endOffset":14507,"count":0},{"startOffset":14512,"endOffset":14523,"count":0},{"startOffset":14545,"endOffset":14601,"count":0},{"startOffset":14606,"endOffset":14617,"count":0},{"startOffset":14639,"endOffset":14695,"count":0},{"startOffset":14699,"endOffset":14752,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14799,"endOffset":15159,"count":0}],"isBlockCoverage":false},{"functionName":"toUnixTimestamp","ranges":[{"startOffset":15221,"endOffset":15664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15718,"endOffset":16097,"count":675},{"startOffset":15774,"endOffset":15841,"count":0},{"startOffset":15862,"endOffset":15929,"count":0},{"startOffset":15970,"endOffset":16093,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16155,"endOffset":16429,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16471,"endOffset":16741,"count":1575},{"startOffset":16533,"endOffset":16555,"count":0},{"startOffset":16557,"endOffset":16643,"count":0},{"startOffset":16719,"endOffset":16739,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16786,"endOffset":16921,"count":709}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16969,"endOffset":17300,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnNonPortableTemplate","ranges":[{"startOffset":17341,"endOffset":17799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17936,"endOffset":18439,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18480,"endOffset":19058,"count":3},{"startOffset":18607,"endOffset":18704,"count":0},{"startOffset":18788,"endOffset":18832,"count":0},{"startOffset":18833,"endOffset":18847,"count":0},{"startOffset":18849,"endOffset":19057,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19121,"endOffset":19304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"internal/fs/dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6531,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1092,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1868,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1915,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1986,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":3362,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4122,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":4686,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":5067,"endOffset":5330,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":5491,"endOffset":6116,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6118,"endOffset":6475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"52","url":"internal/modules/cjs/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4962,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":536,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"loadNativeModule","ranges":[{"startOffset":565,"endOffset":771,"count":721},{"startOffset":669,"endOffset":769,"count":73}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":1020,"endOffset":2865,"count":643},{"startOffset":1134,"endOffset":2257,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1234,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":2279,"endOffset":2341,"count":1384}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2350,"endOffset":2496,"count":14}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":2530,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":3050,"endOffset":3176,"count":6},{"startOffset":3119,"endOffset":3156,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":3178,"endOffset":4643,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":4645,"endOffset":4833,"count":646},{"startOffset":4752,"endOffset":4798,"count":644},{"startOffset":4798,"endOffset":4832,"count":2}],"isBlockCoverage":true}]},{"scriptId":"53","url":"url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29915,"count":1}],"isBlockCoverage":false},{"functionName":"Url","ranges":[{"startOffset":1837,"endOffset":2113,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":3791,"endOffset":4005,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4029,"endOffset":13457,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":13460,"endOffset":14185,"count":0}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":15241,"endOffset":15947,"count":0}],"isBlockCoverage":false},{"functionName":"urlFormat","ranges":[{"startOffset":15993,"endOffset":16703,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":17395,"endOffset":19811,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolve","ranges":[{"startOffset":19814,"endOffset":19913,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":19939,"endOffset":20040,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolveObject","ranges":[{"startOffset":20043,"endOffset":20186,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":20218,"endOffset":29337,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":29366,"endOffset":29639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"54","url":"internal/idna.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":false}]},{"scriptId":"55","url":"internal/process/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2945,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":298,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":809,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":1049,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1104,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1196,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1249,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1341,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1392,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1473,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1522,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1663,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1739,"endOffset":1923,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1927,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1995,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2226,"endOffset":2312,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2316,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2519,"endOffset":2690,"count":1},{"startOffset":2585,"endOffset":2688,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2692,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2818,"endOffset":2892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18694,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1538,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":2179,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":3866,"endOffset":4355,"count":1}],"isBlockCoverage":true},{"functionName":"onNewListener","ranges":[{"startOffset":4094,"endOffset":4203,"count":12},{"startOffset":4152,"endOffset":4176,"count":9},{"startOffset":4178,"endOffset":4199,"count":3}],"isBlockCoverage":true},{"functionName":"onRemoveListener","ranges":[{"startOffset":4237,"endOffset":4351,"count":5},{"startOffset":4298,"endOffset":4322,"count":3},{"startOffset":4324,"endOffset":4347,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":4357,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":4768,"endOffset":5015,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":5051,"endOffset":5479,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5072,"endOffset":5476,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":5596,"endOffset":10450,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":10574,"endOffset":14813,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":14816,"endOffset":15018,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":15020,"endOffset":16506,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":16509,"endOffset":16938,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":16941,"endOffset":17351,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":17354,"endOffset":17730,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":17733,"endOffset":17921,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":17924,"endOffset":18197,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":18200,"endOffset":18563,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"internal/child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30672,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2102,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2168,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2283,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2357,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2527,"endOffset":4081,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4088,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":4841,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5360,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5426,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5544,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5671,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":5839,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6188,"endOffset":7533,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":7656,"endOffset":8134,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":8137,"endOffset":8248,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8251,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":8482,"endOffset":8595,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":8629,"endOffset":12585,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12589,"endOffset":12650,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12683,"endOffset":13348,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13381,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13470,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13568,"endOffset":13625,"count":1}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":13630,"endOffset":13698,"count":1}],"isBlockCoverage":true},{"functionName":"refCounted","ranges":[{"startOffset":14012,"endOffset":14120,"count":27},{"startOffset":14054,"endOffset":14080,"count":1},{"startOffset":14082,"endOffset":14116,"count":1}],"isBlockCoverage":true},{"functionName":"unrefCounted","ranges":[{"startOffset":14124,"endOffset":14262,"count":26},{"startOffset":14168,"endOffset":14194,"count":0},{"startOffset":14196,"endOffset":14258,"count":0}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":14266,"endOffset":14337,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":14341,"endOffset":14416,"count":2}],"isBlockCoverage":true},{"functionName":"get fd","ranges":[{"startOffset":14420,"endOffset":14491,"count":2},{"startOffset":14475,"endOffset":14486,"count":0}],"isBlockCoverage":true},{"functionName":"setupChannel","ranges":[{"startOffset":14641,"endOffset":26294,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14870,"endOffset":14912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14968,"endOffset":15012,"count":0}],"isBlockCoverage":false},{"functionName":"channel.onread","ranges":[{"startOffset":15505,"endOffset":16684,"count":2},{"startOffset":15839,"endOffset":15866,"count":0},{"startOffset":16188,"endOffset":16421,"count":0},{"startOffset":16504,"endOffset":16680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16838,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"target.send","ranges":[{"startOffset":19199,"endOffset":20013,"count":32},{"startOffset":19369,"endOffset":19646,"count":0},{"startOffset":19793,"endOffset":20012,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19955,"endOffset":19983,"count":0}],"isBlockCoverage":false},{"functionName":"target._send","ranges":[{"startOffset":20033,"endOffset":24298,"count":32},{"startOffset":20106,"endOffset":20121,"count":0},{"startOffset":20162,"endOffset":20200,"count":0},{"startOffset":20525,"endOffset":20563,"count":0},{"startOffset":20564,"endOffset":20603,"count":0},{"startOffset":20605,"endOffset":20722,"count":0},{"startOffset":20803,"endOffset":20854,"count":0},{"startOffset":20931,"endOffset":22648,"count":0},{"startOffset":22676,"endOffset":22810,"count":0},{"startOffset":22812,"endOffset":23069,"count":0},{"startOffset":23276,"endOffset":23452,"count":0},{"startOffset":23479,"endOffset":23670,"count":24},{"startOffset":23670,"endOffset":23763,"count":8},{"startOffset":23769,"endOffset":24171,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":23506,"endOffset":23631,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24117,"endOffset":24145,"count":0}],"isBlockCoverage":false},{"functionName":"target.disconnect","ranges":[{"startOffset":24872,"endOffset":25296,"count":0}],"isBlockCoverage":false},{"functionName":"target._disconnect","ranges":[{"startOffset":25322,"endOffset":25939,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":25944,"endOffset":26028,"count":2}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":26032,"endOffset":26250,"count":2},{"startOffset":26115,"endOffset":26122,"count":0},{"startOffset":26156,"endOffset":26175,"count":0}],"isBlockCoverage":true},{"functionName":"isInternal","ranges":[{"startOffset":26329,"endOffset":26611,"count":2},{"startOffset":26473,"endOffset":26529,"count":0},{"startOffset":26530,"endOffset":26607,"count":0}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":26613,"endOffset":26631,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":26633,"endOffset":29370,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":29373,"endOffset":29689,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":29692,"endOffset":29893,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":29895,"endOffset":30547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47028,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1484,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3424,"endOffset":3442,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":3444,"endOffset":3538,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":3540,"endOffset":3921,"count":2},{"startOffset":3707,"endOffset":3729,"count":0},{"startOffset":3763,"endOffset":3920,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":3924,"endOffset":4062,"count":2},{"startOffset":4019,"endOffset":4037,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":4065,"endOffset":4148,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4150,"endOffset":4254,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4477,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":5263,"endOffset":5989,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":6061,"endOffset":6664,"count":2},{"startOffset":6417,"endOffset":6658,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":6799,"endOffset":10621,"count":2},{"startOffset":6859,"endOffset":6886,"count":0},{"startOffset":7436,"endOffset":7462,"count":0},{"startOffset":8006,"endOffset":8114,"count":0},{"startOffset":8211,"endOffset":8290,"count":0},{"startOffset":8291,"endOffset":8339,"count":0},{"startOffset":8341,"endOffset":8572,"count":0},{"startOffset":9123,"endOffset":9157,"count":0},{"startOffset":9237,"endOffset":9248,"count":1},{"startOffset":9308,"endOffset":9837,"count":0},{"startOffset":10203,"endOffset":10468,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":10794,"endOffset":10924,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":11044,"endOffset":11692,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":11696,"endOffset":12075,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":12282,"endOffset":12738,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":12820,"endOffset":13324,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":13358,"endOffset":13807,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":13843,"endOffset":14090,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":14121,"endOffset":14165,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14232,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14336,"endOffset":14392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14483,"endOffset":14798,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14867,"endOffset":14947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15015,"endOffset":15060,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":15067,"endOffset":15313,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":15405,"endOffset":15634,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":15661,"endOffset":15813,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":15842,"endOffset":16176,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":16206,"endOffset":16390,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":16418,"endOffset":16604,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":16651,"endOffset":16936,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":16970,"endOffset":17117,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":17149,"endOffset":18103,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":18138,"endOffset":18429,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":18432,"endOffset":18592,"count":8}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":18619,"endOffset":18710,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":18743,"endOffset":18809,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":18841,"endOffset":18905,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":18935,"endOffset":18995,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":19032,"endOffset":19317,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":19349,"endOffset":19414,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":19444,"endOffset":19503,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":19545,"endOffset":19592,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":19628,"endOffset":20389,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":20420,"endOffset":20488,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":20518,"endOffset":20599,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":20792,"endOffset":20896,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":20928,"endOffset":21869,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":21874,"endOffset":22673,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":22676,"endOffset":24381,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":24411,"endOffset":25715,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":25719,"endOffset":28617,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":28620,"endOffset":28679,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":28705,"endOffset":28892,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":28921,"endOffset":29114,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":29118,"endOffset":30366,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":30369,"endOffset":31698,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":31809,"endOffset":31874,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":31942,"endOffset":33388,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":33390,"endOffset":35741,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":35808,"endOffset":35870,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":35873,"endOffset":35988,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":35991,"endOffset":37209,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":37238,"endOffset":40745,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":40748,"endOffset":41160,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41223,"endOffset":41266,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":41341,"endOffset":41630,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":41633,"endOffset":42294,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":42331,"endOffset":43084,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":43113,"endOffset":43980,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":44022,"endOffset":44408,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":44412,"endOffset":44495,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":44554,"endOffset":44716,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44919,"endOffset":44955,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44959,"endOffset":45000,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45060,"endOffset":45091,"count":16}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":45095,"endOffset":45131,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":45169,"endOffset":45395,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":45421,"endOffset":45519,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":45547,"endOffset":45646,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":45788,"endOffset":46457,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":46496,"endOffset":46737,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2144,"count":1}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1935,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7428,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":551,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1945,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":2318,"endOffset":2397,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":2399,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":2481,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":2564,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2637,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":2962,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":3240,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"pump","ranges":[{"startOffset":3466,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3851,"endOffset":7399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"61","url":"internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3537,"count":1}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":123,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":1134,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1223,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":1443,"endOffset":1730,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1732,"endOffset":2269,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2271,"endOffset":3041,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":3043,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":3183,"endOffset":3459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"62","url":"internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5791,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":280,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":377,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":537,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":697,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":936,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":955,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1190,"endOffset":5767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"63","url":"internal/streams/legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2081,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":96,"endOffset":144,"count":4}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":258,"endOffset":2053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"64","url":"_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38534,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1550,"endOffset":1575,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2253,"endOffset":3060,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3062,"endOffset":6446,"count":2},{"startOffset":3461,"endOffset":3504,"count":0},{"startOffset":4037,"endOffset":4073,"count":0},{"startOffset":6258,"endOffset":6444,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6449,"endOffset":7019,"count":2},{"startOffset":6517,"endOffset":6546,"count":0},{"startOffset":6869,"endOffset":6895,"count":0},{"startOffset":6950,"endOffset":6982,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":7156,"endOffset":7188,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7239,"endOffset":7277,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7506,"endOffset":7592,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":7688,"endOffset":7773,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7776,"endOffset":10029,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10031,"endOffset":10689,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":10721,"endOffset":10833,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":10897,"endOffset":11541,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11602,"endOffset":11967,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12080,"endOffset":12474,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12571,"endOffset":16789,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":16792,"endOffset":17612,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17813,"endOffset":18140,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18142,"endOffset":18778,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19128,"endOffset":19284,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19286,"endOffset":21082,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21353,"endOffset":21419,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21448,"endOffset":25835,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25838,"endOffset":26512,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":26543,"endOffset":27212,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":27338,"endOffset":28245,"count":2},{"startOffset":27470,"endOffset":27802,"count":0},{"startOffset":27831,"endOffset":28228,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":28340,"endOffset":28854,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":28957,"endOffset":29495,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":29498,"endOffset":30008,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30010,"endOffset":30098,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":30252,"endOffset":30577,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":30580,"endOffset":30730,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30732,"endOffset":30983,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":31012,"endOffset":31279,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":31282,"endOffset":31429,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":31613,"endOffset":33428,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33473,"endOffset":33688,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33887,"endOffset":34276,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34282,"endOffset":34412,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34478,"endOffset":34544,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34603,"endOffset":34685,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34745,"endOffset":34805,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34816,"endOffset":34925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34979,"endOffset":35033,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35091,"endOffset":35179,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35235,"endOffset":35320,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35369,"endOffset":35503,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35509,"endOffset":35798,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35851,"endOffset":35939,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36002,"endOffset":36047,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36070,"endOffset":36121,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36127,"endOffset":36176,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":36480,"endOffset":37042,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":37044,"endOffset":37265,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":37267,"endOffset":38199,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":38201,"endOffset":38368,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":38386,"endOffset":38532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3784,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":190,"endOffset":274,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":278,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":469,"endOffset":627,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":631,"endOffset":858,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":862,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":934,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1109,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1456,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":1914,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1958,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2129,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2794,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3585,"endOffset":3780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"66","url":"internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":881,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":4},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":4},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":811,"count":4},{"startOffset":546,"endOffset":737,"count":0}],"isBlockCoverage":true}]},{"scriptId":"67","url":"_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22213,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2206,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2225,"endOffset":6390,"count":2},{"startOffset":2620,"endOffset":2663,"count":0},{"startOffset":3214,"endOffset":3250,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6392,"endOffset":6524,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":6562,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6713,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7105,"endOffset":7319,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":7355,"endOffset":7412,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7417,"endOffset":8589,"count":2},{"startOffset":8058,"endOffset":8098,"count":0},{"startOffset":8104,"endOffset":8133,"count":0},{"startOffset":8272,"endOffset":8300,"count":0},{"startOffset":8354,"endOffset":8384,"count":0},{"startOffset":8439,"endOffset":8471,"count":0},{"startOffset":8524,"endOffset":8552,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.pipe","ranges":[{"startOffset":8685,"endOffset":8753,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":8783,"endOffset":9992,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":10021,"endOffset":10067,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10098,"endOffset":10253,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":10296,"endOffset":10607,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":10797,"endOffset":11750,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":11752,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":12132,"endOffset":12552,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":12554,"endOffset":13807,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteTick","ranges":[{"startOffset":13809,"endOffset":13948,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":13950,"endOffset":14360,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":14432,"endOffset":14753,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":14819,"endOffset":16252,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":16282,"endOffset":16451,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":16515,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":17702,"endOffset":17915,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":17917,"endOffset":18177,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":18179,"endOffset":18527,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":18529,"endOffset":18856,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":18858,"endOffset":19476,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":19542,"endOffset":20006,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20073,"endOffset":20160,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20166,"endOffset":20348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20373,"endOffset":20765,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20771,"endOffset":20905,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20938,"endOffset":21024,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21059,"endOffset":21147,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21178,"endOffset":21260,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21290,"endOffset":21374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21412,"endOffset":21496,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21527,"endOffset":21607,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21638,"endOffset":21715,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":21791,"endOffset":22002,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":22090,"endOffset":22122,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":22173,"endOffset":22211,"count":0}],"isBlockCoverage":false}]},{"scriptId":"68","url":"_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3643,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1918,"endOffset":2342,"count":2},{"startOffset":1982,"endOffset":2009,"count":0},{"startOffset":2230,"endOffset":2252,"count":0},{"startOffset":2295,"endOffset":2336,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3155,"endOffset":3367,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3373,"endOffset":3634,"count":0}],"isBlockCoverage":false}]},{"scriptId":"69","url":"_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8208,"count":1}],"isBlockCoverage":false},{"functionName":"afterTransform","ranges":[{"startOffset":4023,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4544,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5375,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5682,"endOffset":5732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5829,"endOffset":5881,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5979,"endOffset":6115,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6598,"endOffset":6687,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6719,"endOffset":7058,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7230,"endOffset":7604,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7639,"endOffset":7736,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7740,"endOffset":8207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"70","url":"_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1753,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1520,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1699,"endOffset":1751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"internal/net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1694,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":974,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1024,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1074,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1162,"endOffset":1576,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"internal/stream_base_commons.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7022,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":987,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1131,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":1988,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2500,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":2703,"endOffset":3344,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3346,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3555,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":3866,"endOffset":5893,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":5895,"endOffset":6797,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"internal/dtrace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"74","url":"dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27004,"count":1}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":2681,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":3690,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":3771,"endOffset":4205,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":4207,"endOffset":4777,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":4779,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5138,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":5587,"endOffset":9177,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9207,"endOffset":9949,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":9953,"endOffset":10298,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":10301,"endOffset":10943,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":10976,"endOffset":11283,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":11388,"endOffset":11829,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":11833,"endOffset":12403,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":12406,"endOffset":12790,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":12793,"endOffset":13205,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":13208,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":13331,"endOffset":13455,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":13458,"endOffset":13655,"count":0}],"isBlockCoverage":false},{"functionName":"isConnected","ranges":[{"startOffset":13657,"endOffset":13772,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":14344,"endOffset":17238,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":17241,"endOffset":18380,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":18382,"endOffset":18559,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":18586,"endOffset":19121,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":19125,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":19209,"endOffset":19399,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":19435,"endOffset":19745,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":19781,"endOffset":19929,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":19959,"endOffset":20133,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":20172,"endOffset":20364,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":20408,"endOffset":20608,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":20653,"endOffset":20915,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":20951,"endOffset":21325,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":21363,"endOffset":21740,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":21790,"endOffset":22547,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":22599,"endOffset":23362,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":23366,"endOffset":23529,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":23532,"endOffset":23696,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":23699,"endOffset":23953,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":23979,"endOffset":24086,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":24115,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":24265,"endOffset":24322,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":24363,"endOffset":24420,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":24461,"endOffset":24518,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":24559,"endOffset":24616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24717,"endOffset":24771,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24844,"endOffset":24900,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25033,"endOffset":25090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25166,"endOffset":25225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25361,"endOffset":25418,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25494,"endOffset":25553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25685,"endOffset":25738,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25810,"endOffset":25865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25997,"endOffset":26054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26130,"endOffset":26189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26295,"endOffset":26330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26439,"endOffset":26476,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26742,"endOffset":26778,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26782,"endOffset":26823,"count":0}],"isBlockCoverage":false}]},{"scriptId":"75","url":"internal/dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1844,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":448,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":552,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":649,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1320,"endOffset":1768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"internal/socket_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1193,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1542,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2404,"endOffset":2645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"77","url":"internal/child_process/serialization.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":775,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":1090,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":1513,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"parseChannelMessages","ranges":[{"startOffset":1629,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"writeChannelMessage","ranges":[{"startOffset":2285,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":2726,"endOffset":2831,"count":1}],"isBlockCoverage":true},{"functionName":"parseChannelMessages","ranges":[{"startOffset":2836,"endOffset":3598,"count":2},{"startOffset":2910,"endOffset":2917,"count":0},{"startOffset":2972,"endOffset":3024,"count":1},{"startOffset":3284,"endOffset":3338,"count":0}],"isBlockCoverage":true},{"functionName":"writeChannelMessage","ranges":[{"startOffset":3603,"endOffset":3766,"count":32}],"isBlockCoverage":true}]},{"scriptId":"78","url":"string_decoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4033,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":1850,"endOffset":2112,"count":1},{"startOffset":1962,"endOffset":2095,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2382,"endOffset":2581,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2615,"endOffset":2916,"count":2},{"startOffset":2672,"endOffset":2683,"count":0},{"startOffset":2719,"endOffset":2870,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":2949,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":3237,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3511,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3735,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3869,"endOffset":3984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"v8.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8781,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":1665,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":1869,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":3302,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":3406,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":4187,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":4746,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":5246,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":6648,"endOffset":6736,"count":0}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":6740,"endOffset":7354,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":7409,"endOffset":8222,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":8226,"endOffset":8370,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":8372,"endOffset":8497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"internal/heap_utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":322,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":480,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":553,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":737,"endOffset":779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"internal/modules/cjs/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44400,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":1273,"endOffset":1342,"count":1}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":4187,"endOffset":5002,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":5004,"endOffset":5321,"count":3973},{"startOffset":5102,"endOffset":5196,"count":407},{"startOffset":5178,"endOffset":5192,"count":166},{"startOffset":5196,"endOffset":5270,"count":3807},{"startOffset":5270,"endOffset":5302,"count":241},{"startOffset":5302,"endOffset":5320,"count":3807}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":5323,"endOffset":5498,"count":1326},{"startOffset":5396,"endOffset":5414,"count":1315},{"startOffset":5431,"endOffset":5469,"count":1315},{"startOffset":5441,"endOffset":5468,"count":670},{"startOffset":5475,"endOffset":5496,"count":1308}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":5500,"endOffset":5737,"count":656}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":6188,"endOffset":6265,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6410,"endOffset":6532,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":6537,"endOffset":6670,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6717,"endOffset":6745,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6750,"endOffset":6804,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6854,"endOffset":6890,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6895,"endOffset":6957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7028,"endOffset":7053,"count":1}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":7401,"endOffset":8211,"count":4085},{"startOffset":7581,"endOffset":7597,"count":3785},{"startOffset":7597,"endOffset":7695,"count":300},{"startOffset":7695,"endOffset":7701,"count":0},{"startOffset":7702,"endOffset":7717,"count":300},{"startOffset":7745,"endOffset":7811,"count":174},{"startOffset":7811,"endOffset":8094,"count":126},{"startOffset":8094,"endOffset":8209,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":8213,"endOffset":8686,"count":1667},{"startOffset":8422,"endOffset":8668,"count":3595},{"startOffset":8537,"endOffset":8550,"count":0},{"startOffset":8608,"endOffset":8664,"count":1667},{"startOffset":8668,"endOffset":8685,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageMain","ranges":[{"startOffset":8688,"endOffset":8806,"count":218},{"startOffset":8781,"endOffset":8791,"count":168},{"startOffset":8792,"endOffset":8803,"count":50}],"isBlockCoverage":true},{"functionName":"readPackageExports","ranges":[{"startOffset":8808,"endOffset":8932,"count":272},{"startOffset":8904,"endOffset":8917,"count":195},{"startOffset":8918,"endOffset":8929,"count":77}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":8934,"endOffset":10233,"count":218},{"startOffset":9054,"endOffset":9135,"count":96},{"startOffset":9135,"endOffset":9229,"count":122},{"startOffset":9229,"endOffset":9273,"count":6},{"startOffset":9274,"endOffset":9341,"count":3},{"startOffset":9367,"endOffset":10214,"count":0},{"startOffset":10214,"endOffset":10232,"count":122}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":10574,"endOffset":10784,"count":1735},{"startOffset":10662,"endOffset":10669,"count":897},{"startOffset":10669,"endOffset":10693,"count":838},{"startOffset":10693,"endOffset":10703,"count":0},{"startOffset":10705,"endOffset":10748,"count":0},{"startOffset":10748,"endOffset":10783,"count":838}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":10786,"endOffset":10917,"count":863}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":10992,"endOffset":11198,"count":1002},{"startOffset":11074,"endOffset":11180,"count":1596},{"startOffset":11146,"endOffset":11176,"count":705},{"startOffset":11180,"endOffset":11197,"count":297}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":11287,"endOffset":11723,"count":648},{"startOffset":11546,"endOffset":11555,"count":0},{"startOffset":11677,"endOffset":11701,"count":641},{"startOffset":11705,"endOffset":11722,"count":7}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":11725,"endOffset":12014,"count":1034},{"startOffset":11777,"endOffset":11790,"count":3},{"startOffset":11790,"endOffset":11848,"count":1031},{"startOffset":11848,"endOffset":12012,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":12016,"endOffset":12660,"count":1034},{"startOffset":12075,"endOffset":12088,"count":3},{"startOffset":12088,"endOffset":12159,"count":1031},{"startOffset":12159,"endOffset":12164,"count":0},{"startOffset":12177,"endOffset":12205,"count":1031},{"startOffset":12207,"endOffset":12220,"count":1014},{"startOffset":12220,"endOffset":12257,"count":17},{"startOffset":12257,"endOffset":12270,"count":0},{"startOffset":12270,"endOffset":12317,"count":17},{"startOffset":12317,"endOffset":12342,"count":0},{"startOffset":12342,"endOffset":12502,"count":17},{"startOffset":12404,"endOffset":12473,"count":0},{"startOffset":12502,"endOffset":12659,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalDotExportSugar","ranges":[{"startOffset":12662,"endOffset":13481,"count":17},{"startOffset":12759,"endOffset":12771,"count":3},{"startOffset":12771,"endOffset":12805,"count":14},{"startOffset":12805,"endOffset":12817,"count":0},{"startOffset":12817,"endOffset":12857,"count":14},{"startOffset":12857,"endOffset":12870,"count":0},{"startOffset":12870,"endOffset":12966,"count":14},{"startOffset":12966,"endOffset":13455,"count":31},{"startOffset":13033,"endOffset":13106,"count":14},{"startOffset":13106,"endOffset":13451,"count":17},{"startOffset":13152,"endOffset":13451,"count":0},{"startOffset":13455,"endOffset":13480,"count":14}],"isBlockCoverage":true},{"functionName":"applyExports","ranges":[{"startOffset":13483,"endOffset":15392,"count":272},{"startOffset":13647,"endOffset":13669,"count":17},{"startOffset":13675,"endOffset":13688,"count":255},{"startOffset":13688,"endOffset":13751,"count":17},{"startOffset":13751,"endOffset":13784,"count":3},{"startOffset":13784,"endOffset":15324,"count":17},{"startOffset":14067,"endOffset":15320,"count":0},{"startOffset":15324,"endOffset":15391,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":15553,"endOffset":15992,"count":934},{"startOffset":15755,"endOffset":15760,"count":662},{"startOffset":15775,"endOffset":15798,"count":662},{"startOffset":15798,"endOffset":15923,"count":272},{"startOffset":15923,"endOffset":15968,"count":17},{"startOffset":15968,"endOffset":15991,"count":255}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":15994,"endOffset":16243,"count":36},{"startOffset":16117,"endOffset":16240,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExportsTarget","ranges":[{"startOffset":16245,"endOffset":19670,"count":30},{"startOffset":16349,"endOffset":17870,"count":17},{"startOffset":16806,"endOffset":16833,"count":0},{"startOffset":16867,"endOffset":16903,"count":0},{"startOffset":16911,"endOffset":16938,"count":0},{"startOffset":16983,"endOffset":17101,"count":0},{"startOffset":17471,"endOffset":17620,"count":0},{"startOffset":17664,"endOffset":17870,"count":0},{"startOffset":17870,"endOffset":19590,"count":13},{"startOffset":17902,"endOffset":18477,"count":1},{"startOffset":17939,"endOffset":18028,"count":0},{"startOffset":18192,"endOffset":18368,"count":0},{"startOffset":18374,"endOffset":18477,"count":0},{"startOffset":18477,"endOffset":19590,"count":12},{"startOffset":18606,"endOffset":18732,"count":0},{"startOffset":18759,"endOffset":19370,"count":35},{"startOffset":18788,"endOffset":18800,"count":0},{"startOffset":18809,"endOffset":19084,"count":1},{"startOffset":18975,"endOffset":19084,"count":0},{"startOffset":19093,"endOffset":19356,"count":11},{"startOffset":19264,"endOffset":19356,"count":0},{"startOffset":19370,"endOffset":19590,"count":0},{"startOffset":19590,"endOffset":19669,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":19736,"endOffset":22488,"count":1035},{"startOffset":19846,"endOffset":19869,"count":13},{"startOffset":19869,"endOffset":19932,"count":1022},{"startOffset":19909,"endOffset":19932,"count":0},{"startOffset":20008,"endOffset":20018,"count":812},{"startOffset":20019,"endOffset":20039,"count":223},{"startOffset":20104,"endOffset":20117,"count":173},{"startOffset":20117,"endOffset":20240,"count":862},{"startOffset":20264,"endOffset":20339,"count":861},{"startOffset":20339,"endOffset":20401,"count":862},{"startOffset":20401,"endOffset":22469,"count":1321},{"startOffset":20499,"endOffset":20519,"count":1316},{"startOffset":20521,"endOffset":20530,"count":382},{"startOffset":20530,"endOffset":20558,"count":939},{"startOffset":20558,"endOffset":20813,"count":934},{"startOffset":20732,"endOffset":20738,"count":0},{"startOffset":20766,"endOffset":20807,"count":17},{"startOffset":20813,"endOffset":20942,"count":922},{"startOffset":20942,"endOffset":22120,"count":921},{"startOffset":20964,"endOffset":21897,"count":24},{"startOffset":20997,"endOffset":21165,"count":23},{"startOffset":21031,"endOffset":21091,"count":0},{"startOffset":21165,"endOffset":21889,"count":1},{"startOffset":21197,"endOffset":21829,"count":0},{"startOffset":21920,"endOffset":22114,"count":897},{"startOffset":22010,"endOffset":22048,"count":821},{"startOffset":22120,"endOffset":22140,"count":922},{"startOffset":22140,"endOffset":22151,"count":295},{"startOffset":22153,"endOffset":22369,"count":218},{"startOffset":22263,"endOffset":22301,"count":1},{"startOffset":22369,"endOffset":22389,"count":922},{"startOffset":22389,"endOffset":22465,"count":845},{"startOffset":22469,"endOffset":22487,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":22732,"endOffset":24123,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":24215,"endOffset":25256,"count":656},{"startOffset":24493,"endOffset":24518,"count":0},{"startOffset":24811,"endOffset":25149,"count":89823},{"startOffset":24891,"endOffset":25019,"count":6974},{"startOffset":24928,"endOffset":24978,"count":6241},{"startOffset":25019,"endOffset":25143,"count":82849},{"startOffset":25039,"endOffset":25143,"count":18777},{"startOffset":25074,"endOffset":25100,"count":12536},{"startOffset":25100,"endOffset":25135,"count":6241}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":25290,"endOffset":26428,"count":1034},{"startOffset":25368,"endOffset":25434,"count":0},{"startOffset":25503,"endOffset":25654,"count":799},{"startOffset":25567,"endOffset":25601,"count":572},{"startOffset":25602,"endOffset":25653,"count":0},{"startOffset":25656,"endOffset":25900,"count":235},{"startOffset":25711,"endOffset":25726,"count":232},{"startOffset":25727,"endOffset":25749,"count":232},{"startOffset":25751,"endOffset":25800,"count":232},{"startOffset":25889,"endOffset":25895,"count":0},{"startOffset":25900,"endOffset":25968,"count":799},{"startOffset":25969,"endOffset":25988,"count":799},{"startOffset":25990,"endOffset":26239,"count":0},{"startOffset":26239,"endOffset":26427,"count":799}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":26431,"endOffset":26614,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26807,"endOffset":27179,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":27184,"endOffset":27425,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":27626,"endOffset":28276,"count":20},{"startOffset":27801,"endOffset":28094,"count":19},{"startOffset":28096,"endOffset":28248,"count":2}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":28688,"endOffset":31501,"count":1390},{"startOffset":28771,"endOffset":29548,"count":1387},{"startOffset":29191,"endOffset":29544,"count":298},{"startOffset":29381,"endOffset":29431,"count":0},{"startOffset":29476,"endOffset":29544,"count":0},{"startOffset":29548,"endOffset":29702,"count":1092},{"startOffset":29702,"endOffset":29875,"count":372},{"startOffset":29788,"endOffset":29838,"count":20},{"startOffset":29838,"endOffset":29875,"count":352},{"startOffset":29875,"endOffset":29938,"count":720},{"startOffset":29938,"endOffset":29965,"count":72},{"startOffset":29967,"endOffset":29986,"count":72},{"startOffset":29986,"endOffset":30117,"count":648},{"startOffset":30117,"endOffset":30176,"count":1},{"startOffset":30176,"endOffset":30242,"count":648},{"startOffset":30242,"endOffset":30311,"count":646},{"startOffset":30311,"endOffset":30550,"count":648},{"startOffset":30550,"endOffset":30740,"count":0},{"startOffset":30740,"endOffset":31473,"count":648},{"startOffset":30831,"endOffset":31213,"count":0},{"startOffset":31238,"endOffset":31280,"count":647},{"startOffset":31281,"endOffset":31393,"count":647},{"startOffset":31395,"endOffset":31469,"count":2},{"startOffset":31473,"endOffset":31500,"count":648}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":31647,"endOffset":34750,"count":1106},{"startOffset":31742,"endOffset":31767,"count":72},{"startOffset":31767,"endOffset":31817,"count":1034},{"startOffset":31817,"endOffset":31836,"count":7},{"startOffset":31838,"endOffset":32821,"count":7},{"startOffset":31993,"endOffset":32021,"count":0},{"startOffset":32088,"endOffset":32128,"count":0},{"startOffset":32500,"endOffset":32604,"count":77},{"startOffset":32628,"endOffset":32817,"count":0},{"startOffset":32821,"endOffset":32889,"count":1027},{"startOffset":32889,"endOffset":32904,"count":1034},{"startOffset":32904,"endOffset":32922,"count":1031},{"startOffset":32924,"endOffset":33744,"count":1031},{"startOffset":32954,"endOffset":33740,"count":0},{"startOffset":33744,"endOffset":33905,"count":1034},{"startOffset":33905,"endOffset":34101,"count":0},{"startOffset":34101,"endOffset":34264,"count":1034},{"startOffset":34264,"endOffset":34749,"count":0}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":34841,"endOffset":36271,"count":648},{"startOffset":35160,"endOffset":35190,"count":0},{"startOffset":35192,"endOffset":35238,"count":0},{"startOffset":35601,"endOffset":35631,"count":2},{"startOffset":35633,"endOffset":35741,"count":2},{"startOffset":35741,"endOffset":36269,"count":646}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36043,"endOffset":36258,"count":0}],"isBlockCoverage":false},{"functionName":"Module.require","ranges":[{"startOffset":36389,"endOffset":36688,"count":1387},{"startOffset":36449,"endOffset":36567,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":36868,"endOffset":37984,"count":642},{"startOffset":36941,"endOffset":37281,"count":0},{"startOffset":37570,"endOffset":37679,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":37122,"endOffset":37268,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":37807,"endOffset":37947,"count":2}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":38184,"endOffset":39998,"count":642},{"startOffset":38264,"endOffset":38411,"count":0},{"startOffset":38592,"endOffset":38616,"count":0},{"startOffset":38618,"endOffset":39354,"count":0},{"startOffset":39577,"endOffset":39599,"count":3},{"startOffset":39624,"endOffset":39763,"count":0},{"startOffset":39962,"endOffset":39979,"count":3}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":40057,"endOffset":40607,"count":642},{"startOffset":40118,"endOffset":40514,"count":635},{"startOffset":40276,"endOffset":40510,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":40671,"endOffset":41020,"count":6},{"startOffset":40770,"endOffset":40872,"count":0},{"startOffset":40937,"endOffset":41018,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":41084,"endOffset":41387,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":41390,"endOffset":41815,"count":1},{"startOffset":41550,"endOffset":41576,"count":0},{"startOffset":41614,"endOffset":41650,"count":0}],"isBlockCoverage":true},{"functionName":"createRequire","ranges":[{"startOffset":42100,"endOffset":42653,"count":1},{"startOffset":42313,"endOffset":42445,"count":0},{"startOffset":42449,"endOffset":42609,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":42714,"endOffset":43622,"count":1},{"startOffset":42755,"endOffset":42780,"count":0},{"startOffset":42832,"endOffset":42855,"count":0},{"startOffset":43063,"endOffset":43105,"count":0},{"startOffset":43372,"endOffset":43501,"count":0}],"isBlockCoverage":true},{"functionName":"pathsFilterCB","ranges":[{"startOffset":43424,"endOffset":43481,"count":0}],"isBlockCoverage":false},{"functionName":"Module._preloadModules","ranges":[{"startOffset":43650,"endOffset":44156,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":44190,"endOffset":44346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"vm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13294,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":1983,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":4147,"endOffset":4427,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4431,"endOffset":4837,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":4841,"endOffset":5012,"count":0}],"isBlockCoverage":false},{"functionName":"validateContext","ranges":[{"startOffset":5016,"endOffset":5235,"count":0}],"isBlockCoverage":false},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5237,"endOffset":5828,"count":0}],"isBlockCoverage":false},{"functionName":"getContextOptions","ranges":[{"startOffset":5830,"endOffset":6898,"count":0}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":6900,"endOffset":7082,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":7117,"endOffset":8381,"count":0}],"isBlockCoverage":false},{"functionName":"createScript","ranges":[{"startOffset":8383,"endOffset":8459,"count":0}],"isBlockCoverage":false},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8613,"endOffset":9051,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":9053,"endOffset":9450,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9452,"endOffset":9804,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":9806,"endOffset":9992,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9994,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":12004,"endOffset":12807,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"internal/modules/package_json_reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":911,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":264,"endOffset":882,"count":307},{"startOffset":317,"endOffset":354,"count":7},{"startOffset":354,"endOffset":578,"count":300},{"startOffset":578,"endOffset":832,"count":126},{"startOffset":641,"endOffset":692,"count":0},{"startOffset":725,"endOffset":828,"count":0},{"startOffset":832,"endOffset":881,"count":300}],"isBlockCoverage":true}]},{"scriptId":"84","url":"internal/process/esm_loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2326,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":405,"endOffset":701,"count":1}],"isBlockCoverage":true},{"functionName":"exports.importModuleDynamicallyCallback","ranges":[{"startOffset":746,"endOffset":1137,"count":2},{"startOffset":1081,"endOffset":1136,"count":0}],"isBlockCoverage":true},{"functionName":"initializeLoader","ranges":[{"startOffset":1202,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"loadESM","ranges":[{"startOffset":1989,"endOffset":2324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"internal/modules/esm/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8218,"count":1}],"isBlockCoverage":false},{"functionName":"Loader","ranges":[{"startOffset":1328,"endOffset":3097,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3101,"endOffset":3724,"count":5},{"startOffset":3422,"endOffset":3525,"count":0},{"startOffset":3597,"endOffset":3704,"count":0}],"isBlockCoverage":true},{"functionName":"getFormat","ranges":[{"startOffset":3728,"endOffset":4721,"count":5},{"startOffset":3885,"endOffset":3992,"count":0},{"startOffset":4072,"endOffset":4187,"count":0},{"startOffset":4219,"endOffset":4247,"count":1},{"startOffset":4247,"endOffset":4291,"count":4},{"startOffset":4291,"endOffset":4460,"count":0},{"startOffset":4460,"endOffset":4536,"count":4},{"startOffset":4537,"endOffset":4570,"count":1},{"startOffset":4577,"endOffset":4697,"count":0},{"startOffset":4697,"endOffset":4720,"count":4}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":4725,"endOffset":5400,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":5404,"endOffset":5575,"count":2}],"isBlockCoverage":true},{"functionName":"hook","ranges":[{"startOffset":5579,"endOffset":6540,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalPreloadCode","ranges":[{"startOffset":6544,"endOffset":7348,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7352,"endOffset":8142,"count":5},{"startOffset":7639,"endOffset":7676,"count":0},{"startOffset":7710,"endOffset":7721,"count":0},{"startOffset":7763,"endOffset":7807,"count":0},{"startOffset":7909,"endOffset":7939,"count":0},{"startOffset":7940,"endOffset":7974,"count":0}],"isBlockCoverage":true}]},{"scriptId":"86","url":"internal/modules/esm/module_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":878,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175,"endOffset":200,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":419,"endOffset":492,"count":653}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":495,"endOffset":771,"count":651},{"startOffset":585,"endOffset":621,"count":646},{"startOffset":623,"endOffset":693,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":774,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"internal/modules/esm/module_job.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5096,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":432,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":716,"endOffset":2329,"count":5}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1174,"endOffset":1973,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1630,"endOffset":1842,"count":3}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":2333,"endOffset":2478,"count":2}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":2482,"endOffset":4816,"count":2},{"startOffset":2932,"endOffset":3109,"count":0},{"startOffset":3166,"endOffset":4569,"count":0},{"startOffset":4616,"endOffset":4812,"count":5}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":2581,"endOffset":2831,"count":5},{"startOffset":2642,"endOffset":2667,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":4820,"endOffset":5016,"count":2}],"isBlockCoverage":true}]},{"scriptId":"88","url":"internal/modules/esm/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28039,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":1636,"endOffset":1988,"count":3},{"startOffset":1745,"endOffset":1953,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":2099,"endOffset":2204,"count":11},{"startOffset":2167,"endOffset":2202,"count":6}],"isBlockCoverage":true},{"functionName":"removePackageJsonFromPath","ranges":[{"startOffset":2250,"endOffset":2352,"count":8}],"isBlockCoverage":true},{"functionName":"getPackageConfig","ranges":[{"startOffset":2354,"endOffset":3644,"count":17},{"startOffset":2465,"endOffset":2491,"count":10},{"startOffset":2491,"endOffset":2574,"count":7},{"startOffset":2574,"endOffset":2849,"count":4},{"startOffset":2849,"endOffset":2919,"count":3},{"startOffset":2919,"endOffset":3067,"count":0},{"startOffset":3067,"endOffset":3189,"count":3},{"startOffset":3189,"endOffset":3208,"count":0},{"startOffset":3210,"endOffset":3263,"count":3},{"startOffset":3263,"endOffset":3280,"count":1},{"startOffset":3280,"endOffset":3313,"count":3},{"startOffset":3313,"endOffset":3330,"count":0},{"startOffset":3330,"endOffset":3408,"count":3},{"startOffset":3408,"endOffset":3430,"count":2},{"startOffset":3432,"endOffset":3446,"count":2},{"startOffset":3446,"endOffset":3643,"count":3}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":3646,"endOffset":4705,"count":5},{"startOffset":3770,"endOffset":4376,"count":15},{"startOffset":3910,"endOffset":3916,"count":0},{"startOffset":4028,"endOffset":4049,"count":5},{"startOffset":4049,"endOffset":4366,"count":10},{"startOffset":4366,"endOffset":4372,"count":0},{"startOffset":4376,"endOffset":4704,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":4961,"endOffset":5040,"count":2}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5042,"endOffset":6622,"count":2},{"startOffset":5155,"endOffset":6301,"count":1},{"startOffset":5375,"endOffset":6277,"count":0},{"startOffset":6301,"endOffset":6390,"count":1},{"startOffset":6390,"endOffset":6621,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":6624,"endOffset":6755,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":6811,"endOffset":7068,"count":0}],"isBlockCoverage":false},{"functionName":"resolveIndex","ranges":[{"startOffset":7070,"endOffset":7157,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":7195,"endOffset":8363,"count":1},{"startOffset":7313,"endOffset":7736,"count":0},{"startOffset":7805,"endOffset":7948,"count":0},{"startOffset":8053,"endOffset":8208,"count":0},{"startOffset":8235,"endOffset":8341,"count":0}],"isBlockCoverage":true},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":8365,"endOffset":8580,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":8582,"endOffset":8769,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":8771,"endOffset":9116,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":9118,"endOffset":9492,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":9494,"endOffset":10965,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":11020,"endOffset":11160,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":11162,"endOffset":13353,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":13355,"endOffset":14284,"count":0}],"isBlockCoverage":false},{"functionName":"packageMainResolve","ranges":[{"startOffset":14286,"endOffset":15859,"count":2},{"startOffset":14469,"endOffset":15371,"count":0},{"startOffset":15446,"endOffset":15686,"count":0},{"startOffset":15751,"endOffset":15858,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":16044,"endOffset":17562,"count":0}],"isBlockCoverage":false},{"functionName":"packageInternalResolve","ranges":[{"startOffset":17564,"endOffset":19160,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":19162,"endOffset":19280,"count":3}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":19393,"endOffset":22472,"count":2},{"startOffset":19594,"endOffset":19822,"count":1},{"startOffset":19674,"endOffset":19713,"count":0},{"startOffset":19884,"endOffset":19936,"count":0},{"startOffset":20079,"endOffset":20196,"count":14},{"startOffset":20140,"endOffset":20192,"count":0},{"startOffset":20223,"endOffset":20342,"count":0},{"startOffset":20400,"endOffset":20455,"count":0},{"startOffset":20674,"endOffset":20720,"count":0},{"startOffset":20722,"endOffset":21090,"count":0},{"startOffset":21265,"endOffset":22263,"count":8},{"startOffset":21370,"endOffset":21647,"count":6},{"startOffset":21447,"endOffset":21484,"count":3},{"startOffset":21485,"endOffset":21511,"count":3},{"startOffset":21647,"endOffset":21771,"count":2},{"startOffset":21771,"endOffset":21822,"count":0},{"startOffset":21822,"endOffset":22140,"count":2},{"startOffset":21976,"endOffset":22140,"count":0},{"startOffset":22140,"endOffset":22263,"count":0},{"startOffset":22263,"endOffset":22471,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":22474,"endOffset":22584,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":22586,"endOffset":22857,"count":3},{"startOffset":22656,"endOffset":22839,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":22859,"endOffset":23042,"count":3},{"startOffset":22945,"endOffset":22958,"count":0},{"startOffset":22987,"endOffset":22999,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":23155,"endOffset":23717,"count":3},{"startOffset":23383,"endOffset":23429,"count":0},{"startOffset":23461,"endOffset":23534,"count":0},{"startOffset":23595,"endOffset":23666,"count":2},{"startOffset":23670,"endOffset":23716,"count":1}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":23863,"endOffset":25271,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":25273,"endOffset":27913,"count":5},{"startOffset":25481,"endOffset":25535,"count":1},{"startOffset":25540,"endOffset":25548,"count":3},{"startOffset":25548,"endOffset":25562,"count":4},{"startOffset":25562,"endOffset":25594,"count":1},{"startOffset":25600,"endOffset":25626,"count":0},{"startOffset":25626,"endOffset":25640,"count":4},{"startOffset":25640,"endOffset":25670,"count":1},{"startOffset":25671,"endOffset":25701,"count":0},{"startOffset":25707,"endOffset":25750,"count":0},{"startOffset":25750,"endOffset":25803,"count":4},{"startOffset":25803,"endOffset":25861,"count":1},{"startOffset":25861,"endOffset":25926,"count":3},{"startOffset":25928,"endOffset":26016,"count":0},{"startOffset":26016,"endOffset":26074,"count":3},{"startOffset":26074,"endOffset":26601,"count":0},{"startOffset":26601,"endOffset":26730,"count":3},{"startOffset":26730,"endOffset":27534,"count":0},{"startOffset":27534,"endOffset":27549,"count":3},{"startOffset":27549,"endOffset":27572,"count":0},{"startOffset":27573,"endOffset":27592,"count":3},{"startOffset":27594,"endOffset":27882,"count":3},{"startOffset":27811,"endOffset":27816,"count":0},{"startOffset":27882,"endOffset":27912,"count":3}],"isBlockCoverage":true}]},{"scriptId":"89","url":"internal/modules/esm/get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2437,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":1105,"endOffset":2391,"count":5},{"startOffset":1220,"endOffset":1259,"count":1},{"startOffset":1259,"endOffset":1326,"count":4},{"startOffset":1326,"endOffset":1701,"count":1},{"startOffset":1413,"endOffset":1436,"count":0},{"startOffset":1570,"endOffset":1578,"count":0},{"startOffset":1637,"endOffset":1645,"count":0},{"startOffset":1666,"endOffset":1673,"count":0},{"startOffset":1701,"endOffset":2362,"count":3},{"startOffset":1881,"endOffset":1891,"count":1},{"startOffset":1892,"endOffset":1904,"count":2},{"startOffset":1911,"endOffset":1964,"count":0},{"startOffset":1982,"endOffset":2319,"count":0},{"startOffset":2348,"endOffset":2355,"count":0},{"startOffset":2362,"endOffset":2390,"count":0}],"isBlockCoverage":true}]},{"scriptId":"90","url":"internal/modules/esm/get_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1212,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetSource","ranges":[{"startOffset":545,"endOffset":1166,"count":2},{"startOffset":699,"endOffset":1075,"count":1},{"startOffset":861,"endOffset":906,"count":0},{"startOffset":983,"endOffset":993,"count":0},{"startOffset":1008,"endOffset":1075,"count":0},{"startOffset":1092,"endOffset":1143,"count":0}],"isBlockCoverage":true}]},{"scriptId":"91","url":"internal/modules/esm/transform_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":false},{"functionName":"defaultTransformSource","ranges":[{"startOffset":15,"endOffset":157,"count":2}],"isBlockCoverage":true}]},{"scriptId":"92","url":"internal/modules/esm/translators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8550,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":192,"endOffset":304,"count":4},{"startOffset":238,"endOffset":252,"count":3},{"startOffset":252,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":865,"endOffset":890,"count":1}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":1478,"endOffset":1898,"count":4},{"startOffset":1555,"endOffset":1582,"count":2},{"startOffset":1584,"endOffset":1601,"count":0},{"startOffset":1695,"endOffset":1720,"count":0},{"startOffset":1739,"endOffset":1818,"count":0},{"startOffset":1819,"endOffset":1823,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":1900,"endOffset":2118,"count":2},{"startOffset":1959,"endOffset":1971,"count":0},{"startOffset":2055,"endOffset":2074,"count":1},{"startOffset":2075,"endOffset":2084,"count":1}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2120,"endOffset":2265,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2282,"endOffset":2477,"count":0}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":2479,"endOffset":2914,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":2916,"endOffset":3086,"count":1},{"startOffset":3022,"endOffset":3066,"count":0}],"isBlockCoverage":true},{"functionName":"moduleStrategy","ranges":[{"startOffset":3167,"endOffset":3748,"count":2}],"isBlockCoverage":true},{"functionName":"commonjsStrategy","ranges":[{"startOffset":3908,"endOffset":4818,"count":2},{"startOffset":4111,"endOffset":4166,"count":0},{"startOffset":4216,"endOffset":4269,"count":0},{"startOffset":4299,"endOffset":4315,"count":0},{"startOffset":4317,"endOffset":4476,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4410,"endOffset":4470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4530,"endOffset":4814,"count":2}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":4944,"endOffset":5303,"count":1},{"startOffset":5177,"endOffset":5228,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":5367,"endOffset":7466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7532,"endOffset":8547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"internal/modules/esm/create_dynamic_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1748,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":186,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":215,"endOffset":405,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":407,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":638,"endOffset":1707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"94","url":"internal/vm/module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12638,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1526,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3716,"endOffset":3853,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3857,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":3994,"endOffset":4271,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4275,"endOffset":4428,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4432,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4686,"endOffset":5165,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5169,"endOffset":6121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6125,"endOffset":6853,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7000,"endOffset":7036,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":7041,"endOffset":9365,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9369,"endOffset":9668,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9672,"endOffset":9941,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":9945,"endOffset":10141,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":10145,"endOffset":10407,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10452,"endOffset":11704,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11708,"endOffset":12010,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":12014,"endOffset":12476,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12598,"endOffset":12633,"count":3}],"isBlockCoverage":true}]},{"scriptId":"95","url":"internal/modules/run_main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2579,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":220,"endOffset":658,"count":1},{"startOffset":487,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":660,"endOffset":1212,"count":1},{"startOffset":784,"endOffset":796,"count":0},{"startOffset":941,"endOffset":953,"count":0},{"startOffset":1048,"endOffset":1060,"count":0},{"startOffset":1111,"endOffset":1124,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1214,"endOffset":1549,"count":0}],"isBlockCoverage":false},{"functionName":"handleMainPromise","ranges":[{"startOffset":1551,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2174,"endOffset":2509,"count":1},{"startOffset":2354,"endOffset":2397,"count":0}],"isBlockCoverage":true}]},{"scriptId":"96","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/subprocess.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8134,"count":1}],"isBlockCoverage":true},{"functionName":"supportsESM","ranges":[{"startOffset":247,"endOffset":415,"count":1},{"startOffset":389,"endOffset":414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":474,"endOffset":7905,"count":1},{"startOffset":1609,"endOffset":1802,"count":0},{"startOffset":6499,"endOffset":6504,"count":0},{"startOffset":6604,"endOffset":6641,"count":0},{"startOffset":6647,"endOffset":6655,"count":0},{"startOffset":6876,"endOffset":6911,"count":0},{"startOffset":6912,"endOffset":6947,"count":0},{"startOffset":6949,"endOffset":7423,"count":0},{"startOffset":7693,"endOffset":7759,"count":0},{"startOffset":7763,"endOffset":7903,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":1120,"endOffset":1326,"count":1}],"isBlockCoverage":true},{"functionName":"checkSelectedByLineNumbers","ranges":[{"startOffset":1787,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2293,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2456,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2650,"endOffset":2674,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2698,"endOffset":2833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2858,"endOffset":3817,"count":1},{"startOffset":2965,"endOffset":3011,"count":0},{"startOffset":3035,"endOffset":3101,"count":0},{"startOffset":3106,"endOffset":3260,"count":0},{"startOffset":3335,"endOffset":3500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3317,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3530,"endOffset":3812,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3574,"endOffset":3631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3646,"endOffset":3793,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3854,"endOffset":4049,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getRunner","ranges":[{"startOffset":4103,"endOffset":4155,"count":1}],"isBlockCoverage":true},{"functionName":"exports.registerSharedWorker","ranges":[{"startOffset":4190,"endOffset":4490,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4856,"endOffset":4887,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4896,"endOffset":4922,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5158,"endOffset":5520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5529,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5623,"endOffset":6446,"count":2},{"startOffset":5691,"endOffset":6293,"count":4},{"startOffset":5731,"endOffset":6289,"count":1},{"startOffset":6089,"endOffset":6289,"count":0},{"startOffset":6293,"endOffset":6331,"count":1},{"startOffset":6331,"endOffset":6417,"count":0},{"startOffset":6417,"endOffset":6445,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7913,"endOffset":8131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/currently-unhandled/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":62,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"98","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/currently-unhandled/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":82,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"onUnhandledRejection","ranges":[{"startOffset":129,"endOffset":244,"count":0}],"isBlockCoverage":false},{"functionName":"onRejectionHandled","ranges":[{"startOffset":247,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"currentlyUnhandled","ranges":[{"startOffset":436,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":501,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/array-find-index/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/ensure-forked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":596,"count":1},{"startOffset":226,"endOffset":595,"count":0}],"isBlockCoverage":true}]},{"scriptId":"101","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5948,"endOffset":5967,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":4},{"startOffset":477,"endOffset":558,"count":2},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":709,"endOffset":728,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":3}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":2}],"isBlockCoverage":true},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":4}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":33}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":33},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":33},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/chalk/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":30}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":5},{"startOffset":2869,"endOffset":3201,"count":15},{"startOffset":2929,"endOffset":3108,"count":220}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":719,"endOffset":805,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1125,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"os.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7480,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":1877,"endOffset":2118,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":1936,"endOffset":2114,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2396,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2429,"endOffset":2439,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2462,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2510,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":2563,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":2618,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":2671,"endOffset":2688,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":2724,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":2784,"endOffset":2808,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":2843,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":2895,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3003,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3105,"endOffset":3517,"count":1},{"startOffset":3207,"endOffset":3212,"count":0},{"startOffset":3274,"endOffset":3498,"count":8}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":3519,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":3588,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":3609,"endOffset":3659,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":3690,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":3715,"endOffset":4232,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":4261,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":4278,"endOffset":4325,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":4358,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":4463,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":4718,"endOffset":5432,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":5434,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":6113,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":6404,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":6661,"endOffset":6887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5028,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1611,"count":7}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1613,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2246,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2465,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3722,"endOffset":4150,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4206,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4383,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4565,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4746,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4921,"endOffset":4971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"internal/tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6292,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2451,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3061,"endOffset":5813,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":5815,"endOffset":6239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"108","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/ipc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4440,"count":1}],"isBlockCoverage":true},{"functionName":"selectAvaMessage","ranges":[{"startOffset":211,"endOffset":270,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":219,"endOffset":270,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":352,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":511,"endOffset":560,"count":32}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":598,"endOffset":665,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":667,"endOffset":750,"count":2}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":814,"endOffset":1131,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":882,"endOffset":1086,"count":1}],"isBlockCoverage":true},{"functionName":"createChannelEmitter","ranges":[{"startOffset":1241,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"registerSharedWorker","ranges":[{"startOffset":1868,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-event/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6049,"count":1},{"startOffset":103,"endOffset":123,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEmitter","ranges":[{"startOffset":151,"endOffset":543,"count":3},{"startOffset":196,"endOffset":218,"count":0},{"startOffset":219,"endOffset":246,"count":0},{"startOffset":284,"endOffset":309,"count":0},{"startOffset":310,"endOffset":340,"count":0},{"startOffset":381,"endOffset":437,"count":0}],"isBlockCoverage":true},{"functionName":"toArray","ranges":[{"startOffset":562,"endOffset":609,"count":3},{"startOffset":592,"endOffset":599,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":629,"endOffset":2137,"count":3},{"startOffset":2022,"endOffset":2121,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":698,"endOffset":1953,"count":3},{"startOffset":933,"endOffset":1013,"count":0},{"startOffset":1926,"endOffset":1950,"count":0}],"isBlockCoverage":true},{"functionName":"onItem","ranges":[{"startOffset":1181,"endOffset":1425,"count":4},{"startOffset":1231,"endOffset":1237,"count":0},{"startOffset":1299,"endOffset":1421,"count":2}],"isBlockCoverage":true},{"functionName":"rejectHandler","ranges":[{"startOffset":1452,"endOffset":1497,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":1511,"endOffset":1711,"count":2}],"isBlockCoverage":true},{"functionName":"pEvent","ranges":[{"startOffset":2155,"endOffset":2553,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2423,"endOffset":2440,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.iterator","ranges":[{"startOffset":2726,"endOffset":5993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-timeout/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1326,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":91,"endOffset":164,"count":0}],"isBlockCoverage":false},{"functionName":"pTimeout","ranges":[{"startOffset":185,"endOffset":1168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-finally/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/ipc-flow-control.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":851,"count":1}],"isBlockCoverage":true},{"functionName":"controlFlow","ranges":[{"startOffset":0,"endOffset":814,"count":1}],"isBlockCoverage":true},{"functionName":"deliverNext","ranges":[{"startOffset":129,"endOffset":601,"count":32},{"startOffset":162,"endOffset":186,"count":0},{"startOffset":225,"endOffset":298,"count":0},{"startOffset":352,"endOffset":445,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":612,"endOffset":811,"count":32},{"startOffset":662,"endOffset":678,"count":0},{"startOffset":771,"endOffset":808,"count":0}],"isBlockCoverage":true}]},{"scriptId":"114","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":48,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"exports.set","ranges":[{"startOffset":164,"endOffset":276,"count":1},{"startOffset":194,"endOffset":250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"115","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/chalk.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":77,"endOffset":172,"count":1},{"startOffset":96,"endOffset":156,"count":0}],"isBlockCoverage":true},{"functionName":"exports.set","ranges":[{"startOffset":189,"endOffset":324,"count":1},{"startOffset":212,"endOffset":272,"count":0}],"isBlockCoverage":true}]},{"scriptId":"116","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/now-and-timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true}]},{"scriptId":"117","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/provider-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1237,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":235,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"exports.babel","ranges":[{"startOffset":1119,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"exports.typescript","ranges":[{"startOffset":1186,"endOffset":1235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/globs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":526,"endOffset":554,"count":8}],"isBlockCoverage":true},{"functionName":"buildExtensionPattern","ranges":[{"startOffset":956,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePattern","ranges":[{"startOffset":1042,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePatterns","ranges":[{"startOffset":1419,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeGlobs","ranges":[{"startOffset":1569,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":3442,"endOffset":3512,"count":0}],"isBlockCoverage":false},{"functionName":"globFiles","ranges":[{"startOffset":3571,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"findFiles","ranges":[{"startOffset":4221,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"findTests","ranges":[{"startOffset":4409,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"getChokidarIgnorePatterns","ranges":[{"startOffset":4617,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"processMatchingPatterns","ranges":[{"startOffset":4968,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":5521,"endOffset":5630,"count":0}],"isBlockCoverage":false},{"functionName":"matchesIgnorePatterns","ranges":[{"startOffset":5690,"endOffset":5832,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFileForMatching","ranges":[{"startOffset":5835,"endOffset":6350,"count":0}],"isBlockCoverage":false},{"functionName":"isHelperish","ranges":[{"startOffset":6414,"endOffset":7035,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":7073,"endOffset":7416,"count":0}],"isBlockCoverage":false},{"functionName":"applyTestFileFilter","ranges":[{"startOffset":7448,"endOffset":7594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4450,"count":1}],"isBlockCoverage":true},{"functionName":"DEFAULT_FILTER","ranges":[{"startOffset":323,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":356,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":416,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"checkCwdOption","ranges":[{"startOffset":599,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"getPathString","ranges":[{"startOffset":862,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"generateGlobTasks","ranges":[{"startOffset":936,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"globDirs","ranges":[{"startOffset":1555,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"getPattern","ranges":[{"startOffset":1981,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterSync","ranges":[{"startOffset":2088,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"globToTask","ranges":[{"startOffset":2244,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2487,"endOffset":3215,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":3240,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.stream","ranges":[{"startOffset":3705,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.hasMagic","ranges":[{"startOffset":4302,"endOffset":4409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"internal/fs/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12971,"count":1}],"isBlockCoverage":false},{"functionName":"allocNewPool","ranges":[{"startOffset":1090,"endOffset":1254,"count":0}],"isBlockCoverage":false},{"functionName":"roundUpToMultipleOf8","ranges":[{"startOffset":1256,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1347,"endOffset":3434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3573,"endOffset":3608,"count":0}],"isBlockCoverage":false},{"functionName":"_openReadFs","ranges":[{"startOffset":3708,"endOffset":4189,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":4220,"endOffset":6712,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":6747,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"closeFsStream","ranges":[{"startOffset":7037,"endOffset":7193,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":7224,"endOffset":7310,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7371,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":7433,"endOffset":9683,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._final","ranges":[{"startOffset":9826,"endOffset":9983,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10016,"endOffset":10052,"count":0}],"isBlockCoverage":false},{"functionName":"_openWriteFs","ranges":[{"startOffset":10155,"endOffset":10588,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":10622,"endOffset":11290,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11326,"endOffset":12216,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12314,"endOffset":12696,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12859,"endOffset":12893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"internal/fs/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16427,"count":1}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":1832,"endOffset":1955,"count":0}],"isBlockCoverage":false},{"functionName":"getAsyncId","ranges":[{"startOffset":1959,"endOffset":2016,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":2020,"endOffset":2056,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":2060,"endOffset":2134,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":2138,"endOffset":2186,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":2190,"endOffset":2246,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":2250,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":2298,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2338,"endOffset":2439,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":2443,"endOffset":2516,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2520,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":2583,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":2639,"endOffset":2695,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":2699,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2769,"endOffset":2872,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":2876,"endOffset":2951,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":2955,"endOffset":3028,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3032,"endOffset":3105,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3109,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3314,"endOffset":3367,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3371,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"validateFileHandle","ranges":[{"startOffset":3462,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":3614,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":3965,"endOffset":4828,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":4981,"endOffset":5202,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":5204,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":5682,"endOffset":6007,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":6009,"endOffset":6761,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":6763,"endOffset":7113,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":7115,"endOffset":8067,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":8069,"endOffset":8431,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":8433,"endOffset":8739,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":8741,"endOffset":8876,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":8878,"endOffset":9067,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":9069,"endOffset":9332,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":9334,"endOffset":9453,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":9455,"endOffset":9566,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":9568,"endOffset":10100,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":10102,"endOffset":10554,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":10556,"endOffset":10799,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":10801,"endOffset":11214,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":11216,"endOffset":11424,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":11426,"endOffset":11696,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":11698,"endOffset":11965,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":11967,"endOffset":12290,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":12292,"endOffset":12430,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":12432,"endOffset":12595,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":12597,"endOffset":12783,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":12785,"endOffset":13006,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":13008,"endOffset":13250,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":13252,"endOffset":13445,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":13447,"endOffset":13686,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":13688,"endOffset":13960,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":13962,"endOffset":14191,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":14193,"endOffset":14470,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":14472,"endOffset":14649,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":14651,"endOffset":14981,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":14983,"endOffset":15479,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":15481,"endOffset":15722,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":15724,"endOffset":16028,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"internal/fs/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7030,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1122,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1585,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2446,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2884,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3185,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3860,"endOffset":4058,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4061,"endOffset":4766,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4769,"endOffset":5252,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5255,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6534,"endOffset":6970,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/array-union/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/merge2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3241,"count":1}],"isBlockCoverage":true},{"functionName":"merge2","ranges":[{"startOffset":280,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":2702,"endOffset":3240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2824,"count":1},{"startOffset":2151,"endOffset":2169,"count":0}],"isBlockCoverage":true},{"functionName":"FastGlob","ranges":[{"startOffset":284,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":627,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":654,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":874,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":1411,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1710,"endOffset":1924,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":1981,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":2173,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":2477,"endOffset":2794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/managers/tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3216,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":359,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":1071,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":1668,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":1822,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":2137,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":2607,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":2890,"endOffset":3150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1}],"isBlockCoverage":true}]},{"scriptId":"128","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":630,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":126,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"splitWhen","ranges":[{"startOffset":265,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/errno.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":241,"count":1}],"isBlockCoverage":true},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":116,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":149,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":623,"endOffset":717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1321,"count":1}],"isBlockCoverage":true},{"functionName":"unixify","ranges":[{"startOffset":415,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":518,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":640,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":761,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5511,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":1089,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1236,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":2383,"endOffset":2499,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":2563,"endOffset":2637,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":2701,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"isPositivePattern","ranges":[{"startOffset":2850,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatterns","ranges":[{"startOffset":2981,"endOffset":3072,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":3126,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectory","ranges":[{"startOffset":3271,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobStar","ranges":[{"startOffset":3419,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":3531,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":3679,"endOffset":3850,"count":0}],"isBlockCoverage":false},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":3924,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":4194,"endOffset":4333,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternParts","ranges":[{"startOffset":4389,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":5085,"endOffset":5172,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":5200,"endOffset":5317,"count":0}],"isBlockCoverage":false},{"functionName":"matchAny","ranges":[{"startOffset":5371,"endOffset":5479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1106,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":447,"endOffset":1104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1153,"count":1}],"isBlockCoverage":true},{"functionName":"isGlob","ranges":[{"startOffset":405,"endOffset":1151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13682,"count":1}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":187,"endOffset":249,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":807,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":2804,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":3457,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":4220,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":5371,"endOffset":5932,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":6710,"endOffset":6984,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":7742,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":8840,"endOffset":9096,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":9897,"endOffset":10105,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":10816,"endOffset":11112,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":11564,"endOffset":11602,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.scan","ranges":[{"startOffset":11951,"endOffset":11987,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.parse","ranges":[{"startOffset":12373,"endOffset":12593,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":13160,"endOffset":13397,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":13451,"endOffset":13620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8085,"count":1}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":2076,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":2140,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2189,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":2270,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2332,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2394,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":2456,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2515,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":2593,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":2698,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":2764,"endOffset":2883,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":2885,"endOffset":2944,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":3083,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3399,"endOffset":3552,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":4288,"endOffset":4904,"count":0}],"isBlockCoverage":false},{"functionName":"_extend","ranges":[{"startOffset":4906,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5242,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":5671,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7054,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":7631,"endOffset":7836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9377,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":16},{"startOffset":242,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":17},{"startOffset":1087,"endOffset":1365,"count":1},{"startOffset":1365,"endOffset":1400,"count":16},{"startOffset":1400,"endOffset":1414,"count":0},{"startOffset":1415,"endOffset":1428,"count":0},{"startOffset":1449,"endOffset":1490,"count":16},{"startOffset":1478,"endOffset":1489,"count":0},{"startOffset":1492,"endOffset":1567,"count":0},{"startOffset":1567,"endOffset":1597,"count":16},{"startOffset":1669,"endOffset":1705,"count":0},{"startOffset":1710,"endOffset":1756,"count":16},{"startOffset":1861,"endOffset":2015,"count":0},{"startOffset":2015,"endOffset":2783,"count":16},{"startOffset":2783,"endOffset":2815,"count":0},{"startOffset":2815,"endOffset":2835,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1114,"endOffset":1161,"count":16}],"isBlockCoverage":true},{"functionName":"arrayMatcher","ranges":[{"startOffset":1189,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":1829,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":2035,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7249,"endOffset":7765,"count":16},{"startOffset":7344,"endOffset":7375,"count":0},{"startOffset":7439,"endOffset":7443,"count":0},{"startOffset":7482,"endOffset":7486,"count":0},{"startOffset":7594,"endOffset":7633,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":7787,"endOffset":8538,"count":16},{"startOffset":7895,"endOffset":7956,"count":0},{"startOffset":8104,"endOffset":8172,"count":0},{"startOffset":8226,"endOffset":8245,"count":8},{"startOffset":8248,"endOffset":8299,"count":10},{"startOffset":8422,"endOffset":8461,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9000,"endOffset":9228,"count":16},{"startOffset":9120,"endOffset":9125,"count":0},{"startOffset":9138,"endOffset":9226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"150","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8955,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1438,"endOffset":8929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":42},{"startOffset":1010,"endOffset":1049,"count":0},{"startOffset":1051,"endOffset":1084,"count":0}],"isBlockCoverage":true},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":26},{"startOffset":1505,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":7},{"startOffset":1682,"endOffset":1686,"count":0},{"startOffset":1728,"endOffset":1732,"count":0},{"startOffset":1821,"endOffset":1864,"count":0}],"isBlockCoverage":true}]},{"scriptId":"152","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":16}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":26},{"startOffset":4410,"endOffset":4425,"count":0}],"isBlockCoverage":true}]},{"scriptId":"153","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27098,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":24549,"count":16},{"startOffset":1005,"endOffset":1056,"count":0},{"startOffset":1179,"endOffset":1217,"count":0},{"startOffset":1276,"endOffset":1372,"count":0},{"startOffset":1500,"endOffset":1504,"count":0},{"startOffset":2111,"endOffset":2115,"count":0},{"startOffset":2156,"endOffset":2163,"count":0},{"startOffset":2212,"endOffset":2228,"count":0},{"startOffset":2258,"endOffset":2287,"count":0},{"startOffset":2359,"endOffset":2397,"count":0},{"startOffset":6228,"endOffset":7451,"count":7},{"startOffset":7025,"endOffset":7258,"count":0},{"startOffset":7285,"endOffset":7310,"count":3},{"startOffset":7312,"endOffset":7367,"count":0},{"startOffset":7451,"endOffset":7532,"count":9},{"startOffset":7532,"endOffset":23426,"count":49},{"startOffset":7586,"endOffset":7609,"count":0},{"startOffset":7678,"endOffset":8506,"count":0},{"startOffset":8652,"endOffset":8715,"count":0},{"startOffset":8717,"endOffset":9849,"count":0},{"startOffset":9992,"endOffset":10008,"count":0},{"startOffset":10010,"endOffset":10125,"count":0},{"startOffset":10188,"endOffset":10345,"count":0},{"startOffset":10406,"endOffset":10494,"count":0},{"startOffset":10519,"endOffset":10954,"count":0},{"startOffset":11019,"endOffset":11378,"count":0},{"startOffset":11403,"endOffset":12858,"count":0},{"startOffset":12913,"endOffset":12937,"count":0},{"startOffset":12939,"endOffset":13206,"count":0},{"startOffset":13231,"endOffset":14361,"count":0},{"startOffset":14416,"endOffset":14569,"count":0},{"startOffset":14625,"endOffset":14886,"count":0},{"startOffset":14943,"endOffset":15553,"count":8},{"startOffset":15234,"endOffset":15268,"count":0},{"startOffset":15270,"endOffset":15469,"count":0},{"startOffset":15553,"endOffset":15607,"count":41},{"startOffset":15607,"endOffset":16173,"count":4},{"startOffset":15636,"endOffset":15658,"count":0},{"startOffset":15660,"endOffset":15909,"count":0},{"startOffset":15980,"endOffset":16004,"count":0},{"startOffset":16006,"endOffset":16093,"count":0},{"startOffset":16173,"endOffset":16237,"count":37},{"startOffset":16237,"endOffset":17174,"count":0},{"startOffset":17174,"endOffset":17235,"count":37},{"startOffset":17235,"endOffset":17535,"count":0},{"startOffset":17535,"endOffset":17589,"count":37},{"startOffset":17589,"endOffset":18139,"count":0},{"startOffset":18139,"endOffset":18199,"count":37},{"startOffset":18199,"endOffset":18424,"count":0},{"startOffset":18424,"endOffset":18484,"count":37},{"startOffset":18484,"endOffset":18785,"count":9},{"startOffset":18528,"endOffset":18567,"count":0},{"startOffset":18785,"endOffset":18881,"count":28},{"startOffset":18883,"endOffset":19090,"count":0},{"startOffset":19090,"endOffset":19175,"count":28},{"startOffset":19177,"endOffset":19234,"count":0},{"startOffset":19234,"endOffset":19266,"count":28},{"startOffset":19266,"endOffset":22465,"count":10},{"startOffset":19304,"endOffset":19355,"count":0},{"startOffset":19466,"endOffset":19489,"count":2},{"startOffset":19522,"endOffset":19579,"count":8},{"startOffset":19611,"endOffset":19656,"count":0},{"startOffset":19658,"endOffset":19736,"count":0},{"startOffset":19777,"endOffset":19830,"count":0},{"startOffset":19872,"endOffset":19924,"count":0},{"startOffset":19945,"endOffset":19970,"count":0},{"startOffset":19971,"endOffset":19982,"count":0},{"startOffset":19983,"endOffset":19996,"count":0},{"startOffset":19998,"endOffset":20076,"count":0},{"startOffset":20153,"endOffset":20330,"count":0},{"startOffset":20363,"endOffset":20371,"count":2},{"startOffset":20373,"endOffset":20590,"count":0},{"startOffset":20625,"endOffset":20653,"count":8},{"startOffset":20654,"endOffset":20667,"count":8},{"startOffset":20668,"endOffset":20676,"count":8},{"startOffset":20678,"endOffset":21078,"count":0},{"startOffset":21113,"endOffset":21141,"count":8},{"startOffset":21142,"endOffset":21160,"count":8},{"startOffset":21162,"endOffset":21695,"count":8},{"startOffset":21210,"endOffset":21214,"count":0},{"startOffset":21695,"endOffset":21746,"count":2},{"startOffset":21748,"endOffset":22078,"count":2},{"startOffset":22078,"endOffset":22465,"count":0},{"startOffset":22465,"endOffset":22553,"count":18},{"startOffset":22553,"endOffset":22734,"count":0},{"startOffset":22734,"endOffset":22802,"count":18},{"startOffset":22803,"endOffset":22825,"count":0},{"startOffset":22827,"endOffset":22897,"count":0},{"startOffset":22897,"endOffset":22935,"count":18},{"startOffset":22935,"endOffset":22959,"count":16},{"startOffset":22960,"endOffset":22982,"count":0},{"startOffset":22984,"endOffset":23404,"count":18},{"startOffset":23017,"endOffset":23102,"count":0},{"startOffset":23131,"endOffset":23218,"count":0},{"startOffset":23322,"endOffset":23398,"count":8},{"startOffset":23404,"endOffset":23426,"count":18},{"startOffset":23426,"endOffset":23457,"count":9},{"startOffset":23457,"endOffset":23635,"count":0},{"startOffset":23635,"endOffset":23664,"count":9},{"startOffset":23664,"endOffset":23840,"count":0},{"startOffset":23840,"endOffset":23869,"count":9},{"startOffset":23869,"endOffset":24045,"count":0},{"startOffset":24045,"endOffset":24133,"count":9},{"startOffset":24106,"endOffset":24132,"count":1},{"startOffset":24135,"endOffset":24215,"count":8},{"startOffset":24215,"endOffset":24309,"count":9},{"startOffset":24309,"endOffset":24530,"count":0},{"startOffset":24530,"endOffset":24548,"count":9}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":1977,"endOffset":2083,"count":10},{"startOffset":2044,"endOffset":2056,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":2891,"endOffset":2920,"count":68}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":2950,"endOffset":2983,"count":18}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":3019,"endOffset":3045,"count":59}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":3067,"endOffset":3101,"count":37}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":3121,"endOffset":3204,"count":67}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":3223,"endOffset":3334,"count":57},{"startOffset":3275,"endOffset":3289,"count":48},{"startOffset":3290,"endOffset":3303,"count":9}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":3354,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":3653,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":3730,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":4104,"endOffset":5060,"count":57},{"startOffset":4147,"endOffset":4639,"count":10},{"startOffset":4188,"endOffset":4237,"count":0},{"startOffset":4304,"endOffset":4352,"count":0},{"startOffset":4387,"endOffset":4410,"count":0},{"startOffset":4411,"endOffset":4422,"count":0},{"startOffset":4423,"endOffset":4436,"count":0},{"startOffset":4438,"endOffset":4633,"count":0},{"startOffset":4665,"endOffset":4688,"count":0},{"startOffset":4689,"endOffset":4717,"count":0},{"startOffset":4719,"endOffset":4782,"count":0},{"startOffset":4802,"endOffset":4815,"count":8},{"startOffset":4867,"endOffset":4889,"count":8},{"startOffset":4891,"endOffset":4996,"count":0}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":5085,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":5542,"endOffset":6126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6320,"endOffset":6991,"count":5},{"startOffset":6387,"endOffset":6442,"count":0},{"startOffset":6469,"endOffset":6730,"count":0},{"startOffset":6757,"endOffset":6815,"count":4},{"startOffset":6815,"endOffset":6842,"count":1},{"startOffset":6842,"endOffset":6952,"count":0},{"startOffset":6952,"endOffset":6970,"count":1},{"startOffset":6970,"endOffset":6973,"count":0},{"startOffset":6974,"endOffset":6984,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7162,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":24772,"endOffset":27071,"count":10},{"startOffset":24874,"endOffset":24912,"count":0},{"startOffset":24972,"endOffset":25068,"count":0},{"startOffset":25422,"endOffset":25431,"count":0},{"startOffset":25470,"endOffset":25485,"count":0},{"startOffset":25527,"endOffset":25531,"count":0},{"startOffset":25620,"endOffset":25627,"count":0},{"startOffset":25657,"endOffset":25686,"count":0},{"startOffset":26979,"endOffset":27009,"count":0},{"startOffset":27011,"endOffset":27051,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":25707,"endOffset":25860,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":25880,"endOffset":26880,"count":13},{"startOffset":25914,"endOffset":25968,"count":0},{"startOffset":25976,"endOffset":26037,"count":0},{"startOffset":26045,"endOffset":26122,"count":0},{"startOffset":26130,"endOffset":26220,"count":0},{"startOffset":26228,"endOffset":26277,"count":0},{"startOffset":26285,"endOffset":26391,"count":0},{"startOffset":26399,"endOffset":26528,"count":0},{"startOffset":26536,"endOffset":26646,"count":0},{"startOffset":26735,"endOffset":26742,"count":10},{"startOffset":26742,"endOffset":26813,"count":3},{"startOffset":26813,"endOffset":26870,"count":0}],"isBlockCoverage":true}]},{"scriptId":"154","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":139,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":537,"endOffset":644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":309,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":125,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":225,"endOffset":279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1041,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderAsync","ranges":[{"startOffset":224,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":344,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":811,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/readers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1925,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderStream","ranges":[{"startOffset":296,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":436,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":528,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":1311,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1630,"endOffset":1887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":312,"endOffset":597,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":621,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":793,"endOffset":999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1140,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":103,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":984,"endOffset":1056,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":1058,"endOffset":1138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":103,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":139,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":574,"endOffset":678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":315,"endOffset":537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1414,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":386,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":738,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":968,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":1206,"endOffset":1412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":152,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":371,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":778,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":852,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3203,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":326,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":843,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"get isDestroyed","ranges":[{"startOffset":1080,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1147,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":1353,"endOffset":1425,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1431,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":1511,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":1587,"endOffset":1829,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":1835,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":2224,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":2487,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":3095,"endOffset":3166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1025,"count":1}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":318,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":636,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":817,"endOffset":1023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3617,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":354,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":633,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":1618,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":2214,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":3461,"endOffset":3533,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":3535,"endOffset":3615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/run-parallel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":985,"count":1}],"isBlockCoverage":true},{"functionName":"runParallel","ranges":[{"startOffset":116,"endOffset":984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":764,"count":1},{"startOffset":563,"endOffset":606,"count":0},{"startOffset":729,"endOffset":761,"count":0}],"isBlockCoverage":true}]},{"scriptId":"170","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":148,"count":1}],"isBlockCoverage":true}]},{"scriptId":"171","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":149,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":623,"endOffset":717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/providers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":432,"count":1}],"isBlockCoverage":true},{"functionName":"joinPathSegments","ranges":[{"startOffset":115,"endOffset":384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2044,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":316,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":565,"endOffset":1392,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":1448,"endOffset":2014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1100,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":215,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":962,"endOffset":1066,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":375,"endOffset":597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fastq/queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3917,"count":1}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":48,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3364,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":3385,"endOffset":3888,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/reusify/reusify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"reusify","ranges":[{"startOffset":14,"endOffset":427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1083,"count":1}],"isBlockCoverage":true},{"functionName":"isFatalError","ranges":[{"startOffset":202,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":398,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":534,"endOffset":649,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":719,"endOffset":1035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":369,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":136,"endOffset":337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1055,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":190,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":654,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true},{"functionName":"SyncProvider","ranges":[{"startOffset":149,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":331,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"SyncReader","ranges":[{"startOffset":255,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":431,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":583,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":674,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":829,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1175,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":1323,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":1847,"endOffset":1912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1260,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":183,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":1122,"endOffset":1226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":211,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":537,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":639,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":946,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":true},{"functionName":"Provider","ranges":[{"startOffset":315,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"_getRootDirectory","ranges":[{"startOffset":712,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"_getReaderOptions","ranges":[{"startOffset":811,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":1593,"endOffset":2014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/filters/deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2528,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter","ranges":[{"startOffset":193,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":342,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"_getMatcher","ranges":[{"startOffset":595,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":721,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":982,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":1483,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryLevel","ranges":[{"startOffset":1802,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":2099,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":2229,"endOffset":2362,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":2368,"endOffset":2492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/matchers/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1459,"count":1}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":174,"endOffset":1419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/matchers/matcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1930,"count":1}],"isBlockCoverage":true},{"functionName":"Matcher","ranges":[{"startOffset":139,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_fillStorage","ranges":[{"startOffset":395,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"_getPatternSegments","ranges":[{"startOffset":1118,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":1727,"endOffset":1897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/filters/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2295,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":143,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":325,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":637,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":1379,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"_createIndexRecord","ranges":[{"startOffset":1462,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":1550,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":1655,"endOffset":1770,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":1776,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":2073,"endOffset":2258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/filters/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"ErrorFilter","ranges":[{"startOffset":143,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":217,"endOffset":294,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":300,"endOffset":419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/transformers/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"EntryTransformer","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformer","ranges":[{"startOffset":222,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":304,"endOffset":829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderStream","ranges":[{"startOffset":262,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":382,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":998,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderSync","ranges":[{"startOffset":219,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":337,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":573,"endOffset":764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync","ranges":[{"startOffset":257,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":401,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":491,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":909,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1246,"endOffset":1337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2573,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":443,"endOffset":2299,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":2305,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":2399,"endOffset":2539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/dir-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2304,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":106,"endOffset":187,"count":0}],"isBlockCoverage":false},{"functionName":"getPath","ranges":[{"startOffset":206,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"addExtensions","ranges":[{"startOffset":376,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"getGlob","ranges":[{"startOffset":525,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1344,"endOffset":1852,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1877,"endOffset":2302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1176,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":78,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeSync","ranges":[{"startOffset":446,"endOffset":770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/gitignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2589,"count":1}],"isBlockCoverage":true},{"functionName":"mapGitIgnorePatternTo","ranges":[{"startOffset":392,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"parseGitIgnore","ranges":[{"startOffset":568,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"reduceIgnore","ranges":[{"startOffset":830,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"ensureAbsolutePathForCwd","ranges":[{"startOffset":1053,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"getIsIgnoredPredecate","ranges":[{"startOffset":1276,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"getFile","ranges":[{"startOffset":1407,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"getFileSync","ranges":[{"startOffset":1590,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":1772,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1874,"endOffset":2229,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2254,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ignore/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15352,"count":1},{"startOffset":591,"endOffset":606,"count":0},{"startOffset":14909,"endOffset":15351,"count":0}],"isBlockCoverage":true},{"functionName":"makeArray","ranges":[{"startOffset":41,"endOffset":135,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":623,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeRange","ranges":[{"startOffset":866,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRangeBackSlash","ranges":[{"startOffset":1188,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2097,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2214,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2880,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2989,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3253,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3353,"endOffset":3364,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3785,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"startingReplacer","ranges":[{"startOffset":4026,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5218,"endOffset":5688,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5961,"endOffset":5986,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6180,"endOffset":6192,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6242,"endOffset":6254,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6447,"endOffset":6932,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":7495,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"REPLACERS","ranges":[{"startOffset":7704,"endOffset":8038,"count":0}],"isBlockCoverage":false},{"functionName":"makeRegex","ranges":[{"startOffset":8201,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":8632,"endOffset":8670,"count":0}],"isBlockCoverage":false},{"functionName":"checkPattern","ranges":[{"startOffset":8777,"endOffset":8944,"count":0}],"isBlockCoverage":false},{"functionName":"splitPattern","ranges":[{"startOffset":8967,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"IgnoreRule","ranges":[{"startOffset":9035,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"createRule","ranges":[{"startOffset":9234,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":9995,"endOffset":10043,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":10063,"endOffset":10599,"count":0}],"isBlockCoverage":false},{"functionName":"isNotRelative","ranges":[{"startOffset":10623,"endOffset":10665,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.convert","ranges":[{"startOffset":10727,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"Ignore","ranges":[{"startOffset":10752,"endOffset":10916,"count":0}],"isBlockCoverage":false},{"functionName":"_initCache","ranges":[{"startOffset":10920,"endOffset":11025,"count":0}],"isBlockCoverage":false},{"functionName":"_addPattern","ranges":[{"startOffset":11029,"endOffset":11359,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11417,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"addPattern","ranges":[{"startOffset":11760,"endOffset":11815,"count":0}],"isBlockCoverage":false},{"functionName":"_testOne","ranges":[{"startOffset":12409,"endOffset":12916,"count":0}],"isBlockCoverage":false},{"functionName":"_test","ranges":[{"startOffset":12947,"endOffset":13211,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":13215,"endOffset":14001,"count":0}],"isBlockCoverage":false},{"functionName":"ignores","ranges":[{"startOffset":14005,"endOffset":14087,"count":0}],"isBlockCoverage":false},{"functionName":"createFilter","ranges":[{"startOffset":14091,"endOffset":14151,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":14155,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":14262,"endOffset":14330,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":14350,"endOffset":14380,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":14402,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"isPathValid","ranges":[{"startOffset":14435,"endOffset":14506,"count":0}],"isBlockCoverage":false},{"functionName":"makePosix","ranges":[{"startOffset":14970,"endOffset":15077,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.isNotRelative","ranges":[{"startOffset":15269,"endOffset":15349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/stream-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectTransform","ranges":[{"startOffset":97,"endOffset":151,"count":0}],"isBlockCoverage":false},{"functionName":"FilterStream","ranges":[{"startOffset":201,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":264,"endOffset":372,"count":0}],"isBlockCoverage":false},{"functionName":"UniqueStream","ranges":[{"startOffset":422,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":482,"endOffset":622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ignore-by-default/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":725,"count":1}],"isBlockCoverage":true},{"functionName":"exports.directories","ranges":[{"startOffset":36,"endOffset":724,"count":1}],"isBlockCoverage":true}]},{"scriptId":"203","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"204","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15145,"count":1}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":410,"endOffset":5320,"count":1},{"startOffset":491,"endOffset":496,"count":0},{"startOffset":744,"endOffset":749,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.registerUniqueTitle","ranges":[{"startOffset":1590,"endOffset":1714,"count":7},{"startOffset":1637,"endOffset":1661,"count":0}],"isBlockCoverage":true},{"functionName":"get snapshotDirectory","ranges":[{"startOffset":1830,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.chain.createChain.serial","ranges":[{"startOffset":2046,"endOffset":5105,"count":8},{"startOffset":2125,"endOffset":2275,"count":0},{"startOffset":2301,"endOffset":2414,"count":1},{"startOffset":2586,"endOffset":2651,"count":0},{"startOffset":2675,"endOffset":3490,"count":0},{"startOffset":3536,"endOffset":3655,"count":0},{"startOffset":3797,"endOffset":3808,"count":7},{"startOffset":3810,"endOffset":3883,"count":0},{"startOffset":3903,"endOffset":4150,"count":1},{"startOffset":3941,"endOffset":4005,"count":0},{"startOffset":4032,"endOffset":4088,"count":0},{"startOffset":4186,"endOffset":4221,"count":7},{"startOffset":4223,"endOffset":4288,"count":0},{"startOffset":4431,"endOffset":4973,"count":7},{"startOffset":4466,"endOffset":4587,"count":0},{"startOffset":4622,"endOffset":4665,"count":0},{"startOffset":4702,"endOffset":4748,"count":0},{"startOffset":4783,"endOffset":4793,"count":0},{"startOffset":4973,"endOffset":5090,"count":1},{"startOffset":5054,"endOffset":5064,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2351,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"compareTestSnapshot","ranges":[{"startOffset":5323,"endOffset":5755,"count":0}],"isBlockCoverage":false},{"functionName":"saveSnapshotState","ranges":[{"startOffset":5758,"endOffset":6228,"count":1},{"startOffset":5807,"endOffset":5855,"count":0},{"startOffset":5857,"endOffset":5892,"count":0},{"startOffset":5916,"endOffset":5970,"count":0},{"startOffset":6000,"endOffset":6211,"count":0}],"isBlockCoverage":true},{"functionName":"onRun","ranges":[{"startOffset":6231,"endOffset":6289,"count":14}],"isBlockCoverage":true},{"functionName":"onRunComplete","ranges":[{"startOffset":6292,"endOffset":6361,"count":14}],"isBlockCoverage":true},{"functionName":"attributeLeakedError","ranges":[{"startOffset":6364,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"beforeExitHandler","ranges":[{"startOffset":6534,"endOffset":6648,"count":0}],"isBlockCoverage":false},{"functionName":"runMultiple","ranges":[{"startOffset":6651,"endOffset":7908,"count":24}],"isBlockCoverage":true},{"functionName":"runAndStoreResult","ranges":[{"startOffset":6762,"endOffset":6920,"count":7},{"startOffset":6855,"endOffset":6884,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6989,"endOffset":7850,"count":7},{"startOffset":7104,"endOffset":7391,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7140,"endOffset":7358,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7454,"endOffset":7838,"count":7},{"startOffset":7772,"endOffset":7799,"count":0}],"isBlockCoverage":true},{"functionName":"runSingle","ranges":[{"startOffset":7911,"endOffset":8182,"count":14}],"isBlockCoverage":true},{"functionName":"runHooks","ranges":[{"startOffset":8185,"endOffset":9340,"count":24},{"startOffset":8906,"endOffset":9308,"count":7},{"startOffset":9084,"endOffset":9304,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8300,"endOffset":8795,"count":7},{"startOffset":8461,"endOffset":8526,"count":0},{"startOffset":8751,"endOffset":8756,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":8467,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"runTest","ranges":[{"startOffset":9343,"endOffset":11263,"count":7},{"startOffset":9884,"endOffset":9950,"count":0},{"startOffset":10685,"endOffset":11015,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":9891,"endOffset":9950,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":11266,"endOffset":15070,"count":1},{"startOffset":11378,"endOffset":11796,"count":0},{"startOffset":11842,"endOffset":12336,"count":7},{"startOffset":11873,"endOffset":11900,"count":0},{"startOffset":11902,"endOffset":11922,"count":0},{"startOffset":11963,"endOffset":11989,"count":0},{"startOffset":11991,"endOffset":12011,"count":0},{"startOffset":12245,"endOffset":12281,"count":0},{"startOffset":12376,"endOffset":12694,"count":0},{"startOffset":12772,"endOffset":12799,"count":0},{"startOffset":12801,"endOffset":12897,"count":0},{"startOffset":15012,"endOffset":15067,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13124,"endOffset":13773,"count":1},{"startOffset":13267,"endOffset":13291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13322,"endOffset":13761,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13853,"endOffset":14523,"count":1},{"startOffset":14098,"endOffset":14114,"count":0},{"startOffset":14117,"endOffset":14141,"count":0},{"startOffset":14212,"endOffset":14235,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14416,"endOffset":14480,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14509,"endOffset":14517,"count":7}],"isBlockCoverage":true},{"functionName":"interrupt","ranges":[{"startOffset":15073,"endOffset":15116,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/emittery/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9705,"count":1}],"isBlockCoverage":true},{"functionName":"assertEventName","ranges":[{"startOffset":300,"endOffset":478,"count":37},{"startOffset":373,"endOffset":405,"count":4},{"startOffset":407,"endOffset":476,"count":0}],"isBlockCoverage":true},{"functionName":"assertListener","ranges":[{"startOffset":480,"endOffset":613,"count":4},{"startOffset":553,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"getListeners","ranges":[{"startOffset":615,"endOffset":804,"count":37},{"startOffset":730,"endOffset":770,"count":5}],"isBlockCoverage":true},{"functionName":"getEventProducers","ranges":[{"startOffset":806,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueProducers","ranges":[{"startOffset":1102,"endOffset":1512,"count":33},{"startOffset":1240,"endOffset":1333,"count":0},{"startOffset":1368,"endOffset":1510,"count":0}],"isBlockCoverage":true},{"functionName":"iterator","ranges":[{"startOffset":1514,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMethodNamesOrAssert","ranges":[{"startOffset":2593,"endOffset":3114,"count":0}],"isBlockCoverage":false},{"functionName":"isListenerSymbol","ranges":[{"startOffset":3141,"endOffset":3205,"count":37},{"startOffset":3176,"endOffset":3205,"count":33}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3233,"endOffset":4313,"count":0}],"isBlockCoverage":false},{"functionName":"Emittery","ranges":[{"startOffset":4316,"endOffset":4436,"count":1}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":4439,"endOffset":4841,"count":4},{"startOffset":4536,"endOffset":4548,"count":0}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":4844,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":5202,"endOffset":5345,"count":0}],"isBlockCoverage":false},{"functionName":"events","ranges":[{"startOffset":5348,"endOffset":5554,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5557,"endOffset":6215,"count":33},{"startOffset":5863,"endOffset":5867,"count":4},{"startOffset":5868,"endOffset":5887,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5963,"endOffset":6061,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6093,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"emitSerial","ranges":[{"startOffset":6218,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"onAny","ranges":[{"startOffset":6836,"endOffset":7001,"count":0}],"isBlockCoverage":false},{"functionName":"anyEvent","ranges":[{"startOffset":7004,"endOffset":7044,"count":0}],"isBlockCoverage":false},{"functionName":"offAny","ranges":[{"startOffset":7047,"endOffset":7175,"count":0}],"isBlockCoverage":false},{"functionName":"clearListeners","ranges":[{"startOffset":7178,"endOffset":7900,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":7903,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"bindMethods","ranges":[{"startOffset":8587,"endOffset":9091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9176,"endOffset":9200,"count":13}],"isBlockCoverage":true}]},{"scriptId":"206","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/matcher/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1785,"count":1}],"isBlockCoverage":true},{"functionName":"makeRegexp","ranges":[{"startOffset":107,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":667,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.isMatch","ranges":[{"startOffset":1401,"endOffset":1783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"207","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/matcher/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/context-ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"ContextRef","ranges":[{"startOffset":74,"endOffset":111,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":114,"endOffset":145,"count":21}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":148,"endOffset":191,"count":7}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":194,"endOffset":237,"count":7}],"isBlockCoverage":true},{"functionName":"LateBinding","ranges":[{"startOffset":310,"endOffset":382,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":385,"endOffset":479,"count":14},{"startOffset":412,"endOffset":453,"count":7}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":482,"endOffset":544,"count":7}],"isBlockCoverage":true}]},{"scriptId":"209","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":967,"endOffset":1039,"count":7}],"isBlockCoverage":true}]},{"scriptId":"210","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseClone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5609,"count":1}],"isBlockCoverage":true},{"functionName":"baseClone","ranges":[{"startOffset":3399,"endOffset":5579,"count":119},{"startOffset":3630,"endOffset":3716,"count":112},{"startOffset":3652,"endOffset":3691,"count":111},{"startOffset":3692,"endOffset":3711,"count":1},{"startOffset":3745,"endOffset":3769,"count":62},{"startOffset":3769,"endOffset":3794,"count":57},{"startOffset":3794,"endOffset":3817,"count":0},{"startOffset":3817,"endOffset":3861,"count":57},{"startOffset":3861,"endOffset":3966,"count":0},{"startOffset":3966,"endOffset":4584,"count":57},{"startOffset":4079,"endOffset":4127,"count":0},{"startOffset":4153,"endOffset":4170,"count":0},{"startOffset":4171,"endOffset":4193,"count":0},{"startOffset":4231,"endOffset":4235,"count":0},{"startOffset":4281,"endOffset":4433,"count":7},{"startOffset":4315,"endOffset":4366,"count":0},{"startOffset":4439,"endOffset":4580,"count":0},{"startOffset":4584,"endOffset":4664,"count":50},{"startOffset":4664,"endOffset":4686,"count":1},{"startOffset":4737,"endOffset":4762,"count":12},{"startOffset":4762,"endOffset":4812,"count":38},{"startOffset":4812,"endOffset":4948,"count":0},{"startOffset":4948,"endOffset":5113,"count":38},{"startOffset":4972,"endOffset":5113,"count":0},{"startOffset":5113,"endOffset":5181,"count":38},{"startOffset":5153,"endOffset":5167,"count":0},{"startOffset":5186,"endOffset":5212,"count":0},{"startOffset":5235,"endOffset":5246,"count":0},{"startOffset":5247,"endOffset":5264,"count":38},{"startOffset":5284,"endOffset":5292,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4832,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4992,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5294,"endOffset":5558,"count":111}],"isBlockCoverage":true}]},{"scriptId":"211","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":402,"endOffset":507,"count":1}],"isBlockCoverage":true}]},{"scriptId":"212","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_ListCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":376,"endOffset":594,"count":1},{"startOffset":459,"endOffset":475,"count":0},{"startOffset":521,"endOffset":592,"count":0}],"isBlockCoverage":true}]},{"scriptId":"213","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":115,"endOffset":183,"count":1}],"isBlockCoverage":true}]},{"scriptId":"214","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":440,"endOffset":739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_assocIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":286,"endOffset":454,"count":50},{"startOffset":370,"endOffset":439,"count":922},{"startOffset":407,"endOffset":435,"count":12},{"startOffset":439,"endOffset":453,"count":38}],"isBlockCoverage":true}]},{"scriptId":"216","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":681,"endOffset":776,"count":922},{"startOffset":734,"endOffset":773,"count":910},{"startOffset":754,"endOffset":772,"count":0}],"isBlockCoverage":true}]},{"scriptId":"217","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":240,"endOffset":387,"count":50},{"startOffset":356,"endOffset":367,"count":38},{"startOffset":368,"endOffset":384,"count":12}],"isBlockCoverage":true}]},{"scriptId":"218","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":292,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"219","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheSet","ranges":[{"startOffset":292,"endOffset":520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":148,"endOffset":223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"stackDelete","ranges":[{"startOffset":237,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":271,"count":1}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":183,"endOffset":242,"count":50}],"isBlockCoverage":true}]},{"scriptId":"223","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":235,"endOffset":294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"224","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"stackSet","ranges":[{"startOffset":436,"endOffset":824,"count":38},{"startOffset":706,"endOffset":823,"count":0}],"isBlockCoverage":true}]},{"scriptId":"225","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"226","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":483,"count":1}],"isBlockCoverage":true},{"functionName":"getNative","ranges":[{"startOffset":331,"endOffset":453,"count":7},{"startOffset":439,"endOffset":450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"227","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":7},{"startOffset":1256,"endOffset":1279,"count":0},{"startOffset":1327,"endOffset":1341,"count":0}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":7},{"startOffset":670,"endOffset":693,"count":0},{"startOffset":905,"endOffset":921,"count":0},{"startOffset":922,"endOffset":940,"count":0},{"startOffset":941,"endOffset":959,"count":0}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":70},{"startOffset":584,"endOffset":646,"count":0},{"startOffset":712,"endOffset":730,"count":5},{"startOffset":735,"endOffset":758,"count":65}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"231","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"232","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"233","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":5},{"startOffset":899,"endOffset":911,"count":0},{"startOffset":995,"endOffset":1037,"count":0}],"isBlockCoverage":true}]},{"scriptId":"234","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":65}],"isBlockCoverage":true}]},{"scriptId":"235","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":128},{"startOffset":679,"endOffset":700,"count":14}],"isBlockCoverage":true}]},{"scriptId":"236","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":7},{"startOffset":509,"endOffset":532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"237","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"238","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":12},{"startOffset":441,"endOffset":508,"count":0},{"startOffset":512,"endOffset":526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"239","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":211,"endOffset":296,"count":7},{"startOffset":268,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"240","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_MapCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"MapCache","ranges":[{"startOffset":389,"endOffset":606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":209,"endOffset":359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":319,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":152,"endOffset":251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nativeCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true}]},{"scriptId":"245","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":445,"count":1}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":279,"endOffset":414,"count":0}],"isBlockCoverage":false}]},{"scriptId":"246","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"hashGet","ranges":[{"startOffset":513,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":461,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"248","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":379,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":282,"endOffset":415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"250","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getMapData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":214,"endOffset":369,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isKeyable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":430,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":201,"endOffset":400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"252","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheGet","ranges":[{"startOffset":228,"endOffset":298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"253","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":280,"endOffset":350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":279,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEach","ranges":[{"startOffset":274,"endOffset":507,"count":38},{"startOffset":359,"endOffset":362,"count":0},{"startOffset":407,"endOffset":489,"count":111},{"startOffset":465,"endOffset":485,"count":0}],"isBlockCoverage":true}]},{"scriptId":"256","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_assignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":629,"endOffset":867,"count":111},{"startOffset":743,"endOffset":765,"count":0},{"startOffset":767,"endOffset":817,"count":0}],"isBlockCoverage":true}]},{"scriptId":"257","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseAssignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignValue","ranges":[{"startOffset":314,"endOffset":589,"count":111},{"startOffset":386,"endOffset":403,"count":0},{"startOffset":405,"endOffset":551,"count":0}],"isBlockCoverage":true}]},{"scriptId":"258","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_defineProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64,"endOffset":194,"count":1},{"startOffset":180,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"259","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseAssign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssign","ranges":[{"startOffset":339,"endOffset":439,"count":7}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copyObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1044,"count":1}],"isBlockCoverage":true},{"functionName":"copyObject","ranges":[{"startOffset":467,"endOffset":1013,"count":14},{"startOffset":556,"endOffset":572,"count":0},{"startOffset":650,"endOffset":994,"count":0}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":884,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":761,"endOffset":859,"count":45},{"startOffset":814,"endOffset":837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"262","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayLikeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1778,"count":1}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":697,"endOffset":1744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseTimes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"baseTimes","ranges":[{"startOffset":313,"endOffset":474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1026,"count":1},{"startOffset":851,"endOffset":993,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":797,"endOffset":829,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":853,"endOffset":993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":355,"endOffset":452,"count":1}],"isBlockCoverage":true}]},{"scriptId":"266","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isObjectLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":497,"endOffset":581,"count":1}],"isBlockCoverage":true}]},{"scriptId":"267","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true}]},{"scriptId":"268","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1114,"count":1},{"startOffset":548,"endOffset":559,"count":0},{"startOffset":697,"endOffset":708,"count":0},{"startOffset":1072,"endOffset":1084,"count":0}],"isBlockCoverage":true}]},{"scriptId":"269","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/stubFalse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1}],"isBlockCoverage":true},{"functionName":"stubFalse","ranges":[{"startOffset":210,"endOffset":250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"270","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":456,"endOffset":731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":695,"count":1},{"startOffset":643,"endOffset":661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"272","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2222,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":2050,"endOffset":2185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"273","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":645,"endOffset":773,"count":45},{"startOffset":706,"endOffset":723,"count":0},{"startOffset":724,"endOffset":741,"count":0},{"startOffset":742,"endOffset":770,"count":0}],"isBlockCoverage":true}]},{"scriptId":"274","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseUnary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":332,"count":1}],"isBlockCoverage":true},{"functionName":"baseUnary","ranges":[{"startOffset":218,"endOffset":302,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254,"endOffset":299,"count":76}],"isBlockCoverage":true}]},{"scriptId":"275","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nodeUtil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":615,"endOffset":962,"count":1},{"startOffset":806,"endOffset":911,"count":0},{"startOffset":912,"endOffset":942,"count":0},{"startOffset":948,"endOffset":960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"276","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":479,"endOffset":747,"count":45},{"startOffset":571,"endOffset":746,"count":0}],"isBlockCoverage":true}]},{"scriptId":"277","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":273,"endOffset":448,"count":102},{"startOffset":404,"endOffset":418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"278","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nativeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true}]},{"scriptId":"279","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_overArg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":254,"endOffset":354,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":351,"count":102}],"isBlockCoverage":true}]},{"scriptId":"280","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArrayLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLike","ranges":[{"startOffset":695,"endOffset":798,"count":45},{"startOffset":774,"endOffset":795,"count":0}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseAssignIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":482,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignIn","ranges":[{"startOffset":345,"endOffset":449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/keysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":778,"count":1}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":643,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":870,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":523,"endOffset":839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nativeKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":490,"count":1}],"isBlockCoverage":true},{"functionName":"nativeKeysIn","ranges":[{"startOffset":292,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1056,"count":1},{"startOffset":508,"endOffset":519,"count":0},{"startOffset":567,"endOffset":578,"count":0}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":783,"endOffset":1024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copyArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"copyArray","ranges":[{"startOffset":219,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copySymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbols","ranges":[{"startOffset":317,"endOffset":414,"count":7}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getSymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":886,"count":1},{"startOffset":624,"endOffset":635,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":638,"endOffset":854,"count":45},{"startOffset":679,"endOffset":699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":774,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"289","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayFilter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"arrayFilter","ranges":[{"startOffset":289,"endOffset":600,"count":45},{"startOffset":377,"endOffset":380,"count":0},{"startOffset":464,"endOffset":581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/stubArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"stubArray","ranges":[{"startOffset":323,"endOffset":360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copySymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbolsIn","ranges":[{"startOffset":335,"endOffset":436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getSymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":754,"count":1},{"startOffset":549,"endOffset":560,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbolsIn","ranges":[{"startOffset":563,"endOffset":720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayPush.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":437,"count":1}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":200,"endOffset":407,"count":38},{"startOffset":341,"endOffset":389,"count":0}],"isBlockCoverage":true}]},{"scriptId":"294","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"295","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":342,"endOffset":424,"count":38}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseGetAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":537,"endOffset":704,"count":38},{"startOffset":652,"endOffset":660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"297","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getAllKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":367,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1},{"startOffset":1296,"endOffset":1811,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":1309,"endOffset":1808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_DataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true}]},{"scriptId":"300","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"301","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"302","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_WeakMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"303","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_initCloneArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":329,"endOffset":657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_initCloneByTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2261,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":1454,"endOffset":2226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneArrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":449,"count":1}],"isBlockCoverage":true},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Uint8Array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true}]},{"scriptId":"307","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneDataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":507,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDataView","ranges":[{"startOffset":267,"endOffset":473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":439,"count":1}],"isBlockCoverage":true},{"functionName":"cloneRegExp","ranges":[{"startOffset":243,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneSymbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1},{"startOffset":138,"endOffset":149,"count":0},{"startOffset":205,"endOffset":216,"count":0}],"isBlockCoverage":true},{"functionName":"cloneSymbol","ranges":[{"startOffset":394,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"cloneTypedArray","ranges":[{"startOffset":275,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_initCloneObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":290,"endOffset":450,"count":57},{"startOffset":443,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"312","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":686,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":651,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":370,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":400,"endOffset":648,"count":57},{"startOffset":444,"endOffset":468,"count":0},{"startOffset":532,"endOffset":647,"count":0}],"isBlockCoverage":true}]},{"scriptId":"313","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"314","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsMap","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"316","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsSet","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/create-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4201,"count":1}],"isBlockCoverage":true},{"functionName":"startChain","ranges":[{"startOffset":52,"endOffset":279,"count":11}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":108,"endOffset":154,"count":8}],"isBlockCoverage":true},{"functionName":"extendChain","ranges":[{"startOffset":281,"endOffset":647,"count":63},{"startOffset":338,"endOffset":357,"count":9}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":371,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"callWithFlag","ranges":[{"startOffset":649,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"createHookChain","ranges":[{"startOffset":981,"endOffset":1506,"count":8},{"startOffset":1311,"endOffset":1489,"count":4}],"isBlockCoverage":true},{"functionName":"createChain","ranges":[{"startOffset":1508,"endOffset":4169,"count":1}],"isBlockCoverage":true}]},{"scriptId":"318","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/parse-test-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"parseTestArgs","ranges":[{"startOffset":14,"endOffset":599,"count":8},{"startOffset":91,"endOffset":105,"count":7},{"startOffset":106,"endOffset":117,"count":1},{"startOffset":233,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"buildTitle","ranges":[{"startOffset":290,"endOffset":511,"count":8},{"startOffset":347,"endOffset":388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"319","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/snapshot-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14338,"count":1}],"isBlockCoverage":true},{"functionName":"SnapshotError","ranges":[{"startOffset":1226,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"ChecksumError","ranges":[{"startOffset":1426,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"VersionMismatchError","ranges":[{"startOffset":1618,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"isLegacySnapshot","ranges":[{"startOffset":1929,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"LegacyError","ranges":[{"startOffset":2102,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"tryRead","ranges":[{"startOffset":2239,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"withoutLineEndings","ranges":[{"startOffset":2397,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"formatEntry","ranges":[{"startOffset":2625,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"combineEntries","ranges":[{"startOffset":2862,"endOffset":3991,"count":0}],"isBlockCoverage":false},{"functionName":"generateReport","ranges":[{"startOffset":3993,"endOffset":4521,"count":0}],"isBlockCoverage":false},{"functionName":"appendReportEntries","ranges":[{"startOffset":4523,"endOffset":4934,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSnapshots","ranges":[{"startOffset":4936,"endOffset":7199,"count":0}],"isBlockCoverage":false},{"functionName":"decodeSnapshots","ranges":[{"startOffset":7201,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"Manager","ranges":[{"startOffset":9217,"endOffset":9622,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":9625,"endOffset":10328,"count":0}],"isBlockCoverage":false},{"functionName":"deferRecord","ranges":[{"startOffset":10331,"endOffset":11497,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":11500,"endOffset":11588,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":11591,"endOffset":12320,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12354,"endOffset":12846,"count":0}],"isBlockCoverage":false},{"functionName":"mem.cacheKey.file.file","ranges":[{"startOffset":12883,"endOffset":13466,"count":0}],"isBlockCoverage":false},{"functionName":"cacheKey","ranges":[{"startOffset":13479,"endOffset":13497,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":13556,"endOffset":14315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"crypto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7292,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3110,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3194,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3296,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3400,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3506,"endOffset":3612,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3614,"endOffset":3770,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3772,"endOffset":3854,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":3856,"endOffset":3912,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":3914,"endOffset":3996,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":3998,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4082,"endOffset":4168,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsDisabled","ranges":[{"startOffset":5161,"endOffset":5234,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5236,"endOffset":5324,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsDisabled","ranges":[{"startOffset":5326,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5370,"endOffset":5410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"internal/crypto/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3513,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":617,"endOffset":983,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":1448,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":1962,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":2439,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":3376,"endOffset":3443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"internal/crypto/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":471,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1344,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1757,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2162,"endOffset":2326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"internal/crypto/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2336,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":704,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":767,"endOffset":826,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1001,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1214,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1291,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1367,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1413,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1824,"endOffset":2172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"internal/crypto/scrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3695,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":587,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1426,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1853,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2097,"endOffset":3652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"internal/crypto/keygen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":954,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1084,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":1865,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1981,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2326,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3452,"endOffset":10021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"internal/crypto/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11219,"count":1}],"isBlockCoverage":false},{"functionName":"checkKeyTypeAndHandle","ranges":[{"startOffset":1040,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1820,"endOffset":3555,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":1930,"endOffset":2211,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2217,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":2318,"endOffset":2376,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":2382,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2468,"endOffset":2521,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":2639,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":2855,"endOffset":2913,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2919,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":3168,"endOffset":3227,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3233,"endOffset":3474,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":3559,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":3888,"endOffset":4740,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":4742,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":4840,"endOffset":5434,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":5436,"endOffset":5530,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":5532,"endOffset":6832,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":7031,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":7367,"endOffset":7483,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":7485,"endOffset":8047,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":8049,"endOffset":9295,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":9297,"endOffset":9385,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":9387,"endOffset":9482,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":9484,"endOffset":9975,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":9977,"endOffset":10262,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":10264,"endOffset":10501,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":10503,"endOffset":10772,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":10774,"endOffset":10838,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"internal/crypto/diffiehellman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8131,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":970,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":2539,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":2954,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3230,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":3653,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":3920,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4203,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4477,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4681,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":4879,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5039,"endOffset":5193,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5504,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5659,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":5878,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6399,"endOffset":6534,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6536,"endOffset":6859,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6929,"endOffset":8044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"internal/crypto/cipher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8473,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1054,"endOffset":1914,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2415,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2734,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":2957,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3368,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3592,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":3853,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4186,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4331,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4498,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5177,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5518,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5698,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":5862,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6233,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6663,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":6864,"endOffset":7455,"count":3},{"startOffset":7260,"endOffset":7333,"count":1},{"startOffset":7333,"endOffset":7395,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":7611,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":7965,"endOffset":8171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"internal/streams/lazy_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1669,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":468,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":662,"endOffset":970,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":699,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":972,"endOffset":1167,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"internal/crypto/sig.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5946,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":729,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1100,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1219,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1583,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1660,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1743,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2089,"endOffset":2321,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2345,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3011,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":3811,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4295,"endOffset":4929,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":4932,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"internal/crypto/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":764,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1403,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1602,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1734,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1841,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2381,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2730,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3239,"endOffset":3658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"internal/crypto/certificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1119,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":247,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":347,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":478,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":695,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"zlib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28514,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3264,"endOffset":3987,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":3989,"endOffset":4305,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4307,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4394,"endOffset":4724,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4726,"endOffset":5266,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5268,"endOffset":5609,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5834,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6565,"endOffset":6856,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6907,"endOffset":8677,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8883,"endOffset":8920,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9343,"endOffset":9389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9536,"endOffset":9588,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9728,"endOffset":9836,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9982,"endOffset":10054,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10652,"endOffset":10727,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":11168,"endOffset":11583,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11613,"endOffset":11695,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11728,"endOffset":11788,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11823,"endOffset":12386,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12424,"endOffset":12653,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12656,"endOffset":14926,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14928,"endOffset":15518,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15520,"endOffset":17822,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":17824,"endOffset":18014,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":18210,"endOffset":20516,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":20866,"endOffset":21132,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21158,"endOffset":21570,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":21614,"endOffset":21738,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":21834,"endOffset":21958,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":22054,"endOffset":22166,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":22256,"endOffset":22376,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":22470,"endOffset":22664,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":22766,"endOffset":22902,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":23004,"endOffset":23120,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":23212,"endOffset":23601,"count":18},{"startOffset":23271,"endOffset":23600,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":23284,"endOffset":23385,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":23400,"endOffset":23598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23664,"endOffset":23739,"count":107},{"startOffset":23716,"endOffset":23732,"count":9},{"startOffset":23733,"endOffset":23736,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":23955,"endOffset":25253,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25347,"endOffset":25500,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":25614,"endOffset":25773,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":25892,"endOffset":26056,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":25992,"endOffset":26049,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26266,"endOffset":26302,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26306,"endOffset":26347,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true}]},{"scriptId":"335","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3379,"count":1}],"isBlockCoverage":true},{"functionName":"shortcircuitPrimitive","ranges":[{"startOffset":408,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"compareDescriptors","ranges":[{"startOffset":730,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2864,"endOffset":3352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/Circular.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":785,"count":1}],"isBlockCoverage":true},{"functionName":"Circular","ranges":[{"startOffset":33,"endOffset":80,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":84,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":365,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":587,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":651,"endOffset":756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":249,"count":1}],"isBlockCoverage":true}]},{"scriptId":"338","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/describe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5965,"count":1}],"isBlockCoverage":true},{"functionName":"describePrimitive","ranges":[{"startOffset":2448,"endOffset":2957,"count":0}],"isBlockCoverage":false},{"functionName":"unboxComplex","ranges":[{"startOffset":2959,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"registerPlugins","ranges":[{"startOffset":3326,"endOffset":3726,"count":0}],"isBlockCoverage":false},{"functionName":"describeComplex","ranges":[{"startOffset":3728,"endOffset":4699,"count":0}],"isBlockCoverage":false},{"functionName":"describeItem","ranges":[{"startOffset":4722,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"describeMapEntry","ranges":[{"startOffset":4950,"endOffset":5058,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5060,"endOffset":5938,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/Registry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"Registry","ranges":[{"startOffset":33,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":107,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":222,"endOffset":374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/arguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1385,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":409,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":652,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1160,"endOffset":1382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7185,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":436,"endOffset":713,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":743,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectValue","ranges":[{"startOffset":950,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1207,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":1403,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1474,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1565,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":2001,"endOffset":6371,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2068,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2439,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2569,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":3036,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":3478,"endOffset":4494,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":4500,"endOffset":6365,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":6413,"endOffset":7138,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6483,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":6786,"endOffset":7055,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":7061,"endOffset":7132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/formatUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3260,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":60,"endOffset":146,"count":0}],"isBlockCoverage":false},{"functionName":"formatCtorAndStringTag","ranges":[{"startOffset":168,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFormatter","ranges":[{"startOffset":621,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":844,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":1193,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":1877,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"shouldFormat","ranges":[{"startOffset":2165,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"customize","ranges":[{"startOffset":2206,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"SingleValueFormatter","ranges":[{"startOffset":2579,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2790,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":2965,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":3120,"endOffset":3205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/lineBuilder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7155,"count":1}],"isBlockCoverage":true},{"functionName":"translateGutter","ranges":[{"startOffset":123,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Line","ranges":[{"startOffset":502,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":674,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":721,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":762,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":820,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":884,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":938,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1031,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":1206,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":1483,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":1634,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":1787,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":1875,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":2050,"endOffset":2091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2095,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":2221,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":2281,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":2399,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2530,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":2636,"endOffset":2725,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2729,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":3540,"endOffset":4287,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":4291,"endOffset":4423,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":4427,"endOffset":4561,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":4565,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":4675,"endOffset":5381,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":5462,"endOffset":5708,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":5731,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":5779,"endOffset":5856,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":5861,"endOffset":5937,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":5942,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6024,"endOffset":6101,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6106,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6194,"endOffset":6277,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6284,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6373,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6463,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6553,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6678,"endOffset":6763,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6770,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6861,"endOffset":6946,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6953,"endOffset":7038,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":7045,"endOffset":7146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/getObjectKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":964,"count":1}],"isBlockCoverage":true},{"functionName":"getObjectKeys","ranges":[{"startOffset":14,"endOffset":932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/hasLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"hasLength","ranges":[{"startOffset":104,"endOffset":275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/stats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3836,"count":1}],"isBlockCoverage":true},{"functionName":"describeIterableRecursor","ranges":[{"startOffset":228,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"describeListRecursor","ranges":[{"startOffset":380,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"describePropertyRecursor","ranges":[{"startOffset":516,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeIterableStats","ranges":[{"startOffset":668,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeListStats","ranges":[{"startOffset":807,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePropertyStats","ranges":[{"startOffset":930,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":1306,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1355,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1436,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2993,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3141,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3387,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3625,"endOffset":3755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/recursorUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1901,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":51,"endOffset":74,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":117,"endOffset":396,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":418,"endOffset":560,"count":0}],"isBlockCoverage":false},{"functionName":"replay","ranges":[{"startOffset":580,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"sequence","ranges":[{"startOffset":1282,"endOffset":1500,"count":0}],"isBlockCoverage":false},{"functionName":"singleValue","ranges":[{"startOffset":1530,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":1698,"endOffset":1874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/arrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":343,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/typedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4439,"count":1}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":382,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":628,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":910,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeBytes","ranges":[{"startOffset":1046,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"Bytes","ranges":[{"startOffset":1292,"endOffset":1343,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1347,"endOffset":1482,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1486,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2301,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"TypedArrayValue","ranges":[{"startOffset":2466,"endOffset":2539,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":2543,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":3049,"endOffset":3869,"count":3}],"isBlockCoverage":true},{"functionName":"createListRecursor","ranges":[{"startOffset":3237,"endOffset":3307,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":3313,"endOffset":3749,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":3755,"endOffset":3863,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":3977,"endOffset":4320,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4073,"endOffset":4314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/boxed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1292,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":264,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedBoxedValue","ranges":[{"startOffset":634,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":713,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":783,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1126,"endOffset":1220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11011,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":306,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"basicEscape","ranges":[{"startOffset":707,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLinebreak","ranges":[{"startOffset":1015,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"themeControlPictures","ranges":[{"startOffset":1221,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuotes","ranges":[{"startOffset":1537,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"includesLinebreaks","ranges":[{"startOffset":1836,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"diffLine","ranges":[{"startOffset":1934,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"gatherLines","ranges":[{"startOffset":3615,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"StringValue","ranges":[{"startOffset":3947,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3999,"endOffset":4123,"count":0}],"isBlockCoverage":false},{"functionName":"get includesLinebreaks","ranges":[{"startOffset":4127,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4204,"endOffset":5175,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":5179,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5557,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":10823,"endOffset":10863,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"353","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":1370,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":2127,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":2450,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":3268,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"trailingStatement","ranges":[{"startOffset":3399,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isProblematicIfStatement","ranges":[{"startOffset":3849,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":29569,"count":1},{"startOffset":27989,"endOffset":28199,"count":128},{"startOffset":28045,"endOffset":28058,"count":31},{"startOffset":28059,"endOffset":28107,"count":102},{"startOffset":28094,"endOffset":28107,"count":37},{"startOffset":28108,"endOffset":28143,"count":76},{"startOffset":28144,"endOffset":28158,"count":75},{"startOffset":28273,"endOffset":28531,"count":128},{"startOffset":28328,"endOffset":28341,"count":31},{"startOffset":28342,"endOffset":28390,"count":102},{"startOffset":28377,"endOffset":28390,"count":37},{"startOffset":28391,"endOffset":28439,"count":76},{"startOffset":28426,"endOffset":28439,"count":28},{"startOffset":28440,"endOffset":28475,"count":66},{"startOffset":28476,"endOffset":28490,"count":65}],"isBlockCoverage":true},{"functionName":"isDecimalDigit","ranges":[{"startOffset":26641,"endOffset":26726,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":26732,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":26925,"endOffset":27008,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpace","ranges":[{"startOffset":27243,"endOffset":27434,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":27469,"endOffset":27583,"count":0}],"isBlockCoverage":false},{"functionName":"fromCodePoint","ranges":[{"startOffset":27634,"endOffset":27914,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES5","ranges":[{"startOffset":28537,"endOffset":28686,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES5","ranges":[{"startOffset":28692,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES6","ranges":[{"startOffset":28844,"endOffset":28993,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES6","ranges":[{"startOffset":28999,"endOffset":29145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictModeReservedWordES6","ranges":[{"startOffset":1405,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES5","ranges":[{"startOffset":1752,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES6","ranges":[{"startOffset":1990,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES5","ranges":[{"startOffset":3224,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES6","ranges":[{"startOffset":3369,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"isRestrictedWord","ranges":[{"startOffset":3514,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES5","ranges":[{"startOffset":3609,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUtf16","ranges":[{"startOffset":4051,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES6","ranges":[{"startOffset":4167,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES5","ranges":[{"startOffset":4909,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES6","ranges":[{"startOffset":5033,"endOffset":5151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-diff/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27285,"count":1}],"isBlockCoverage":true},{"functionName":"diff_main","ranges":[{"startOffset":1553,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"diff_compute_","ranges":[{"startOffset":2987,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisect_","ranges":[{"startOffset":4922,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisectSplit_","ranges":[{"startOffset":8763,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":9335,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":10396,"endOffset":11301,"count":0}],"isBlockCoverage":false},{"functionName":"diff_halfMatch_","ranges":[{"startOffset":11745,"endOffset":14805,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":15072,"endOffset":22357,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_start","ranges":[{"startOffset":22360,"endOffset":22457,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_end","ranges":[{"startOffset":22459,"endOffset":22554,"count":0}],"isBlockCoverage":false},{"functionName":"starts_with_pair_end","ranges":[{"startOffset":22556,"endOffset":22645,"count":0}],"isBlockCoverage":false},{"functionName":"ends_with_pair_start","ranges":[{"startOffset":22647,"endOffset":22751,"count":0}],"isBlockCoverage":false},{"functionName":"remove_empty_tuples","ranges":[{"startOffset":22753,"endOffset":22939,"count":0}],"isBlockCoverage":false},{"functionName":"make_edit_splice","ranges":[{"startOffset":22941,"endOffset":23244,"count":0}],"isBlockCoverage":false},{"functionName":"find_cursor_edit_diff","ranges":[{"startOffset":23246,"endOffset":26986,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":26988,"endOffset":27180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/dataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":349,"endOffset":447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2613,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":304,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":501,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"formatDate","ranges":[{"startOffset":682,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"DateValue","ranges":[{"startOffset":993,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1072,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1337,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2122,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedDateValue","ranges":[{"startOffset":2460,"endOffset":2610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/date-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":831,"count":1}],"isBlockCoverage":true},{"functionName":"dateTime","ranges":[{"startOffset":71,"endOffset":718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/time-zone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":331,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":638,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorValue","ranges":[{"startOffset":869,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":942,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1086,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2197,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedErrorValue","ranges":[{"startOffset":2400,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2587,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedErrorValue","ranges":[{"startOffset":3512,"endOffset":3602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/isEnumerable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":171,"count":1}],"isBlockCoverage":true},{"functionName":"isEnumerable","ranges":[{"startOffset":14,"endOffset":140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":377,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":630,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionValue","ranges":[{"startOffset":870,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":943,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedFunctionValue","ranges":[{"startOffset":1858,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1955,"endOffset":2203,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2207,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2749,"endOffset":2809,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedFunctionValue","ranges":[{"startOffset":2897,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2991,"endOffset":3205,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3209,"endOffset":3269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":275,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":412,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":512,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1845,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":370,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"MapValue","ranges":[{"startOffset":595,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":668,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":865,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1032,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1229,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMapValue","ranges":[{"startOffset":1752,"endOffset":1842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1054,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":167,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":268,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":630,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":916,"endOffset":1051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/regexp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2733,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":219,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":432,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"getSortedFlags","ranges":[{"startOffset":617,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"RegexpValue","ranges":[{"startOffset":824,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":930,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1111,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2321,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedRegexpValue","ranges":[{"startOffset":2612,"endOffset":2730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1815,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":370,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"SetValue","ranges":[{"startOffset":595,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":668,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":865,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1030,"endOffset":1090,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1227,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSetValue","ranges":[{"startOffset":1722,"endOffset":1812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/getCtor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"getCtor","ranges":[{"startOffset":59,"endOffset":1249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/getStringTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":721,"count":1},{"startOffset":467,"endOffset":720,"count":0}],"isBlockCoverage":true},{"functionName":"getStringTag","ranges":[{"startOffset":51,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":225,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"getStringTagWithPromiseWorkaround","ranges":[{"startOffset":519,"endOffset":665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7800,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":228,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":354,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":519,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":653,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexItem","ranges":[{"startOffset":1017,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1099,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1175,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1334,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1723,"endOffset":4317,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":4321,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveItem","ranges":[{"startOffset":4536,"endOffset":4614,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4618,"endOffset":4775,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4779,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":5338,"endOffset":6853,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":6857,"endOffset":7586,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7590,"endOffset":7644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/mapEntry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7289,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":318,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":615,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithKey","ranges":[{"startOffset":974,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"MapEntry","ranges":[{"startOffset":1443,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1639,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1920,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":2403,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3008,"endOffset":3349,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":3353,"endOffset":4184,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":4188,"endOffset":7070,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7074,"endOffset":7148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/themeUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"freezeTheme","ranges":[{"startOffset":151,"endOffset":490,"count":1},{"startOffset":233,"endOffset":472,"count":42},{"startOffset":338,"endOffset":468,"count":120},{"startOffset":397,"endOffset":425,"count":118},{"startOffset":427,"endOffset":462,"count":41}],"isBlockCoverage":true},{"functionName":"normalizePlugins","ranges":[{"startOffset":2414,"endOffset":3166,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3206,"endOffset":4083,"count":0}],"isBlockCoverage":false},{"functionName":"addModifier","ranges":[{"startOffset":4147,"endOffset":4339,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiers","ranges":[{"startOffset":4447,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiersToOriginal","ranges":[{"startOffset":5063,"endOffset":5191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":679,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":555,"endOffset":649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1220,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1115,"endOffset":1192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseMerge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1328,"count":1}],"isBlockCoverage":true},{"functionName":"baseMerge","ranges":[{"startOffset":699,"endOffset":1298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_assignMergeValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":582,"count":1}],"isBlockCoverage":true},{"functionName":"assignMergeValue","ranges":[{"startOffset":342,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseFor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"379","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_createBaseFor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":648,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":217,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":262,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"380","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseMergeDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3069,"count":1}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":1316,"endOffset":3035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArrayLikeObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":742,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":615,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"382","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1229,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_safeGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"safeGet","ranges":[{"startOffset":243,"endOffset":428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/toPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"toPlainObject","ranges":[{"startOffset":634,"endOffset":710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_createAssigner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1042,"count":1}],"isBlockCoverage":true},{"functionName":"createAssigner","ranges":[{"startOffset":272,"endOffset":1007,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326,"endOffset":1003,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseRest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":559,"count":1}],"isBlockCoverage":true},{"functionName":"baseRest","ranges":[{"startOffset":430,"endOffset":530,"count":1}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/identity.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":370,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":297,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_overRest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":503,"endOffset":1067,"count":1},{"startOffset":607,"endOffset":614,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":629,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":714,"count":1}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":374,"endOffset":688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_setToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"391","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseSetToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":641,"count":1},{"startOffset":412,"endOffset":422,"count":0}],"isBlockCoverage":true},{"functionName":"baseSetToString","ranges":[{"startOffset":425,"endOffset":604,"count":1}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/constant.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":528,"count":1}],"isBlockCoverage":true},{"functionName":"constant","ranges":[{"startOffset":426,"endOffset":499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":462,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"393","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_shortOut.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":941,"count":1}],"isBlockCoverage":true},{"functionName":"shortOut","ranges":[{"startOffset":534,"endOffset":912,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":609,"endOffset":909,"count":1},{"startOffset":752,"endOffset":830,"count":0}],"isBlockCoverage":true}]},{"scriptId":"394","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isIterateeCall.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"isIterateeCall","ranges":[{"startOffset":514,"endOffset":842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/pluginRegistry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6139,"count":1}],"isBlockCoverage":true},{"functionName":"PluginError","ranges":[{"startOffset":707,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"PluginTypeError","ranges":[{"startOffset":864,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedApiError","ranges":[{"startOffset":1031,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedError","ranges":[{"startOffset":1210,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorTagError","ranges":[{"startOffset":1406,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorIdError","ranges":[{"startOffset":1657,"endOffset":1945,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1949,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"modifyTheme","ranges":[{"startOffset":3525,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3641,"endOffset":5084,"count":0}],"isBlockCoverage":false},{"functionName":"getDeserializers","ranges":[{"startOffset":5104,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"getThemes","ranges":[{"startOffset":5414,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"getTryDescribeValues","ranges":[{"startOffset":5630,"endOffset":5734,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDescriptorRef","ranges":[{"startOffset":5788,"endOffset":6086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true}]},{"scriptId":"397","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6662,"count":1}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":276,"endOffset":447,"count":40},{"startOffset":427,"endOffset":432,"count":4},{"startOffset":433,"endOffset":444,"count":36}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1},{"startOffset":233,"endOffset":281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"399","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":40}],"isBlockCoverage":true}]},{"scriptId":"400","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7985,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":303,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2197,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2397,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2442,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2836,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3131,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":3986,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4681,"endOffset":7957,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":186,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":660,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":215,"endOffset":635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":74,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":907,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1497,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":135,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3606,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":134,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":639,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1139,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1182,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1566,"endOffset":3322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13989,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1830,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2000,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2043,"endOffset":4217,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":4221,"endOffset":4851,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":4919,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"isNullSet","ranges":[{"startOffset":5710,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"isAny","ranges":[{"startOffset":5752,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":5893,"endOffset":6299,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":6469,"endOffset":6782,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":6796,"endOffset":6847,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":7152,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":7290,"endOffset":7964,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":8195,"endOffset":8310,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":8333,"endOffset":9635,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":9660,"endOffset":9821,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":9845,"endOffset":11535,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":11681,"endOffset":11856,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGTE0","ranges":[{"startOffset":11878,"endOffset":12028,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":12270,"endOffset":12946,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":12964,"endOffset":13988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lru-cache/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8186,"count":1}],"isBlockCoverage":true},{"functionName":"naiveLength","ranges":[{"startOffset":510,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":853,"endOffset":1751,"count":1},{"startOffset":920,"endOffset":946,"count":0},{"startOffset":972,"endOffset":984,"count":0},{"startOffset":1069,"endOffset":1125,"count":0},{"startOffset":1235,"endOffset":1246,"count":0},{"startOffset":1350,"endOffset":1363,"count":0},{"startOffset":1439,"endOffset":1476,"count":0},{"startOffset":1484,"endOffset":1530,"count":0}],"isBlockCoverage":true},{"functionName":"set max","ranges":[{"startOffset":1799,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":1972,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"set allowStale","ranges":[{"startOffset":2013,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"get allowStale","ranges":[{"startOffset":2086,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"set maxAge","ranges":[{"startOffset":2142,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"get maxAge","ranges":[{"startOffset":2303,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"set lengthCalculator","ranges":[{"startOffset":2408,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"get lengthCalculator","ranges":[{"startOffset":2768,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":2830,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"get itemCount","ranges":[{"startOffset":2870,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":2923,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":3142,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3360,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3429,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3502,"endOffset":3858,"count":1},{"startOffset":3535,"endOffset":3560,"count":0},{"startOffset":3561,"endOffset":3593,"count":0},{"startOffset":3595,"endOffset":3673,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":3862,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"dumpLru","ranges":[{"startOffset":4068,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4114,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5380,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5517,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":5568,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":5621,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":5750,"endOffset":5801,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5805,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"prune","ranges":[{"startOffset":6382,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6475,"endOffset":6871,"count":0}],"isBlockCoverage":false},{"functionName":"isStale","ranges":[{"startOffset":6889,"endOffset":7094,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":7109,"endOffset":7497,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":7511,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"Entry","ranges":[{"startOffset":7756,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"forEachStep","ranges":[{"startOffset":7947,"endOffset":8158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/yallist/yallist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8411,"count":1},{"startOffset":8397,"endOffset":8410,"count":0}],"isBlockCoverage":true},{"functionName":"Yallist","ranges":[{"startOffset":85,"endOffset":517,"count":1},{"startOffset":163,"endOffset":193,"count":0},{"startOffset":263,"endOffset":300,"count":0},{"startOffset":302,"endOffset":371,"count":0},{"startOffset":403,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":321,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.removeNode","ranges":[{"startOffset":550,"endOffset":1001,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshiftNode","ranges":[{"startOffset":1035,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pushNode","ranges":[{"startOffset":1365,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.push","ranges":[{"startOffset":1691,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshift","ranges":[{"startOffset":1844,"endOffset":1970,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pop","ranges":[{"startOffset":1996,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.shift","ranges":[{"startOffset":2252,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEach","ranges":[{"startOffset":2510,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEachReverse","ranges":[{"startOffset":2728,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.get","ranges":[{"startOffset":2949,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.getReverse","ranges":[{"startOffset":3215,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.map","ranges":[{"startOffset":3474,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.mapReverse","ranges":[{"startOffset":3723,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduce","ranges":[{"startOffset":3968,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduceReverse","ranges":[{"startOffset":4399,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArray","ranges":[{"startOffset":4838,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArrayReverse","ranges":[{"startOffset":5055,"endOffset":5235,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.slice","ranges":[{"startOffset":5263,"endOffset":5790,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.sliceReverse","ranges":[{"startOffset":5825,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.splice","ranges":[{"startOffset":6391,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reverse","ranges":[{"startOffset":7064,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7324,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":7645,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":7795,"endOffset":7946,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":7948,"endOffset":8300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/yallist/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":30,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"Yallist.<computed>","ranges":[{"startOffset":90,"endOffset":204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1492,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2188,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":388,"endOffset":2161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1287,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4908,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1427,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2152,"endOffset":4384,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":4435,"endOffset":4633,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":4684,"endOffset":4882,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6149,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":331,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":457,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":622,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":756,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":1125,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"compareKeys","ranges":[{"startOffset":1171,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1696,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexProperty","ranges":[{"startOffset":2881,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2953,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3029,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3308,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3815,"endOffset":3853,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveProperty","ranges":[{"startOffset":3981,"endOffset":4049,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4053,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4332,"endOffset":5014,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5018,"endOffset":6007,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6011,"endOffset":6063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2777,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":329,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":705,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolValue","ranges":[{"startOffset":1012,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1115,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":1409,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1544,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":1655,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1792,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSymbolValue","ranges":[{"startOffset":2159,"endOffset":2232,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2236,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":2730,"endOffset":2774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/js-string-escape/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/well-known-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":800,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":672,"endOffset":689,"count":12}],"isBlockCoverage":true},{"functionName":"exports.isWellKnown","ranges":[{"startOffset":715,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getLabel","ranges":[{"startOffset":767,"endOffset":799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/bigInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":718,"endOffset":758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":931,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanValue","ranges":[{"startOffset":425,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":477,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":741,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/null.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":406,"endOffset":497,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":501,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"NumberValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":781,"endOffset":821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/undefined.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":421,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":516,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/shouldCompareDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"shouldCompareDeep","ranges":[{"startOffset":206,"endOffset":537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/symbolProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2759,"count":1}],"isBlockCoverage":true},{"functionName":"Comparable","ranges":[{"startOffset":247,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":352,"endOffset":533,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":537,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1297,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"Collector","ranges":[{"startOffset":2152,"endOffset":2288,"count":0}],"isBlockCoverage":false},{"functionName":"collectAll","ranges":[{"startOffset":2292,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2542,"endOffset":2635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13797,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":630,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"compareComplexShape","ranges":[{"startOffset":642,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"diffDescriptors","ranges":[{"startOffset":1888,"endOffset":13597,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":13641,"endOffset":13776,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/Indenter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"Indenter","ranges":[{"startOffset":33,"endOffset":144,"count":1}],"isBlockCoverage":true},{"functionName":"increase","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"decrease","ranges":[{"startOffset":220,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":292,"endOffset":331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3075,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":241,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptor","ranges":[{"startOffset":295,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2953,"endOffset":3050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/serialize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11884,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4107,"endOffset":4142,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4189,"endOffset":4224,"count":31}],"isBlockCoverage":true},{"functionName":"DescriptorSerializationError","ranges":[{"startOffset":4281,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"MissingPluginError","ranges":[{"startOffset":4482,"endOffset":4670,"count":0}],"isBlockCoverage":false},{"functionName":"PointerLookupError","ranges":[{"startOffset":4717,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedPluginError","ranges":[{"startOffset":4935,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedVersion","ranges":[{"startOffset":5321,"endOffset":5524,"count":0}],"isBlockCoverage":false},{"functionName":"shallowSerializeDescriptor","ranges":[{"startOffset":5528,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"serializeState","ranges":[{"startOffset":5713,"endOffset":6349,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6351,"endOffset":8161,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeState","ranges":[{"startOffset":8193,"endOffset":8512,"count":0}],"isBlockCoverage":false},{"functionName":"shallowDeserializeDescriptor","ranges":[{"startOffset":8514,"endOffset":8709,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeRecord","ranges":[{"startOffset":8711,"endOffset":9397,"count":0}],"isBlockCoverage":false},{"functionName":"buildPluginMap","ranges":[{"startOffset":9399,"endOffset":10738,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":10740,"endOffset":11849,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/md5-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":66,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/encoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9570,"count":1}],"isBlockCoverage":true},{"functionName":"encodeInteger","ranges":[{"startOffset":689,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"encodeValue","ranges":[{"startOffset":830,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeValue","ranges":[{"startOffset":3047,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"buildBuffer","ranges":[{"startOffset":5536,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6160,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"decodePlugins","ranges":[{"startOffset":7915,"endOffset":8425,"count":0}],"isBlockCoverage":false},{"functionName":"decodeRecord","ranges":[{"startOffset":8465,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"extractVersion","ranges":[{"startOffset":9220,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":9330,"endOffset":9545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/flattenDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"flattenDeep","ranges":[{"startOffset":412,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseFlatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"baseFlatten","ranges":[{"startOffset":568,"endOffset":1169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isFlattenable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1},{"startOffset":208,"endOffset":219,"count":0}],"isBlockCoverage":true},{"functionName":"isFlattenable","ranges":[{"startOffset":430,"endOffset":574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/pointer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":63,"endOffset":120,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer","ranges":[{"startOffset":249,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":392,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":439,"endOffset":479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/indent-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":741,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/convert-source-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4113,"count":1}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":164,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":389,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64","ranges":[{"startOffset":643,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":740,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":801,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":1292,"endOffset":1593,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":1624,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toBase64","ranges":[{"startOffset":1732,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":1876,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":2165,"endOffset":2216,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":2253,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":2497,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":2605,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":2677,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":2746,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":2837,"endOffset":2911,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":2936,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":3140,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":3358,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":3582,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeComments","ranges":[{"startOffset":3753,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":3854,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":3963,"endOffset":4111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1529,"count":1},{"startOffset":353,"endOffset":465,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":156,"endOffset":242,"count":1},{"startOffset":211,"endOffset":240,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":467,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":655,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":861,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1222,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1385,"endOffset":1528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/write-file-atomic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6812,"count":1}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":593,"endOffset":850,"count":1},{"startOffset":765,"endOffset":848,"count":0}],"isBlockCoverage":true},{"functionName":"getTmpname","ranges":[{"startOffset":875,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupOnExit","ranges":[{"startOffset":1079,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"serializeActiveFile","ranges":[{"startOffset":1240,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"isChownErrOk","ranges":[{"startOffset":1682,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileAsync","ranges":[{"startOffset":1945,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4412,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":4689,"endOffset":6811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/imurmurhash/imurmurhash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4412,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":443,"endOffset":4407,"count":1},{"startOffset":4352,"endOffset":4405,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3","ranges":[{"startOffset":811,"endOffset":1083,"count":1},{"startOffset":896,"endOffset":903,"count":0},{"startOffset":963,"endOffset":980,"count":0},{"startOffset":982,"endOffset":1018,"count":0},{"startOffset":1044,"endOffset":1077,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3.hash","ranges":[{"startOffset":1254,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.result","ranges":[{"startOffset":3193,"endOffset":3797,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.reset","ranges":[{"startOffset":3937,"endOffset":4078,"count":1},{"startOffset":3997,"endOffset":4003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"469","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4124,"count":1},{"startOffset":379,"endOffset":405,"count":0},{"startOffset":456,"endOffset":503,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":1479,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2013,"endOffset":2731,"count":13}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":2052,"endOffset":2729,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":2759,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2841,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":3433,"endOffset":3702,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":3743,"endOffset":4123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28321,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2164,"endOffset":2348,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":2928,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":3514,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3632,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":4727,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":5669,"endOffset":7313,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":7315,"endOffset":9040,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9042,"endOffset":11890,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":11892,"endOffset":12499,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":12581,"endOffset":12642,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":12789,"endOffset":13160,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":13267,"endOffset":13642,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":13725,"endOffset":14089,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":14178,"endOffset":14550,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":14598,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":15037,"endOffset":15433,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":15456,"endOffset":15768,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":15795,"endOffset":16115,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":16139,"endOffset":16512,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":16516,"endOffset":17233,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":17235,"endOffset":20593,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":20595,"endOffset":20801,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":20803,"endOffset":21167,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":21169,"endOffset":21883,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":21885,"endOffset":23499,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":23501,"endOffset":24082,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":24084,"endOffset":24734,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":24752,"endOffset":24846,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":24866,"endOffset":24978,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":25003,"endOffset":25097,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":25123,"endOffset":25235,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":25255,"endOffset":26624,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":26627,"endOffset":27699,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27716,"endOffset":27808,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":27833,"endOffset":27939,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":28019,"endOffset":28088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"internal/assert/assertion_error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16587,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1239,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1517,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2126,"endOffset":10512,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":10553,"endOffset":15437,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":15441,"endOffset":15516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15520,"endOffset":16550,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"internal/assert/calltracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2253,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":293,"endOffset":301,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"calls","ranges":[{"startOffset":358,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1371,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1991,"endOffset":2219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"474","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-typedarray/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1016,"count":1}],"isBlockCoverage":true},{"functionName":"isTypedArray","ranges":[{"startOffset":475,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictTypedArray","ranges":[{"startOffset":583,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"isLooseTypedArray","ranges":[{"startOffset":945,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"475","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/typedarray-to-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"typedarrayToBuffer","ranges":[{"startOffset":245,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"worker_threads.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":558,"count":1}],"isBlockCoverage":false}]},{"scriptId":"477","url":"internal/worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12381,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1807,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":1988,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":2111,"endOffset":6816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6820,"endOffset":7310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7314,"endOffset":7410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7414,"endOffset":7583,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7587,"endOffset":8421,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8425,"endOffset":8893,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":8897,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":9016,"endOffset":9850,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":9854,"endOffset":9960,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":9964,"endOffset":10076,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":10080,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":10183,"endOffset":10241,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":10245,"endOffset":10305,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":10309,"endOffset":10369,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":10373,"endOffset":10509,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":10513,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":10926,"endOffset":11248,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":11322,"endOffset":11916,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":11918,"endOffset":12204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"internal/worker/io.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8142,"count":1}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":2394,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":2552,"endOffset":2629,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":2768,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":3231,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":3343,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":3577,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":3808,"endOffset":4416,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":4422,"endOffset":5739,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":5789,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":6142,"endOffset":6447,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":6498,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":6651,"endOffset":6964,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":6968,"endOffset":7147,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7151,"endOffset":7390,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":7394,"endOffset":7663,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":7665,"endOffset":7826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"internal/event_target.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15914,"count":1}],"isBlockCoverage":false},{"functionName":"lazyNow","ranges":[{"startOffset":1125,"endOffset":1258,"count":0}],"isBlockCoverage":false},{"functionName":"isTrusted","ranges":[{"startOffset":1726,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":1756,"endOffset":2434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2438,"endOffset":2889,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":2893,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":2953,"endOffset":3011,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":3015,"endOffset":3053,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":3056,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":3104,"endOffset":3146,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3150,"endOffset":3184,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelable","ranges":[{"startOffset":3188,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":3238,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"get timeStamp","ranges":[{"startOffset":3327,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":3548,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":3614,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":3669,"endOffset":3709,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":3712,"endOffset":3754,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":3757,"endOffset":3836,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":3839,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":3898,"endOffset":3980,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":3983,"endOffset":4044,"count":0}],"isBlockCoverage":false},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":4048,"endOffset":4146,"count":1}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":4760,"endOffset":5243,"count":0}],"isBlockCoverage":false},{"functionName":"same","ranges":[{"startOffset":5247,"endOffset":5343,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":5347,"endOffset":5511,"count":0}],"isBlockCoverage":false},{"functionName":"initEventTarget","ranges":[{"startOffset":5515,"endOffset":5578,"count":0}],"isBlockCoverage":false},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5760,"endOffset":5790,"count":1}],"isBlockCoverage":false},{"functionName":"EventTarget","ranges":[{"startOffset":5795,"endOffset":5841,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5845,"endOffset":5908,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5911,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":5966,"endOffset":7770,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":7774,"endOffset":8603,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":8607,"endOffset":8993,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8997,"endOffset":10346,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10350,"endOffset":10650,"count":0}],"isBlockCoverage":false},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":10989,"endOffset":11201,"count":0}],"isBlockCoverage":false},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":11249,"endOffset":11280,"count":1}],"isBlockCoverage":false},{"functionName":"NodeEventTarget","ranges":[{"startOffset":11285,"endOffset":11348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11352,"endOffset":12100,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12104,"endOffset":12206,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxListeners","ranges":[{"startOffset":12210,"endOffset":12265,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":12269,"endOffset":12331,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":12335,"endOffset":12457,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":12461,"endOffset":12567,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":12571,"endOffset":12688,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":12692,"endOffset":12810,"count":0}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":12814,"endOffset":12941,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":12945,"endOffset":13103,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":13107,"endOffset":13257,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAddListener","ranges":[{"startOffset":13704,"endOffset":14042,"count":0}],"isBlockCoverage":false},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":14044,"endOffset":14392,"count":0}],"isBlockCoverage":false},{"functionName":"isEventTarget","ranges":[{"startOffset":14691,"endOffset":14790,"count":0}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":14792,"endOffset":15138,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":15140,"endOffset":15235,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":15237,"endOffset":15733,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"internal/error_serdes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3945,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":607,"endOffset":1406,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":1408,"endOffset":1825,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":1827,"endOffset":1947,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1974,"endOffset":2144,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2161,"endOffset":3065,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":3084,"endOffset":3888,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/mem/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2013,"count":1}],"isBlockCoverage":true},{"functionName":"mem","ranges":[{"startOffset":671,"endOffset":1603,"count":2},{"startOffset":763,"endOffset":915,"count":0},{"startOffset":1529,"endOffset":1543,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":937,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"mem.clear","ranges":[{"startOffset":1702,"endOffset":1989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/mem/node_modules/mimic-fn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":36,"endOffset":902,"count":4},{"startOffset":295,"endOffset":322,"count":2},{"startOffset":324,"endOffset":592,"count":2},{"startOffset":594,"endOffset":608,"count":0},{"startOffset":608,"endOffset":805,"count":2},{"startOffset":805,"endOffset":829,"count":0},{"startOffset":831,"endOffset":845,"count":0},{"startOffset":845,"endOffset":901,"count":2}],"isBlockCoverage":true},{"functionName":"canCopyProperty","ranges":[{"startOffset":1108,"endOffset":1474,"count":2},{"startOffset":1214,"endOffset":1471,"count":0}],"isBlockCoverage":true},{"functionName":"changePrototype","ranges":[{"startOffset":1501,"endOffset":1679,"count":2},{"startOffset":1633,"endOffset":1678,"count":0}],"isBlockCoverage":true},{"functionName":"wrappedToString","ranges":[{"startOffset":1706,"endOffset":1769,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":2238,"endOffset":2620,"count":2},{"startOffset":2290,"endOffset":2294,"count":0}],"isBlockCoverage":true},{"functionName":"mimicFn","ranges":[{"startOffset":2639,"endOffset":2901,"count":2},{"startOffset":2761,"endOffset":2824,"count":4}],"isBlockCoverage":true}]},{"scriptId":"483","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/map-age-cleaner/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3903,"count":1}],"isBlockCoverage":true},{"functionName":"__awaiter","ranges":[{"startOffset":58,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":671,"endOffset":752,"count":1},{"startOffset":723,"endOffset":728,"count":0}],"isBlockCoverage":true},{"functionName":"mapAgeCleaner","ranges":[{"startOffset":872,"endOffset":3774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-defer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/concordance-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3937,"count":1},{"startOffset":3680,"endOffset":3692,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3557,"endOffset":3633,"count":112},{"startOffset":3600,"endOffset":3631,"count":62}],"isBlockCoverage":true},{"functionName":"get maxDepth","ranges":[{"startOffset":3782,"endOffset":3858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3684,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi256","ranges":[{"startOffset":71,"endOffset":129,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":152,"endOffset":240,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":168,"endOffset":240,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":243,"endOffset":3566,"count":5},{"startOffset":1709,"endOffset":2041,"count":15},{"startOffset":1769,"endOffset":1948,"count":220}],"isBlockCoverage":true},{"functionName":"styles.rgbToAnsi256","ranges":[{"startOffset":2538,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"styles.hexToRgb","ranges":[{"startOffset":3024,"endOffset":3469,"count":0}],"isBlockCoverage":false},{"functionName":"styles.hexToAnsi256","ranges":[{"startOffset":3495,"endOffset":3546,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":62},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"488","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":315,"count":62},{"startOffset":294,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"489","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/cloneDeepWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1046,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":817,"endOffset":1012,"count":1},{"startOffset":921,"endOffset":932,"count":0}],"isBlockCoverage":true}]},{"scriptId":"490","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1956,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":1437,"endOffset":1927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/elementFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10519,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":188,"endOffset":10493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/node_modules/arrify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":152,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/diffShallow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12237,"count":1}],"isBlockCoverage":true},{"functionName":"diffShallow","ranges":[{"startOffset":14,"endOffset":12207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/escapeText.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"escapeText","ranges":[{"startOffset":14,"endOffset":210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/testJsonFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1551,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":48,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/serialize-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4606,"count":1}],"isBlockCoverage":true},{"functionName":"isAvaAssertionError","ranges":[{"startOffset":360,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":451,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"extractSource","ranges":[{"startOffset":635,"endOffset":1252,"count":0}],"isBlockCoverage":false},{"functionName":"buildSource","ranges":[{"startOffset":1254,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"trySerializeError","ranges":[{"startOffset":1981,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3944,"endOffset":4571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/clean-yaml-object/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2176,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"cleanYamlObj","ranges":[{"startOffset":132,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"setProp","ranges":[{"startOffset":1903,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"defaultFilter","ranges":[{"startOffset":2133,"endOffset":2175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"isError","ranges":[{"startOffset":160,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/stack-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7698,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":175,"endOffset":283,"count":57}],"isBlockCoverage":true},{"functionName":"StackUtils","ranges":[{"startOffset":466,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"nodeInternals","ranges":[{"startOffset":947,"endOffset":994,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":998,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"captureString","ranges":[{"startOffset":2098,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"capture","ranges":[{"startOffset":2500,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":3077,"endOffset":4052,"count":0}],"isBlockCoverage":false},{"functionName":"parseLine","ranges":[{"startOffset":4056,"endOffset":6125,"count":0}],"isBlockCoverage":false},{"functionName":"setFile","ranges":[{"startOffset":6129,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPackagesRegExp","ranges":[{"startOffset":6368,"endOffset":6650,"count":1},{"startOffset":6474,"endOffset":6649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6515,"endOffset":6545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/stack-utils/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":85,"endOffset":234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":false}]},{"scriptId":"502","url":"internal/source_map/source_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10490,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":3884,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3998,"endOffset":4060,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4098,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4197,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4506,"endOffset":8432,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":8490,"endOffset":8559,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":8649,"endOffset":9582,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":9649,"endOffset":9996,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":10191,"endOffset":10454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25292,"count":1}],"isBlockCoverage":true},{"functionName":"formatDescriptorDiff","ranges":[{"startOffset":351,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptorWithLabel","ranges":[{"startOffset":607,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithLabel","ranges":[{"startOffset":763,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"formatPowerAssertValue","ranges":[{"startOffset":898,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":1020,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1103,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":1136,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":1223,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"checkAssertionMessage","ranges":[{"startOffset":2019,"endOffset":2338,"count":7},{"startOffset":2108,"endOffset":2138,"count":0},{"startOffset":2159,"endOffset":2337,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithLongStackTrace","ranges":[{"startOffset":2396,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"validateExpectations","ranges":[{"startOffset":2595,"endOffset":5393,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpectations","ranges":[{"startOffset":5512,"endOffset":7824,"count":0}],"isBlockCoverage":false},{"functionName":"Assertions","ranges":[{"startOffset":7846,"endOffset":25256,"count":14},{"startOffset":24880,"endOffset":25253,"count":0}],"isBlockCoverage":true},{"functionName":"withSkip","ranges":[{"startOffset":8095,"endOffset":8166,"count":266}],"isBlockCoverage":true},{"functionName":"withPowerAssert","ranges":[{"startOffset":8346,"endOffset":8693,"count":0}],"isBlockCoverage":false},{"functionName":"checkMessage","ranges":[{"startOffset":8719,"endOffset":8964,"count":7},{"startOffset":8879,"endOffset":8963,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8990,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9039,"endOffset":9227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9252,"endOffset":10155,"count":7},{"startOffset":9322,"endOffset":9340,"count":0},{"startOffset":9396,"endOffset":10151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10181,"endOffset":10512,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10544,"endOffset":11156,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11191,"endOffset":11718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11745,"endOffset":12999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13028,"endOffset":14606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14640,"endOffset":17003,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17035,"endOffset":17622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17659,"endOffset":19535,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19566,"endOffset":21366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21395,"endOffset":21691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21719,"endOffset":22011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22038,"endOffset":22318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22346,"endOffset":22630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22658,"endOffset":23552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23583,"endOffset":24498,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24563,"endOffset":24874,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24967,"endOffset":25242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":65,"endOffset":200,"count":14},{"startOffset":106,"endOffset":163,"count":7},{"startOffset":134,"endOffset":162,"count":0},{"startOffset":164,"endOffset":197,"count":7}],"isBlockCoverage":true}]},{"scriptId":"505","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/like-selector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"isLikeSelector","ranges":[{"startOffset":14,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"selectComparable","ranges":[{"startOffset":377,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19512,"count":1}],"isBlockCoverage":true},{"functionName":"formatErrorValue","ranges":[{"startOffset":337,"endOffset":474,"count":0}],"isBlockCoverage":false},{"functionName":"captureSavedError","ranges":[{"startOffset":502,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext","ranges":[{"startOffset":746,"endOffset":4284,"count":14}],"isBlockCoverage":true},{"functionName":"pass","ranges":[{"startOffset":785,"endOffset":830,"count":7}],"isBlockCoverage":true},{"functionName":"pending","ranges":[{"startOffset":844,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":911,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":969,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"compareWithSnapshot","ranges":[{"startOffset":1040,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.snapshot.skip","ranges":[{"startOffset":1272,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.log","ranges":[{"startOffset":1323,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan","ranges":[{"startOffset":1579,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan.skip","ranges":[{"startOffset":1657,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.timeout","ranges":[{"startOffset":1685,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.teardown","ranges":[{"startOffset":1758,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.try","ranges":[{"startOffset":1822,"endOffset":4280,"count":0}],"isBlockCoverage":false},{"functionName":"get end","ranges":[{"startOffset":4287,"endOffset":4426,"count":0}],"isBlockCoverage":false},{"functionName":"get title","ranges":[{"startOffset":4429,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":4482,"endOffset":4545,"count":14}],"isBlockCoverage":true},{"functionName":"set context","ranges":[{"startOffset":4548,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"get passed","ranges":[{"startOffset":4621,"endOffset":4732,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgStart","ranges":[{"startOffset":4735,"endOffset":4836,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgEnd","ranges":[{"startOffset":4839,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"Test","ranges":[{"startOffset":4916,"endOffset":8051,"count":14},{"startOffset":5020,"endOffset":5025,"count":0}],"isBlockCoverage":true},{"functionName":"Test.compareWithSnapshot","ranges":[{"startOffset":5712,"endOffset":6423,"count":0}],"isBlockCoverage":false},{"functionName":"Test.skipSnapshot","ranges":[{"startOffset":6448,"endOffset":6704,"count":0}],"isBlockCoverage":false},{"functionName":"Test.runAttempt","ranges":[{"startOffset":6727,"endOffset":7540,"count":0}],"isBlockCoverage":false},{"functionName":"bindEndCallback","ranges":[{"startOffset":8054,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"endCallback","ranges":[{"startOffset":8460,"endOffset":8932,"count":0}],"isBlockCoverage":false},{"functionName":"createExecutionContext","ranges":[{"startOffset":8935,"endOffset":9001,"count":14}],"isBlockCoverage":true},{"functionName":"countPassedAssertion","ranges":[{"startOffset":9004,"endOffset":9356,"count":7},{"startOffset":9051,"endOffset":9142,"count":0},{"startOffset":9180,"endOffset":9305,"count":0}],"isBlockCoverage":true},{"functionName":"addLog","ranges":[{"startOffset":9359,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"addPendingAssertion","ranges":[{"startOffset":9403,"endOffset":9990,"count":0}],"isBlockCoverage":false},{"functionName":"addFailedAssertion","ranges":[{"startOffset":9993,"endOffset":10378,"count":0}],"isBlockCoverage":false},{"functionName":"finishAttempt","ranges":[{"startOffset":10381,"endOffset":11399,"count":0}],"isBlockCoverage":false},{"functionName":"saveFirstError","ranges":[{"startOffset":11402,"endOffset":11488,"count":0}],"isBlockCoverage":false},{"functionName":"plan","ranges":[{"startOffset":11491,"endOffset":11787,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":11790,"endOffset":12321,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":12324,"endOffset":12504,"count":7},{"startOffset":12385,"endOffset":12501,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":12507,"endOffset":12602,"count":14}],"isBlockCoverage":true},{"functionName":"addTeardown","ranges":[{"startOffset":12605,"endOffset":12994,"count":0}],"isBlockCoverage":false},{"functionName":"runTeardowns","ranges":[{"startOffset":12997,"endOffset":13307,"count":14},{"startOffset":13103,"endOffset":13132,"count":0},{"startOffset":13170,"endOffset":13304,"count":0}],"isBlockCoverage":true},{"functionName":"verifyPlan","ranges":[{"startOffset":13310,"endOffset":13671,"count":14},{"startOffset":13376,"endOffset":13414,"count":0},{"startOffset":13416,"endOffset":13668,"count":0}],"isBlockCoverage":true},{"functionName":"verifyAssertions","ranges":[{"startOffset":13674,"endOffset":14319,"count":14},{"startOffset":13719,"endOffset":13735,"count":0},{"startOffset":13773,"endOffset":13891,"count":0},{"startOffset":13931,"endOffset":14034,"count":0},{"startOffset":14070,"endOffset":14316,"count":7},{"startOffset":14104,"endOffset":14170,"count":0},{"startOffset":14202,"endOffset":14220,"count":0},{"startOffset":14222,"endOffset":14312,"count":0}],"isBlockCoverage":true},{"functionName":"trackThrows","ranges":[{"startOffset":14322,"endOffset":14388,"count":0}],"isBlockCoverage":false},{"functionName":"detectImproperThrows","ranges":[{"startOffset":14391,"endOffset":15064,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPendingThrowsAssertion","ranges":[{"startOffset":15067,"endOffset":15504,"count":0}],"isBlockCoverage":false},{"functionName":"attributeLeakedError","ranges":[{"startOffset":15507,"endOffset":15656,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":15659,"endOffset":15841,"count":14},{"startOffset":15776,"endOffset":15838,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":15844,"endOffset":18658,"count":14},{"startOffset":15942,"endOffset":16263,"count":0},{"startOffset":16354,"endOffset":16402,"count":7},{"startOffset":16498,"endOffset":16647,"count":0},{"startOffset":16674,"endOffset":16792,"count":7},{"startOffset":16824,"endOffset":17678,"count":0},{"startOffset":17695,"endOffset":18657,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16525,"endOffset":16641,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17277,"endOffset":17672,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17719,"endOffset":18624,"count":7}],"isBlockCoverage":true},{"functionName":"finishDueToAttributedError","ranges":[{"startOffset":17770,"endOffset":17812,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToTimeout","ranges":[{"startOffset":17845,"endOffset":17887,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToInactivity","ranges":[{"startOffset":17923,"endOffset":18163,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18190,"endOffset":18524,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18537,"endOffset":18565,"count":7}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":18661,"endOffset":19485,"count":14},{"startOffset":18760,"endOffset":18813,"count":0},{"startOffset":19057,"endOffset":19211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"507","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/plur/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":87,"endOffset":987,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/irregular-plurals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":165,"endOffset":227,"count":5}],"isBlockCoverage":true}]},{"scriptId":"509","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/dependency-tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":151,"endOffset":311,"count":3},{"startOffset":205,"endOffset":219,"count":1},{"startOffset":219,"endOffset":310,"count":2}],"isBlockCoverage":true},{"functionName":"track","ranges":[{"startOffset":337,"endOffset":552,"count":245},{"startOffset":401,"endOffset":415,"count":0},{"startOffset":452,"endOffset":483,"count":2}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":578,"endOffset":869,"count":1},{"startOffset":659,"endOffset":867,"count":3}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":740,"endOffset":863,"count":245}],"isBlockCoverage":true}]},{"scriptId":"510","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/line-numbers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2440,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":0,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"findTest","ranges":[{"startOffset":579,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":1169,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1284,"endOffset":2438,"count":1},{"startOffset":1371,"endOffset":2437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1632,"endOffset":2435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/source-map-support.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19729,"count":1},{"startOffset":172,"endOffset":235,"count":0},{"startOffset":238,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"dynamicRequire","ranges":[{"startOffset":444,"endOffset":516,"count":2}],"isBlockCoverage":true},{"functionName":"isInBrowser","ranges":[{"startOffset":1174,"endOffset":1478,"count":12},{"startOffset":1236,"endOffset":1248,"count":0},{"startOffset":1296,"endOffset":1380,"count":0},{"startOffset":1381,"endOffset":1474,"count":0}],"isBlockCoverage":true},{"functionName":"hasGlobalProcessEventEmitter","ranges":[{"startOffset":1480,"endOffset":1625,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":1627,"endOffset":1829,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1665,"endOffset":1826,"count":24},{"startOffset":1723,"endOffset":1805,"count":32},{"startOffset":1770,"endOffset":1799,"count":3},{"startOffset":1805,"endOffset":1825,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1912,"endOffset":2942,"count":12},{"startOffset":2040,"endOffset":2341,"count":0},{"startOffset":2375,"endOffset":2416,"count":0},{"startOffset":2460,"endOffset":2720,"count":0},{"startOffset":2751,"endOffset":2845,"count":3},{"startOffset":2850,"endOffset":2894,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2174,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":3117,"endOffset":3605,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":3607,"endOffset":4650,"count":12},{"startOffset":3685,"endOffset":4173,"count":0},{"startOffset":4576,"endOffset":4594,"count":0},{"startOffset":4625,"endOffset":4649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5057,"endOffset":5798,"count":12},{"startOffset":5168,"endOffset":5797,"count":0}],"isBlockCoverage":true},{"functionName":"mapSourcePosition","ranges":[{"startOffset":5802,"endOffset":7614,"count":298},{"startOffset":5910,"endOffset":6822,"count":12},{"startOffset":6068,"endOffset":6705,"count":0},{"startOffset":6923,"endOffset":6981,"count":0},{"startOffset":6983,"endOffset":7592,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6450,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":7754,"endOffset":8450,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":8846,"endOffset":10836,"count":298},{"startOffset":8940,"endOffset":8974,"count":0},{"startOffset":9048,"endOffset":9064,"count":0},{"startOffset":9066,"endOffset":9185,"count":0},{"startOffset":9244,"endOffset":9474,"count":0},{"startOffset":9897,"endOffset":9913,"count":179},{"startOffset":9936,"endOffset":10558,"count":150},{"startOffset":10080,"endOffset":10112,"count":0},{"startOffset":10178,"endOffset":10479,"count":143},{"startOffset":10239,"endOffset":10280,"count":67},{"startOffset":10330,"endOffset":10418,"count":140},{"startOffset":10420,"endOffset":10473,"count":28},{"startOffset":10479,"endOffset":10554,"count":7},{"startOffset":10558,"endOffset":10757,"count":148},{"startOffset":10583,"endOffset":10642,"count":29},{"startOffset":10620,"endOffset":10636,"count":0},{"startOffset":10642,"endOffset":10757,"count":119},{"startOffset":10666,"endOffset":10697,"count":117},{"startOffset":10697,"endOffset":10757,"count":2},{"startOffset":10775,"endOffset":10819,"count":296}],"isBlockCoverage":true},{"functionName":"cloneCallSite","ranges":[{"startOffset":10838,"endOffset":11143,"count":298}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10956,"endOffset":11084,"count":5960},{"startOffset":11017,"endOffset":11065,"count":5364},{"startOffset":11066,"endOffset":11079,"count":596}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":11019,"endOffset":11065,"count":1492}],"isBlockCoverage":true},{"functionName":"wrapCallSite","ranges":[{"startOffset":11145,"endOffset":13493,"count":298},{"startOffset":11257,"endOffset":11316,"count":0},{"startOffset":11340,"endOffset":11393,"count":0},{"startOffset":11633,"endOffset":11668,"count":0},{"startOffset":12275,"endOffset":12279,"count":0},{"startOffset":12300,"endOffset":12324,"count":0},{"startOffset":12325,"endOffset":12342,"count":0},{"startOffset":12343,"endOffset":12361,"count":0},{"startOffset":12363,"endOffset":12400,"count":0},{"startOffset":13129,"endOffset":13238,"count":0},{"startOffset":13254,"endOffset":13492,"count":0}],"isBlockCoverage":true},{"functionName":"frame.getFunctionName","ranges":[{"startOffset":12660,"endOffset":12829,"count":298},{"startOffset":12711,"endOffset":12759,"count":32},{"startOffset":12759,"endOffset":12822,"count":266}],"isBlockCoverage":true},{"functionName":"frame.getFileName","ranges":[{"startOffset":12855,"endOffset":12893,"count":0}],"isBlockCoverage":false},{"functionName":"frame.getLineNumber","ranges":[{"startOffset":12921,"endOffset":12957,"count":298}],"isBlockCoverage":true},{"functionName":"frame.getColumnNumber","ranges":[{"startOffset":12987,"endOffset":13029,"count":298}],"isBlockCoverage":true},{"functionName":"frame.getScriptNameOrSourceURL","ranges":[{"startOffset":13068,"endOffset":13106,"count":298}],"isBlockCoverage":true},{"functionName":"frame.getEvalOrigin","ranges":[{"startOffset":13352,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":13605,"endOffset":14218,"count":32},{"startOffset":13683,"endOffset":13741,"count":0},{"startOffset":13767,"endOffset":13777,"count":0},{"startOffset":13809,"endOffset":13814,"count":2},{"startOffset":13990,"endOffset":14109,"count":298}],"isBlockCoverage":true},{"functionName":"getErrorSource","ranges":[{"startOffset":14285,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"printErrorAndExit","ranges":[{"startOffset":15106,"endOffset":15483,"count":0}],"isBlockCoverage":false},{"functionName":"shimEmitUncaughtException","ranges":[{"startOffset":15485,"endOffset":15904,"count":0}],"isBlockCoverage":false},{"functionName":"exports.install","ranges":[{"startOffset":16228,"endOffset":19374,"count":2},{"startOffset":16268,"endOffset":16273,"count":0},{"startOffset":16303,"endOffset":16534,"count":1},{"startOffset":16409,"endOffset":16530,"count":0},{"startOffset":16660,"endOffset":16807,"count":0},{"startOffset":16942,"endOffset":17097,"count":1},{"startOffset":16987,"endOffset":17032,"count":0},{"startOffset":17190,"endOffset":17207,"count":0},{"startOffset":17209,"endOffset":17703,"count":0},{"startOffset":17841,"endOffset":17884,"count":0},{"startOffset":17966,"endOffset":18056,"count":1},{"startOffset":18194,"endOffset":18200,"count":0},{"startOffset":18657,"endOffset":18698,"count":0},{"startOffset":18705,"endOffset":18716,"count":0},{"startOffset":19255,"endOffset":19288,"count":0},{"startOffset":19290,"endOffset":19368,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":17447,"endOffset":17632,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resetRetrieveHandlers","ranges":[{"startOffset":19409,"endOffset":19728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"513","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14356,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":3228,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":4246,"endOffset":5137,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":6124,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9271,"endOffset":10865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":11038,"endOffset":12997,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":13057,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13608,"endOffset":14111,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":14218,"endOffset":14304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1},{"startOffset":6427,"endOffset":6440,"count":0},{"startOffset":6604,"endOffset":6619,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4734,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5859,"endOffset":5939,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5945,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6273,"endOffset":6375,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6443,"endOffset":6550,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6622,"endOffset":7404,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7741,"endOffset":8377,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8830,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9562,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9947,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"parseSourceMapInput","ranges":[{"startOffset":10788,"endOffset":10881,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceURL","ranges":[{"startOffset":11047,"endOffset":12892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40562,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":805,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2628,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2970,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3188,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3567,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4634,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6792,"endOffset":9416,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10950,"endOffset":13394,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer._findSourceIndex","ranges":[{"startOffset":13679,"endOffset":14207,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":14544,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16796,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":16922,"endOffset":17098,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":17346,"endOffset":20551,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":20750,"endOffset":21569,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":21724,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":23769,"endOffset":25022,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":25195,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":25678,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":28401,"endOffset":29507,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":31455,"endOffset":32949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33343,"endOffset":33607,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":34426,"endOffset":35605,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":35780,"endOffset":35951,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":36179,"endOffset":36618,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":37381,"endOffset":38292,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":38543,"endOffset":40498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13808,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6757,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7448,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8168,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8763,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9399,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10120,"endOffset":10264,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10508,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11111,"endOffset":11230,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11371,"endOffset":13772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/buffer-from/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1595,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayBuffer","ranges":[{"startOffset":184,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":281,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":824,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"bufferFrom","ranges":[{"startOffset":1154,"endOffset":1565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/install.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":105,"endOffset":200,"count":1},{"startOffset":173,"endOffset":178,"count":0}],"isBlockCoverage":true},{"functionName":"retrieveSourceMap","ranges":[{"startOffset":296,"endOffset":482,"count":8},{"startOffset":347,"endOffset":446,"count":0}],"isBlockCoverage":true}]},{"scriptId":"525","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":431,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":215,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":301,"endOffset":396,"count":1},{"startOffset":369,"endOffset":374,"count":0}],"isBlockCoverage":true}]},{"scriptId":"527","url":"internal/fs/read_file_context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2925,"count":1}],"isBlockCoverage":false},{"functionName":"readFileAfterRead","ranges":[{"startOffset":655,"endOffset":1177,"count":1},{"startOffset":748,"endOffset":774,"count":0},{"startOffset":840,"endOffset":858,"count":0},{"startOffset":886,"endOffset":1175,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterClose","ranges":[{"startOffset":1179,"endOffset":1756,"count":1},{"startOffset":1335,"endOffset":1371,"count":0},{"startOffset":1415,"endOffset":1468,"count":0},{"startOffset":1516,"endOffset":1562,"count":0},{"startOffset":1636,"endOffset":1679,"count":0},{"startOffset":1684,"endOffset":1727,"count":0}],"isBlockCoverage":true},{"functionName":"ReadFileContext","ranges":[{"startOffset":1784,"endOffset":2044,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":2048,"endOffset":2592,"count":1},{"startOffset":2131,"endOffset":2298,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":2596,"endOffset":2887,"count":1},{"startOffset":2755,"endOffset":2857,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":2780,"endOffset":2835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/release/test/library/visitor.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2504,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180,"endOffset":407,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":426,"endOffset":690,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":714,"endOffset":992,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1017,"endOffset":1283,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1299,"endOffset":1543,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1563,"endOffset":1822,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1851,"endOffset":2162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2196,"endOffset":2461,"count":1}],"isBlockCoverage":true}]},{"scriptId":"529","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6676,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":173,"endOffset":216,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":305,"endOffset":364,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":446,"endOffset":496,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":578,"endOffset":628,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":704,"endOffset":750,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":825,"endOffset":874,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":951,"endOffset":999,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1076,"endOffset":1125,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1202,"endOffset":1251,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1336,"endOffset":1388,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1474,"endOffset":1529,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1619,"endOffset":1678,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1769,"endOffset":1829,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1909,"endOffset":1958,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2042,"endOffset":2095,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2180,"endOffset":2234,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2312,"endOffset":2362,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2444,"endOffset":2498,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2581,"endOffset":2636,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2718,"endOffset":2776,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2862,"endOffset":2924,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3011,"endOffset":3074,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3159,"endOffset":3219,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3308,"endOffset":3372,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3462,"endOffset":3527,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3601,"endOffset":3643,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3721,"endOffset":3767,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3846,"endOffset":3893,"count":7}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":4294,"endOffset":4444,"count":1}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":4391,"endOffset":4425,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4515,"endOffset":4553,"count":7}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":4559,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":4634,"endOffset":4668,"count":6}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":4689,"endOffset":4847,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":4794,"endOffset":4828,"count":6}],"isBlockCoverage":true},{"functionName":"_template","ranges":[{"startOffset":4849,"endOffset":5007,"count":1}],"isBlockCoverage":true},{"functionName":"_template","ranges":[{"startOffset":4954,"endOffset":4988,"count":6}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":5260,"endOffset":5446,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":5448,"endOffset":6191,"count":1},{"startOffset":5530,"endOffset":5603,"count":0},{"startOffset":5605,"endOffset":5701,"count":0},{"startOffset":5703,"endOffset":5831,"count":0},{"startOffset":5854,"endOffset":6190,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":6193,"endOffset":6288,"count":4},{"startOffset":6267,"endOffset":6285,"count":0}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":6446,"endOffset":6505,"count":0}],"isBlockCoverage":false},{"functionName":"Plugin","ranges":[{"startOffset":6550,"endOffset":6676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/file/file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6966,"count":1}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":107,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":263,"endOffset":422,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":369,"endOffset":403,"count":6}],"isBlockCoverage":true},{"functionName":"_codeFrame","ranges":[{"startOffset":424,"endOffset":562,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":564,"endOffset":704,"count":0}],"isBlockCoverage":false},{"functionName":"_helperModuleTransforms","ranges":[{"startOffset":706,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"_semver","ranges":[{"startOffset":886,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1033,"endOffset":1128,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1130,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1318,"endOffset":2061,"count":1},{"startOffset":1400,"endOffset":1473,"count":0},{"startOffset":1475,"endOffset":1571,"count":0},{"startOffset":1573,"endOffset":1701,"count":0},{"startOffset":1724,"endOffset":2060,"count":0}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":2088,"endOffset":2207,"count":0}],"isBlockCoverage":false},{"functionName":"File","ranges":[{"startOffset":2228,"endOffset":3026,"count":7}],"isBlockCoverage":true},{"functionName":"getCode","ranges":[{"startOffset":2555,"endOffset":2570,"count":0}],"isBlockCoverage":false},{"functionName":"getScope","ranges":[{"startOffset":2588,"endOffset":2604,"count":0}],"isBlockCoverage":false},{"functionName":"get shebang","ranges":[{"startOffset":3030,"endOffset":3152,"count":0}],"isBlockCoverage":false},{"functionName":"set shebang","ranges":[{"startOffset":3156,"endOffset":3342,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3346,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3812,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":3861,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":3910,"endOffset":4010,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":4014,"endOffset":4295,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":4299,"endOffset":4792,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":4796,"endOffset":5891,"count":0}],"isBlockCoverage":false},{"functionName":"addTemplateObject","ranges":[{"startOffset":5895,"endOffset":6017,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":6021,"endOffset":6938,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/tools/build-external-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5277,"count":1}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":109,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"_generator","ranges":[{"startOffset":265,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"_template","ranges":[{"startOffset":428,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":588,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":807,"endOffset":902,"count":1},{"startOffset":881,"endOffset":899,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":904,"endOffset":1090,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1092,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmdWrapper","ranges":[{"startOffset":1861,"endOffset":2266,"count":0}],"isBlockCoverage":false},{"functionName":"buildGlobal","ranges":[{"startOffset":2269,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"buildModule","ranges":[{"startOffset":3021,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmd","ranges":[{"startOffset":3340,"endOffset":4012,"count":0}],"isBlockCoverage":false},{"functionName":"buildVar","ranges":[{"startOffset":4014,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"buildHelpers","ranges":[{"startOffset":4369,"endOffset":4916,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":4918,"endOffset":5277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1760,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":299,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":448,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":594,"endOffset":653,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":732,"endOffset":787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":877,"endOffset":943,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1033,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1181,"endOffset":1233,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1315,"endOffset":1367,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1446,"endOffset":1495,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1574,"endOffset":1623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/package.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":124,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":299,"endOffset":394,"count":0}],"isBlockCoverage":false},{"functionName":"findPackageData","ranges":[{"startOffset":438,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1077,"endOffset":1668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1893,"count":1}],"isBlockCoverage":true},{"functionName":"_fs2","ranges":[{"startOffset":241,"endOffset":376,"count":1}],"isBlockCoverage":true},{"functionName":"_fs2","ranges":[{"startOffset":323,"endOffset":357,"count":6}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":378,"endOffset":473,"count":1},{"startOffset":446,"endOffset":451,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":475,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":663,"endOffset":1406,"count":1},{"startOffset":745,"endOffset":818,"count":0},{"startOffset":820,"endOffset":916,"count":0},{"startOffset":918,"endOffset":1046,"count":0},{"startOffset":1069,"endOffset":1405,"count":0}],"isBlockCoverage":true},{"functionName":"makeStaticFileCache","ranges":[{"startOffset":1408,"endOffset":1700,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1482,"endOffset":1696,"count":1},{"startOffset":1628,"endOffset":1695,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1548,"endOffset":1573,"count":7}],"isBlockCoverage":true},{"functionName":"fileMtime","ranges":[{"startOffset":1702,"endOffset":1893,"count":7},{"startOffset":1838,"endOffset":1861,"count":0},{"startOffset":1863,"endOffset":1871,"count":0}],"isBlockCoverage":true}]},{"scriptId":"535","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/caching.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7465,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":306,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":401,"endOffset":435,"count":22}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":537,"endOffset":632,"count":1},{"startOffset":605,"endOffset":610,"count":0}],"isBlockCoverage":true},{"functionName":"synchronize","ranges":[{"startOffset":654,"endOffset":708,"count":23}],"isBlockCoverage":true},{"functionName":"genTrue","ranges":[{"startOffset":711,"endOffset":753,"count":18}],"isBlockCoverage":true},{"functionName":"makeWeakCache","ranges":[{"startOffset":755,"endOffset":837,"count":17}],"isBlockCoverage":true},{"functionName":"makeWeakCacheSync","ranges":[{"startOffset":839,"endOffset":924,"count":15}],"isBlockCoverage":true},{"functionName":"makeStrongCache","ranges":[{"startOffset":926,"endOffset":1006,"count":12}],"isBlockCoverage":true},{"functionName":"makeStrongCacheSync","ranges":[{"startOffset":1008,"endOffset":1097,"count":8}],"isBlockCoverage":true},{"functionName":"makeCachedFunction","ranges":[{"startOffset":1099,"endOffset":2155,"count":29}],"isBlockCoverage":true},{"functionName":"cachedFunction","ranges":[{"startOffset":1280,"endOffset":2152,"count":60},{"startOffset":1408,"endOffset":1424,"count":42},{"startOffset":1425,"endOffset":1440,"count":18},{"startOffset":1561,"endOffset":1581,"count":24},{"startOffset":1581,"endOffset":1766,"count":36},{"startOffset":1766,"endOffset":1938,"count":20},{"startOffset":1938,"endOffset":1980,"count":16},{"startOffset":1980,"endOffset":2058,"count":36},{"startOffset":2058,"endOffset":2129,"count":0},{"startOffset":2129,"endOffset":2151,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1852,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedValue","ranges":[{"startOffset":2157,"endOffset":2473,"count":78},{"startOffset":2260,"endOffset":2420,"count":24},{"startOffset":2416,"endOffset":2420,"count":0},{"startOffset":2420,"endOffset":2472,"count":54}],"isBlockCoverage":true},{"functionName":"getCachedValueOrWait","ranges":[{"startOffset":2475,"endOffset":2970,"count":60},{"startOffset":2640,"endOffset":2664,"count":24},{"startOffset":2664,"endOffset":2686,"count":36},{"startOffset":2686,"endOffset":2917,"count":18},{"startOffset":2777,"endOffset":2913,"count":0},{"startOffset":2917,"endOffset":2969,"count":36}],"isBlockCoverage":true},{"functionName":"setupAsyncLocks","ranges":[{"startOffset":2972,"endOffset":3141,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionCache","ranges":[{"startOffset":3143,"endOffset":3919,"count":36},{"startOffset":3229,"endOffset":3246,"count":24},{"startOffset":3338,"endOffset":3472,"count":27},{"startOffset":3478,"endOffset":3626,"count":1},{"startOffset":3632,"endOffset":3912,"count":8},{"startOffset":3669,"endOffset":3770,"count":0}],"isBlockCoverage":true},{"functionName":"CacheConfigurator","ranges":[{"startOffset":3949,"endOffset":4179,"count":36}],"isBlockCoverage":true},{"functionName":"simple","ranges":[{"startOffset":4183,"endOffset":4238,"count":7}],"isBlockCoverage":true},{"functionName":"mode","ranges":[{"startOffset":4242,"endOffset":4399,"count":36},{"startOffset":4272,"endOffset":4287,"count":0},{"startOffset":4311,"endOffset":4328,"count":27},{"startOffset":4328,"endOffset":4355,"count":9},{"startOffset":4355,"endOffset":4375,"count":1},{"startOffset":4375,"endOffset":4398,"count":8}],"isBlockCoverage":true},{"functionName":"forever","ranges":[{"startOffset":4403,"endOffset":4691,"count":27},{"startOffset":4438,"endOffset":4525,"count":0},{"startOffset":4548,"endOffset":4631,"count":0}],"isBlockCoverage":true},{"functionName":"never","ranges":[{"startOffset":4695,"endOffset":4983,"count":0}],"isBlockCoverage":false},{"functionName":"using","ranges":[{"startOffset":4987,"endOffset":5654,"count":9},{"startOffset":5027,"endOffset":5114,"count":0},{"startOffset":5154,"endOffset":5249,"count":0},{"startOffset":5493,"endOffset":5599,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5517,"endOffset":5591,"count":0}],"isBlockCoverage":false},{"functionName":"invalidate","ranges":[{"startOffset":5658,"endOffset":5744,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":5748,"endOffset":5953,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5804,"endOffset":5948,"count":6},{"startOffset":5901,"endOffset":5914,"count":0}],"isBlockCoverage":true},{"functionName":"deactivate","ranges":[{"startOffset":5957,"endOffset":6001,"count":36}],"isBlockCoverage":true},{"functionName":"configured","ranges":[{"startOffset":6005,"endOffset":6052,"count":36}],"isBlockCoverage":true},{"functionName":"makeSimpleConfigurator","ranges":[{"startOffset":6057,"endOffset":6541,"count":7}],"isBlockCoverage":true},{"functionName":"cacheFn","ranges":[{"startOffset":6100,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.forever","ranges":[{"startOffset":6312,"endOffset":6333,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.never","ranges":[{"startOffset":6354,"endOffset":6373,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.using","ranges":[{"startOffset":6394,"endOffset":6441,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.invalidate","ranges":[{"startOffset":6467,"endOffset":6519,"count":0}],"isBlockCoverage":false},{"functionName":"assertSimpleType","ranges":[{"startOffset":6543,"endOffset":7184,"count":0}],"isBlockCoverage":false},{"functionName":"Lock","ranges":[{"startOffset":7201,"endOffset":7385,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":7389,"endOffset":7462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/gensync-utils/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1981,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":251,"endOffset":399,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":346,"endOffset":380,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":401,"endOffset":496,"count":1},{"startOffset":469,"endOffset":474,"count":0}],"isBlockCoverage":true},{"functionName":"id","ranges":[{"startOffset":509,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":563,"endOffset":605,"count":20}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":658,"endOffset":669,"count":18}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":682,"endOffset":702,"count":42}],"isBlockCoverage":true},{"functionName":"maybeAsync","ranges":[{"startOffset":735,"endOffset":1040,"count":9}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":809,"endOffset":950,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":957,"endOffset":1031,"count":6}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":1093,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1120,"endOffset":1137,"count":0}],"isBlockCoverage":false},{"functionName":"forwardAsync","ranges":[{"startOffset":1143,"endOffset":1312,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1405,"endOffset":1462,"count":2}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":1475,"endOffset":1691,"count":18},{"startOffset":1660,"endOffset":1687,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1567,"endOffset":1636,"count":18}],"isBlockCoverage":true},{"functionName":"isThenable","ranges":[{"startOffset":1831,"endOffset":1981,"count":9},{"startOffset":1873,"endOffset":1930,"count":8},{"startOffset":1931,"endOffset":1944,"count":0},{"startOffset":1945,"endOffset":1978,"count":0}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/gensync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9627,"count":1}],"isBlockCoverage":true},{"functionName":"gensync","ranges":[{"startOffset":589,"endOffset":843,"count":47},{"startOffset":684,"endOffset":729,"count":16},{"startOffset":729,"endOffset":781,"count":31}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":922,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1058,"endOffset":1615,"count":7},{"startOffset":1168,"endOffset":1250,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1203,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1309,"endOffset":1324,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1349,"endOffset":1605,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1419,"endOffset":1562,"count":28},{"startOffset":1531,"endOffset":1548,"count":7}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":1700,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1945,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"makeFunctionAPI","ranges":[{"startOffset":2391,"endOffset":3159,"count":47}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":2451,"endOffset":2528,"count":22}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":2541,"endOffset":2689,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2586,"endOffset":2681,"count":7}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":2704,"endOffset":3137,"count":18},{"startOffset":2789,"endOffset":2931,"count":0},{"startOffset":3007,"endOffset":3061,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3088,"endOffset":3113,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3115,"endOffset":3129,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeof","ranges":[{"startOffset":3161,"endOffset":3556,"count":80},{"startOffset":3253,"endOffset":3308,"count":46},{"startOffset":3330,"endOffset":3555,"count":0}],"isBlockCoverage":true},{"functionName":"makeError","ranges":[{"startOffset":3557,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"newGenerator","ranges":[{"startOffset":3774,"endOffset":5308,"count":16},{"startOffset":4173,"endOffset":4183,"count":11},{"startOffset":4185,"endOffset":4322,"count":0},{"startOffset":4356,"endOffset":4761,"count":15},{"startOffset":4390,"endOffset":4405,"count":4},{"startOffset":4406,"endOffset":4435,"count":4},{"startOffset":4437,"endOffset":4473,"count":2},{"startOffset":4488,"endOffset":4501,"count":11},{"startOffset":4502,"endOffset":4527,"count":11},{"startOffset":4529,"endOffset":4585,"count":1},{"startOffset":4637,"endOffset":4691,"count":3},{"startOffset":4729,"endOffset":4757,"count":3},{"startOffset":4796,"endOffset":4826,"count":15}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":4885,"endOffset":4944,"count":23}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":4957,"endOffset":5299,"count":66},{"startOffset":5008,"endOffset":5072,"count":6},{"startOffset":5072,"endOffset":5293,"count":60},{"startOffset":5237,"endOffset":5293,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5129,"endOffset":5227,"count":60},{"startOffset":5189,"endOffset":5217,"count":0}],"isBlockCoverage":true},{"functionName":"wrapGenerator","ranges":[{"startOffset":5310,"endOffset":5460,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5397,"endOffset":5456,"count":51}],"isBlockCoverage":true},{"functionName":"buildOperation","ranges":[{"startOffset":5462,"endOffset":6390,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5560,"endOffset":6386,"count":96},{"startOffset":5638,"endOffset":5783,"count":23},{"startOffset":5783,"endOffset":6089,"count":73},{"startOffset":6089,"endOffset":6148,"count":0},{"startOffset":6148,"endOffset":6325,"count":73},{"startOffset":6325,"endOffset":6356,"count":0},{"startOffset":6356,"endOffset":6385,"count":73}],"isBlockCoverage":true},{"functionName":"async.call.result.err.err","ranges":[{"startOffset":5865,"endOffset":5966,"count":73},{"startOffset":5898,"endOffset":5905,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5976,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateSync","ranges":[{"startOffset":6392,"endOffset":6527,"count":22},{"startOffset":6475,"endOffset":6509,"count":23}],"isBlockCoverage":true},{"functionName":"evaluateAsync","ranges":[{"startOffset":6529,"endOffset":7460,"count":53}],"isBlockCoverage":true},{"functionName":"step","ranges":[{"startOffset":6579,"endOffset":7454,"count":65},{"startOffset":6669,"endOffset":7368,"count":73},{"startOffset":7212,"endOffset":7360,"count":12},{"startOffset":7368,"endOffset":7405,"count":53},{"startOffset":7405,"endOffset":7450,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7000,"endOffset":7124,"count":73},{"startOffset":7028,"endOffset":7075,"count":61},{"startOffset":7075,"endOffset":7114,"count":12}],"isBlockCoverage":true},{"functionName":"assertStart","ranges":[{"startOffset":7462,"endOffset":7775,"count":96},{"startOffset":7535,"endOffset":7774,"count":0}],"isBlockCoverage":true},{"functionName":"assertSuspend","ranges":[{"startOffset":7776,"endOffset":8198,"count":73},{"startOffset":7872,"endOffset":8014,"count":0},{"startOffset":8023,"endOffset":8153,"count":0}],"isBlockCoverage":true},{"functionName":"throwError","ranges":[{"startOffset":8200,"endOffset":8548,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":8550,"endOffset":8705,"count":0}],"isBlockCoverage":false},{"functionName":"setFunctionMetadata","ranges":[{"startOffset":8707,"endOffset":9626,"count":49},{"startOffset":8787,"endOffset":9269,"count":37},{"startOffset":9178,"endOffset":9183,"count":0},{"startOffset":9518,"endOffset":9523,"count":0}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"mergeOptions","ranges":[{"startOffset":167,"endOffset":801,"count":16},{"startOffset":246,"endOffset":799,"count":82},{"startOffset":275,"endOffset":295,"count":0},{"startOffset":297,"endOffset":466,"count":0},{"startOffset":498,"endOffset":521,"count":0},{"startOffset":523,"endOffset":707,"count":0},{"startOffset":773,"endOffset":789,"count":74}],"isBlockCoverage":true},{"functionName":"mergeDefaultFields","ranges":[{"startOffset":803,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"isIterableIterator","ranges":[{"startOffset":968,"endOffset":1108,"count":36},{"startOffset":1058,"endOffset":1105,"count":20}],"isBlockCoverage":true}]},{"scriptId":"539","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/gensync-utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1088,"count":1}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":140,"endOffset":273,"count":1}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":220,"endOffset":254,"count":6}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":275,"endOffset":423,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":370,"endOffset":404,"count":2}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":425,"endOffset":520,"count":2},{"startOffset":493,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":711,"endOffset":845,"count":3}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":859,"endOffset":933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"540","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/configuration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11008,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":346,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":435,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":490,"endOffset":629,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":576,"endOffset":610,"count":55}],"isBlockCoverage":true},{"functionName":"_json","ranges":[{"startOffset":631,"endOffset":771,"count":0}],"isBlockCoverage":false},{"functionName":"_gensync","ranges":[{"startOffset":773,"endOffset":921,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":868,"endOffset":902,"count":6}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1292,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1480,"endOffset":2223,"count":1},{"startOffset":1562,"endOffset":1635,"count":0},{"startOffset":1637,"endOffset":1733,"count":0},{"startOffset":1735,"endOffset":1863,"count":0},{"startOffset":1886,"endOffset":2222,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2225,"endOffset":2320,"count":6},{"startOffset":2293,"endOffset":2298,"count":3},{"startOffset":2299,"endOffset":2317,"count":3}],"isBlockCoverage":true},{"functionName":"findConfigUpwards","ranges":[{"startOffset":2728,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"findRelativeConfig","ranges":[{"startOffset":3109,"endOffset":3899,"count":0}],"isBlockCoverage":false},{"functionName":"findRootConfig","ranges":[{"startOffset":3901,"endOffset":4027,"count":7}],"isBlockCoverage":true},{"functionName":"loadOneConfig","ranges":[{"startOffset":4029,"endOffset":4722,"count":7},{"startOffset":4625,"endOffset":4702,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4169,"endOffset":4249,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4285,"endOffset":4591,"count":28},{"startOffset":4330,"endOffset":4347,"count":0},{"startOffset":4349,"endOffset":4549,"count":0}],"isBlockCoverage":true},{"functionName":"loadConfig","ranges":[{"startOffset":4724,"endOffset":5364,"count":0}],"isBlockCoverage":false},{"functionName":"readConfig","ranges":[{"startOffset":5366,"endOffset":5610,"count":28},{"startOffset":5488,"endOffset":5505,"count":21},{"startOffset":5506,"endOffset":5523,"count":14},{"startOffset":5524,"endOffset":5579,"count":21},{"startOffset":5580,"endOffset":5607,"count":7}],"isBlockCoverage":true},{"functionName":"readConfigJS","ranges":[{"startOffset":5698,"endOffset":7332,"count":3},{"startOffset":5816,"endOffset":6676,"count":0},{"startOffset":6677,"endOffset":6702,"count":0},{"startOffset":6704,"endOffset":7219,"count":0},{"startOffset":7221,"endOffset":7331,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7396,"endOffset":7745,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7804,"endOffset":8408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8468,"endOffset":8988,"count":0}],"isBlockCoverage":false},{"functionName":"resolveShowConfigPath","ranges":[{"startOffset":8992,"endOffset":9447,"count":8},{"startOffset":9118,"endOffset":9429,"count":0}],"isBlockCoverage":true},{"functionName":"throwConfigError","ranges":[{"startOffset":9449,"endOffset":11008,"count":0}],"isBlockCoverage":false}]},{"scriptId":"541","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/helpers/config-api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2207,"count":1}],"isBlockCoverage":true},{"functionName":"_semver","ranges":[{"startOffset":108,"endOffset":253,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":322,"endOffset":417,"count":0}],"isBlockCoverage":false},{"functionName":"makeAPI","ranges":[{"startOffset":419,"endOffset":1124,"count":7}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":459,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"caller","ranges":[{"startOffset":916,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1075,"endOffset":1086,"count":0}],"isBlockCoverage":false},{"functionName":"assertVersion","ranges":[{"startOffset":1126,"endOffset":2207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/module-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2587,"count":1},{"startOffset":1245,"endOffset":1263,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":172,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"_url","ranges":[{"startOffset":313,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":427,"endOffset":522,"count":0}],"isBlockCoverage":false},{"functionName":"asyncGeneratorStep","ranges":[{"startOffset":524,"endOffset":789,"count":0}],"isBlockCoverage":false},{"functionName":"_asyncToGenerator","ranges":[{"startOffset":791,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"loadCjsOrMjsDefault","ranges":[{"startOffset":1265,"endOffset":1745,"count":0}],"isBlockCoverage":false},{"functionName":"guessJSModuleType","ranges":[{"startOffset":1747,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"loadCjsDefault","ranges":[{"startOffset":1953,"endOffset":2122,"count":0}],"isBlockCoverage":false},{"functionName":"loadMjsDefault","ranges":[{"startOffset":2124,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"_loadMjsDefault","ranges":[{"startOffset":2206,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":165,"count":1}],"isBlockCoverage":true},{"functionName":"import_","ranges":[{"startOffset":108,"endOffset":165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/pattern-to-regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1401,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":114,"endOffset":253,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":200,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"_escapeRegExp","ranges":[{"startOffset":255,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":427,"endOffset":522,"count":1},{"startOffset":495,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"pathToPattern","ranges":[{"startOffset":819,"endOffset":1401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"545","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"546","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":846,"endOffset":1451,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":246}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":4},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":4},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2771,"count":1},{"startOffset":197,"endOffset":221,"count":0},{"startOffset":325,"endOffset":348,"count":0},{"startOffset":375,"endOffset":461,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":463,"endOffset":621,"count":2},{"startOffset":534,"endOffset":620,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":623,"endOffset":2524,"count":2},{"startOffset":683,"endOffset":699,"count":0},{"startOffset":787,"endOffset":803,"count":0},{"startOffset":832,"endOffset":848,"count":0},{"startOffset":919,"endOffset":948,"count":0},{"startOffset":949,"endOffset":952,"count":0},{"startOffset":990,"endOffset":2523,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1745,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2526,"endOffset":2631,"count":2}],"isBlockCoverage":true}]},{"scriptId":"548","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":318,"count":15},{"startOffset":116,"endOffset":120,"count":0},{"startOffset":142,"endOffset":147,"count":0},{"startOffset":261,"endOffset":315,"count":0}],"isBlockCoverage":true}]},{"scriptId":"549","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6029,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6003,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1020,"endOffset":1298,"count":4},{"startOffset":1116,"endOffset":1221,"count":119}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1468,"endOffset":3404,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1550,"endOffset":2761,"count":7},{"startOffset":1633,"endOffset":1760,"count":0},{"startOffset":1928,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2112,"endOffset":2584,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3114,"endOffset":3193,"count":7},{"startOffset":3177,"endOffset":3193,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3203,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3407,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3771,"endOffset":4349,"count":1},{"startOffset":3944,"endOffset":3956,"count":0},{"startOffset":4105,"endOffset":4342,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4435,"endOffset":4660,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":4803,"endOffset":5190,"count":7},{"startOffset":4865,"endOffset":4886,"count":0},{"startOffset":4969,"endOffset":5039,"count":0},{"startOffset":5101,"endOffset":5170,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespace","ranges":[{"startOffset":5308,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5533,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5761,"endOffset":5937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5654,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":225,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":314,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":369,"endOffset":508,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":455,"endOffset":489,"count":6}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":510,"endOffset":605,"count":2},{"startOffset":578,"endOffset":583,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePlugin","ranges":[{"startOffset":1217,"endOffset":1317,"count":7}],"isBlockCoverage":true},{"functionName":"resolvePreset","ranges":[{"startOffset":1319,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"loadPlugin","ranges":[{"startOffset":1421,"endOffset":1749,"count":7},{"startOffset":1525,"endOffset":1602,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreset","ranges":[{"startOffset":1751,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeName","ranges":[{"startOffset":2081,"endOffset":2543,"count":7},{"startOffset":2172,"endOffset":2266,"count":0},{"startOffset":2267,"endOffset":2291,"count":0},{"startOffset":2328,"endOffset":2349,"count":0},{"startOffset":2350,"endOffset":2371,"count":0},{"startOffset":2404,"endOffset":2425,"count":0},{"startOffset":2426,"endOffset":2447,"count":0}],"isBlockCoverage":true},{"functionName":"resolveStandardizedName","ranges":[{"startOffset":2545,"endOffset":5139,"count":7},{"startOffset":2753,"endOffset":3008,"count":0},{"startOffset":3065,"endOffset":5137,"count":0}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":2755,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":3282,"endOffset":3567,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3915,"endOffset":4184,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4591,"endOffset":4860,"count":0}],"isBlockCoverage":false},{"functionName":"requireModule","ranges":[{"startOffset":5177,"endOffset":5654,"count":7},{"startOffset":5247,"endOffset":5534,"count":0}],"isBlockCoverage":true}]},{"scriptId":"552","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/helpers/environment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":106,"endOffset":227,"count":8},{"startOffset":209,"endOffset":224,"count":0}],"isBlockCoverage":true}]},{"scriptId":"553","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1931,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":234,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":434,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"createItemFromDescriptor","ranges":[{"startOffset":531,"endOffset":605,"count":8}],"isBlockCoverage":true},{"functionName":"createConfigItem","ranges":[{"startOffset":607,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"getItemDescriptor","ranges":[{"startOffset":878,"endOffset":1025,"count":16},{"startOffset":932,"endOffset":940,"count":0},{"startOffset":968,"endOffset":1024,"count":8}],"isBlockCoverage":true},{"functionName":"ConfigItem","ranges":[{"startOffset":1117,"endOffset":1890,"count":8},{"startOffset":1746,"endOffset":1848,"count":7},{"startOffset":1849,"endOffset":1860,"count":1}],"isBlockCoverage":true}]},{"scriptId":"554","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/config-descriptors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5907,"count":1}],"isBlockCoverage":true},{"functionName":"isEqualDescriptor","ranges":[{"startOffset":352,"endOffset":667,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDescriptors","ranges":[{"startOffset":669,"endOffset":1036,"count":8},{"startOffset":906,"endOffset":916,"count":0},{"startOffset":939,"endOffset":1018,"count":0}],"isBlockCoverage":true},{"functionName":"plugins","ranges":[{"startOffset":845,"endOffset":905,"count":8}],"isBlockCoverage":true},{"functionName":"plugins","ranges":[{"startOffset":908,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"presets","ranges":[{"startOffset":941,"endOffset":1018,"count":0}],"isBlockCoverage":false},{"functionName":"presets","ranges":[{"startOffset":1021,"endOffset":1029,"count":8}],"isBlockCoverage":true},{"functionName":"createUncachedDescriptors","ranges":[{"startOffset":1038,"endOffset":1510,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1629,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2046,"endOffset":2276,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2106,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2152,"endOffset":2272,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2212,"endOffset":2271,"count":8}],"isBlockCoverage":true},{"functionName":"loadCachedDescriptor","ranges":[{"startOffset":2308,"endOffset":3006,"count":8},{"startOffset":2441,"endOffset":2453,"count":0},{"startOffset":2519,"endOffset":2598,"count":2},{"startOffset":2921,"endOffset":2953,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2838,"endOffset":2889,"count":0}],"isBlockCoverage":false},{"functionName":"createPresetDescriptors","ranges":[{"startOffset":3008,"endOffset":3158,"count":0}],"isBlockCoverage":false},{"functionName":"createPluginDescriptors","ranges":[{"startOffset":3160,"endOffset":3280,"count":8}],"isBlockCoverage":true},{"functionName":"createDescriptors","ranges":[{"startOffset":3282,"endOffset":3562,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3381,"endOffset":3501,"count":8}],"isBlockCoverage":true},{"functionName":"createDescriptor","ranges":[{"startOffset":3564,"endOffset":5146,"count":8},{"startOffset":3703,"endOffset":3725,"count":0},{"startOffset":3803,"endOffset":3927,"count":7},{"startOffset":3833,"endOffset":3878,"count":0},{"startOffset":4010,"endOffset":4384,"count":7},{"startOffset":4046,"endOffset":4142,"count":0},{"startOffset":4203,"endOffset":4222,"count":0},{"startOffset":4400,"endOffset":4470,"count":0},{"startOffset":4525,"endOffset":4682,"count":7},{"startOffset":4586,"endOffset":4678,"count":0},{"startOffset":4716,"endOffset":4746,"count":7},{"startOffset":4748,"endOffset":4848,"count":0},{"startOffset":4874,"endOffset":4902,"count":7},{"startOffset":4903,"endOffset":4911,"count":0},{"startOffset":4913,"endOffset":5028,"count":0},{"startOffset":5071,"endOffset":5079,"count":1}],"isBlockCoverage":true},{"functionName":"assertNoDuplicates","ranges":[{"startOffset":5148,"endOffset":5907,"count":8},{"startOffset":5283,"endOffset":5292,"count":1},{"startOffset":5292,"endOffset":5455,"count":7},{"startOffset":5455,"endOffset":5872,"count":0},{"startOffset":5872,"endOffset":5905,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5494,"endOffset":5521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1836,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":151,"endOffset":194,"count":8}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":376,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":471,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":620,"endOffset":715,"count":2},{"startOffset":688,"endOffset":693,"count":1},{"startOffset":694,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":767,"endOffset":965,"count":0}],"isBlockCoverage":false},{"functionName":"maybeErrback","ranges":[{"startOffset":990,"endOffset":1205,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1000,"endOffset":1205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/full.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9618,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":107,"endOffset":255,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":202,"endOffset":236,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":538,"endOffset":696,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":643,"endOffset":677,"count":7}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":971,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1159,"endOffset":1902,"count":1},{"startOffset":1241,"endOffset":1314,"count":0},{"startOffset":1316,"endOffset":1412,"count":0},{"startOffset":1414,"endOffset":1542,"count":0},{"startOffset":1565,"endOffset":1901,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1904,"endOffset":1999,"count":5},{"startOffset":1972,"endOffset":1977,"count":4},{"startOffset":1978,"endOffset":1996,"count":1}],"isBlockCoverage":true},{"functionName":"loadFullConfig","ranges":[{"startOffset":2040,"endOffset":5364,"count":8},{"startOffset":2152,"endOffset":2174,"count":0},{"startOffset":2278,"endOffset":2300,"count":0},{"startOffset":2410,"endOffset":2485,"count":0},{"startOffset":4333,"endOffset":4345,"count":0}],"isBlockCoverage":true},{"functionName":"toDescriptor","ranges":[{"startOffset":2510,"endOffset":2684,"count":8},{"startOffset":2589,"endOffset":2662,"count":0}],"isBlockCoverage":true},{"functionName":"recursePresetDescriptors","ranges":[{"startOffset":2914,"endOffset":4267,"count":8},{"startOffset":3059,"endOffset":3738,"count":0},{"startOffset":3768,"endOffset":4263,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3828,"endOffset":3839,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3848,"endOffset":3880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4171,"endOffset":4247,"count":0}],"isBlockCoverage":false},{"functionName":"loadPluginDescriptors","ranges":[{"startOffset":4450,"endOffset":5120,"count":8},{"startOffset":4887,"endOffset":5092,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5193,"endOffset":5222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5228,"endOffset":5258,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceError","ranges":[{"startOffset":5397,"endOffset":5689,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5443,"endOffset":5686,"count":16},{"startOffset":5520,"endOffset":5682,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5742,"endOffset":6688,"count":8},{"startOffset":5831,"endOffset":5868,"count":0},{"startOffset":5889,"endOffset":5894,"count":1},{"startOffset":5952,"endOffset":6224,"count":7},{"startOffset":6090,"endOffset":6220,"count":0},{"startOffset":6267,"endOffset":6336,"count":0},{"startOffset":6377,"endOffset":6616,"count":0}],"isBlockCoverage":true},{"functionName":"loadPluginDescriptor","ranges":[{"startOffset":6692,"endOffset":7046,"count":8},{"startOffset":6797,"endOffset":6955,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7102,"endOffset":8094,"count":8},{"startOffset":7414,"endOffset":8037,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7647,"endOffset":7731,"count":0}],"isBlockCoverage":false},{"functionName":"validateIfOptionNeedsFilename","ranges":[{"startOffset":8136,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"validatePreset","ranges":[{"startOffset":8657,"endOffset":8970,"count":0}],"isBlockCoverage":false},{"functionName":"loadPresetDescriptor","ranges":[{"startOffset":8973,"endOffset":9224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9284,"endOffset":9417,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":9421,"endOffset":9618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"Plugin","ranges":[{"startOffset":124,"endOffset":714,"count":8},{"startOffset":419,"endOffset":425,"count":7},{"startOffset":572,"endOffset":577,"count":0}],"isBlockCoverage":true}]},{"scriptId":"558","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/config-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17926,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":208,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":349,"endOffset":491,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":438,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":789,"endOffset":884,"count":2},{"startOffset":857,"endOffset":862,"count":1},{"startOffset":863,"endOffset":881,"count":1}],"isBlockCoverage":true},{"functionName":"buildPresetChain","ranges":[{"startOffset":953,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":1331,"endOffset":1370,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":1379,"endOffset":1441,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":1456,"endOffset":1520,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":1538,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":1641,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1945,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2171,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2401,"endOffset":2612,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootChain","ranges":[{"startOffset":2616,"endOffset":5995,"count":8},{"startOffset":2927,"endOffset":2939,"count":0},{"startOffset":3060,"endOffset":3176,"count":0},{"startOffset":3213,"endOffset":3317,"count":7},{"startOffset":3528,"endOffset":4045,"count":0},{"startOffset":4102,"endOffset":4157,"count":0},{"startOffset":4306,"endOffset":4316,"count":7},{"startOffset":4317,"endOffset":4393,"count":0},{"startOffset":4395,"endOffset":5256,"count":0},{"startOffset":5284,"endOffset":5471,"count":0},{"startOffset":5620,"endOffset":5624,"count":0},{"startOffset":5683,"endOffset":5687,"count":0},{"startOffset":5746,"endOffset":5750,"count":0},{"startOffset":5826,"endOffset":5837,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5426,"endOffset":5434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5771,"endOffset":5795,"count":8}],"isBlockCoverage":true},{"functionName":"babelrcLoadEnabled","ranges":[{"startOffset":5997,"endOffset":6985,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7046,"endOffset":7173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7236,"endOffset":7364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7426,"endOffset":7554,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":7613,"endOffset":7701,"count":8}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":7710,"endOffset":7817,"count":8}],"isBlockCoverage":true},{"functionName":"overrides","ranges":[{"startOffset":7832,"endOffset":7940,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":7958,"endOffset":8087,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":8105,"endOffset":8188,"count":8}],"isBlockCoverage":true},{"functionName":"root","ranges":[{"startOffset":8247,"endOffset":8280,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":8289,"endOffset":8345,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":8360,"endOffset":8418,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":8436,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":8533,"endOffset":8615,"count":0}],"isBlockCoverage":false},{"functionName":"loadFileChain","ranges":[{"startOffset":8621,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8898,"endOffset":8993,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9059,"endOffset":9208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9280,"endOffset":9430,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9505,"endOffset":9713,"count":0}],"isBlockCoverage":false},{"functionName":"buildFileLogger","ranges":[{"startOffset":9717,"endOffset":9926,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootDescriptors","ranges":[{"startOffset":9928,"endOffset":10054,"count":8}],"isBlockCoverage":true},{"functionName":"buildProgrammaticLogger","ranges":[{"startOffset":10056,"endOffset":10374,"count":8},{"startOffset":10158,"endOffset":10184,"count":0},{"startOffset":10344,"endOffset":10366,"count":0}],"isBlockCoverage":true},{"functionName":"baseLogger.configure.callerName._context$caller","ranges":[{"startOffset":10171,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"buildEnvDescriptors","ranges":[{"startOffset":10376,"endOffset":10596,"count":8},{"startOffset":10489,"endOffset":10512,"count":0},{"startOffset":10528,"endOffset":10586,"count":0}],"isBlockCoverage":true},{"functionName":"buildOverrideDescriptors","ranges":[{"startOffset":10598,"endOffset":10889,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverrideEnvDescriptors","ranges":[{"startOffset":10891,"endOffset":11288,"count":0}],"isBlockCoverage":false},{"functionName":"makeChainWalker","ranges":[{"startOffset":11290,"endOffset":13298,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11390,"endOffset":13295,"count":8},{"startOffset":11806,"endOffset":11854,"count":0},{"startOffset":11856,"endOffset":11999,"count":0},{"startOffset":12852,"endOffset":12878,"count":0},{"startOffset":13160,"endOffset":13190,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12050,"endOffset":12666,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12706,"endOffset":12849,"count":8}],"isBlockCoverage":true},{"functionName":"mergeExtendsChain","ranges":[{"startOffset":13300,"endOffset":13974,"count":8},{"startOffset":13426,"endOffset":13973,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13708,"endOffset":13737,"count":0}],"isBlockCoverage":false},{"functionName":"mergeChain","ranges":[{"startOffset":13976,"endOffset":14229,"count":24},{"startOffset":14176,"endOffset":14209,"count":0}],"isBlockCoverage":true},{"functionName":"mergeChainOpts","ranges":[{"startOffset":14231,"endOffset":14426,"count":8}],"isBlockCoverage":true},{"functionName":"emptyChain","ranges":[{"startOffset":14428,"endOffset":14541,"count":32}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":14543,"endOffset":15070,"count":8},{"startOffset":14970,"endOffset":15049,"count":0}],"isBlockCoverage":true},{"functionName":"dedupDescriptors","ranges":[{"startOffset":15072,"endOffset":15822,"count":16},{"startOffset":15187,"endOffset":15722,"count":8},{"startOffset":15231,"endOffset":15650,"count":7},{"startOffset":15602,"endOffset":15644,"count":0},{"startOffset":15650,"endOffset":15718,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15752,"endOffset":15814,"count":8}],"isBlockCoverage":true},{"functionName":"configIsApplicable","ranges":[{"startOffset":15824,"endOffset":16181,"count":8},{"startOffset":15924,"endOffset":15982,"count":0},{"startOffset":16018,"endOffset":16079,"count":0},{"startOffset":16115,"endOffset":16177,"count":0}],"isBlockCoverage":true},{"functionName":"configFieldIsApplicable","ranges":[{"startOffset":16183,"endOffset":16353,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnore","ranges":[{"startOffset":16355,"endOffset":17255,"count":8},{"startOffset":16424,"endOffset":16468,"count":0},{"startOffset":16470,"endOffset":16821,"count":0},{"startOffset":16834,"endOffset":16877,"count":0},{"startOffset":16879,"endOffset":17236,"count":0}],"isBlockCoverage":true},{"functionName":"matchesPatterns","ranges":[{"startOffset":17257,"endOffset":17407,"count":0}],"isBlockCoverage":false},{"functionName":"matchPattern","ranges":[{"startOffset":17409,"endOffset":17926,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7033,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":365,"endOffset":460,"count":2},{"startOffset":439,"endOffset":457,"count":0}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":2732,"endOffset":2826,"count":8},{"startOffset":2800,"endOffset":2823,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2828,"endOffset":2934,"count":8}],"isBlockCoverage":true},{"functionName":"validateNested","ranges":[{"startOffset":2936,"endOffset":4205,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3068,"endOffset":4186,"count":10},{"startOffset":3189,"endOffset":3217,"count":0},{"startOffset":3219,"endOffset":3323,"count":0},{"startOffset":3354,"endOffset":3377,"count":0},{"startOffset":3379,"endOffset":3495,"count":0},{"startOffset":3526,"endOffset":3550,"count":0},{"startOffset":3551,"endOffset":3577,"count":0},{"startOffset":3579,"endOffset":4000,"count":0},{"startOffset":4047,"endOffset":4075,"count":2},{"startOffset":4076,"endOffset":4102,"count":2},{"startOffset":4103,"endOffset":4126,"count":1},{"startOffset":4127,"endOffset":4147,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownError","ranges":[{"startOffset":4207,"endOffset":4759,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4761,"endOffset":4844,"count":8}],"isBlockCoverage":true},{"functionName":"assertNoDuplicateSourcemap","ranges":[{"startOffset":4846,"endOffset":5034,"count":8},{"startOffset":4919,"endOffset":4945,"count":0},{"startOffset":4947,"endOffset":5032,"count":0}],"isBlockCoverage":true},{"functionName":"assertEnvSet","ranges":[{"startOffset":5036,"endOffset":5659,"count":0}],"isBlockCoverage":false},{"functionName":"assertOverridesList","ranges":[{"startOffset":5661,"endOffset":6527,"count":0}],"isBlockCoverage":false},{"functionName":"checkNoUnwrappedItemOptionPairs","ranges":[{"startOffset":6529,"endOffset":7033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/removed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2374,"count":1}],"isBlockCoverage":true}]},{"scriptId":"561","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/option-assertions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7354,"count":1}],"isBlockCoverage":true},{"functionName":"msg","ranges":[{"startOffset":853,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":1324,"endOffset":1416,"count":15}],"isBlockCoverage":true},{"functionName":"assertRootMode","ranges":[{"startOffset":1418,"endOffset":1675,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceMaps","ranges":[{"startOffset":1677,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompact","ranges":[{"startOffset":1928,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceType","ranges":[{"startOffset":2144,"endOffset":2398,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallerMetadata","ranges":[{"startOffset":2400,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"assertInputSourceMap","ranges":[{"startOffset":3006,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":3250,"endOffset":3433,"count":1},{"startOffset":3342,"endOffset":3414,"count":0}],"isBlockCoverage":true},{"functionName":"assertFunction","ranges":[{"startOffset":3435,"endOffset":3624,"count":14},{"startOffset":3531,"endOffset":3605,"count":0}],"isBlockCoverage":true},{"functionName":"assertBoolean","ranges":[{"startOffset":3626,"endOffset":3812,"count":1},{"startOffset":3720,"endOffset":3793,"count":0}],"isBlockCoverage":true},{"functionName":"assertObject","ranges":[{"startOffset":3814,"endOffset":4034,"count":8},{"startOffset":3942,"endOffset":4015,"count":0}],"isBlockCoverage":true},{"functionName":"assertArray","ranges":[{"startOffset":4036,"endOffset":4208,"count":8},{"startOffset":4117,"endOffset":4189,"count":0}],"isBlockCoverage":true},{"functionName":"assertIgnoreList","ranges":[{"startOffset":4210,"endOffset":4393,"count":0}],"isBlockCoverage":false},{"functionName":"assertIgnoreItem","ranges":[{"startOffset":4395,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigApplicableTest","ranges":[{"startOffset":4655,"endOffset":5098,"count":0}],"isBlockCoverage":false},{"functionName":"checkValidTest","ranges":[{"startOffset":5100,"endOffset":5228,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigFileSearch","ranges":[{"startOffset":5230,"endOffset":5498,"count":1},{"startOffset":5332,"endOffset":5360,"count":0},{"startOffset":5362,"endOffset":5479,"count":0}],"isBlockCoverage":true},{"functionName":"assertBabelrcSearch","ranges":[{"startOffset":5500,"endOffset":6024,"count":0}],"isBlockCoverage":false},{"functionName":"assertPluginList","ranges":[{"startOffset":6026,"endOffset":6209,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6135,"endOffset":6186,"count":8}],"isBlockCoverage":true},{"functionName":"assertPluginItem","ranges":[{"startOffset":6211,"endOffset":7110,"count":8},{"startOffset":6279,"endOffset":7044,"count":7},{"startOffset":6309,"endOffset":6377,"count":0},{"startOffset":6405,"endOffset":6489,"count":0},{"startOffset":6718,"endOffset":6817,"count":0},{"startOffset":6853,"endOffset":7040,"count":0},{"startOffset":7044,"endOffset":7091,"count":1}],"isBlockCoverage":true},{"functionName":"assertPluginTarget","ranges":[{"startOffset":7112,"endOffset":7354,"count":8},{"startOffset":7187,"endOffset":7196,"count":1},{"startOffset":7198,"endOffset":7226,"count":7},{"startOffset":7227,"endOffset":7257,"count":0},{"startOffset":7259,"endOffset":7335,"count":0}],"isBlockCoverage":true}]},{"scriptId":"562","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2686,"count":1}],"isBlockCoverage":true},{"functionName":"title","ranges":[{"startOffset":259,"endOffset":552,"count":0}],"isBlockCoverage":false},{"functionName":"loc","ranges":[{"startOffset":557,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"optionsAndDescriptors","ranges":[{"startOffset":760,"endOffset":1291,"count":0}],"isBlockCoverage":false},{"functionName":"descriptorToConfig","ranges":[{"startOffset":1297,"endOffset":1842,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigPrinter","ranges":[{"startOffset":1868,"endOffset":1909,"count":16}],"isBlockCoverage":true},{"functionName":"configure","ranges":[{"startOffset":1913,"endOffset":2198,"count":8},{"startOffset":2010,"endOffset":2197,"count":0}],"isBlockCoverage":true},{"functionName":"_stack.push.type.type","ranges":[{"startOffset":2001,"endOffset":2009,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2022,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2209,"endOffset":2509,"count":0}],"isBlockCoverage":false},{"functionName":"output","ranges":[{"startOffset":2513,"endOffset":2643,"count":8},{"startOffset":2568,"endOffset":2642,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2596,"endOffset":2624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true},{"functionName":"assertVisitorMap","ranges":[{"startOffset":575,"endOffset":975,"count":8},{"startOffset":801,"endOffset":954,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":721,"endOffset":766,"count":8}],"isBlockCoverage":true},{"functionName":"assertVisitorHandler","ranges":[{"startOffset":977,"endOffset":1399,"count":8},{"startOffset":1063,"endOffset":1274,"count":1},{"startOffset":1274,"endOffset":1380,"count":7},{"startOffset":1313,"endOffset":1380,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1096,"endOffset":1268,"count":1},{"startOffset":1162,"endOffset":1262,"count":0}],"isBlockCoverage":true},{"functionName":"validatePluginObject","ranges":[{"startOffset":1401,"endOffset":1982,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1530,"endOffset":1964,"count":23},{"startOffset":1740,"endOffset":1960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"564","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5672,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":161,"endOffset":300,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":247,"endOffset":281,"count":15}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":302,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":397,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":760,"endOffset":855,"count":3},{"startOffset":828,"endOffset":833,"count":1},{"startOffset":834,"endOffset":852,"count":2}],"isBlockCoverage":true},{"functionName":"_objectWithoutPropertiesLoose","ranges":[{"startOffset":857,"endOffset":1164,"count":0}],"isBlockCoverage":false},{"functionName":"resolveRootMode","ranges":[{"startOffset":1166,"endOffset":2079,"count":8},{"startOffset":1279,"endOffset":1460,"count":0},{"startOffset":1466,"endOffset":1989,"count":0},{"startOffset":1995,"endOffset":2073,"count":0}],"isBlockCoverage":true},{"functionName":"loadPrivatePartialConfig","ranges":[{"startOffset":2081,"endOffset":4025,"count":8},{"startOffset":2217,"endOffset":2298,"count":0},{"startOffset":2374,"endOffset":2378,"count":0},{"startOffset":2758,"endOffset":2803,"count":0},{"startOffset":3152,"endOffset":3164,"count":0},{"startOffset":3563,"endOffset":3581,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3217,"endOffset":3274,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3639,"endOffset":3700,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3747,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4077,"endOffset":5014,"count":0}],"isBlockCoverage":false},{"functionName":"PartialConfig","ranges":[{"startOffset":5089,"endOffset":5529,"count":0}],"isBlockCoverage":false},{"functionName":"hasFilesystemConfig","ranges":[{"startOffset":5533,"endOffset":5628,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1217,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":158,"endOffset":306,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":253,"endOffset":287,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":420,"endOffset":515,"count":2},{"startOffset":488,"endOffset":493,"count":1},{"startOffset":494,"endOffset":512,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":565,"endOffset":744,"count":7},{"startOffset":674,"endOffset":686,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":766,"endOffset":1014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3537,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":100,"endOffset":258,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":205,"endOffset":239,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":630,"endOffset":725,"count":6},{"startOffset":704,"endOffset":722,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":727,"endOffset":1866,"count":7},{"startOffset":962,"endOffset":1188,"count":0},{"startOffset":1372,"endOffset":1600,"count":0},{"startOffset":1688,"endOffset":1698,"count":0},{"startOffset":1742,"endOffset":1748,"count":0},{"startOffset":1796,"endOffset":1802,"count":0}],"isBlockCoverage":true},{"functionName":"transformFile","ranges":[{"startOffset":1868,"endOffset":3385,"count":7},{"startOffset":2114,"endOffset":2299,"count":14},{"startOffset":2345,"endOffset":2752,"count":14},{"startOffset":2391,"endOffset":2746,"count":7},{"startOffset":2489,"endOffset":2738,"count":0},{"startOffset":2970,"endOffset":3379,"count":14},{"startOffset":3017,"endOffset":3373,"count":7},{"startOffset":3115,"endOffset":3365,"count":0}],"isBlockCoverage":true},{"functionName":"isThenable","ranges":[{"startOffset":3387,"endOffset":3537,"count":14},{"startOffset":3429,"endOffset":3486,"count":0},{"startOffset":3487,"endOffset":3500,"count":0},{"startOffset":3501,"endOffset":3534,"count":0}],"isBlockCoverage":true}]},{"scriptId":"567","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/plugin-pass.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":983,"count":1}],"isBlockCoverage":true},{"functionName":"PluginPass","ranges":[{"startOffset":128,"endOffset":457,"count":14},{"startOffset":377,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":461,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":513,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":562,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":665,"endOffset":724,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":728,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":783,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":846,"endOffset":949,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/block-hoist-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1536,"count":1}],"isBlockCoverage":true},{"functionName":"_sortBy","ranges":[{"startOffset":121,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":336,"endOffset":431,"count":1},{"startOffset":410,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"loadBlockHoistPlugin","ranges":[{"startOffset":453,"endOffset":797,"count":7},{"startOffset":509,"endOffset":770,"count":1},{"startOffset":692,"endOffset":703,"count":0},{"startOffset":729,"endOffset":766,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":889,"endOffset":1522,"count":7},{"startOffset":1079,"endOffset":1087,"count":0},{"startOffset":1121,"endOffset":1183,"count":0},{"startOffset":1226,"endOffset":1521,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1281,"endOffset":1512,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/normalize-opts.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1689,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":117,"endOffset":256,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":203,"endOffset":237,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":258,"endOffset":353,"count":1},{"startOffset":326,"endOffset":331,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":355,"endOffset":1689,"count":7},{"startOffset":476,"endOffset":517,"count":0},{"startOffset":965,"endOffset":975,"count":0},{"startOffset":1586,"endOffset":1658,"count":0}],"isBlockCoverage":true}]},{"scriptId":"570","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/normalize-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5178,"count":1}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":114,"endOffset":247,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":249,"endOffset":388,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":390,"endOffset":532,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":479,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"_cloneDeep","ranges":[{"startOffset":534,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":697,"endOffset":837,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":784,"endOffset":818,"count":13}],"isBlockCoverage":true},{"functionName":"_convertSourceMap","ranges":[{"startOffset":839,"endOffset":1016,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1140,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1328,"endOffset":2071,"count":1},{"startOffset":1410,"endOffset":1483,"count":0},{"startOffset":1485,"endOffset":1581,"count":0},{"startOffset":1583,"endOffset":1711,"count":0},{"startOffset":1734,"endOffset":2070,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2073,"endOffset":2168,"count":3},{"startOffset":2141,"endOffset":2146,"count":2},{"startOffset":2147,"endOffset":2165,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeFile","ranges":[{"startOffset":2281,"endOffset":4211,"count":7},{"startOffset":2358,"endOffset":2363,"count":0},{"startOffset":2379,"endOffset":2689,"count":0},{"startOffset":2888,"endOffset":2976,"count":0},{"startOffset":3095,"endOffset":3294,"count":0},{"startOffset":3445,"endOffset":3459,"count":0},{"startOffset":3461,"endOffset":4028,"count":0},{"startOffset":4051,"endOffset":4122,"count":0}],"isBlockCoverage":true},{"functionName":"extractCommentsFromList","ranges":[{"startOffset":4424,"endOffset":4723,"count":318},{"startOffset":4505,"endOffset":4686,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4538,"endOffset":4680,"count":0}],"isBlockCoverage":false},{"functionName":"extractComments","ranges":[{"startOffset":4725,"endOffset":5178,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4814,"endOffset":5152,"count":106}],"isBlockCoverage":true}]},{"scriptId":"571","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2381,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":107,"endOffset":235,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":182,"endOffset":216,"count":6}],"isBlockCoverage":true},{"functionName":"_codeFrame","ranges":[{"startOffset":237,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":470,"endOffset":565,"count":1},{"startOffset":544,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"parser","ranges":[{"startOffset":567,"endOffset":2381,"count":7},{"startOffset":875,"endOffset":1011,"count":0},{"startOffset":1117,"endOffset":2379,"count":0}],"isBlockCoverage":true}]},{"scriptId":"572","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7845,"count":1}],"isBlockCoverage":true},{"functionName":"getNameURLCombination","ranges":[{"startOffset":6680,"endOffset":6721,"count":0}],"isBlockCoverage":false},{"functionName":"generateMissingPluginMessage","ranges":[{"startOffset":6724,"endOffset":7845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/file/generate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2080,"count":1}],"isBlockCoverage":true},{"functionName":"_convertSourceMap","ranges":[{"startOffset":113,"endOffset":290,"count":0}],"isBlockCoverage":false},{"functionName":"_generator","ranges":[{"startOffset":292,"endOffset":453,"count":1}],"isBlockCoverage":true},{"functionName":"_generator","ranges":[{"startOffset":400,"endOffset":434,"count":6}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":520,"endOffset":615,"count":2},{"startOffset":594,"endOffset":612,"count":0}],"isBlockCoverage":true},{"functionName":"generateCode","ranges":[{"startOffset":617,"endOffset":2080,"count":7},{"startOffset":912,"endOffset":1072,"count":0},{"startOffset":1203,"endOffset":1633,"count":0},{"startOffset":1715,"endOffset":1726,"count":0},{"startOffset":1728,"endOffset":1805,"count":0},{"startOffset":1873,"endOffset":1966,"count":0},{"startOffset":2004,"endOffset":2031,"count":0}],"isBlockCoverage":true}]},{"scriptId":"574","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/file/merge-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5557,"count":1}],"isBlockCoverage":true},{"functionName":"_sourceMap","ranges":[{"startOffset":115,"endOffset":270,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":272,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"mergeSourceMap","ranges":[{"startOffset":369,"endOffset":2128,"count":0}],"isBlockCoverage":false},{"functionName":"makeMappingKey","ranges":[{"startOffset":2130,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"eachOverlappingGeneratedOutputRange","ranges":[{"startOffset":2210,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"filterApplicableOriginalRanges","ranges":[{"startOffset":2526,"endOffset":2921,"count":0}],"isBlockCoverage":false},{"functionName":"eachInputGeneratedRange","ranges":[{"startOffset":2923,"endOffset":3204,"count":0}],"isBlockCoverage":false},{"functionName":"buildMappingData","ranges":[{"startOffset":3206,"endOffset":4773,"count":0}],"isBlockCoverage":false},{"functionName":"findInsertionLocation","ranges":[{"startOffset":4775,"endOffset":5303,"count":0}],"isBlockCoverage":false},{"functionName":"filterSortedArray","ranges":[{"startOffset":5305,"endOffset":5557,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transform-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2173,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":170,"endOffset":318,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":265,"endOffset":299,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":498,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":686,"endOffset":1429,"count":1},{"startOffset":768,"endOffset":841,"count":0},{"startOffset":843,"endOffset":939,"count":0},{"startOffset":941,"endOffset":1069,"count":0},{"startOffset":1092,"endOffset":1428,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1431,"endOffset":1526,"count":2},{"startOffset":1499,"endOffset":1504,"count":1},{"startOffset":1505,"endOffset":1523,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1586,"endOffset":1879,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transform-ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":179,"endOffset":327,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":274,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":441,"endOffset":536,"count":2},{"startOffset":509,"endOffset":514,"count":1},{"startOffset":515,"endOffset":533,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":593,"endOffset":818,"count":0}],"isBlockCoverage":false},{"functionName":"transformFromAst","ranges":[{"startOffset":847,"endOffset":1142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1291,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":146,"endOffset":294,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":241,"endOffset":275,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":506,"endOffset":601,"count":4},{"startOffset":574,"endOffset":579,"count":3},{"startOffset":580,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":647,"endOffset":874,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":892,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":269,"count":1},{"startOffset":159,"endOffset":211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"579","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":678,"count":1}],"isBlockCoverage":true},{"functionName":"makeCjsExport","ranges":[{"startOffset":89,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":98,"endOffset":157,"count":7}],"isBlockCoverage":true}]},{"scriptId":"580","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/release/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":151,"endOffset":195,"count":14}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":271,"endOffset":366,"count":1},{"startOffset":345,"endOffset":363,"count":0}],"isBlockCoverage":true}]},{"scriptId":"581","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/release/library/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":346,"count":1}],"isBlockCoverage":true}]},{"scriptId":"582","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/plugin.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2952,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":173,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":361,"endOffset":1104,"count":1},{"startOffset":443,"endOffset":516,"count":0},{"startOffset":518,"endOffset":614,"count":0},{"startOffset":616,"endOffset":744,"count":0},{"startOffset":767,"endOffset":1103,"count":0}],"isBlockCoverage":true},{"functionName":"createPlugin","ranges":[{"startOffset":1180,"endOffset":2887,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1284,"endOffset":2882,"count":7}],"isBlockCoverage":true},{"functionName":"pluginObject.pre","ranges":[{"startOffset":1601,"endOffset":1672,"count":7}],"isBlockCoverage":true},{"functionName":"pluginObject.post","ranges":[{"startOffset":1701,"endOffset":1771,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1874,"endOffset":2803,"count":7},{"startOffset":2357,"endOffset":2795,"count":0}],"isBlockCoverage":true},{"functionName":"visitorObject.<computed>","ranges":[{"startOffset":2028,"endOffset":2124,"count":8}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":2409,"endOffset":2584,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":2599,"endOffset":2771,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/change-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1}],"isBlockCoverage":true}]},{"scriptId":"584","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/tslib/tslib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13685,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1315,"endOffset":2287,"count":1},{"startOffset":1388,"endOffset":1460,"count":0},{"startOffset":1500,"endOffset":1513,"count":0},{"startOffset":1515,"endOffset":1642,"count":0},{"startOffset":1803,"endOffset":1862,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1555,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"createExporter","ranges":[{"startOffset":1868,"endOffset":2284,"count":2},{"startOffset":1944,"endOffset":2186,"count":1},{"startOffset":2096,"endOffset":2175,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2203,"endOffset":2276,"count":46},{"startOffset":2252,"endOffset":2269,"count":23},{"startOffset":2270,"endOffset":2273,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2291,"endOffset":13681,"count":1},{"startOffset":2360,"endOffset":2448,"count":0},{"startOffset":2449,"endOffset":2558,"count":0},{"startOffset":2811,"endOffset":3051,"count":0},{"startOffset":7452,"endOffset":7548,"count":0},{"startOffset":11600,"endOffset":11652,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":2411,"endOffset":2447,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":2461,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":2579,"endOffset":2777,"count":0}],"isBlockCoverage":false},{"functionName":"__assign","ranges":[{"startOffset":2814,"endOffset":3051,"count":0}],"isBlockCoverage":false},{"functionName":"__rest","ranges":[{"startOffset":3069,"endOffset":3570,"count":0}],"isBlockCoverage":false},{"functionName":"__decorate","ranges":[{"startOffset":3592,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"__param","ranges":[{"startOffset":4160,"endOffset":4280,"count":0}],"isBlockCoverage":false},{"functionName":"__metadata","ranges":[{"startOffset":4302,"endOffset":4485,"count":0}],"isBlockCoverage":false},{"functionName":"__awaiter","ranges":[{"startOffset":4506,"endOffset":5181,"count":0}],"isBlockCoverage":false},{"functionName":"__generator","ranges":[{"startOffset":5204,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"__exportStar","ranges":[{"startOffset":7099,"endOffset":7242,"count":11},{"startOffset":7142,"endOffset":7235,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7286,"endOffset":7450,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7412,"endOffset":7439,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7455,"endOffset":7547,"count":0}],"isBlockCoverage":true},{"functionName":"__values","ranges":[{"startOffset":7568,"endOffset":8036,"count":0}],"isBlockCoverage":false},{"functionName":"__read","ranges":[{"startOffset":8054,"endOffset":8579,"count":0}],"isBlockCoverage":false},{"functionName":"__spread","ranges":[{"startOffset":8599,"endOffset":8751,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadArrays","ranges":[{"startOffset":8777,"endOffset":9079,"count":0}],"isBlockCoverage":false},{"functionName":"__await","ranges":[{"startOffset":9098,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncGenerator","ranges":[{"startOffset":9226,"endOffset":10156,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncDelegator","ranges":[{"startOffset":10184,"endOffset":10527,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncValues","ranges":[{"startOffset":10552,"endOffset":11238,"count":0}],"isBlockCoverage":false},{"functionName":"__makeTemplateObject","ranges":[{"startOffset":11270,"endOffset":11446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11497,"endOffset":11598,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":11602,"endOffset":11652,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":11676,"endOffset":11986,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":12013,"endOffset":12104,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":12138,"endOffset":12357,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":12391,"endOffset":12640,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/camel-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"camelCaseTransform","ranges":[{"startOffset":244,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"camelCaseTransformMerge","ranges":[{"startOffset":456,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":681,"endOffset":871,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/pascal-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1037,"count":1}],"isBlockCoverage":true},{"functionName":"pascalCaseTransform","ranges":[{"startOffset":239,"endOffset":540,"count":42},{"startOffset":391,"endOffset":410,"count":21},{"startOffset":411,"endOffset":430,"count":21},{"startOffset":432,"endOffset":484,"count":0}],"isBlockCoverage":true},{"functionName":"pascalCaseTransformMerge","ranges":[{"startOffset":592,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"pascalCase","ranges":[{"startOffset":771,"endOffset":970,"count":21}],"isBlockCoverage":true}]},{"scriptId":"587","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/no-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1625,"count":1}],"isBlockCoverage":true},{"functionName":"noCase","ranges":[{"startOffset":468,"endOffset":1296,"count":21},{"startOffset":530,"endOffset":547,"count":0},{"startOffset":633,"endOffset":637,"count":0},{"startOffset":716,"endOffset":720,"count":0},{"startOffset":772,"endOffset":796,"count":0},{"startOffset":853,"endOffset":858,"count":0},{"startOffset":1104,"endOffset":1112,"count":0},{"startOffset":1165,"endOffset":1171,"count":0}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":1394,"endOffset":1591,"count":42},{"startOffset":1469,"endOffset":1590,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1523,"endOffset":1580,"count":42}],"isBlockCoverage":true}]},{"scriptId":"588","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lower-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1324,"count":1}],"isBlockCoverage":true},{"functionName":"localeLowerCase","ranges":[{"startOffset":894,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"lowerCase","ranges":[{"startOffset":1202,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/capital-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"capitalCaseTransform","ranges":[{"startOffset":260,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"capitalCase","ranges":[{"startOffset":421,"endOffset":623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case-first/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"upperCaseFirst","ranges":[{"startOffset":172,"endOffset":266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/constant-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":494,"count":1}],"isBlockCoverage":true},{"functionName":"constantCase","ranges":[{"startOffset":218,"endOffset":423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1179,"count":1}],"isBlockCoverage":true},{"functionName":"localeUpperCase","ranges":[{"startOffset":749,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"upperCase","ranges":[{"startOffset":1057,"endOffset":1114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/dot-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":true},{"functionName":"dotCase","ranges":[{"startOffset":171,"endOffset":336,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/header-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":429,"count":1}],"isBlockCoverage":true},{"functionName":"headerCase","ranges":[{"startOffset":184,"endOffset":362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/param-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"paramCase","ranges":[{"startOffset":175,"endOffset":344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"pathCase","ranges":[{"startOffset":174,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/sentence-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":777,"count":1}],"isBlockCoverage":true},{"functionName":"sentenceCaseTransform","ranges":[{"startOffset":262,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceCase","ranges":[{"startOffset":502,"endOffset":706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/snake-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"snakeCase","ranges":[{"startOffset":175,"endOffset":344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/release/library/visitor.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1147,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":236,"endOffset":331,"count":1},{"startOffset":304,"endOffset":309,"count":0}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":376,"endOffset":418,"count":7}],"isBlockCoverage":true},{"functionName":"get nodeType","ranges":[{"startOffset":422,"endOffset":472,"count":7}],"isBlockCoverage":true},{"functionName":"onStringLiteralNode","ranges":[{"startOffset":476,"endOffset":940,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":663,"endOffset":934,"count":8},{"startOffset":725,"endOffset":748,"count":1},{"startOffset":749,"endOffset":837,"count":7},{"startOffset":803,"endOffset":837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"600","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@pwn/is/lib/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93,"endOffset":543,"count":1},{"startOffset":160,"endOffset":173,"count":0},{"startOffset":176,"endOffset":250,"count":0},{"startOffset":480,"endOffset":540,"count":0}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":554,"endOffset":21011,"count":1},{"startOffset":1693,"endOffset":2831,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":821,"endOffset":1587,"count":1}],"isBlockCoverage":true},{"functionName":"tagOf","ranges":[{"startOffset":989,"endOffset":1582,"count":7},{"startOffset":1092,"endOffset":1123,"count":0},{"startOffset":1153,"endOffset":1189,"count":0},{"startOffset":1364,"endOffset":1415,"count":0},{"startOffset":1536,"endOffset":1551,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1698,"endOffset":2513,"count":0}],"isBlockCoverage":true},{"functionName":"addPredicate","ranges":[{"startOffset":2999,"endOffset":3543,"count":37},{"startOffset":3084,"endOffset":3156,"count":0},{"startOffset":3204,"endOffset":3283,"count":0},{"startOffset":3330,"endOffset":3401,"count":0}],"isBlockCoverage":true},{"functionName":"delegate","ranges":[{"startOffset":3455,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":3667,"endOffset":4664,"count":8}],"isBlockCoverage":true},{"functionName":"nilBundle","ranges":[{"startOffset":4807,"endOffset":5747,"count":1}],"isBlockCoverage":true},{"functionName":"isNull","ranges":[{"startOffset":4964,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":5171,"endOffset":5238,"count":0}],"isBlockCoverage":false},{"functionName":"isExist","ranges":[{"startOffset":5402,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"isNil","ranges":[{"startOffset":5648,"endOffset":5740,"count":0}],"isBlockCoverage":false},{"functionName":"numberBundle","ranges":[{"startOffset":5796,"endOffset":8829,"count":1},{"startOffset":7506,"endOffset":7658,"count":0},{"startOffset":8112,"endOffset":8273,"count":0},{"startOffset":8490,"endOffset":8824,"count":0}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":5962,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeral","ranges":[{"startOffset":6274,"endOffset":6626,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":6755,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"isOdd","ranges":[{"startOffset":6992,"endOffset":7078,"count":0}],"isBlockCoverage":false},{"functionName":"isEven","ranges":[{"startOffset":7219,"endOffset":7306,"count":0}],"isBlockCoverage":false},{"functionName":"isFiniteNumber","ranges":[{"startOffset":7550,"endOffset":7650,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinite","ranges":[{"startOffset":7824,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"isInteger","ranges":[{"startOffset":8157,"endOffset":8265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8506,"endOffset":8814,"count":0}],"isBlockCoverage":true},{"functionName":"stringBundle","ranges":[{"startOffset":8878,"endOffset":11697,"count":1},{"startOffset":10730,"endOffset":11692,"count":0}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":9044,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":9320,"endOffset":9419,"count":0}],"isBlockCoverage":false},{"functionName":"isSubstring","ranges":[{"startOffset":9611,"endOffset":10078,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefix","ranges":[{"startOffset":10315,"endOffset":10437,"count":0}],"isBlockCoverage":false},{"functionName":"isSuffix","ranges":[{"startOffset":10601,"endOffset":10721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10747,"endOffset":10903,"count":0}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":10907,"endOffset":11683,"count":0}],"isBlockCoverage":false},{"functionName":"booleanBundle","ranges":[{"startOffset":11747,"endOffset":12006,"count":1}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":11917,"endOffset":11999,"count":0}],"isBlockCoverage":false},{"functionName":"objectBundle","ranges":[{"startOffset":12055,"endOffset":14957,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":12222,"endOffset":12295,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObject","ranges":[{"startOffset":12527,"endOffset":12634,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDefined","ranges":[{"startOffset":12827,"endOffset":13245,"count":0}],"isBlockCoverage":false},{"functionName":"isConforms","ranges":[{"startOffset":14191,"endOffset":14950,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBundle","ranges":[{"startOffset":15005,"endOffset":17495,"count":1},{"startOffset":15218,"endOffset":15347,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":15261,"endOffset":15339,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":15717,"endOffset":16026,"count":0}],"isBlockCoverage":false},{"functionName":"isInArray","ranges":[{"startOffset":16497,"endOffset":17488,"count":0}],"isBlockCoverage":false},{"functionName":"typeBundle","ranges":[{"startOffset":17542,"endOffset":18821,"count":1}],"isBlockCoverage":true},{"functionName":"isSameType","ranges":[{"startOffset":17728,"endOffset":17854,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":18001,"endOffset":18208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18304,"endOffset":18607,"count":1},{"startOffset":18493,"endOffset":18600,"count":7}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":18611,"endOffset":18740,"count":7}],"isBlockCoverage":true},{"functionName":"predicate","ranges":[{"startOffset":18657,"endOffset":18733,"count":7}],"isBlockCoverage":true},{"functionName":"equalityBundle","ranges":[{"startOffset":18872,"endOffset":20992,"count":1}],"isBlockCoverage":true},{"functionName":"isEqual","ranges":[{"startOffset":19078,"endOffset":19229,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepEqual","ranges":[{"startOffset":19787,"endOffset":20985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/visitor.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":513,"count":1}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":125,"endOffset":174,"count":7}],"isBlockCoverage":true},{"functionName":"get nodeType","ranges":[{"startOffset":178,"endOffset":243,"count":0}],"isBlockCoverage":false},{"functionName":"onBeforeNode","ranges":[{"startOffset":247,"endOffset":280,"count":7}],"isBlockCoverage":true},{"functionName":"onAfterNode","ranges":[{"startOffset":413,"endOffset":445,"count":7}],"isBlockCoverage":true}]},{"scriptId":"602","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411643,"count":1}],"isBlockCoverage":true},{"functionName":"TokenType","ranges":[{"startOffset":236,"endOffset":1002,"count":94},{"startOffset":947,"endOffset":959,"count":17},{"startOffset":960,"endOffset":966,"count":77}],"isBlockCoverage":true},{"functionName":"createKeyword","ranges":[{"startOffset":1035,"endOffset":1198,"count":35}],"isBlockCoverage":true},{"functionName":"createBinop","ranges":[{"startOffset":1200,"endOffset":1300,"count":11}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":6138,"endOffset":6297,"count":88},{"startOffset":6187,"endOffset":6195,"count":0},{"startOffset":6200,"endOffset":6208,"count":0},{"startOffset":6213,"endOffset":6223,"count":0},{"startOffset":6228,"endOffset":6257,"count":0}],"isBlockCoverage":true},{"functionName":"isWhitespace","ranges":[{"startOffset":6354,"endOffset":6808,"count":42},{"startOffset":6406,"endOffset":6418,"count":0},{"startOffset":6423,"endOffset":6435,"count":0},{"startOffset":6440,"endOffset":6452,"count":0},{"startOffset":6457,"endOffset":6465,"count":0},{"startOffset":6470,"endOffset":6479,"count":0},{"startOffset":6484,"endOffset":6494,"count":0},{"startOffset":6499,"endOffset":6511,"count":0},{"startOffset":6516,"endOffset":6528,"count":0},{"startOffset":6533,"endOffset":6545,"count":0},{"startOffset":6550,"endOffset":6562,"count":0},{"startOffset":6567,"endOffset":6579,"count":0},{"startOffset":6584,"endOffset":6596,"count":0},{"startOffset":6601,"endOffset":6613,"count":0},{"startOffset":6618,"endOffset":6630,"count":0},{"startOffset":6635,"endOffset":6647,"count":0},{"startOffset":6652,"endOffset":6664,"count":0},{"startOffset":6669,"endOffset":6681,"count":0},{"startOffset":6686,"endOffset":6698,"count":0},{"startOffset":6703,"endOffset":6715,"count":0},{"startOffset":6720,"endOffset":6732,"count":0},{"startOffset":6737,"endOffset":6768,"count":0}],"isBlockCoverage":true},{"functionName":"Position","ranges":[{"startOffset":6829,"endOffset":6952,"count":119}],"isBlockCoverage":true},{"functionName":"SourceLocation","ranges":[{"startOffset":6981,"endOffset":7164,"count":64}],"isBlockCoverage":true},{"functionName":"getLineInfo","ranges":[{"startOffset":7168,"endOffset":7459,"count":0}],"isBlockCoverage":false},{"functionName":"BaseParser","ranges":[{"startOffset":7482,"endOffset":7583,"count":7}],"isBlockCoverage":true},{"functionName":"hasPlugin","ranges":[{"startOffset":7587,"endOffset":7643,"count":14}],"isBlockCoverage":true},{"functionName":"getPluginOption","ranges":[{"startOffset":7647,"endOffset":7753,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":7758,"endOffset":7816,"count":103}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":7862,"endOffset":8041,"count":0}],"isBlockCoverage":false},{"functionName":"adjustCommentsAfterTrailingComma","ranges":[{"startOffset":8045,"endOffset":9427,"count":5},{"startOffset":8183,"endOffset":8283,"count":0},{"startOffset":8285,"endOffset":9423,"count":0}],"isBlockCoverage":true},{"functionName":"processComment","ranges":[{"startOffset":9431,"endOffset":13874,"count":52},{"startOffset":9486,"endOffset":9509,"count":7},{"startOffset":9511,"endOffset":9518,"count":7},{"startOffset":9518,"endOffset":9666,"count":45},{"startOffset":9666,"endOffset":9904,"count":0},{"startOffset":9904,"endOffset":10184,"count":45},{"startOffset":9932,"endOffset":10184,"count":38},{"startOffset":10013,"endOffset":10065,"count":0},{"startOffset":10067,"endOffset":10178,"count":0},{"startOffset":10184,"endOffset":10211,"count":45},{"startOffset":10211,"endOffset":10245,"count":38},{"startOffset":10247,"endOffset":10286,"count":26},{"startOffset":10286,"endOffset":10316,"count":45},{"startOffset":10316,"endOffset":10350,"count":27},{"startOffset":10352,"endOffset":10390,"count":12},{"startOffset":10390,"endOffset":10411,"count":45},{"startOffset":10411,"endOffset":10424,"count":33},{"startOffset":10426,"endOffset":10449,"count":14},{"startOffset":10449,"endOffset":10471,"count":45},{"startOffset":10471,"endOffset":11124,"count":26},{"startOffset":10508,"endOffset":10621,"count":0},{"startOffset":10631,"endOffset":10747,"count":0},{"startOffset":10757,"endOffset":10867,"count":4},{"startOffset":10877,"endOffset":10987,"count":0},{"startOffset":10997,"endOffset":11110,"count":0},{"startOffset":11124,"endOffset":11452,"count":19},{"startOffset":11165,"endOffset":11358,"count":12},{"startOffset":11227,"endOffset":11261,"count":1},{"startOffset":11262,"endOffset":11357,"count":11},{"startOffset":11323,"endOffset":11357,"count":0},{"startOffset":11360,"endOffset":11452,"count":1},{"startOffset":11452,"endOffset":11473,"count":45},{"startOffset":11473,"endOffset":12051,"count":26},{"startOffset":11512,"endOffset":12045,"count":0},{"startOffset":12051,"endOffset":13175,"count":19},{"startOffset":12100,"endOffset":13175,"count":0},{"startOffset":13175,"endOffset":13247,"count":45},{"startOffset":13247,"endOffset":13847,"count":0},{"startOffset":13847,"endOffset":13873,"count":45}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13502,"endOffset":13536,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationForPosition","ranges":[{"startOffset":26188,"endOffset":26554,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":26558,"endOffset":26673,"count":0}],"isBlockCoverage":false},{"functionName":"raiseWithData","ranges":[{"startOffset":26677,"endOffset":26975,"count":0}],"isBlockCoverage":false},{"functionName":"_raise","ranges":[{"startOffset":26979,"endOffset":27245,"count":0}],"isBlockCoverage":false},{"functionName":"estree","ranges":[{"startOffset":27264,"endOffset":35064,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":35089,"endOffset":35382,"count":12}],"isBlockCoverage":true},{"functionName":"types$1.template","ranges":[{"startOffset":35726,"endOffset":35748,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenR.updateContext.types.braceR.updateContext","ranges":[{"startOffset":35924,"endOffset":36234,"count":5},{"startOffset":35977,"endOffset":36029,"count":0},{"startOffset":36107,"endOffset":36148,"count":1},{"startOffset":36150,"endOffset":36191,"count":0}],"isBlockCoverage":true},{"functionName":"types.name.updateContext","ranges":[{"startOffset":36264,"endOffset":36608,"count":13},{"startOffset":36340,"endOffset":36498,"count":11},{"startOffset":36376,"endOffset":36402,"count":0},{"startOffset":36403,"endOffset":36434,"count":0},{"startOffset":36435,"endOffset":36463,"count":0},{"startOffset":36465,"endOffset":36494,"count":0},{"startOffset":36566,"endOffset":36606,"count":0}],"isBlockCoverage":true},{"functionName":"types.braceL.updateContext","ranges":[{"startOffset":36640,"endOffset":36803,"count":1},{"startOffset":36741,"endOffset":36766,"count":0}],"isBlockCoverage":true},{"functionName":"types.dollarBraceL.updateContext","ranges":[{"startOffset":36841,"endOffset":36939,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenL.updateContext","ranges":[{"startOffset":36971,"endOffset":37256,"count":4},{"startOffset":37169,"endOffset":37193,"count":0}],"isBlockCoverage":true},{"functionName":"types.incDec.updateContext","ranges":[{"startOffset":37288,"endOffset":37302,"count":0}],"isBlockCoverage":false},{"functionName":"types._function.updateContext.types._class.updateContext","ranges":[{"startOffset":37366,"endOffset":37803,"count":0}],"isBlockCoverage":false},{"functionName":"types.backQuote.updateContext","ranges":[{"startOffset":37838,"endOffset":38028,"count":0}],"isBlockCoverage":false},{"functionName":"types.braceHashL.updateContext","ranges":[{"startOffset":38064,"endOffset":38165,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":48133,"endOffset":48384,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":48386,"endOffset":48731,"count":19},{"startOffset":48438,"endOffset":48457,"count":0},{"startOffset":48476,"endOffset":48488,"count":0},{"startOffset":48506,"endOffset":48525,"count":0},{"startOffset":48557,"endOffset":48730,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":48732,"endOffset":49178,"count":109},{"startOffset":48783,"endOffset":48802,"count":19},{"startOffset":48802,"endOffset":48820,"count":90},{"startOffset":48820,"endOffset":48832,"count":0},{"startOffset":48832,"endOffset":48850,"count":90},{"startOffset":48850,"endOffset":48863,"count":0},{"startOffset":48863,"endOffset":48882,"count":90},{"startOffset":48882,"endOffset":48894,"count":3},{"startOffset":48894,"endOffset":48912,"count":87},{"startOffset":48912,"endOffset":48931,"count":0},{"startOffset":48931,"endOffset":48963,"count":87},{"startOffset":48963,"endOffset":49175,"count":0}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":49866,"endOffset":49967,"count":8}],"isBlockCoverage":true},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":49968,"endOffset":50094,"count":8}],"isBlockCoverage":true},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":50095,"endOffset":50189,"count":6}],"isBlockCoverage":true},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":50190,"endOffset":50328,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyword","ranges":[{"startOffset":50329,"endOffset":50388,"count":1}],"isBlockCoverage":true},{"functionName":"isIteratorStart","ranges":[{"startOffset":50443,"endOffset":50526,"count":0}],"isBlockCoverage":false},{"functionName":"isEsModuleType","ranges":[{"startOffset":57457,"endOffset":57746,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeImportKind","ranges":[{"startOffset":57748,"endOffset":57853,"count":0}],"isBlockCoverage":false},{"functionName":"isMaybeDefaultImport","ranges":[{"startOffset":57855,"endOffset":57983,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":58132,"endOffset":58339,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":58405,"endOffset":142568,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagStart.updateContext","ranges":[{"startOffset":148472,"endOffset":148607,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagEnd.updateContext","ranges":[{"startOffset":148642,"endOffset":148939,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":148942,"endOffset":149077,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedJSXName","ranges":[{"startOffset":149079,"endOffset":149505,"count":0}],"isBlockCoverage":false},{"functionName":"jsx","ranges":[{"startOffset":149518,"endOffset":161821,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":161841,"endOffset":161981,"count":7}],"isBlockCoverage":true},{"functionName":"ScopeHandler","ranges":[{"startOffset":162008,"endOffset":162205,"count":7}],"isBlockCoverage":true},{"functionName":"get inFunction","ranges":[{"startOffset":162209,"endOffset":162295,"count":0}],"isBlockCoverage":false},{"functionName":"get allowSuper","ranges":[{"startOffset":162299,"endOffset":162383,"count":0}],"isBlockCoverage":false},{"functionName":"get allowDirectSuper","ranges":[{"startOffset":162387,"endOffset":162484,"count":0}],"isBlockCoverage":false},{"functionName":"get inClass","ranges":[{"startOffset":162488,"endOffset":162569,"count":8}],"isBlockCoverage":true},{"functionName":"get inNonArrowFunction","ranges":[{"startOffset":162573,"endOffset":162668,"count":0}],"isBlockCoverage":false},{"functionName":"get treatFunctionsAsVar","ranges":[{"startOffset":162672,"endOffset":162768,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":162772,"endOffset":162825,"count":7}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":162829,"endOffset":162898,"count":7}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":162902,"endOffset":162941,"count":0}],"isBlockCoverage":false},{"functionName":"treatFunctionsAsVarInScope","ranges":[{"startOffset":162945,"endOffset":163078,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":163082,"endOffset":164008,"count":5},{"startOffset":163199,"endOffset":163235,"count":0},{"startOffset":163354,"endOffset":163399,"count":0},{"startOffset":163555,"endOffset":163899,"count":0}],"isBlockCoverage":true},{"functionName":"maybeExportDefined","ranges":[{"startOffset":164012,"endOffset":164153,"count":5}],"isBlockCoverage":true},{"functionName":"checkRedeclarationInScope","ranges":[{"startOffset":164157,"endOffset":164348,"count":5},{"startOffset":164276,"endOffset":164344,"count":0}],"isBlockCoverage":true},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":164352,"endOffset":164996,"count":5},{"startOffset":164442,"endOffset":164455,"count":0},{"startOffset":164623,"endOffset":164910,"count":0},{"startOffset":164911,"endOffset":164991,"count":0}],"isBlockCoverage":true},{"functionName":"checkLocalExport","ranges":[{"startOffset":165000,"endOffset":165252,"count":0}],"isBlockCoverage":false},{"functionName":"currentScope","ranges":[{"startOffset":165256,"endOffset":165332,"count":5}],"isBlockCoverage":true},{"functionName":"currentVarScope","ranges":[{"startOffset":165336,"endOffset":165526,"count":0}],"isBlockCoverage":false},{"functionName":"currentThisScope","ranges":[{"startOffset":165530,"endOffset":165784,"count":8},{"startOffset":165680,"endOffset":165708,"count":0},{"startOffset":165780,"endOffset":165783,"count":0}],"isBlockCoverage":true},{"functionName":"TypeScriptScope","ranges":[{"startOffset":165829,"endOffset":166000,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":166059,"endOffset":166122,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":166126,"endOffset":166862,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":166866,"endOffset":167585,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":167589,"endOffset":167780,"count":0}],"isBlockCoverage":false},{"functionName":"ProductionParameterHandler","ranges":[{"startOffset":167954,"endOffset":167995,"count":7}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":167999,"endOffset":168046,"count":13}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":168050,"endOffset":168085,"count":6}],"isBlockCoverage":true},{"functionName":"currentFlags","ranges":[{"startOffset":168089,"endOffset":168157,"count":19}],"isBlockCoverage":true},{"functionName":"get hasAwait","ranges":[{"startOffset":168161,"endOffset":168233,"count":0}],"isBlockCoverage":false},{"functionName":"get hasYield","ranges":[{"startOffset":168237,"endOffset":168309,"count":8}],"isBlockCoverage":true},{"functionName":"get hasReturn","ranges":[{"startOffset":168313,"endOffset":168387,"count":0}],"isBlockCoverage":false},{"functionName":"get hasIn","ranges":[{"startOffset":168391,"endOffset":168457,"count":1}],"isBlockCoverage":true},{"functionName":"functionFlags","ranges":[{"startOffset":168461,"endOffset":168581,"count":0}],"isBlockCoverage":false},{"functionName":"nonNull","ranges":[{"startOffset":168583,"endOffset":168689,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":168691,"endOffset":168765,"count":0}],"isBlockCoverage":false},{"functionName":"keywordTypeFromName","ranges":[{"startOffset":171197,"endOffset":171818,"count":0}],"isBlockCoverage":false},{"functionName":"typescript","ranges":[{"startOffset":171838,"endOffset":232951,"count":0}],"isBlockCoverage":false},{"functionName":"placeholders","ranges":[{"startOffset":233040,"endOffset":239094,"count":0}],"isBlockCoverage":false},{"functionName":"v8intrinsic","ranges":[{"startOffset":239117,"endOffset":239788,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":239792,"endOffset":239984,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":239850,"endOffset":239980,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginOption","ranges":[{"startOffset":239985,"endOffset":240291,"count":0}],"isBlockCoverage":false},{"functionName":"validatePlugins","ranges":[{"startOffset":240406,"endOffset":242689,"count":7},{"startOffset":240482,"endOffset":241214,"count":0},{"startOffset":241249,"endOffset":241284,"count":0},{"startOffset":241286,"endOffset":241359,"count":0},{"startOffset":241402,"endOffset":241438,"count":0},{"startOffset":241440,"endOffset":241522,"count":0},{"startOffset":241569,"endOffset":241658,"count":0},{"startOffset":241660,"endOffset":241817,"count":0},{"startOffset":241865,"endOffset":242372,"count":0},{"startOffset":242417,"endOffset":242517,"count":0},{"startOffset":242519,"endOffset":242687,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":241786,"endOffset":241799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":242656,"endOffset":242669,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":243246,"endOffset":243532,"count":7},{"startOffset":243392,"endOffset":243511,"count":98},{"startOffset":243473,"endOffset":243484,"count":14},{"startOffset":243485,"endOffset":243506,"count":84}],"isBlockCoverage":true},{"functionName":"State","ranges":[{"startOffset":243550,"endOffset":244878,"count":7}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":244882,"endOffset":245083,"count":7},{"startOffset":244945,"endOffset":244952,"count":0}],"isBlockCoverage":true},{"functionName":"curPosition","ranges":[{"startOffset":245087,"endOffset":245172,"count":119}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":245176,"endOffset":245515,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":245535,"endOffset":245596,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":246217,"endOffset":246420,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":246464,"endOffset":246709,"count":7}],"isBlockCoverage":true},{"functionName":"pushToken","ranges":[{"startOffset":246713,"endOffset":246845,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":246849,"endOffset":247238,"count":49},{"startOffset":246953,"endOffset":247009,"count":0}],"isBlockCoverage":true},{"functionName":"eat","ranges":[{"startOffset":247242,"endOffset":247362,"count":69},{"startOffset":247280,"endOffset":247325,"count":13},{"startOffset":247325,"endOffset":247358,"count":56}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":247366,"endOffset":247420,"count":259}],"isBlockCoverage":true},{"functionName":"lookahead","ranges":[{"startOffset":247424,"endOffset":247647,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenStart","ranges":[{"startOffset":247651,"endOffset":247726,"count":3}],"isBlockCoverage":true},{"functionName":"nextTokenStartSince","ranges":[{"startOffset":247730,"endOffset":247879,"count":3}],"isBlockCoverage":true},{"functionName":"lookaheadCharCode","ranges":[{"startOffset":247883,"endOffset":247965,"count":1}],"isBlockCoverage":true},{"functionName":"setStrict","ranges":[{"startOffset":247969,"endOffset":248171,"count":0}],"isBlockCoverage":false},{"functionName":"curContext","ranges":[{"startOffset":248175,"endOffset":248255,"count":58}],"isBlockCoverage":true},{"functionName":"nextToken","ranges":[{"startOffset":248259,"endOffset":248795,"count":56},{"startOffset":248344,"endOffset":248352,"count":0},{"startOffset":248531,"endOffset":248587,"count":14},{"startOffset":248587,"endOffset":248629,"count":42},{"startOffset":248629,"endOffset":248637,"count":0},{"startOffset":248638,"endOffset":248659,"count":42},{"startOffset":248680,"endOffset":248709,"count":0},{"startOffset":248709,"endOffset":248791,"count":42}],"isBlockCoverage":true},{"functionName":"pushComment","ranges":[{"startOffset":248799,"endOffset":249166,"count":0}],"isBlockCoverage":false},{"functionName":"skipBlockComment","ranges":[{"startOffset":249170,"endOffset":249831,"count":0}],"isBlockCoverage":false},{"functionName":"skipLineComment","ranges":[{"startOffset":249835,"endOffset":250361,"count":0}],"isBlockCoverage":false},{"functionName":"skipSpace","ranges":[{"startOffset":250365,"endOffset":251386,"count":56},{"startOffset":250426,"endOffset":251382,"count":61},{"startOffset":250513,"endOffset":250521,"count":19},{"startOffset":250530,"endOffset":250539,"count":19},{"startOffset":250548,"endOffset":250600,"count":19},{"startOffset":250610,"endOffset":250726,"count":0},{"startOffset":250736,"endOffset":250744,"count":0},{"startOffset":250753,"endOffset":250763,"count":0},{"startOffset":250772,"endOffset":250908,"count":0},{"startOffset":250918,"endOffset":251230,"count":0},{"startOffset":251240,"endOffset":251367,"count":42},{"startOffset":251281,"endOffset":251324,"count":0}],"isBlockCoverage":true},{"functionName":"finishToken","ranges":[{"startOffset":251390,"endOffset":251656,"count":56}],"isBlockCoverage":true},{"functionName":"readToken_numberSign","ranges":[{"startOffset":251660,"endOffset":252590,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_dot","ranges":[{"startOffset":252594,"endOffset":252982,"count":2},{"startOffset":252707,"endOffset":252757,"count":0},{"startOffset":252779,"endOffset":252830,"count":0},{"startOffset":252832,"endOffset":252906,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_slash","ranges":[{"startOffset":252986,"endOffset":253313,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_interpreter","ranges":[{"startOffset":253317,"endOffset":253815,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_mult_modulo","ranges":[{"startOffset":253819,"endOffset":254299,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_pipe_amp","ranges":[{"startOffset":254303,"endOffset":255560,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_caret","ranges":[{"startOffset":255564,"endOffset":255770,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_plus_min","ranges":[{"startOffset":255774,"endOffset":256338,"count":1},{"startOffset":255885,"endOffset":256214,"count":0},{"startOffset":256237,"endOffset":256282,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_lt_gt","ranges":[{"startOffset":256342,"endOffset":257110,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_eq_excl","ranges":[{"startOffset":257114,"endOffset":257525,"count":4},{"startOffset":257222,"endOffset":257338,"count":0},{"startOffset":257376,"endOffset":257461,"count":0},{"startOffset":257504,"endOffset":257516,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_question","ranges":[{"startOffset":257529,"endOffset":258056,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFromCode","ranges":[{"startOffset":258060,"endOffset":261996,"count":42},{"startOffset":258111,"endOffset":258165,"count":2},{"startOffset":258173,"endOffset":258263,"count":4},{"startOffset":258271,"endOffset":258361,"count":4},{"startOffset":258369,"endOffset":258457,"count":0},{"startOffset":258465,"endOffset":258554,"count":0},{"startOffset":258562,"endOffset":259062,"count":0},{"startOffset":259070,"endOffset":259162,"count":0},{"startOffset":259170,"endOffset":259668,"count":1},{"startOffset":259225,"endOffset":259277,"count":0},{"startOffset":259279,"endOffset":259564,"count":0},{"startOffset":259676,"endOffset":259767,"count":1},{"startOffset":259775,"endOffset":260041,"count":0},{"startOffset":260049,"endOffset":260108,"count":0},{"startOffset":260116,"endOffset":260209,"count":0},{"startOffset":260217,"endOffset":260656,"count":0},{"startOffset":260664,"endOffset":260672,"count":0},{"startOffset":260679,"endOffset":260687,"count":0},{"startOffset":260694,"endOffset":260702,"count":0},{"startOffset":260709,"endOffset":260717,"count":0},{"startOffset":260724,"endOffset":260732,"count":0},{"startOffset":260739,"endOffset":260747,"count":0},{"startOffset":260754,"endOffset":260762,"count":0},{"startOffset":260769,"endOffset":260777,"count":0},{"startOffset":260784,"endOffset":260840,"count":0},{"startOffset":260848,"endOffset":260856,"count":0},{"startOffset":260863,"endOffset":260918,"count":8},{"startOffset":260926,"endOffset":260982,"count":0},{"startOffset":260990,"endOffset":260998,"count":0},{"startOffset":261005,"endOffset":261071,"count":0},{"startOffset":261079,"endOffset":261088,"count":0},{"startOffset":261095,"endOffset":261158,"count":0},{"startOffset":261166,"endOffset":261222,"count":0},{"startOffset":261230,"endOffset":261238,"count":1},{"startOffset":261245,"endOffset":261308,"count":1},{"startOffset":261316,"endOffset":261324,"count":0},{"startOffset":261331,"endOffset":261391,"count":0},{"startOffset":261399,"endOffset":261407,"count":4},{"startOffset":261414,"endOffset":261476,"count":4},{"startOffset":261484,"endOffset":261548,"count":0},{"startOffset":261556,"endOffset":261642,"count":0},{"startOffset":261650,"endOffset":261711,"count":0},{"startOffset":261719,"endOffset":261768,"count":0},{"startOffset":261776,"endOffset":261878,"count":17},{"startOffset":261885,"endOffset":261995,"count":0}],"isBlockCoverage":true},{"functionName":"finishOp","ranges":[{"startOffset":262000,"endOffset":262160,"count":5}],"isBlockCoverage":true},{"functionName":"readRegexp","ranges":[{"startOffset":262164,"endOffset":263610,"count":0}],"isBlockCoverage":false},{"functionName":"readInt","ranges":[{"startOffset":263614,"endOffset":265671,"count":0}],"isBlockCoverage":false},{"functionName":"readRadixNumber","ranges":[{"startOffset":265675,"endOffset":266508,"count":0}],"isBlockCoverage":false},{"functionName":"readNumber","ranges":[{"startOffset":266512,"endOffset":268927,"count":0}],"isBlockCoverage":false},{"functionName":"readCodePoint","ranges":[{"startOffset":268931,"endOffset":269524,"count":0}],"isBlockCoverage":false},{"functionName":"readString","ranges":[{"startOffset":269528,"endOffset":270425,"count":8},{"startOffset":269619,"endOffset":270320,"count":96},{"startOffset":269662,"endOffset":269749,"count":0},{"startOffset":269831,"endOffset":269837,"count":8},{"startOffset":269837,"endOffset":269860,"count":88},{"startOffset":269860,"endOffset":270011,"count":0},{"startOffset":270011,"endOffset":270314,"count":88},{"startOffset":270049,"endOffset":270161,"count":0},{"startOffset":270186,"endOffset":270273,"count":0}],"isBlockCoverage":true},{"functionName":"readTmplToken","ranges":[{"startOffset":270429,"endOffset":272234,"count":0}],"isBlockCoverage":false},{"functionName":"recordStrictModeErrors","ranges":[{"startOffset":272238,"endOffset":272446,"count":0}],"isBlockCoverage":false},{"functionName":"readEscapedChar","ranges":[{"startOffset":272450,"endOffset":274510,"count":0}],"isBlockCoverage":false},{"functionName":"readHexChar","ranges":[{"startOffset":274514,"endOffset":274851,"count":0}],"isBlockCoverage":false},{"functionName":"readWord1","ranges":[{"startOffset":274855,"endOffset":276132,"count":17},{"startOffset":275037,"endOffset":276063,"count":103},{"startOffset":275129,"endOffset":275186,"count":86},{"startOffset":275174,"endOffset":275177,"count":0},{"startOffset":275186,"endOffset":276057,"count":17},{"startOffset":275218,"endOffset":275230,"count":0},{"startOffset":275232,"endOffset":275267,"count":0},{"startOffset":275288,"endOffset":276027,"count":0}],"isBlockCoverage":true},{"functionName":"isIterator","ranges":[{"startOffset":276136,"endOffset":276222,"count":0}],"isBlockCoverage":false},{"functionName":"readWord","ranges":[{"startOffset":276226,"endOffset":276526,"count":17},{"startOffset":276310,"endOffset":276323,"count":13},{"startOffset":276356,"endOffset":276405,"count":0},{"startOffset":276407,"endOffset":276487,"count":0}],"isBlockCoverage":true},{"functionName":"checkKeywordEscapes","ranges":[{"startOffset":276530,"endOffset":276726,"count":49},{"startOffset":276606,"endOffset":276631,"count":4},{"startOffset":276633,"endOffset":276722,"count":0}],"isBlockCoverage":true},{"functionName":"braceIsBlock","ranges":[{"startOffset":276730,"endOffset":277687,"count":1},{"startOffset":276881,"endOffset":276907,"count":0},{"startOffset":276942,"endOffset":277018,"count":0},{"startOffset":277020,"endOffset":277056,"count":0},{"startOffset":277120,"endOffset":277145,"count":0},{"startOffset":277147,"endOffset":277197,"count":0},{"startOffset":277343,"endOffset":277369,"count":0},{"startOffset":277406,"endOffset":277461,"count":0},{"startOffset":277552,"endOffset":277579,"count":0},{"startOffset":277620,"endOffset":277646,"count":0}],"isBlockCoverage":true},{"functionName":"updateContext","ranges":[{"startOffset":277691,"endOffset":278043,"count":56},{"startOffset":277789,"endOffset":277850,"count":4},{"startOffset":277852,"endOffset":277897,"count":0},{"startOffset":277936,"endOffset":277978,"count":23},{"startOffset":277978,"endOffset":278039,"count":33}],"isBlockCoverage":true},{"functionName":"addExtra","ranges":[{"startOffset":278087,"endOffset":278211,"count":16},{"startOffset":278129,"endOffset":278136,"count":0},{"startOffset":278179,"endOffset":278184,"count":8}],"isBlockCoverage":true},{"functionName":"isRelational","ranges":[{"startOffset":278215,"endOffset":278305,"count":0}],"isBlockCoverage":false},{"functionName":"expectRelational","ranges":[{"startOffset":278309,"endOffset":278453,"count":0}],"isBlockCoverage":false},{"functionName":"isContextual","ranges":[{"startOffset":278457,"endOffset":278572,"count":33},{"startOffset":278512,"endOffset":278540,"count":13},{"startOffset":278541,"endOffset":278567,"count":3}],"isBlockCoverage":true},{"functionName":"isUnparsedContextual","ranges":[{"startOffset":278576,"endOffset":278810,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadContextual","ranges":[{"startOffset":278814,"endOffset":278937,"count":0}],"isBlockCoverage":false},{"functionName":"eatContextual","ranges":[{"startOffset":278941,"endOffset":279026,"count":2},{"startOffset":278998,"endOffset":279021,"count":1}],"isBlockCoverage":true},{"functionName":"expectContextual","ranges":[{"startOffset":279030,"endOffset":279134,"count":1},{"startOffset":279099,"endOffset":279130,"count":0}],"isBlockCoverage":true},{"functionName":"canInsertSemicolon","ranges":[{"startOffset":279138,"endOffset":279258,"count":7},{"startOffset":279194,"endOffset":279221,"count":0},{"startOffset":279222,"endOffset":279253,"count":0}],"isBlockCoverage":true},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":279262,"endOffset":279377,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":279381,"endOffset":279467,"count":7}],"isBlockCoverage":true},{"functionName":"semicolon","ranges":[{"startOffset":279471,"endOffset":279557,"count":7},{"startOffset":279519,"endOffset":279553,"count":0}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":279561,"endOffset":279634,"count":1},{"startOffset":279600,"endOffset":279629,"count":0}],"isBlockCoverage":true},{"functionName":"assertNoSpace","ranges":[{"startOffset":279638,"endOffset":279796,"count":0}],"isBlockCoverage":false},{"functionName":"unexpected","ranges":[{"startOffset":279800,"endOffset":280061,"count":0}],"isBlockCoverage":false},{"functionName":"expectPlugin","ranges":[{"startOffset":280065,"endOffset":280337,"count":0}],"isBlockCoverage":false},{"functionName":"expectOnePlugin","ranges":[{"startOffset":280341,"endOffset":280644,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":280648,"endOffset":281815,"count":0}],"isBlockCoverage":false},{"functionName":"checkExpressionErrors","ranges":[{"startOffset":281819,"endOffset":282246,"count":21},{"startOffset":281904,"endOffset":281917,"count":1},{"startOffset":281917,"endOffset":282019,"count":20},{"startOffset":282019,"endOffset":282099,"count":10},{"startOffset":282099,"endOffset":282146,"count":0},{"startOffset":282146,"endOffset":282174,"count":10},{"startOffset":282174,"endOffset":282242,"count":0}],"isBlockCoverage":true},{"functionName":"isLiteralPropertyName","ranges":[{"startOffset":282250,"endOffset":282453,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":282457,"endOffset":282522,"count":2}],"isBlockCoverage":true},{"functionName":"getPrivateNameSV","ranges":[{"startOffset":282526,"endOffset":282579,"count":0}],"isBlockCoverage":false},{"functionName":"hasPropertyAsPrivateName","ranges":[{"startOffset":282583,"endOffset":282747,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":282751,"endOffset":282873,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":282877,"endOffset":282948,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":282952,"endOffset":283019,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionErrors","ranges":[{"startOffset":283050,"endOffset":283127,"count":10}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":283147,"endOffset":283699,"count":64},{"startOffset":283551,"endOffset":283559,"count":1},{"startOffset":283560,"endOffset":283583,"count":63},{"startOffset":283585,"endOffset":283607,"count":0},{"startOffset":283631,"endOffset":283639,"count":1},{"startOffset":283640,"endOffset":283657,"count":63},{"startOffset":283659,"endOffset":283695,"count":0}],"isBlockCoverage":true},{"functionName":"__clone","ranges":[{"startOffset":283703,"endOffset":284041,"count":1},{"startOffset":283843,"endOffset":284016,"count":10},{"startOffset":283909,"endOffset":283938,"count":9},{"startOffset":283939,"endOffset":283965,"count":8},{"startOffset":283967,"endOffset":284010,"count":7}],"isBlockCoverage":true},{"functionName":"startNode","ranges":[{"startOffset":284085,"endOffset":284168,"count":48}],"isBlockCoverage":true},{"functionName":"startNodeAt","ranges":[{"startOffset":284172,"endOffset":284236,"count":15}],"isBlockCoverage":true},{"functionName":"startNodeAtNode","ranges":[{"startOffset":284240,"endOffset":284324,"count":0}],"isBlockCoverage":false},{"functionName":"finishNode","ranges":[{"startOffset":284328,"endOffset":284447,"count":52}],"isBlockCoverage":true},{"functionName":"finishNodeAt","ranges":[{"startOffset":284451,"endOffset":284656,"count":52},{"startOffset":284584,"endOffset":284604,"count":0}],"isBlockCoverage":true},{"functionName":"resetStartLocation","ranges":[{"startOffset":284660,"endOffset":284814,"count":0}],"isBlockCoverage":false},{"functionName":"resetEndLocation","ranges":[{"startOffset":284818,"endOffset":285007,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocationFromNode","ranges":[{"startOffset":285011,"endOffset":285142,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":285185,"endOffset":285302,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignable","ranges":[{"startOffset":285344,"endOffset":287772,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableObjectExpressionProp","ranges":[{"startOffset":287776,"endOffset":288205,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableList","ranges":[{"startOffset":288209,"endOffset":289248,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedList","ranges":[{"startOffset":289252,"endOffset":289326,"count":4}],"isBlockCoverage":true},{"functionName":"toReferencedListDeep","ranges":[{"startOffset":289330,"endOffset":289666,"count":4},{"startOffset":289552,"endOffset":289560,"count":0},{"startOffset":289597,"endOffset":289656,"count":0}],"isBlockCoverage":true},{"functionName":"parseSpread","ranges":[{"startOffset":289670,"endOffset":289929,"count":0}],"isBlockCoverage":false},{"functionName":"parseRestBinding","ranges":[{"startOffset":289933,"endOffset":290103,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingAtom","ranges":[{"startOffset":290107,"endOffset":290529,"count":4},{"startOffset":290165,"endOffset":290400,"count":0},{"startOffset":290408,"endOffset":290483,"count":0}],"isBlockCoverage":true},{"functionName":"parseBindingList","ranges":[{"startOffset":290533,"endOffset":291545,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItem","ranges":[{"startOffset":291549,"endOffset":291857,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItemTypes","ranges":[{"startOffset":291861,"endOffset":291920,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDefault","ranges":[{"startOffset":291924,"endOffset":292462,"count":0}],"isBlockCoverage":false},{"functionName":"checkLVal","ranges":[{"startOffset":292466,"endOffset":295051,"count":5},{"startOffset":292760,"endOffset":292807,"count":0},{"startOffset":292847,"endOffset":293008,"count":0},{"startOffset":293038,"endOffset":293229,"count":0},{"startOffset":293264,"endOffset":293281,"count":4},{"startOffset":293283,"endOffset":293367,"count":0},{"startOffset":293527,"endOffset":293697,"count":0},{"startOffset":293705,"endOffset":294116,"count":0},{"startOffset":294124,"endOffset":294457,"count":0},{"startOffset":294465,"endOffset":294589,"count":0},{"startOffset":294597,"endOffset":294713,"count":0},{"startOffset":294721,"endOffset":294863,"count":0},{"startOffset":294871,"endOffset":295041,"count":0}],"isBlockCoverage":true},{"functionName":"checkToRestConversion","ranges":[{"startOffset":295055,"endOffset":295269,"count":0}],"isBlockCoverage":false},{"functionName":"checkCommaAfterRest","ranges":[{"startOffset":295273,"endOffset":295526,"count":0}],"isBlockCoverage":false},{"functionName":"raiseRestNotLast","ranges":[{"startOffset":295530,"endOffset":295616,"count":0}],"isBlockCoverage":false},{"functionName":"raiseTrailingCommaAfterRest","ranges":[{"startOffset":295620,"endOffset":295712,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionScope","ranges":[{"startOffset":295891,"endOffset":295974,"count":7}],"isBlockCoverage":true},{"functionName":"canBeArrowParameterDeclaration","ranges":[{"startOffset":295978,"endOffset":296128,"count":0}],"isBlockCoverage":false},{"functionName":"isCertainlyParameterDeclaration","ranges":[{"startOffset":296132,"endOffset":296219,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowHeadParsingScope","ranges":[{"startOffset":296280,"endOffset":296349,"count":0}],"isBlockCoverage":false},{"functionName":"recordDeclarationError","ranges":[{"startOffset":296353,"endOffset":296430,"count":0}],"isBlockCoverage":false},{"functionName":"clearDeclarationError","ranges":[{"startOffset":296434,"endOffset":296495,"count":0}],"isBlockCoverage":false},{"functionName":"iterateErrors","ranges":[{"startOffset":296499,"endOffset":296563,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionScopeHandler","ranges":[{"startOffset":296601,"endOffset":296691,"count":7}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":296695,"endOffset":296741,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":296745,"endOffset":296779,"count":0}],"isBlockCoverage":false},{"functionName":"recordParameterInitializerError","ranges":[{"startOffset":296783,"endOffset":297191,"count":0}],"isBlockCoverage":false},{"functionName":"recordParenthesizedIdentifierError","ranges":[{"startOffset":297195,"endOffset":297554,"count":0}],"isBlockCoverage":false},{"functionName":"recordAsyncArrowParametersError","ranges":[{"startOffset":297558,"endOffset":297915,"count":0}],"isBlockCoverage":false},{"functionName":"validateAsPattern","ranges":[{"startOffset":297919,"endOffset":298381,"count":0}],"isBlockCoverage":false},{"functionName":"newParameterDeclarationScope","ranges":[{"startOffset":298385,"endOffset":298481,"count":0}],"isBlockCoverage":false},{"functionName":"newArrowHeadScope","ranges":[{"startOffset":298482,"endOffset":298583,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncArrowScope","ranges":[{"startOffset":298584,"endOffset":298691,"count":0}],"isBlockCoverage":false},{"functionName":"newExpressionScope","ranges":[{"startOffset":298692,"endOffset":298757,"count":0}],"isBlockCoverage":false},{"functionName":"checkProto","ranges":[{"startOffset":298805,"endOffset":299547,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExitDescending","ranges":[{"startOffset":299551,"endOffset":299688,"count":31},{"startOffset":299649,"endOffset":299683,"count":0}],"isBlockCoverage":true},{"functionName":"getExpression","ranges":[{"startOffset":299692,"endOffset":300142,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":300146,"endOffset":300396,"count":2},{"startOffset":300217,"endOffset":300310,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":300251,"endOffset":300302,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":300339,"endOffset":300390,"count":2}],"isBlockCoverage":true},{"functionName":"parseExpressionBase","ranges":[{"startOffset":300400,"endOffset":300966,"count":2},{"startOffset":300619,"endOffset":300944,"count":0}],"isBlockCoverage":true},{"functionName":"parseMaybeAssignDisallowIn","ranges":[{"startOffset":300970,"endOffset":301172,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeAssignAllowIn","ranges":[{"startOffset":301176,"endOffset":301372,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":301284,"endOffset":301366,"count":8}],"isBlockCoverage":true},{"functionName":"parseMaybeAssign","ranges":[{"startOffset":301376,"endOffset":303116,"count":10},{"startOffset":301568,"endOffset":301830,"count":0},{"startOffset":301891,"endOffset":301933,"count":0},{"startOffset":302094,"endOffset":302155,"count":3},{"startOffset":302264,"endOffset":302337,"count":4},{"startOffset":302373,"endOffset":302995,"count":0}],"isBlockCoverage":true},{"functionName":"parseMaybeConditional","ranges":[{"startOffset":303120,"endOffset":303548,"count":10},{"startOffset":303439,"endOffset":303465,"count":0}],"isBlockCoverage":true},{"functionName":"parseConditional","ranges":[{"startOffset":303552,"endOffset":303956,"count":10},{"startOffset":303649,"endOffset":303934,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprOps","ranges":[{"startOffset":303960,"endOffset":304345,"count":10},{"startOffset":304255,"endOffset":304281,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprOp","ranges":[{"startOffset":304349,"endOffset":306383,"count":12},{"startOffset":304466,"endOffset":304517,"count":1},{"startOffset":304491,"endOffset":304516,"count":0},{"startOffset":304519,"endOffset":306361,"count":1},{"startOffset":304621,"endOffset":304880,"count":0},{"startOffset":305052,"endOffset":305086,"count":0},{"startOffset":305087,"endOffset":305180,"count":0},{"startOffset":305182,"endOffset":305286,"count":0},{"startOffset":305443,"endOffset":305495,"count":0},{"startOffset":305553,"endOffset":305622,"count":0},{"startOffset":305624,"endOffset":305842,"count":0},{"startOffset":305952,"endOffset":305973,"count":0},{"startOffset":306059,"endOffset":306121,"count":0},{"startOffset":306133,"endOffset":306170,"count":0},{"startOffset":306172,"endOffset":306270,"count":0},{"startOffset":306361,"endOffset":306382,"count":11}],"isBlockCoverage":true},{"functionName":"parseExprOpRightExpr","ranges":[{"startOffset":306387,"endOffset":307082,"count":1},{"startOffset":306526,"endOffset":307000,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":306694,"endOffset":306826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":306910,"endOffset":306988,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpBaseRightExpr","ranges":[{"startOffset":307086,"endOffset":307319,"count":1},{"startOffset":307296,"endOffset":307306,"count":0}],"isBlockCoverage":true},{"functionName":"parseMaybeUnary","ranges":[{"startOffset":307323,"endOffset":308403,"count":11},{"startOffset":307397,"endOffset":307421,"count":0},{"startOffset":307423,"endOffset":307462,"count":0},{"startOffset":307577,"endOffset":308334,"count":0}],"isBlockCoverage":true},{"functionName":"parseUpdate","ranges":[{"startOffset":308407,"endOffset":309186,"count":11},{"startOffset":308472,"endOffset":308592,"count":0},{"startOffset":308801,"endOffset":308813,"count":0},{"startOffset":308850,"endOffset":308879,"count":0},{"startOffset":308881,"endOffset":309164,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprSubscripts","ranges":[{"startOffset":309190,"endOffset":309580,"count":11},{"startOffset":309490,"endOffset":309516,"count":0}],"isBlockCoverage":true},{"functionName":"parseSubscripts","ranges":[{"startOffset":309584,"endOffset":309943,"count":11},{"startOffset":309780,"endOffset":309900,"count":17}],"isBlockCoverage":true},{"functionName":"parseSubscript","ranges":[{"startOffset":309947,"endOffset":310883,"count":17},{"startOffset":310055,"endOffset":310133,"count":0},{"startOffset":310172,"endOffset":310261,"count":0},{"startOffset":310329,"endOffset":310519,"count":0},{"startOffset":310567,"endOffset":310668,"count":4},{"startOffset":310668,"endOffset":310879,"count":13},{"startOffset":310741,"endOffset":310822,"count":2},{"startOffset":310822,"endOffset":310879,"count":11}],"isBlockCoverage":true},{"functionName":"parseMember","ranges":[{"startOffset":310887,"endOffset":311744,"count":2},{"startOffset":311130,"endOffset":311154,"count":0},{"startOffset":311230,"endOffset":311438,"count":0},{"startOffset":311489,"endOffset":311531,"count":0},{"startOffset":311568,"endOffset":311671,"count":0}],"isBlockCoverage":true},{"functionName":"parseBind","ranges":[{"startOffset":311748,"endOffset":312052,"count":0}],"isBlockCoverage":false},{"functionName":"parseCoverCallAndAsyncArrowHead","ranges":[{"startOffset":312056,"endOffset":313362,"count":4},{"startOffset":312378,"endOffset":312441,"count":0},{"startOffset":312478,"endOffset":312517,"count":0},{"startOffset":312537,"endOffset":312623,"count":0},{"startOffset":312881,"endOffset":312912,"count":0},{"startOffset":312913,"endOffset":312925,"count":0},{"startOffset":312927,"endOffset":313139,"count":0},{"startOffset":313180,"endOffset":313226,"count":0}],"isBlockCoverage":true},{"functionName":"toReferencedArguments","ranges":[{"startOffset":313366,"endOffset":313488,"count":4}],"isBlockCoverage":true},{"functionName":"parseTaggedTemplateExpression","ranges":[{"startOffset":313492,"endOffset":313856,"count":0}],"isBlockCoverage":false},{"functionName":"atPossibleAsyncArrow","ranges":[{"startOffset":313860,"endOffset":314101,"count":11},{"startOffset":313927,"endOffset":313951,"count":3},{"startOffset":313952,"endOffset":313989,"count":0},{"startOffset":313990,"endOffset":314019,"count":0},{"startOffset":314020,"endOffset":314050,"count":0},{"startOffset":314051,"endOffset":314096,"count":0}],"isBlockCoverage":true},{"functionName":"finishCallExpression","ranges":[{"startOffset":314105,"endOffset":315000,"count":4},{"startOffset":314183,"endOffset":314905,"count":1},{"startOffset":314224,"endOffset":314343,"count":0},{"startOffset":314413,"endOffset":314601,"count":0},{"startOffset":314793,"endOffset":314881,"count":0},{"startOffset":314949,"endOffset":314975,"count":0}],"isBlockCoverage":true},{"functionName":"parseCallExpressionArguments","ranges":[{"startOffset":315004,"endOffset":316130,"count":4},{"startOffset":315365,"endOffset":315842,"count":0},{"startOffset":315909,"endOffset":315933,"count":0},{"startOffset":315966,"endOffset":315994,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseAsyncArrow","ranges":[{"startOffset":316134,"endOffset":316229,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncArrowFromCallExpression","ranges":[{"startOffset":316233,"endOffset":316485,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoCallExpr","ranges":[{"startOffset":316489,"endOffset":316674,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprAtom","ranges":[{"startOffset":316678,"endOffset":322734,"count":12},{"startOffset":316756,"endOffset":316774,"count":0},{"startOffset":316900,"endOffset":316952,"count":0},{"startOffset":316960,"endOffset":317315,"count":1},{"startOffset":317070,"endOffset":317134,"count":0},{"startOffset":317175,"endOffset":317266,"count":0},{"startOffset":317323,"endOffset":317450,"count":0},{"startOffset":317458,"endOffset":318472,"count":3},{"startOffset":317635,"endOffset":317664,"count":0},{"startOffset":317666,"endOffset":318232,"count":0},{"startOffset":318286,"endOffset":318315,"count":0},{"startOffset":318317,"endOffset":318440,"count":0},{"startOffset":318480,"endOffset":318548,"count":0},{"startOffset":318556,"endOffset":318801,"count":0},{"startOffset":318809,"endOffset":318894,"count":0},{"startOffset":318902,"endOffset":318989,"count":0},{"startOffset":318997,"endOffset":319086,"count":0},{"startOffset":319094,"endOffset":319181,"count":8},{"startOffset":319189,"endOffset":319313,"count":0},{"startOffset":319321,"endOffset":319338,"count":0},{"startOffset":319345,"endOffset":319406,"count":0},{"startOffset":319414,"endOffset":319500,"count":0},{"startOffset":319508,"endOffset":319531,"count":0},{"startOffset":319538,"endOffset":319730,"count":0},{"startOffset":319738,"endOffset":319866,"count":0},{"startOffset":319874,"endOffset":319895,"count":0},{"startOffset":319902,"endOffset":320087,"count":0},{"startOffset":320095,"endOffset":320221,"count":0},{"startOffset":320229,"endOffset":320301,"count":0},{"startOffset":320309,"endOffset":320355,"count":0},{"startOffset":320363,"endOffset":320494,"count":0},{"startOffset":320502,"endOffset":320561,"count":0},{"startOffset":320569,"endOffset":320632,"count":0},{"startOffset":320640,"endOffset":321053,"count":0},{"startOffset":321061,"endOffset":322334,"count":0},{"startOffset":322342,"endOffset":322675,"count":0},{"startOffset":322683,"endOffset":322724,"count":0}],"isBlockCoverage":true},{"functionName":"parseAsyncArrowUnaryFunction","ranges":[{"startOffset":322738,"endOffset":323184,"count":0}],"isBlockCoverage":false},{"functionName":"parseDo","ranges":[{"startOffset":323188,"endOffset":323484,"count":0}],"isBlockCoverage":false},{"functionName":"parseSuper","ranges":[{"startOffset":323488,"endOffset":324085,"count":0}],"isBlockCoverage":false},{"functionName":"parseBooleanLiteral","ranges":[{"startOffset":324089,"endOffset":324262,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybePrivateName","ranges":[{"startOffset":324266,"endOffset":324863,"count":2},{"startOffset":324378,"endOffset":324805,"count":0}],"isBlockCoverage":true},{"functionName":"parseFunctionOrFunctionSent","ranges":[{"startOffset":324867,"endOffset":325217,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetaProperty","ranges":[{"startOffset":325221,"endOffset":325857,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportMetaProperty","ranges":[{"startOffset":325861,"endOffset":326309,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteral","ranges":[{"startOffset":326313,"endOffset":326713,"count":8}],"isBlockCoverage":true},{"functionName":"parseParenAndDistinguishExpression","ranges":[{"startOffset":326717,"endOffset":329899,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseArrow","ranges":[{"startOffset":329903,"endOffset":329966,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrow","ranges":[{"startOffset":329970,"endOffset":330050,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenItem","ranges":[{"startOffset":330054,"endOffset":330117,"count":4}],"isBlockCoverage":true},{"functionName":"parseNewOrNewTarget","ranges":[{"startOffset":330121,"endOffset":330740,"count":0}],"isBlockCoverage":false},{"functionName":"parseNew","ranges":[{"startOffset":330744,"endOffset":331268,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewArguments","ranges":[{"startOffset":331272,"endOffset":331498,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateElement","ranges":[{"startOffset":331502,"endOffset":331995,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":331999,"endOffset":332499,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateSubstitution","ranges":[{"startOffset":332503,"endOffset":332571,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectLike","ranges":[{"startOffset":332575,"endOffset":334057,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAsyncOrAccessorProp","ranges":[{"startOffset":334061,"endOffset":334248,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyDefinition","ranges":[{"startOffset":334252,"endOffset":336300,"count":0}],"isBlockCoverage":false},{"functionName":"getGetterSetterExpectedParamCount","ranges":[{"startOffset":336304,"endOffset":336393,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectOrClassMethodParams","ranges":[{"startOffset":336397,"endOffset":336465,"count":0}],"isBlockCoverage":false},{"functionName":"checkGetterSetterParams","ranges":[{"startOffset":336469,"endOffset":337104,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMethod","ranges":[{"startOffset":337108,"endOffset":337603,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectProperty","ranges":[{"startOffset":337607,"endOffset":338640,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjPropValue","ranges":[{"startOffset":338644,"endOffset":338988,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyName","ranges":[{"startOffset":338992,"endOffset":339667,"count":0}],"isBlockCoverage":false},{"functionName":"initFunction","ranges":[{"startOffset":339671,"endOffset":339780,"count":0}],"isBlockCoverage":false},{"functionName":"parseMethod","ranges":[{"startOffset":339784,"endOffset":340379,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayLike","ranges":[{"startOffset":340383,"endOffset":340949,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowExpression","ranges":[{"startOffset":340953,"endOffset":341769,"count":0}],"isBlockCoverage":false},{"functionName":"setArrowFunctionParameters","ranges":[{"startOffset":341773,"endOffset":341911,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBodyAndFinish","ranges":[{"startOffset":341915,"endOffset":342061,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBody","ranges":[{"startOffset":342065,"endOffset":343471,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParamList","ranges":[{"startOffset":343475,"endOffset":343644,"count":0}],"isBlockCoverage":false},{"functionName":"checkParams","ranges":[{"startOffset":343648,"endOffset":344034,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprList","ranges":[{"startOffset":344038,"endOffset":344594,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprListItem","ranges":[{"startOffset":344598,"endOffset":345611,"count":4},{"startOffset":344734,"endOffset":344865,"count":0},{"startOffset":344903,"endOffset":345145,"count":0},{"startOffset":345183,"endOffset":345475,"count":0}],"isBlockCoverage":true},{"functionName":"parseIdentifier","ranges":[{"startOffset":345615,"endOffset":345790,"count":10}],"isBlockCoverage":true},{"functionName":"createIdentifier","ranges":[{"startOffset":345794,"endOffset":345934,"count":10}],"isBlockCoverage":true},{"functionName":"parseIdentifierName","ranges":[{"startOffset":345938,"endOffset":346637,"count":10},{"startOffset":346112,"endOffset":346457,"count":0},{"startOffset":346476,"endOffset":346519,"count":3},{"startOffset":346519,"endOffset":346598,"count":7}],"isBlockCoverage":true},{"functionName":"checkReservedWord","ranges":[{"startOffset":346641,"endOffset":347911,"count":8},{"startOffset":346735,"endOffset":346754,"count":0},{"startOffset":346756,"endOffset":346843,"count":0},{"startOffset":346871,"endOffset":347132,"count":0},{"startOffset":347161,"endOffset":347194,"count":0},{"startOffset":347195,"endOffset":347218,"count":0},{"startOffset":347220,"endOffset":347301,"count":0},{"startOffset":347325,"endOffset":347343,"count":1},{"startOffset":347345,"endOffset":347433,"count":0},{"startOffset":347479,"endOffset":347495,"count":0},{"startOffset":347508,"endOffset":347534,"count":1},{"startOffset":347535,"endOffset":347557,"count":7},{"startOffset":347603,"endOffset":347907,"count":0}],"isBlockCoverage":true},{"functionName":"isAwaitAllowed","ranges":[{"startOffset":347915,"endOffset":348104,"count":0}],"isBlockCoverage":false},{"functionName":"parseAwait","ranges":[{"startOffset":348108,"endOffset":349007,"count":0}],"isBlockCoverage":false},{"functionName":"parseYield","ranges":[{"startOffset":349011,"endOffset":349529,"count":0}],"isBlockCoverage":false},{"functionName":"checkPipelineAtInfixOperator","ranges":[{"startOffset":349533,"endOffset":349805,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBody","ranges":[{"startOffset":349809,"endOffset":350029,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyEarlyErrors","ranges":[{"startOffset":350033,"endOffset":350355,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBodyInStyle","ranges":[{"startOffset":350359,"endOffset":350945,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleReference","ranges":[{"startOffset":350949,"endOffset":351219,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicPermittingContext","ranges":[{"startOffset":351223,"endOffset":351539,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicForbiddingContext","ranges":[{"startOffset":351543,"endOffset":351859,"count":0}],"isBlockCoverage":false},{"functionName":"withSoloAwaitPermittingContext","ranges":[{"startOffset":351863,"endOffset":352118,"count":0}],"isBlockCoverage":false},{"functionName":"allowInAnd","ranges":[{"startOffset":352122,"endOffset":352443,"count":10},{"startOffset":352265,"endOffset":352415,"count":6},{"startOffset":352415,"endOffset":352442,"count":4}],"isBlockCoverage":true},{"functionName":"disallowInAnd","ranges":[{"startOffset":352447,"endOffset":352775,"count":0}],"isBlockCoverage":false},{"functionName":"registerTopicReference","ranges":[{"startOffset":352779,"endOffset":352856,"count":0}],"isBlockCoverage":false},{"functionName":"primaryTopicReferenceIsAllowedInCurrentTopicContext","ranges":[{"startOffset":352860,"endOffset":352985,"count":0}],"isBlockCoverage":false},{"functionName":"topicReferenceWasUsedInCurrentTopicContext","ranges":[{"startOffset":352989,"endOffset":353143,"count":0}],"isBlockCoverage":false},{"functionName":"parseFSharpPipelineBody","ranges":[{"startOffset":353147,"endOffset":353621,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopLevel","ranges":[{"startOffset":353928,"endOffset":354723,"count":7},{"startOffset":354230,"endOffset":354523,"count":0},{"startOffset":354651,"endOffset":354677,"count":0}],"isBlockCoverage":true},{"functionName":"stmtToDirective","ranges":[{"startOffset":354727,"endOffset":355330,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterpreterDirective","ranges":[{"startOffset":355334,"endOffset":355589,"count":7},{"startOffset":355439,"endOffset":355588,"count":0}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":355593,"endOffset":356156,"count":7},{"startOffset":355645,"endOffset":355672,"count":5},{"startOffset":355672,"endOffset":355785,"count":2},{"startOffset":355785,"endOffset":355797,"count":0},{"startOffset":355797,"endOffset":355815,"count":2},{"startOffset":355815,"endOffset":355828,"count":0},{"startOffset":355828,"endOffset":355853,"count":2},{"startOffset":355853,"endOffset":355865,"count":0},{"startOffset":355865,"endOffset":356133,"count":2},{"startOffset":355990,"endOffset":356014,"count":4},{"startOffset":356133,"endOffset":356155,"count":0}],"isBlockCoverage":true},{"functionName":"parseStatement","ranges":[{"startOffset":356160,"endOffset":356330,"count":7},{"startOffset":356226,"endOffset":356267,"count":0}],"isBlockCoverage":true},{"functionName":"parseStatementContent","ranges":[{"startOffset":356334,"endOffset":360237,"count":7},{"startOffset":356493,"endOffset":356550,"count":2},{"startOffset":356583,"endOffset":356601,"count":0},{"startOffset":356608,"endOffset":356703,"count":0},{"startOffset":356711,"endOffset":356782,"count":0},{"startOffset":356790,"endOffset":356849,"count":0},{"startOffset":356857,"endOffset":356918,"count":0},{"startOffset":356926,"endOffset":357356,"count":0},{"startOffset":357364,"endOffset":357466,"count":0},{"startOffset":357474,"endOffset":357533,"count":0},{"startOffset":357541,"endOffset":357608,"count":0},{"startOffset":357616,"endOffset":357683,"count":0},{"startOffset":357691,"endOffset":357756,"count":0},{"startOffset":357764,"endOffset":357825,"count":0},{"startOffset":357833,"endOffset":357851,"count":2},{"startOffset":357858,"endOffset":358103,"count":4},{"startOffset":357895,"endOffset":357914,"count":2},{"startOffset":357937,"endOffset":357954,"count":0},{"startOffset":357956,"endOffset":358051,"count":0},{"startOffset":358111,"endOffset":358176,"count":0},{"startOffset":358184,"endOffset":358247,"count":0},{"startOffset":358255,"endOffset":358307,"count":0},{"startOffset":358315,"endOffset":358378,"count":0},{"startOffset":358386,"endOffset":358593,"count":1},{"startOffset":358547,"endOffset":358583,"count":0},{"startOffset":358601,"endOffset":359583,"count":1},{"startOffset":358701,"endOffset":358794,"count":0},{"startOffset":359008,"endOffset":359040,"count":0},{"startOffset":359115,"endOffset":359501,"count":0},{"startOffset":359591,"endOffset":359905,"count":2},{"startOffset":359648,"endOffset":359895,"count":0},{"startOffset":359911,"endOffset":360057,"count":2},{"startOffset":360058,"endOffset":360082,"count":0},{"startOffset":360084,"endOffset":360164,"count":0},{"startOffset":360164,"endOffset":360233,"count":2}],"isBlockCoverage":true},{"functionName":"assertModuleNodeAllowed","ranges":[{"startOffset":360241,"endOffset":360493,"count":1},{"startOffset":360342,"endOffset":360489,"count":0}],"isBlockCoverage":true},{"functionName":"takeDecorators","ranges":[{"startOffset":360497,"endOffset":360819,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLeadingDecorator","ranges":[{"startOffset":360823,"endOffset":360891,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorators","ranges":[{"startOffset":360895,"endOffset":361597,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorator","ranges":[{"startOffset":361601,"endOffset":362611,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDecoratorArguments","ranges":[{"startOffset":362615,"endOffset":362964,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakContinueStatement","ranges":[{"startOffset":362968,"endOffset":363351,"count":0}],"isBlockCoverage":false},{"functionName":"verifyBreakContinue","ranges":[{"startOffset":363355,"endOffset":363859,"count":0}],"isBlockCoverage":false},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":363863,"endOffset":363991,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaderExpression","ranges":[{"startOffset":363995,"endOffset":364142,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoStatement","ranges":[{"startOffset":364146,"endOffset":364498,"count":0}],"isBlockCoverage":false},{"functionName":"parseForStatement","ranges":[{"startOffset":364502,"endOffset":366107,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionStatement","ranges":[{"startOffset":366111,"endOffset":366307,"count":0}],"isBlockCoverage":false},{"functionName":"parseIfStatement","ranges":[{"startOffset":366311,"endOffset":366579,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnStatement","ranges":[{"startOffset":366583,"endOffset":366992,"count":0}],"isBlockCoverage":false},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":366996,"endOffset":368222,"count":0}],"isBlockCoverage":false},{"functionName":"parseThrowStatement","ranges":[{"startOffset":368226,"endOffset":368514,"count":0}],"isBlockCoverage":false},{"functionName":"parseCatchClauseParam","ranges":[{"startOffset":368518,"endOffset":368768,"count":0}],"isBlockCoverage":false},{"functionName":"parseTryStatement","ranges":[{"startOffset":368772,"endOffset":369649,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarStatement","ranges":[{"startOffset":369653,"endOffset":369822,"count":4}],"isBlockCoverage":true},{"functionName":"parseWhileStatement","ranges":[{"startOffset":369826,"endOffset":370125,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":370129,"endOffset":370457,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":370461,"endOffset":370561,"count":0}],"isBlockCoverage":false},{"functionName":"parseLabeledStatement","ranges":[{"startOffset":370565,"endOffset":371619,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionStatement","ranges":[{"startOffset":371623,"endOffset":371772,"count":2}],"isBlockCoverage":true},{"functionName":"parseBlock","ranges":[{"startOffset":371776,"endOffset":372286,"count":0}],"isBlockCoverage":false},{"functionName":"isValidDirective","ranges":[{"startOffset":372290,"endOffset":372450,"count":7},{"startOffset":372362,"endOffset":372405,"count":2},{"startOffset":372406,"endOffset":372445,"count":0}],"isBlockCoverage":true},{"functionName":"parseBlockBody","ranges":[{"startOffset":372454,"endOffset":372725,"count":7},{"startOffset":372676,"endOffset":372687,"count":0}],"isBlockCoverage":true},{"functionName":"parseBlockOrModuleBlockBody","ranges":[{"startOffset":372729,"endOffset":373689,"count":7},{"startOffset":373103,"endOffset":373402,"count":0},{"startOffset":373544,"endOffset":373609,"count":0},{"startOffset":373631,"endOffset":373667,"count":0}],"isBlockCoverage":true},{"functionName":"parseFor","ranges":[{"startOffset":373693,"endOffset":374163,"count":0}],"isBlockCoverage":false},{"functionName":"parseForIn","ranges":[{"startOffset":374167,"endOffset":375157,"count":0}],"isBlockCoverage":false},{"functionName":"parseVar","ranges":[{"startOffset":375161,"endOffset":376213,"count":4},{"startOffset":375464,"endOffset":375499,"count":0},{"startOffset":375541,"endOffset":376073,"count":0}],"isBlockCoverage":true},{"functionName":"parseVarId","ranges":[{"startOffset":376217,"endOffset":376406,"count":4},{"startOffset":376348,"endOffset":376358,"count":0}],"isBlockCoverage":true},{"functionName":"parseFunction","ranges":[{"startOffset":376410,"endOffset":377710,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionId","ranges":[{"startOffset":377714,"endOffset":377826,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionParams","ranges":[{"startOffset":377830,"endOffset":378087,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunctionStatementId","ranges":[{"startOffset":378091,"endOffset":378339,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":378343,"endOffset":378750,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":378754,"endOffset":378864,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":378868,"endOffset":378926,"count":0}],"isBlockCoverage":false},{"functionName":"isNonstaticConstructor","ranges":[{"startOffset":378930,"endOffset":379090,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassBody","ranges":[{"startOffset":379094,"endOffset":380541,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberFromModifier","ranges":[{"startOffset":380545,"endOffset":381160,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMember","ranges":[{"startOffset":381164,"endOffset":381578,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberWithIsStatic","ranges":[{"startOffset":381582,"endOffset":385266,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassElementName","ranges":[{"startOffset":385270,"endOffset":385710,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassStaticBlock","ranges":[{"startOffset":385714,"endOffset":386665,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassProperty","ranges":[{"startOffset":386669,"endOffset":386942,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateProperty","ranges":[{"startOffset":386946,"endOffset":387254,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassMethod","ranges":[{"startOffset":387258,"endOffset":387482,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateMethod","ranges":[{"startOffset":387486,"endOffset":388086,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostMemberNameModifiers","ranges":[{"startOffset":388090,"endOffset":388135,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPrivateProperty","ranges":[{"startOffset":388139,"endOffset":388289,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassProperty","ranges":[{"startOffset":388293,"endOffset":388536,"count":0}],"isBlockCoverage":false},{"functionName":"parseInitializer","ranges":[{"startOffset":388540,"endOffset":388864,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassId","ranges":[{"startOffset":388868,"endOffset":389280,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassSuper","ranges":[{"startOffset":389284,"endOffset":389395,"count":0}],"isBlockCoverage":false},{"functionName":"parseExport","ranges":[{"startOffset":389399,"endOffset":390972,"count":0}],"isBlockCoverage":false},{"functionName":"eatExportStar","ranges":[{"startOffset":390976,"endOffset":391034,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDefaultSpecifier","ranges":[{"startOffset":391038,"endOffset":391392,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamespaceSpecifier","ranges":[{"startOffset":391396,"endOffset":391826,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamedSpecifiers","ranges":[{"startOffset":391830,"endOffset":392121,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDeclaration","ranges":[{"startOffset":392125,"endOffset":392369,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":392373,"endOffset":392602,"count":2},{"startOffset":392443,"endOffset":392597,"count":0}],"isBlockCoverage":true},{"functionName":"parseExportDefaultExpression","ranges":[{"startOffset":392606,"endOffset":393607,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":393611,"endOffset":393683,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":393687,"endOffset":394709,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportFrom","ranges":[{"startOffset":394713,"endOffset":395133,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseExportDeclaration","ranges":[{"startOffset":395137,"endOffset":395744,"count":0}],"isBlockCoverage":false},{"functionName":"checkExport","ranges":[{"startOffset":395748,"endOffset":398139,"count":0}],"isBlockCoverage":false},{"functionName":"checkDeclaration","ranges":[{"startOffset":398143,"endOffset":399036,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicateExports","ranges":[{"startOffset":399040,"endOffset":399321,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifiers","ranges":[{"startOffset":399325,"endOffset":399884,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleExportName","ranges":[{"startOffset":399888,"endOffset":400356,"count":1},{"startOffset":399948,"endOffset":400312,"count":0}],"isBlockCoverage":true},{"functionName":"parseImport","ranges":[{"startOffset":400360,"endOffset":401171,"count":1},{"startOffset":400550,"endOffset":400574,"count":0},{"startOffset":400892,"endOffset":400935,"count":0},{"startOffset":401030,"endOffset":401081,"count":0}],"isBlockCoverage":true},{"functionName":"parseImportSource","ranges":[{"startOffset":401175,"endOffset":401287,"count":1},{"startOffset":401232,"endOffset":401250,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseDefaultImport","ranges":[{"startOffset":401291,"endOffset":401362,"count":1}],"isBlockCoverage":true},{"functionName":"parseImportSpecifierLocal","ranges":[{"startOffset":401366,"endOffset":401617,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssertEntries","ranges":[{"startOffset":401621,"endOffset":402703,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseModuleAttributes","ranges":[{"startOffset":402707,"endOffset":403827,"count":1},{"startOffset":402770,"endOffset":402802,"count":0},{"startOffset":402804,"endOffset":402875,"count":0},{"startOffset":402929,"endOffset":402939,"count":0},{"startOffset":402964,"endOffset":403826,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseImportAssertions","ranges":[{"startOffset":403831,"endOffset":404216,"count":1},{"startOffset":403898,"endOffset":403930,"count":0},{"startOffset":403932,"endOffset":404003,"count":0},{"startOffset":404057,"endOffset":404067,"count":0},{"startOffset":404092,"endOffset":404215,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseDefaultImportSpecifier","ranges":[{"startOffset":404220,"endOffset":404471,"count":1},{"startOffset":404306,"endOffset":404448,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseStarImportSpecifier","ranges":[{"startOffset":404475,"endOffset":404803,"count":1},{"startOffset":404545,"endOffset":404780,"count":0}],"isBlockCoverage":true},{"functionName":"parseNamedImportSpecifiers","ranges":[{"startOffset":404807,"endOffset":405257,"count":1},{"startOffset":404983,"endOffset":405207,"count":0}],"isBlockCoverage":true},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":405261,"endOffset":405960,"count":1},{"startOffset":405420,"endOffset":405475,"count":0},{"startOffset":405581,"endOffset":405686,"count":0}],"isBlockCoverage":true},{"functionName":"ClassScope","ranges":[{"startOffset":405986,"endOffset":406120,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScopeHandler","ranges":[{"startOffset":406152,"endOffset":406265,"count":7}],"isBlockCoverage":true},{"functionName":"current","ranges":[{"startOffset":406269,"endOffset":406330,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":406334,"endOffset":406386,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":406390,"endOffset":406892,"count":0}],"isBlockCoverage":false},{"functionName":"declarePrivateName","ranges":[{"startOffset":406896,"endOffset":407870,"count":0}],"isBlockCoverage":false},{"functionName":"usePrivateName","ranges":[{"startOffset":407874,"endOffset":408276,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":408322,"endOffset":408923,"count":7}],"isBlockCoverage":true},{"functionName":"getScopeHandler","ranges":[{"startOffset":408927,"endOffset":408975,"count":7}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":408979,"endOffset":409408,"count":7},{"startOffset":409058,"endOffset":409074,"count":0},{"startOffset":409076,"endOffset":409116,"count":0}],"isBlockCoverage":true},{"functionName":"pluginsMap","ranges":[{"startOffset":409413,"endOffset":409723,"count":7},{"startOffset":409522,"endOffset":409700,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":409725,"endOffset":410624,"count":7},{"startOffset":409811,"endOffset":409819,"count":0},{"startOffset":409862,"endOffset":410565,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpression","ranges":[{"startOffset":410625,"endOffset":410819,"count":0}],"isBlockCoverage":false},{"functionName":"getParser","ranges":[{"startOffset":410821,"endOffset":411052,"count":7},{"startOffset":410901,"endOffset":410909,"count":0}],"isBlockCoverage":true},{"functionName":"getParserClass","ranges":[{"startOffset":411084,"endOffset":411515,"count":7},{"startOffset":411305,"endOffset":411498,"count":1},{"startOffset":411377,"endOffset":411460,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":411175,"endOffset":411218,"count":42}],"isBlockCoverage":true}]},{"scriptId":"603","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":180,"endOffset":223,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":297,"endOffset":341,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":413,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":929,"endOffset":1115,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1117,"endOffset":1860,"count":3},{"startOffset":1199,"endOffset":1272,"count":0},{"startOffset":1274,"endOffset":1370,"count":0},{"startOffset":1372,"endOffset":1500,"count":0},{"startOffset":1523,"endOffset":1859,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1862,"endOffset":1957,"count":4},{"startOffset":1936,"endOffset":1954,"count":0}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":1959,"endOffset":2518,"count":14},{"startOffset":2034,"endOffset":2041,"count":0},{"startOffset":2055,"endOffset":2065,"count":0},{"startOffset":2098,"endOffset":2377,"count":0},{"startOffset":2415,"endOffset":2432,"count":0}],"isBlockCoverage":true},{"functionName":"traverse.cheap","ranges":[{"startOffset":2640,"endOffset":2704,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.node","ranges":[{"startOffset":2723,"endOffset":3039,"count":87},{"startOffset":2838,"endOffset":2845,"count":0},{"startOffset":2945,"endOffset":3037,"count":137},{"startOffset":2964,"endOffset":2980,"count":0},{"startOffset":2982,"endOffset":2991,"count":0},{"startOffset":3026,"endOffset":3033,"count":0}],"isBlockCoverage":true},{"functionName":"traverse.clearNode","ranges":[{"startOffset":3063,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.removeProperties","ranges":[{"startOffset":3180,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"hasDenylistedType","ranges":[{"startOffset":3273,"endOffset":3398,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.hasType","ranges":[{"startOffset":3419,"endOffset":3775,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4034,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":222,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":410,"endOffset":1153,"count":1},{"startOffset":492,"endOffset":565,"count":0},{"startOffset":567,"endOffset":663,"count":0},{"startOffset":665,"endOffset":793,"count":0},{"startOffset":816,"endOffset":1152,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1155,"endOffset":1250,"count":1},{"startOffset":1229,"endOffset":1247,"count":0}],"isBlockCoverage":true},{"functionName":"TraversalContext","ranges":[{"startOffset":1329,"endOffset":1505,"count":87}],"isBlockCoverage":true},{"functionName":"shouldVisit","ranges":[{"startOffset":1509,"endOffset":1840,"count":85},{"startOffset":1576,"endOffset":1588,"count":46},{"startOffset":1590,"endOffset":1602,"count":39},{"startOffset":1602,"endOffset":1628,"count":46},{"startOffset":1628,"endOffset":1640,"count":15},{"startOffset":1640,"endOffset":1708,"count":31},{"startOffset":1708,"endOffset":1716,"count":0},{"startOffset":1717,"endOffset":1730,"count":31},{"startOffset":1733,"endOffset":1746,"count":1},{"startOffset":1746,"endOffset":1776,"count":30},{"startOffset":1776,"endOffset":1817,"count":41},{"startOffset":1799,"endOffset":1811,"count":19},{"startOffset":1817,"endOffset":1839,"count":11}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1844,"endOffset":2027,"count":73}],"isBlockCoverage":true},{"functionName":"maybeQueue","ranges":[{"startOffset":2031,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"visitMultiple","ranges":[{"startOffset":2294,"endOffset":2661,"count":46},{"startOffset":2370,"endOffset":2383,"count":14},{"startOffset":2383,"endOffset":2660,"count":32}],"isBlockCoverage":true},{"functionName":"visitSingle","ranges":[{"startOffset":2665,"endOffset":2833,"count":53},{"startOffset":2727,"endOffset":2796,"count":41},{"startOffset":2796,"endOffset":2829,"count":12}],"isBlockCoverage":true},{"functionName":"visitQueue","ranges":[{"startOffset":2837,"endOffset":3764,"count":73},{"startOffset":3059,"endOffset":3110,"count":0},{"startOffset":3184,"endOffset":3193,"count":0},{"startOffset":3239,"endOffset":3274,"count":0},{"startOffset":3348,"endOffset":3357,"count":0},{"startOffset":3418,"endOffset":3463,"count":0},{"startOffset":3502,"endOffset":3649,"count":0}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":3768,"endOffset":3994,"count":137},{"startOffset":3832,"endOffset":3845,"count":38},{"startOffset":3845,"endOffset":3877,"count":99},{"startOffset":3877,"endOffset":3935,"count":46},{"startOffset":3935,"endOffset":3990,"count":53}],"isBlockCoverage":true}]},{"scriptId":"605","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6705,"count":1},{"startOffset":6106,"endOffset":6420,"count":291},{"startOffset":6468,"endOffset":6705,"count":18},{"startOffset":6493,"endOffset":6502,"count":0},{"startOffset":6536,"endOffset":6555,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1414,"endOffset":1509,"count":4},{"startOffset":1482,"endOffset":1487,"count":3},{"startOffset":1488,"endOffset":1506,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1511,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1699,"endOffset":2442,"count":13},{"startOffset":1781,"endOffset":1854,"count":0},{"startOffset":1856,"endOffset":1952,"count":0},{"startOffset":1954,"endOffset":2082,"count":0},{"startOffset":2105,"endOffset":2441,"count":0}],"isBlockCoverage":true},{"functionName":"NodePath","ranges":[{"startOffset":2685,"endOffset":3100,"count":46}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3111,"endOffset":3757,"count":85},{"startOffset":3210,"endOffset":3223,"count":78},{"startOffset":3225,"endOffset":3260,"count":71},{"startOffset":3279,"endOffset":3357,"count":0},{"startOffset":3457,"endOffset":3528,"count":33},{"startOffset":3584,"endOffset":3682,"count":46}],"isBlockCoverage":true},{"functionName":"getScope","ranges":[{"startOffset":3761,"endOffset":3844,"count":158},{"startOffset":3805,"endOffset":3831,"count":21},{"startOffset":3832,"endOffset":3839,"count":137}],"isBlockCoverage":true},{"functionName":"setData","ranges":[{"startOffset":3848,"endOffset":3979,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":3983,"endOffset":4203,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":4207,"endOffset":4313,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":4317,"endOffset":4417,"count":7}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4421,"endOffset":4506,"count":0}],"isBlockCoverage":false},{"functionName":"getPathLocation","ranges":[{"startOffset":4510,"endOffset":4761,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":4765,"endOffset":4882,"count":219},{"startOffset":4813,"endOffset":4881,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":4886,"endOffset":4954,"count":0}],"isBlockCoverage":false},{"functionName":"get inList","ranges":[{"startOffset":4958,"endOffset":5003,"count":73}],"isBlockCoverage":true},{"functionName":"set inList","ranges":[{"startOffset":5007,"endOffset":5083,"count":0}],"isBlockCoverage":false},{"functionName":"get parentKey","ranges":[{"startOffset":5087,"endOffset":5145,"count":0}],"isBlockCoverage":false},{"functionName":"get shouldSkip","ranges":[{"startOffset":5149,"endOffset":5221,"count":146}],"isBlockCoverage":true},{"functionName":"set shouldSkip","ranges":[{"startOffset":5225,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"get shouldStop","ranges":[{"startOffset":5369,"endOffset":5441,"count":73}],"isBlockCoverage":true},{"functionName":"set shouldStop","ranges":[{"startOffset":5445,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"get removed","ranges":[{"startOffset":5589,"endOffset":5654,"count":73}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":5658,"endOffset":5787,"count":0}],"isBlockCoverage":false},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6197,"endOffset":6250,"count":52}],"isBlockCoverage":true},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6293,"endOffset":6417,"count":0}],"isBlockCoverage":false},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6635,"endOffset":6702,"count":163}],"isBlockCoverage":true}]},{"scriptId":"606","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/lib/virtual-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5492,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":569,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":757,"endOffset":1500,"count":1},{"startOffset":839,"endOffset":912,"count":0},{"startOffset":914,"endOffset":1010,"count":0},{"startOffset":1012,"endOffset":1140,"count":0},{"startOffset":1163,"endOffset":1499,"count":0}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":1578,"endOffset":1956,"count":11},{"startOffset":1690,"endOffset":1731,"count":0},{"startOffset":1733,"endOffset":1886,"count":0}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":2085,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":2325,"endOffset":2520,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":2619,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3061,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3307,"endOffset":3374,"count":158}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":3425,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3559,"endOffset":3619,"count":44}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":3710,"endOffset":3762,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3803,"endOffset":3865,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3913,"endOffset":3961,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4014,"endOffset":4088,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4212,"endOffset":4650,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4728,"endOffset":4814,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4910,"endOffset":4999,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":5378,"endOffset":5441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19257,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1564,"endOffset":1613,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1715,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1881,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2027,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2171,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2305,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2427,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2549,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2685,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2827,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2960,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3089,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3228,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3378,"endOffset":3439,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3524,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3671,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3816,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3949,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4091,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4229,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4357,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4490,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4622,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4752,"endOffset":4801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4890,"endOffset":4949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5029,"endOffset":5079,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5159,"endOffset":5209,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5302,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5442,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5583,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5732,"endOffset":5787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5876,"endOffset":5935,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6024,"endOffset":6083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6173,"endOffset":6233,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6328,"endOffset":6393,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6470,"endOffset":6517,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6598,"endOffset":6649,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6730,"endOffset":6781,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6852,"endOffset":6893,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6971,"endOffset":7019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7101,"endOffset":7153,"count":44}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7233,"endOffset":7283,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7357,"endOffset":7401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7476,"endOffset":7521,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7607,"endOffset":7663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7749,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7886,"endOffset":7937,"count":11}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8013,"endOffset":8059,"count":158}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8146,"endOffset":8203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8278,"endOffset":8323,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8412,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8557,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8687,"endOffset":8731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8814,"endOffset":8867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8944,"endOffset":8991,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9086,"endOffset":9151,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9612,"endOffset":9951,"count":291},{"startOffset":9678,"endOffset":9685,"count":0},{"startOffset":9749,"endOffset":9756,"count":0},{"startOffset":9778,"endOffset":9813,"count":0},{"startOffset":9815,"endOffset":9822,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9894,"endOffset":9943,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10370,"endOffset":10711,"count":324},{"startOffset":10436,"endOffset":10443,"count":0},{"startOffset":10507,"endOffset":10514,"count":0},{"startOffset":10536,"endOffset":10572,"count":0},{"startOffset":10574,"endOffset":10581,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10653,"endOffset":10703,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10808,"endOffset":11147,"count":246},{"startOffset":10874,"endOffset":10881,"count":0},{"startOffset":10945,"endOffset":10952,"count":0},{"startOffset":10974,"endOffset":11009,"count":0},{"startOffset":11011,"endOffset":11018,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11090,"endOffset":11139,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12252,"endOffset":12593,"count":45},{"startOffset":12318,"endOffset":12325,"count":0},{"startOffset":12389,"endOffset":12396,"count":0},{"startOffset":12418,"endOffset":12454,"count":0},{"startOffset":12456,"endOffset":12463,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12535,"endOffset":12585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12671,"endOffset":13010,"count":20},{"startOffset":12737,"endOffset":12744,"count":0},{"startOffset":12808,"endOffset":12815,"count":0},{"startOffset":12837,"endOffset":12872,"count":0},{"startOffset":12874,"endOffset":12881,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12953,"endOffset":13002,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13944,"endOffset":14287,"count":11},{"startOffset":14010,"endOffset":14017,"count":0},{"startOffset":14081,"endOffset":14088,"count":0},{"startOffset":14110,"endOffset":14147,"count":0},{"startOffset":14149,"endOffset":14156,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14228,"endOffset":14279,"count":297}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15211,"endOffset":15548,"count":1},{"startOffset":15252,"endOffset":15275,"count":0},{"startOffset":15284,"endOffset":15411,"count":0},{"startOffset":15413,"endOffset":15547,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":15492,"endOffset":15540,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17286,"endOffset":17627,"count":291},{"startOffset":17352,"endOffset":17359,"count":0},{"startOffset":17423,"endOffset":17430,"count":1},{"startOffset":17430,"endOffset":17452,"count":290},{"startOffset":17452,"endOffset":17488,"count":0},{"startOffset":17490,"endOffset":17497,"count":0},{"startOffset":17497,"endOffset":17626,"count":290}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17569,"endOffset":17619,"count":600}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17717,"endOffset":18058,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":18062,"endOffset":18248,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":18250,"endOffset":18993,"count":1},{"startOffset":18332,"endOffset":18405,"count":0},{"startOffset":18407,"endOffset":18503,"count":0},{"startOffset":18505,"endOffset":18633,"count":0},{"startOffset":18656,"endOffset":18992,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":18995,"endOffset":19090,"count":57},{"startOffset":19069,"endOffset":19087,"count":0}],"isBlockCoverage":true}]},{"scriptId":"608","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/react/isReactComponent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":208,"endOffset":303,"count":1},{"startOffset":282,"endOffset":300,"count":0}],"isBlockCoverage":true}]},{"scriptId":"609","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"buildMatchMemberExpression","ranges":[{"startOffset":300,"endOffset":472,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/matchesPattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1002,"count":1}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":157,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116447,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":14128,"endOffset":14223,"count":1},{"startOffset":14202,"endOffset":14220,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayExpression","ranges":[{"startOffset":14225,"endOffset":14516,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":14518,"endOffset":14819,"count":12},{"startOffset":14577,"endOffset":14590,"count":1},{"startOffset":14590,"endOffset":14665,"count":11},{"startOffset":14665,"endOffset":14800,"count":0},{"startOffset":14800,"endOffset":14818,"count":11}],"isBlockCoverage":true},{"functionName":"isBinaryExpression","ranges":[{"startOffset":14821,"endOffset":15114,"count":0}],"isBlockCoverage":false},{"functionName":"isInterpreterDirective","ranges":[{"startOffset":15116,"endOffset":15417,"count":0}],"isBlockCoverage":false},{"functionName":"isDirective","ranges":[{"startOffset":15419,"endOffset":15698,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectiveLiteral","ranges":[{"startOffset":15700,"endOffset":15993,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":15995,"endOffset":16284,"count":158},{"startOffset":16048,"endOffset":16061,"count":0},{"startOffset":16130,"endOffset":16265,"count":0}],"isBlockCoverage":true},{"functionName":"isBreakStatement","ranges":[{"startOffset":16286,"endOffset":16575,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":16577,"endOffset":16866,"count":19},{"startOffset":16630,"endOffset":16643,"count":1},{"startOffset":16643,"endOffset":16712,"count":18},{"startOffset":16712,"endOffset":16847,"count":7},{"startOffset":16777,"endOffset":16843,"count":0},{"startOffset":16847,"endOffset":16865,"count":11}],"isBlockCoverage":true},{"functionName":"isCatchClause","ranges":[{"startOffset":16868,"endOffset":17151,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":17153,"endOffset":17456,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":17458,"endOffset":17753,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":17755,"endOffset":18050,"count":0}],"isBlockCoverage":false},{"functionName":"isDoWhileStatement","ranges":[{"startOffset":18052,"endOffset":18345,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":18347,"endOffset":18636,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":18638,"endOffset":18937,"count":10},{"startOffset":18696,"endOffset":18709,"count":0},{"startOffset":18783,"endOffset":18918,"count":2},{"startOffset":18848,"endOffset":18914,"count":0},{"startOffset":18918,"endOffset":18936,"count":8}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":18939,"endOffset":19208,"count":45},{"startOffset":18982,"endOffset":18995,"count":0},{"startOffset":19054,"endOffset":19189,"count":7},{"startOffset":19119,"endOffset":19185,"count":0},{"startOffset":19189,"endOffset":19207,"count":38}],"isBlockCoverage":true},{"functionName":"isForInStatement","ranges":[{"startOffset":19210,"endOffset":19499,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":19501,"endOffset":19786,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":19788,"endOffset":20087,"count":54},{"startOffset":19846,"endOffset":19859,"count":0},{"startOffset":19933,"endOffset":20068,"count":0}],"isBlockCoverage":true},{"functionName":"isFunctionExpression","ranges":[{"startOffset":20089,"endOffset":20386,"count":5},{"startOffset":20146,"endOffset":20159,"count":0},{"startOffset":20232,"endOffset":20367,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifier","ranges":[{"startOffset":20388,"endOffset":20669,"count":47},{"startOffset":20437,"endOffset":20450,"count":1},{"startOffset":20450,"endOffset":20515,"count":46},{"startOffset":20515,"endOffset":20650,"count":26},{"startOffset":20580,"endOffset":20646,"count":0},{"startOffset":20650,"endOffset":20668,"count":20}],"isBlockCoverage":true},{"functionName":"isIfStatement","ranges":[{"startOffset":20671,"endOffset":20954,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":20956,"endOffset":21249,"count":5},{"startOffset":21011,"endOffset":21024,"count":0},{"startOffset":21095,"endOffset":21230,"count":0}],"isBlockCoverage":true},{"functionName":"isStringLiteral","ranges":[{"startOffset":21251,"endOffset":21538,"count":0}],"isBlockCoverage":false},{"functionName":"isNumericLiteral","ranges":[{"startOffset":21540,"endOffset":21829,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteral","ranges":[{"startOffset":21831,"endOffset":22114,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":22116,"endOffset":22405,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpLiteral","ranges":[{"startOffset":22407,"endOffset":22694,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":22696,"endOffset":22991,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberExpression","ranges":[{"startOffset":22993,"endOffset":23286,"count":33},{"startOffset":23048,"endOffset":23061,"count":1},{"startOffset":23061,"endOffset":23132,"count":32},{"startOffset":23132,"endOffset":23267,"count":2},{"startOffset":23197,"endOffset":23263,"count":0},{"startOffset":23267,"endOffset":23285,"count":30}],"isBlockCoverage":true},{"functionName":"isNewExpression","ranges":[{"startOffset":23288,"endOffset":23575,"count":46},{"startOffset":23340,"endOffset":23353,"count":0},{"startOffset":23421,"endOffset":23556,"count":0}],"isBlockCoverage":true},{"functionName":"isProgram","ranges":[{"startOffset":23577,"endOffset":23852,"count":65},{"startOffset":23623,"endOffset":23636,"count":0},{"startOffset":23698,"endOffset":23833,"count":20},{"startOffset":23763,"endOffset":23829,"count":0},{"startOffset":23833,"endOffset":23851,"count":45}],"isBlockCoverage":true},{"functionName":"isObjectExpression","ranges":[{"startOffset":23854,"endOffset":24147,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":24149,"endOffset":24434,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":24436,"endOffset":24725,"count":0}],"isBlockCoverage":false},{"functionName":"isRestElement","ranges":[{"startOffset":24727,"endOffset":25010,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":25012,"endOffset":25303,"count":0}],"isBlockCoverage":false},{"functionName":"isSequenceExpression","ranges":[{"startOffset":25305,"endOffset":25602,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":25604,"endOffset":25911,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchCase","ranges":[{"startOffset":25913,"endOffset":26194,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":26196,"endOffset":26487,"count":0}],"isBlockCoverage":false},{"functionName":"isThisExpression","ranges":[{"startOffset":26489,"endOffset":26778,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":26780,"endOffset":27069,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":27071,"endOffset":27356,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":27358,"endOffset":27649,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateExpression","ranges":[{"startOffset":27651,"endOffset":27944,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":27946,"endOffset":28245,"count":54},{"startOffset":28004,"endOffset":28017,"count":0},{"startOffset":28091,"endOffset":28226,"count":12},{"startOffset":28156,"endOffset":28222,"count":0},{"startOffset":28226,"endOffset":28244,"count":42}],"isBlockCoverage":true},{"functionName":"isVariableDeclarator","ranges":[{"startOffset":28247,"endOffset":28544,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":28546,"endOffset":28835,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":28837,"endOffset":29124,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":29126,"endOffset":29421,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayPattern","ranges":[{"startOffset":29423,"endOffset":29708,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionExpression","ranges":[{"startOffset":29710,"endOffset":30017,"count":0}],"isBlockCoverage":false},{"functionName":"isClassBody","ranges":[{"startOffset":30019,"endOffset":30298,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":30300,"endOffset":30591,"count":1},{"startOffset":30354,"endOffset":30367,"count":0},{"startOffset":30437,"endOffset":30572,"count":0}],"isBlockCoverage":true},{"functionName":"isClassDeclaration","ranges":[{"startOffset":30593,"endOffset":30886,"count":50},{"startOffset":30648,"endOffset":30661,"count":0},{"startOffset":30732,"endOffset":30867,"count":0}],"isBlockCoverage":true},{"functionName":"isExportAllDeclaration","ranges":[{"startOffset":30888,"endOffset":31189,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultDeclaration","ranges":[{"startOffset":31191,"endOffset":31500,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamedDeclaration","ranges":[{"startOffset":31502,"endOffset":31807,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":31809,"endOffset":32100,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":32102,"endOffset":32391,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":32393,"endOffset":32688,"count":1},{"startOffset":32449,"endOffset":32462,"count":0},{"startOffset":32599,"endOffset":32665,"count":0},{"startOffset":32669,"endOffset":32687,"count":0}],"isBlockCoverage":true},{"functionName":"isImportDefaultSpecifier","ranges":[{"startOffset":32690,"endOffset":32995,"count":1},{"startOffset":32751,"endOffset":32764,"count":0},{"startOffset":32841,"endOffset":32976,"count":0}],"isBlockCoverage":true},{"functionName":"isImportNamespaceSpecifier","ranges":[{"startOffset":32997,"endOffset":33306,"count":1},{"startOffset":33060,"endOffset":33073,"count":0},{"startOffset":33152,"endOffset":33287,"count":0}],"isBlockCoverage":true},{"functionName":"isImportSpecifier","ranges":[{"startOffset":33308,"endOffset":33599,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":33601,"endOffset":33886,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":33888,"endOffset":34171,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectPattern","ranges":[{"startOffset":34173,"endOffset":34460,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":34462,"endOffset":34749,"count":0}],"isBlockCoverage":false},{"functionName":"isSuper","ranges":[{"startOffset":34751,"endOffset":35022,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":35024,"endOffset":35333,"count":1},{"startOffset":35087,"endOffset":35100,"count":0},{"startOffset":35179,"endOffset":35314,"count":0}],"isBlockCoverage":true},{"functionName":"isTemplateElement","ranges":[{"startOffset":35335,"endOffset":35626,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":35628,"endOffset":35919,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":35921,"endOffset":36212,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":36214,"endOffset":36505,"count":1},{"startOffset":36268,"endOffset":36281,"count":0},{"startOffset":36351,"endOffset":36486,"count":0}],"isBlockCoverage":true},{"functionName":"isImport","ranges":[{"startOffset":36507,"endOffset":36780,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":36782,"endOffset":37069,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceSpecifier","ranges":[{"startOffset":37071,"endOffset":37380,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalMemberExpression","ranges":[{"startOffset":37382,"endOffset":37691,"count":9},{"startOffset":37445,"endOffset":37458,"count":0},{"startOffset":37537,"endOffset":37672,"count":0}],"isBlockCoverage":true},{"functionName":"isOptionalCallExpression","ranges":[{"startOffset":37693,"endOffset":37998,"count":6},{"startOffset":37754,"endOffset":37767,"count":0},{"startOffset":37844,"endOffset":37979,"count":0}],"isBlockCoverage":true},{"functionName":"isAnyTypeAnnotation","ranges":[{"startOffset":38000,"endOffset":38295,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeAnnotation","ranges":[{"startOffset":38297,"endOffset":38596,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanTypeAnnotation","ranges":[{"startOffset":38598,"endOffset":38901,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteralTypeAnnotation","ranges":[{"startOffset":38903,"endOffset":39220,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteralTypeAnnotation","ranges":[{"startOffset":39222,"endOffset":39533,"count":0}],"isBlockCoverage":false},{"functionName":"isClassImplements","ranges":[{"startOffset":39535,"endOffset":39826,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareClass","ranges":[{"startOffset":39828,"endOffset":40113,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareFunction","ranges":[{"startOffset":40115,"endOffset":40406,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareInterface","ranges":[{"startOffset":40408,"endOffset":40701,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModule","ranges":[{"startOffset":40703,"endOffset":40990,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModuleExports","ranges":[{"startOffset":40992,"endOffset":41293,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareTypeAlias","ranges":[{"startOffset":41295,"endOffset":41588,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareOpaqueType","ranges":[{"startOffset":41590,"endOffset":41885,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareVariable","ranges":[{"startOffset":41887,"endOffset":42178,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportDeclaration","ranges":[{"startOffset":42180,"endOffset":42489,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportAllDeclaration","ranges":[{"startOffset":42491,"endOffset":42806,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaredPredicate","ranges":[{"startOffset":42808,"endOffset":43103,"count":0}],"isBlockCoverage":false},{"functionName":"isExistsTypeAnnotation","ranges":[{"startOffset":43105,"endOffset":43406,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeAnnotation","ranges":[{"startOffset":43408,"endOffset":43713,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeParam","ranges":[{"startOffset":43715,"endOffset":44010,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericTypeAnnotation","ranges":[{"startOffset":44012,"endOffset":44315,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredPredicate","ranges":[{"startOffset":44317,"endOffset":44612,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceExtends","ranges":[{"startOffset":44614,"endOffset":44907,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":44909,"endOffset":45210,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceTypeAnnotation","ranges":[{"startOffset":45212,"endOffset":45519,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeAnnotation","ranges":[{"startOffset":45521,"endOffset":45834,"count":0}],"isBlockCoverage":false},{"functionName":"isMixedTypeAnnotation","ranges":[{"startOffset":45836,"endOffset":46135,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyTypeAnnotation","ranges":[{"startOffset":46137,"endOffset":46436,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableTypeAnnotation","ranges":[{"startOffset":46438,"endOffset":46743,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteralTypeAnnotation","ranges":[{"startOffset":46745,"endOffset":47060,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberTypeAnnotation","ranges":[{"startOffset":47062,"endOffset":47363,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeAnnotation","ranges":[{"startOffset":47365,"endOffset":47666,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeInternalSlot","ranges":[{"startOffset":47668,"endOffset":47973,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeCallProperty","ranges":[{"startOffset":47975,"endOffset":48280,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeIndexer","ranges":[{"startOffset":48282,"endOffset":48577,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeProperty","ranges":[{"startOffset":48579,"endOffset":48876,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeSpreadProperty","ranges":[{"startOffset":48878,"endOffset":49187,"count":0}],"isBlockCoverage":false},{"functionName":"isOpaqueType","ranges":[{"startOffset":49189,"endOffset":49470,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedTypeIdentifier","ranges":[{"startOffset":49472,"endOffset":49779,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralTypeAnnotation","ranges":[{"startOffset":49781,"endOffset":50096,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTypeAnnotation","ranges":[{"startOffset":50098,"endOffset":50399,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolTypeAnnotation","ranges":[{"startOffset":50401,"endOffset":50702,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotation","ranges":[{"startOffset":50704,"endOffset":51001,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeAnnotation","ranges":[{"startOffset":51003,"endOffset":51302,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeofTypeAnnotation","ranges":[{"startOffset":51304,"endOffset":51605,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":51607,"endOffset":51886,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotation","ranges":[{"startOffset":51888,"endOffset":52177,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeCastExpression","ranges":[{"startOffset":52179,"endOffset":52476,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":52478,"endOffset":52765,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":52767,"endOffset":53076,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterInstantiation","ranges":[{"startOffset":53078,"endOffset":53391,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeAnnotation","ranges":[{"startOffset":53393,"endOffset":53692,"count":0}],"isBlockCoverage":false},{"functionName":"isVariance","ranges":[{"startOffset":53694,"endOffset":53971,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidTypeAnnotation","ranges":[{"startOffset":53973,"endOffset":54270,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":54272,"endOffset":54563,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanBody","ranges":[{"startOffset":54565,"endOffset":54856,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberBody","ranges":[{"startOffset":54858,"endOffset":55147,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringBody","ranges":[{"startOffset":55149,"endOffset":55438,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumSymbolBody","ranges":[{"startOffset":55440,"endOffset":55729,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanMember","ranges":[{"startOffset":55731,"endOffset":56026,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberMember","ranges":[{"startOffset":56028,"endOffset":56321,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringMember","ranges":[{"startOffset":56323,"endOffset":56616,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDefaultedMember","ranges":[{"startOffset":56618,"endOffset":56917,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXAttribute","ranges":[{"startOffset":56919,"endOffset":57204,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingElement","ranges":[{"startOffset":57206,"endOffset":57501,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXElement","ranges":[{"startOffset":57503,"endOffset":57784,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXEmptyExpression","ranges":[{"startOffset":57786,"endOffset":58083,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXExpressionContainer","ranges":[{"startOffset":58085,"endOffset":58390,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadChild","ranges":[{"startOffset":58392,"endOffset":58681,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXIdentifier","ranges":[{"startOffset":58683,"endOffset":58970,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXMemberExpression","ranges":[{"startOffset":58972,"endOffset":59271,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXNamespacedName","ranges":[{"startOffset":59273,"endOffset":59568,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningElement","ranges":[{"startOffset":59570,"endOffset":59865,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadAttribute","ranges":[{"startOffset":59867,"endOffset":60164,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXText","ranges":[{"startOffset":60166,"endOffset":60441,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXFragment","ranges":[{"startOffset":60443,"endOffset":60726,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningFragment","ranges":[{"startOffset":60728,"endOffset":61025,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingFragment","ranges":[{"startOffset":61027,"endOffset":61324,"count":0}],"isBlockCoverage":false},{"functionName":"isNoop","ranges":[{"startOffset":61326,"endOffset":61595,"count":0}],"isBlockCoverage":false},{"functionName":"isPlaceholder","ranges":[{"startOffset":61597,"endOffset":61880,"count":0}],"isBlockCoverage":false},{"functionName":"isV8IntrinsicIdentifier","ranges":[{"startOffset":61882,"endOffset":62185,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentPlaceholder","ranges":[{"startOffset":62187,"endOffset":62486,"count":0}],"isBlockCoverage":false},{"functionName":"isBindExpression","ranges":[{"startOffset":62488,"endOffset":62777,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":62779,"endOffset":63066,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineTopicExpression","ranges":[{"startOffset":63068,"endOffset":63375,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineBareFunction","ranges":[{"startOffset":63377,"endOffset":63678,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelinePrimaryTopicReference","ranges":[{"startOffset":63680,"endOffset":63999,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateProperty","ranges":[{"startOffset":64001,"endOffset":64302,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateMethod","ranges":[{"startOffset":64304,"endOffset":64601,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":64603,"endOffset":64894,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":64896,"endOffset":65175,"count":0}],"isBlockCoverage":false},{"functionName":"isDoExpression","ranges":[{"startOffset":65177,"endOffset":65462,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":65464,"endOffset":65769,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":65771,"endOffset":66054,"count":0}],"isBlockCoverage":false},{"functionName":"isRecordExpression","ranges":[{"startOffset":66056,"endOffset":66349,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleExpression","ranges":[{"startOffset":66351,"endOffset":66642,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalLiteral","ranges":[{"startOffset":66644,"endOffset":66933,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticBlock","ranges":[{"startOffset":66935,"endOffset":67218,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParameterProperty","ranges":[{"startOffset":67220,"endOffset":67519,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareFunction","ranges":[{"startOffset":67521,"endOffset":67816,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareMethod","ranges":[{"startOffset":67818,"endOffset":68109,"count":0}],"isBlockCoverage":false},{"functionName":"isTSQualifiedName","ranges":[{"startOffset":68111,"endOffset":68402,"count":0}],"isBlockCoverage":false},{"functionName":"isTSCallSignatureDeclaration","ranges":[{"startOffset":68404,"endOffset":68717,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructSignatureDeclaration","ranges":[{"startOffset":68719,"endOffset":69042,"count":0}],"isBlockCoverage":false},{"functionName":"isTSPropertySignature","ranges":[{"startOffset":69044,"endOffset":69343,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMethodSignature","ranges":[{"startOffset":69345,"endOffset":69640,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexSignature","ranges":[{"startOffset":69642,"endOffset":69935,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAnyKeyword","ranges":[{"startOffset":69937,"endOffset":70222,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBooleanKeyword","ranges":[{"startOffset":70224,"endOffset":70517,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBigIntKeyword","ranges":[{"startOffset":70519,"endOffset":70810,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntrinsicKeyword","ranges":[{"startOffset":70812,"endOffset":71109,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNeverKeyword","ranges":[{"startOffset":71111,"endOffset":71400,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNullKeyword","ranges":[{"startOffset":71402,"endOffset":71689,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNumberKeyword","ranges":[{"startOffset":71691,"endOffset":71982,"count":0}],"isBlockCoverage":false},{"functionName":"isTSObjectKeyword","ranges":[{"startOffset":71984,"endOffset":72275,"count":0}],"isBlockCoverage":false},{"functionName":"isTSStringKeyword","ranges":[{"startOffset":72277,"endOffset":72568,"count":0}],"isBlockCoverage":false},{"functionName":"isTSSymbolKeyword","ranges":[{"startOffset":72570,"endOffset":72861,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUndefinedKeyword","ranges":[{"startOffset":72863,"endOffset":73160,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnknownKeyword","ranges":[{"startOffset":73162,"endOffset":73455,"count":0}],"isBlockCoverage":false},{"functionName":"isTSVoidKeyword","ranges":[{"startOffset":73457,"endOffset":73744,"count":0}],"isBlockCoverage":false},{"functionName":"isTSThisType","ranges":[{"startOffset":73746,"endOffset":74027,"count":0}],"isBlockCoverage":false},{"functionName":"isTSFunctionType","ranges":[{"startOffset":74029,"endOffset":74318,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructorType","ranges":[{"startOffset":74320,"endOffset":74615,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeReference","ranges":[{"startOffset":74617,"endOffset":74908,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypePredicate","ranges":[{"startOffset":74910,"endOffset":75201,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeQuery","ranges":[{"startOffset":75203,"endOffset":75486,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeLiteral","ranges":[{"startOffset":75488,"endOffset":75775,"count":0}],"isBlockCoverage":false},{"functionName":"isTSArrayType","ranges":[{"startOffset":75777,"endOffset":76060,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTupleType","ranges":[{"startOffset":76062,"endOffset":76345,"count":0}],"isBlockCoverage":false},{"functionName":"isTSOptionalType","ranges":[{"startOffset":76347,"endOffset":76636,"count":0}],"isBlockCoverage":false},{"functionName":"isTSRestType","ranges":[{"startOffset":76638,"endOffset":76919,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamedTupleMember","ranges":[{"startOffset":76921,"endOffset":77218,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnionType","ranges":[{"startOffset":77220,"endOffset":77503,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntersectionType","ranges":[{"startOffset":77505,"endOffset":77802,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConditionalType","ranges":[{"startOffset":77804,"endOffset":78099,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInferType","ranges":[{"startOffset":78101,"endOffset":78384,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParenthesizedType","ranges":[{"startOffset":78386,"endOffset":78685,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeOperator","ranges":[{"startOffset":78687,"endOffset":78976,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexedAccessType","ranges":[{"startOffset":78978,"endOffset":79277,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMappedType","ranges":[{"startOffset":79279,"endOffset":79564,"count":0}],"isBlockCoverage":false},{"functionName":"isTSLiteralType","ranges":[{"startOffset":79566,"endOffset":79853,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExpressionWithTypeArguments","ranges":[{"startOffset":79855,"endOffset":80174,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceDeclaration","ranges":[{"startOffset":80176,"endOffset":80481,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceBody","ranges":[{"startOffset":80483,"endOffset":80774,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAliasDeclaration","ranges":[{"startOffset":80776,"endOffset":81081,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAsExpression","ranges":[{"startOffset":81083,"endOffset":81372,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAssertion","ranges":[{"startOffset":81374,"endOffset":81665,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumDeclaration","ranges":[{"startOffset":81667,"endOffset":81962,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumMember","ranges":[{"startOffset":81964,"endOffset":82249,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleDeclaration","ranges":[{"startOffset":82251,"endOffset":82550,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleBlock","ranges":[{"startOffset":82552,"endOffset":82839,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportType","ranges":[{"startOffset":82841,"endOffset":83126,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportEqualsDeclaration","ranges":[{"startOffset":83128,"endOffset":83439,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExternalModuleReference","ranges":[{"startOffset":83441,"endOffset":83752,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNonNullExpression","ranges":[{"startOffset":83754,"endOffset":84053,"count":1},{"startOffset":83812,"endOffset":83825,"count":0},{"startOffset":83899,"endOffset":84034,"count":0}],"isBlockCoverage":true},{"functionName":"isTSExportAssignment","ranges":[{"startOffset":84055,"endOffset":84352,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamespaceExportDeclaration","ranges":[{"startOffset":84354,"endOffset":84671,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAnnotation","ranges":[{"startOffset":84673,"endOffset":84966,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterInstantiation","ranges":[{"startOffset":84968,"endOffset":85285,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterDeclaration","ranges":[{"startOffset":85287,"endOffset":85600,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameter","ranges":[{"startOffset":85602,"endOffset":85893,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":85895,"endOffset":87854,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":87856,"endOffset":88175,"count":15},{"startOffset":87901,"endOffset":87914,"count":1},{"startOffset":87914,"endOffset":87984,"count":14},{"startOffset":87984,"endOffset":88019,"count":12},{"startOffset":88021,"endOffset":88156,"count":2},{"startOffset":88086,"endOffset":88152,"count":0},{"startOffset":88156,"endOffset":88174,"count":12}],"isBlockCoverage":true},{"functionName":"isScopable","ranges":[{"startOffset":88177,"endOffset":89133,"count":158},{"startOffset":88224,"endOffset":88237,"count":0},{"startOffset":88535,"endOffset":88565,"count":137},{"startOffset":88566,"endOffset":88599,"count":137},{"startOffset":88600,"endOffset":88632,"count":137},{"startOffset":88633,"endOffset":88674,"count":137},{"startOffset":88675,"endOffset":88708,"count":137},{"startOffset":88709,"endOffset":88743,"count":137},{"startOffset":88744,"endOffset":88776,"count":137},{"startOffset":88777,"endOffset":88806,"count":137},{"startOffset":88807,"endOffset":88843,"count":137},{"startOffset":88844,"endOffset":88873,"count":137},{"startOffset":88874,"endOffset":88905,"count":137},{"startOffset":88906,"endOffset":88977,"count":137},{"startOffset":88936,"endOffset":88977,"count":0},{"startOffset":88979,"endOffset":89114,"count":21},{"startOffset":89044,"endOffset":89110,"count":0},{"startOffset":89114,"endOffset":89132,"count":137}],"isBlockCoverage":true},{"functionName":"isBlockParent","ranges":[{"startOffset":89135,"endOffset":90025,"count":4},{"startOffset":89185,"endOffset":89198,"count":0},{"startOffset":89496,"endOffset":89526,"count":0},{"startOffset":89527,"endOffset":89560,"count":0},{"startOffset":89561,"endOffset":89593,"count":0},{"startOffset":89594,"endOffset":89635,"count":0},{"startOffset":89636,"endOffset":89668,"count":0},{"startOffset":89669,"endOffset":89698,"count":0},{"startOffset":89699,"endOffset":89735,"count":0},{"startOffset":89736,"endOffset":89765,"count":0},{"startOffset":89766,"endOffset":89797,"count":0},{"startOffset":89798,"endOffset":89869,"count":0},{"startOffset":89936,"endOffset":90002,"count":0},{"startOffset":90006,"endOffset":90024,"count":0}],"isBlockCoverage":true},{"functionName":"isBlock","ranges":[{"startOffset":90027,"endOffset":90437,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":90439,"endOffset":92528,"count":0}],"isBlockCoverage":false},{"functionName":"isTerminatorless","ranges":[{"startOffset":92530,"endOffset":92990,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionStatement","ranges":[{"startOffset":92992,"endOffset":93389,"count":0}],"isBlockCoverage":false},{"functionName":"isConditional","ranges":[{"startOffset":93391,"endOffset":93714,"count":0}],"isBlockCoverage":false},{"functionName":"isLoop","ranges":[{"startOffset":93716,"endOffset":94127,"count":0}],"isBlockCoverage":false},{"functionName":"isWhile","ranges":[{"startOffset":94129,"endOffset":94444,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWrapper","ranges":[{"startOffset":94446,"endOffset":94822,"count":0}],"isBlockCoverage":false},{"functionName":"isFor","ranges":[{"startOffset":94824,"endOffset":95166,"count":8},{"startOffset":94866,"endOffset":94879,"count":0},{"startOffset":95012,"endOffset":95147,"count":0}],"isBlockCoverage":true},{"functionName":"isForXStatement","ranges":[{"startOffset":95168,"endOffset":95489,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":95491,"endOffset":95956,"count":15},{"startOffset":95538,"endOffset":95551,"count":0},{"startOffset":95802,"endOffset":95937,"count":0}],"isBlockCoverage":true},{"functionName":"isFunctionParent","ranges":[{"startOffset":95958,"endOffset":96429,"count":1},{"startOffset":96011,"endOffset":96024,"count":0},{"startOffset":96275,"endOffset":96410,"count":0}],"isBlockCoverage":true},{"functionName":"isPureish","ranges":[{"startOffset":96431,"endOffset":97093,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":97095,"endOffset":98374,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternLike","ranges":[{"startOffset":98376,"endOffset":98892,"count":0}],"isBlockCoverage":false},{"functionName":"isLVal","ranges":[{"startOffset":98894,"endOffset":99476,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEntityName","ranges":[{"startOffset":99478,"endOffset":99863,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":99865,"endOffset":100444,"count":2},{"startOffset":99911,"endOffset":99924,"count":0},{"startOffset":100248,"endOffset":100288,"count":0},{"startOffset":100290,"endOffset":100425,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":100446,"endOffset":101297,"count":0}],"isBlockCoverage":false},{"functionName":"isUserWhitespacable","ranges":[{"startOffset":101299,"endOffset":101820,"count":0}],"isBlockCoverage":false},{"functionName":"isMethod","ranges":[{"startOffset":101822,"endOffset":102168,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMember","ranges":[{"startOffset":102170,"endOffset":102488,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":102490,"endOffset":102844,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryLike","ranges":[{"startOffset":102846,"endOffset":103163,"count":1},{"startOffset":102894,"endOffset":102907,"count":0},{"startOffset":103009,"endOffset":103144,"count":0}],"isBlockCoverage":true},{"functionName":"isPattern","ranges":[{"startOffset":103165,"endOffset":103578,"count":158},{"startOffset":103211,"endOffset":103224,"count":0},{"startOffset":103388,"endOffset":103422,"count":0},{"startOffset":103424,"endOffset":103559,"count":0}],"isBlockCoverage":true},{"functionName":"isClass","ranges":[{"startOffset":103580,"endOffset":103896,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":103898,"endOffset":104316,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":104318,"endOffset":104700,"count":6},{"startOffset":104374,"endOffset":104387,"count":0},{"startOffset":104546,"endOffset":104681,"count":0}],"isBlockCoverage":true},{"functionName":"isModuleSpecifier","ranges":[{"startOffset":104702,"endOffset":105195,"count":0}],"isBlockCoverage":false},{"functionName":"isFlow","ranges":[{"startOffset":105197,"endOffset":107504,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowType","ranges":[{"startOffset":107506,"endOffset":108722,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowBaseAnnotation","ranges":[{"startOffset":108724,"endOffset":109371,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowDeclaration","ranges":[{"startOffset":109373,"endOffset":110091,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowPredicate","ranges":[{"startOffset":110093,"endOffset":110420,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBody","ranges":[{"startOffset":110422,"endOffset":110805,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":110807,"endOffset":111203,"count":0}],"isBlockCoverage":false},{"functionName":"isJSX","ranges":[{"startOffset":111205,"endOffset":111966,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivate","ranges":[{"startOffset":111968,"endOffset":112323,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeElement","ranges":[{"startOffset":112325,"endOffset":112784,"count":0}],"isBlockCoverage":false},{"functionName":"isTSType","ranges":[{"startOffset":112786,"endOffset":114210,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBaseType","ranges":[{"startOffset":114212,"endOffset":114967,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":114969,"endOffset":115339,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexLiteral","ranges":[{"startOffset":115341,"endOffset":115707,"count":0}],"isBlockCoverage":false},{"functionName":"isRestProperty","ranges":[{"startOffset":115709,"endOffset":116073,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadProperty","ranges":[{"startOffset":116075,"endOffset":116447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/utils/shallowEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":310,"count":1}],"isBlockCoverage":true},{"functionName":"shallowEqual","ranges":[{"startOffset":113,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/react/isCompatTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"isCompatTag","ranges":[{"startOffset":112,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/react/buildChildren.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":857,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":289,"endOffset":384,"count":1},{"startOffset":363,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"buildChildren","ranges":[{"startOffset":386,"endOffset":857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"cleanJSXElementLiteralChild","ranges":[{"startOffset":183,"endOffset":1060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42175,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":13612,"endOffset":13707,"count":1},{"startOffset":13686,"endOffset":13704,"count":0}],"isBlockCoverage":true},{"functionName":"arrayExpression","ranges":[{"startOffset":13709,"endOffset":13812,"count":0}],"isBlockCoverage":false},{"functionName":"assignmentExpression","ranges":[{"startOffset":13814,"endOffset":13940,"count":0}],"isBlockCoverage":false},{"functionName":"binaryExpression","ranges":[{"startOffset":13942,"endOffset":14060,"count":0}],"isBlockCoverage":false},{"functionName":"interpreterDirective","ranges":[{"startOffset":14062,"endOffset":14172,"count":0}],"isBlockCoverage":false},{"functionName":"directive","ranges":[{"startOffset":14174,"endOffset":14262,"count":0}],"isBlockCoverage":false},{"functionName":"directiveLiteral","ranges":[{"startOffset":14264,"endOffset":14366,"count":0}],"isBlockCoverage":false},{"functionName":"blockStatement","ranges":[{"startOffset":14368,"endOffset":14477,"count":0}],"isBlockCoverage":false},{"functionName":"breakStatement","ranges":[{"startOffset":14479,"endOffset":14577,"count":0}],"isBlockCoverage":false},{"functionName":"callExpression","ranges":[{"startOffset":14579,"endOffset":14690,"count":0}],"isBlockCoverage":false},{"functionName":"catchClause","ranges":[{"startOffset":14692,"endOffset":14790,"count":0}],"isBlockCoverage":false},{"functionName":"conditionalExpression","ranges":[{"startOffset":14792,"endOffset":14926,"count":0}],"isBlockCoverage":false},{"functionName":"continueStatement","ranges":[{"startOffset":14928,"endOffset":15032,"count":0}],"isBlockCoverage":false},{"functionName":"debuggerStatement","ranges":[{"startOffset":15034,"endOffset":15133,"count":0}],"isBlockCoverage":false},{"functionName":"doWhileStatement","ranges":[{"startOffset":15135,"endOffset":15242,"count":0}],"isBlockCoverage":false},{"functionName":"emptyStatement","ranges":[{"startOffset":15244,"endOffset":15337,"count":0}],"isBlockCoverage":false},{"functionName":"expressionStatement","ranges":[{"startOffset":15339,"endOffset":15452,"count":0}],"isBlockCoverage":false},{"functionName":"file","ranges":[{"startOffset":15454,"endOffset":15552,"count":0}],"isBlockCoverage":false},{"functionName":"forInStatement","ranges":[{"startOffset":15554,"endOffset":15664,"count":0}],"isBlockCoverage":false},{"functionName":"forStatement","ranges":[{"startOffset":15666,"endOffset":15779,"count":0}],"isBlockCoverage":false},{"functionName":"functionDeclaration","ranges":[{"startOffset":15781,"endOffset":15918,"count":0}],"isBlockCoverage":false},{"functionName":"functionExpression","ranges":[{"startOffset":15920,"endOffset":16055,"count":0}],"isBlockCoverage":false},{"functionName":"identifier","ranges":[{"startOffset":16057,"endOffset":16146,"count":0}],"isBlockCoverage":false},{"functionName":"ifStatement","ranges":[{"startOffset":16148,"endOffset":16262,"count":0}],"isBlockCoverage":false},{"functionName":"labeledStatement","ranges":[{"startOffset":16264,"endOffset":16372,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteral","ranges":[{"startOffset":16374,"endOffset":16470,"count":0}],"isBlockCoverage":false},{"functionName":"numericLiteral","ranges":[{"startOffset":16472,"endOffset":16570,"count":0}],"isBlockCoverage":false},{"functionName":"nullLiteral","ranges":[{"startOffset":16572,"endOffset":16659,"count":0}],"isBlockCoverage":false},{"functionName":"booleanLiteral","ranges":[{"startOffset":16661,"endOffset":16759,"count":0}],"isBlockCoverage":false},{"functionName":"regExpLiteral","ranges":[{"startOffset":16761,"endOffset":16866,"count":0}],"isBlockCoverage":false},{"functionName":"logicalExpression","ranges":[{"startOffset":16868,"endOffset":16988,"count":0}],"isBlockCoverage":false},{"functionName":"memberExpression","ranges":[{"startOffset":16990,"endOffset":17123,"count":0}],"isBlockCoverage":false},{"functionName":"newExpression","ranges":[{"startOffset":17125,"endOffset":17234,"count":0}],"isBlockCoverage":false},{"functionName":"program","ranges":[{"startOffset":17236,"endOffset":17356,"count":0}],"isBlockCoverage":false},{"functionName":"objectExpression","ranges":[{"startOffset":17358,"endOffset":17465,"count":0}],"isBlockCoverage":false},{"functionName":"objectMethod","ranges":[{"startOffset":17467,"endOffset":17607,"count":0}],"isBlockCoverage":false},{"functionName":"objectProperty","ranges":[{"startOffset":17609,"endOffset":17745,"count":0}],"isBlockCoverage":false},{"functionName":"restElement","ranges":[{"startOffset":17747,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"returnStatement","ranges":[{"startOffset":17844,"endOffset":17947,"count":0}],"isBlockCoverage":false},{"functionName":"sequenceExpression","ranges":[{"startOffset":17949,"endOffset":18061,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizedExpression","ranges":[{"startOffset":18063,"endOffset":18184,"count":0}],"isBlockCoverage":false},{"functionName":"switchCase","ranges":[{"startOffset":18186,"endOffset":18287,"count":0}],"isBlockCoverage":false},{"functionName":"switchStatement","ranges":[{"startOffset":18289,"endOffset":18403,"count":0}],"isBlockCoverage":false},{"functionName":"thisExpression","ranges":[{"startOffset":18405,"endOffset":18498,"count":0}],"isBlockCoverage":false},{"functionName":"throwStatement","ranges":[{"startOffset":18500,"endOffset":18601,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatement","ranges":[{"startOffset":18603,"endOffset":18717,"count":0}],"isBlockCoverage":false},{"functionName":"unaryExpression","ranges":[{"startOffset":18719,"endOffset":18840,"count":0}],"isBlockCoverage":false},{"functionName":"updateExpression","ranges":[{"startOffset":18842,"endOffset":18965,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclaration","ranges":[{"startOffset":18967,"endOffset":19088,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclarator","ranges":[{"startOffset":19090,"endOffset":19199,"count":0}],"isBlockCoverage":false},{"functionName":"whileStatement","ranges":[{"startOffset":19201,"endOffset":19304,"count":0}],"isBlockCoverage":false},{"functionName":"withStatement","ranges":[{"startOffset":19306,"endOffset":19409,"count":0}],"isBlockCoverage":false},{"functionName":"assignmentPattern","ranges":[{"startOffset":19411,"endOffset":19521,"count":0}],"isBlockCoverage":false},{"functionName":"arrayPattern","ranges":[{"startOffset":19523,"endOffset":19620,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionExpression","ranges":[{"startOffset":19622,"endOffset":19752,"count":0}],"isBlockCoverage":false},{"functionName":"classBody","ranges":[{"startOffset":19754,"endOffset":19841,"count":0}],"isBlockCoverage":false},{"functionName":"classExpression","ranges":[{"startOffset":19843,"endOffset":19970,"count":0}],"isBlockCoverage":false},{"functionName":"classDeclaration","ranges":[{"startOffset":19972,"endOffset":20101,"count":0}],"isBlockCoverage":false},{"functionName":"exportAllDeclaration","ranges":[{"startOffset":20103,"endOffset":20214,"count":0}],"isBlockCoverage":false},{"functionName":"exportDefaultDeclaration","ranges":[{"startOffset":20216,"endOffset":20340,"count":0}],"isBlockCoverage":false},{"functionName":"exportNamedDeclaration","ranges":[{"startOffset":20342,"endOffset":20482,"count":0}],"isBlockCoverage":false},{"functionName":"exportSpecifier","ranges":[{"startOffset":20484,"endOffset":20594,"count":0}],"isBlockCoverage":false},{"functionName":"forOfStatement","ranges":[{"startOffset":20596,"endOffset":20714,"count":0}],"isBlockCoverage":false},{"functionName":"importDeclaration","ranges":[{"startOffset":20716,"endOffset":20833,"count":0}],"isBlockCoverage":false},{"functionName":"importDefaultSpecifier","ranges":[{"startOffset":20835,"endOffset":20949,"count":0}],"isBlockCoverage":false},{"functionName":"importNamespaceSpecifier","ranges":[{"startOffset":20951,"endOffset":21069,"count":0}],"isBlockCoverage":false},{"functionName":"importSpecifier","ranges":[{"startOffset":21071,"endOffset":21181,"count":0}],"isBlockCoverage":false},{"functionName":"metaProperty","ranges":[{"startOffset":21183,"endOffset":21286,"count":0}],"isBlockCoverage":false},{"functionName":"classMethod","ranges":[{"startOffset":21288,"endOffset":21435,"count":0}],"isBlockCoverage":false},{"functionName":"objectPattern","ranges":[{"startOffset":21437,"endOffset":21538,"count":0}],"isBlockCoverage":false},{"functionName":"spreadElement","ranges":[{"startOffset":21540,"endOffset":21639,"count":0}],"isBlockCoverage":false},{"functionName":"_super","ranges":[{"startOffset":21641,"endOffset":21717,"count":0}],"isBlockCoverage":false},{"functionName":"taggedTemplateExpression","ranges":[{"startOffset":21719,"endOffset":21842,"count":0}],"isBlockCoverage":false},{"functionName":"templateElement","ranges":[{"startOffset":21844,"endOffset":21950,"count":0}],"isBlockCoverage":false},{"functionName":"templateLiteral","ranges":[{"startOffset":21952,"endOffset":22066,"count":0}],"isBlockCoverage":false},{"functionName":"yieldExpression","ranges":[{"startOffset":22068,"endOffset":22181,"count":0}],"isBlockCoverage":false},{"functionName":"awaitExpression","ranges":[{"startOffset":22183,"endOffset":22286,"count":0}],"isBlockCoverage":false},{"functionName":"_import","ranges":[{"startOffset":22288,"endOffset":22366,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntLiteral","ranges":[{"startOffset":22368,"endOffset":22464,"count":0}],"isBlockCoverage":false},{"functionName":"exportNamespaceSpecifier","ranges":[{"startOffset":22466,"endOffset":22587,"count":0}],"isBlockCoverage":false},{"functionName":"optionalMemberExpression","ranges":[{"startOffset":22589,"endOffset":22738,"count":0}],"isBlockCoverage":false},{"functionName":"optionalCallExpression","ranges":[{"startOffset":22740,"endOffset":22877,"count":0}],"isBlockCoverage":false},{"functionName":"anyTypeAnnotation","ranges":[{"startOffset":22879,"endOffset":22978,"count":0}],"isBlockCoverage":false},{"functionName":"arrayTypeAnnotation","ranges":[{"startOffset":22980,"endOffset":23094,"count":0}],"isBlockCoverage":false},{"functionName":"booleanTypeAnnotation","ranges":[{"startOffset":23096,"endOffset":23203,"count":0}],"isBlockCoverage":false},{"functionName":"booleanLiteralTypeAnnotation","ranges":[{"startOffset":23205,"endOffset":23331,"count":0}],"isBlockCoverage":false},{"functionName":"nullLiteralTypeAnnotation","ranges":[{"startOffset":23333,"endOffset":23448,"count":0}],"isBlockCoverage":false},{"functionName":"classImplements","ranges":[{"startOffset":23450,"endOffset":23563,"count":0}],"isBlockCoverage":false},{"functionName":"declareClass","ranges":[{"startOffset":23565,"endOffset":23688,"count":0}],"isBlockCoverage":false},{"functionName":"declareFunction","ranges":[{"startOffset":23690,"endOffset":23787,"count":0}],"isBlockCoverage":false},{"functionName":"declareInterface","ranges":[{"startOffset":23789,"endOffset":23920,"count":0}],"isBlockCoverage":false},{"functionName":"declareModule","ranges":[{"startOffset":23922,"endOffset":24027,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleExports","ranges":[{"startOffset":24029,"endOffset":24148,"count":0}],"isBlockCoverage":false},{"functionName":"declareTypeAlias","ranges":[{"startOffset":24150,"endOffset":24272,"count":0}],"isBlockCoverage":false},{"functionName":"declareOpaqueType","ranges":[{"startOffset":24274,"endOffset":24402,"count":0}],"isBlockCoverage":false},{"functionName":"declareVariable","ranges":[{"startOffset":24404,"endOffset":24501,"count":0}],"isBlockCoverage":false},{"functionName":"declareExportDeclaration","ranges":[{"startOffset":24503,"endOffset":24647,"count":0}],"isBlockCoverage":false},{"functionName":"declareExportAllDeclaration","ranges":[{"startOffset":24649,"endOffset":24774,"count":0}],"isBlockCoverage":false},{"functionName":"declaredPredicate","ranges":[{"startOffset":24776,"endOffset":24880,"count":0}],"isBlockCoverage":false},{"functionName":"existsTypeAnnotation","ranges":[{"startOffset":24882,"endOffset":24987,"count":0}],"isBlockCoverage":false},{"functionName":"functionTypeAnnotation","ranges":[{"startOffset":24989,"endOffset":25138,"count":0}],"isBlockCoverage":false},{"functionName":"functionTypeParam","ranges":[{"startOffset":25140,"endOffset":25259,"count":0}],"isBlockCoverage":false},{"functionName":"genericTypeAnnotation","ranges":[{"startOffset":25261,"endOffset":25386,"count":0}],"isBlockCoverage":false},{"functionName":"inferredPredicate","ranges":[{"startOffset":25388,"endOffset":25487,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceExtends","ranges":[{"startOffset":25489,"endOffset":25604,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceDeclaration","ranges":[{"startOffset":25606,"endOffset":25745,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceTypeAnnotation","ranges":[{"startOffset":25747,"endOffset":25872,"count":0}],"isBlockCoverage":false},{"functionName":"intersectionTypeAnnotation","ranges":[{"startOffset":25874,"endOffset":25996,"count":0}],"isBlockCoverage":false},{"functionName":"mixedTypeAnnotation","ranges":[{"startOffset":25998,"endOffset":26101,"count":0}],"isBlockCoverage":false},{"functionName":"emptyTypeAnnotation","ranges":[{"startOffset":26103,"endOffset":26206,"count":0}],"isBlockCoverage":false},{"functionName":"nullableTypeAnnotation","ranges":[{"startOffset":26208,"endOffset":26331,"count":0}],"isBlockCoverage":false},{"functionName":"numberLiteralTypeAnnotation","ranges":[{"startOffset":26333,"endOffset":26457,"count":0}],"isBlockCoverage":false},{"functionName":"numberTypeAnnotation","ranges":[{"startOffset":26459,"endOffset":26564,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeAnnotation","ranges":[{"startOffset":26566,"endOffset":26729,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeInternalSlot","ranges":[{"startOffset":26731,"endOffset":26876,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeCallProperty","ranges":[{"startOffset":26878,"endOffset":26992,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeIndexer","ranges":[{"startOffset":26994,"endOffset":27117,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeProperty","ranges":[{"startOffset":27119,"endOffset":27240,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeSpreadProperty","ranges":[{"startOffset":27242,"endOffset":27363,"count":0}],"isBlockCoverage":false},{"functionName":"opaqueType","ranges":[{"startOffset":27365,"endOffset":27489,"count":0}],"isBlockCoverage":false},{"functionName":"qualifiedTypeIdentifier","ranges":[{"startOffset":27491,"endOffset":27619,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralTypeAnnotation","ranges":[{"startOffset":27621,"endOffset":27745,"count":0}],"isBlockCoverage":false},{"functionName":"stringTypeAnnotation","ranges":[{"startOffset":27747,"endOffset":27852,"count":0}],"isBlockCoverage":false},{"functionName":"symbolTypeAnnotation","ranges":[{"startOffset":27854,"endOffset":27959,"count":0}],"isBlockCoverage":false},{"functionName":"thisTypeAnnotation","ranges":[{"startOffset":27961,"endOffset":28062,"count":0}],"isBlockCoverage":false},{"functionName":"tupleTypeAnnotation","ranges":[{"startOffset":28064,"endOffset":28172,"count":0}],"isBlockCoverage":false},{"functionName":"typeofTypeAnnotation","ranges":[{"startOffset":28174,"endOffset":28287,"count":0}],"isBlockCoverage":false},{"functionName":"typeAlias","ranges":[{"startOffset":28289,"endOffset":28397,"count":0}],"isBlockCoverage":false},{"functionName":"typeAnnotation","ranges":[{"startOffset":28399,"endOffset":28506,"count":0}],"isBlockCoverage":false},{"functionName":"typeCastExpression","ranges":[{"startOffset":28508,"endOffset":28635,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameter","ranges":[{"startOffset":28637,"endOffset":28753,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterDeclaration","ranges":[{"startOffset":28755,"endOffset":28874,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterInstantiation","ranges":[{"startOffset":28876,"endOffset":28999,"count":0}],"isBlockCoverage":false},{"functionName":"unionTypeAnnotation","ranges":[{"startOffset":29001,"endOffset":29109,"count":0}],"isBlockCoverage":false},{"functionName":"variance","ranges":[{"startOffset":29111,"endOffset":29196,"count":0}],"isBlockCoverage":false},{"functionName":"voidTypeAnnotation","ranges":[{"startOffset":29198,"endOffset":29299,"count":0}],"isBlockCoverage":false},{"functionName":"enumDeclaration","ranges":[{"startOffset":29301,"endOffset":29404,"count":0}],"isBlockCoverage":false},{"functionName":"enumBooleanBody","ranges":[{"startOffset":29406,"endOffset":29508,"count":0}],"isBlockCoverage":false},{"functionName":"enumNumberBody","ranges":[{"startOffset":29510,"endOffset":29610,"count":0}],"isBlockCoverage":false},{"functionName":"enumStringBody","ranges":[{"startOffset":29612,"endOffset":29712,"count":0}],"isBlockCoverage":false},{"functionName":"enumSymbolBody","ranges":[{"startOffset":29714,"endOffset":29814,"count":0}],"isBlockCoverage":false},{"functionName":"enumBooleanMember","ranges":[{"startOffset":29816,"endOffset":29917,"count":0}],"isBlockCoverage":false},{"functionName":"enumNumberMember","ranges":[{"startOffset":29919,"endOffset":30024,"count":0}],"isBlockCoverage":false},{"functionName":"enumStringMember","ranges":[{"startOffset":30026,"endOffset":30131,"count":0}],"isBlockCoverage":false},{"functionName":"enumDefaultedMember","ranges":[{"startOffset":30133,"endOffset":30238,"count":0}],"isBlockCoverage":false},{"functionName":"jsxAttribute","ranges":[{"startOffset":30240,"endOffset":30340,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingElement","ranges":[{"startOffset":30342,"endOffset":30445,"count":0}],"isBlockCoverage":false},{"functionName":"jsxElement","ranges":[{"startOffset":30447,"endOffset":30585,"count":0}],"isBlockCoverage":false},{"functionName":"jsxEmptyExpression","ranges":[{"startOffset":30587,"endOffset":30688,"count":0}],"isBlockCoverage":false},{"functionName":"jsxExpressionContainer","ranges":[{"startOffset":30690,"endOffset":30809,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadChild","ranges":[{"startOffset":30811,"endOffset":30914,"count":0}],"isBlockCoverage":false},{"functionName":"jsxIdentifier","ranges":[{"startOffset":30916,"endOffset":31011,"count":0}],"isBlockCoverage":false},{"functionName":"jsxMemberExpression","ranges":[{"startOffset":31013,"endOffset":31132,"count":0}],"isBlockCoverage":false},{"functionName":"jsxNamespacedName","ranges":[{"startOffset":31134,"endOffset":31248,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningElement","ranges":[{"startOffset":31250,"endOffset":31378,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadAttribute","ranges":[{"startOffset":31380,"endOffset":31489,"count":0}],"isBlockCoverage":false},{"functionName":"jsxText","ranges":[{"startOffset":31491,"endOffset":31575,"count":0}],"isBlockCoverage":false},{"functionName":"jsxFragment","ranges":[{"startOffset":31577,"endOffset":31706,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningFragment","ranges":[{"startOffset":31708,"endOffset":31809,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingFragment","ranges":[{"startOffset":31811,"endOffset":31912,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":31914,"endOffset":31987,"count":0}],"isBlockCoverage":false},{"functionName":"placeholder","ranges":[{"startOffset":31989,"endOffset":32094,"count":0}],"isBlockCoverage":false},{"functionName":"v8IntrinsicIdentifier","ranges":[{"startOffset":32096,"endOffset":32207,"count":0}],"isBlockCoverage":false},{"functionName":"argumentPlaceholder","ranges":[{"startOffset":32209,"endOffset":32312,"count":0}],"isBlockCoverage":false},{"functionName":"bindExpression","ranges":[{"startOffset":32314,"endOffset":32421,"count":0}],"isBlockCoverage":false},{"functionName":"classProperty","ranges":[{"startOffset":32423,"endOffset":32571,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineTopicExpression","ranges":[{"startOffset":32573,"endOffset":32694,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineBareFunction","ranges":[{"startOffset":32696,"endOffset":32807,"count":0}],"isBlockCoverage":false},{"functionName":"pipelinePrimaryTopicReference","ranges":[{"startOffset":32809,"endOffset":32932,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateProperty","ranges":[{"startOffset":32934,"endOffset":33070,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateMethod","ranges":[{"startOffset":33072,"endOffset":33205,"count":0}],"isBlockCoverage":false},{"functionName":"importAttribute","ranges":[{"startOffset":33207,"endOffset":33312,"count":0}],"isBlockCoverage":false},{"functionName":"decorator","ranges":[{"startOffset":33314,"endOffset":33407,"count":0}],"isBlockCoverage":false},{"functionName":"doExpression","ranges":[{"startOffset":33409,"endOffset":33502,"count":0}],"isBlockCoverage":false},{"functionName":"exportDefaultSpecifier","ranges":[{"startOffset":33504,"endOffset":33621,"count":0}],"isBlockCoverage":false},{"functionName":"privateName","ranges":[{"startOffset":33623,"endOffset":33712,"count":0}],"isBlockCoverage":false},{"functionName":"recordExpression","ranges":[{"startOffset":33714,"endOffset":33821,"count":0}],"isBlockCoverage":false},{"functionName":"tupleExpression","ranges":[{"startOffset":33823,"endOffset":33926,"count":0}],"isBlockCoverage":false},{"functionName":"decimalLiteral","ranges":[{"startOffset":33928,"endOffset":34026,"count":0}],"isBlockCoverage":false},{"functionName":"staticBlock","ranges":[{"startOffset":34028,"endOffset":34119,"count":0}],"isBlockCoverage":false},{"functionName":"tsParameterProperty","ranges":[{"startOffset":34121,"endOffset":34233,"count":0}],"isBlockCoverage":false},{"functionName":"tsDeclareFunction","ranges":[{"startOffset":34235,"endOffset":34372,"count":0}],"isBlockCoverage":false},{"functionName":"tsDeclareMethod","ranges":[{"startOffset":34374,"endOffset":34520,"count":0}],"isBlockCoverage":false},{"functionName":"tsQualifiedName","ranges":[{"startOffset":34522,"endOffset":34628,"count":0}],"isBlockCoverage":false},{"functionName":"tsCallSignatureDeclaration","ranges":[{"startOffset":34630,"endOffset":34789,"count":0}],"isBlockCoverage":false},{"functionName":"tsConstructSignatureDeclaration","ranges":[{"startOffset":34791,"endOffset":34960,"count":0}],"isBlockCoverage":false},{"functionName":"tsPropertySignature","ranges":[{"startOffset":34962,"endOffset":35097,"count":0}],"isBlockCoverage":false},{"functionName":"tsMethodSignature","ranges":[{"startOffset":35099,"endOffset":35245,"count":0}],"isBlockCoverage":false},{"functionName":"tsIndexSignature","ranges":[{"startOffset":35247,"endOffset":35370,"count":0}],"isBlockCoverage":false},{"functionName":"tsAnyKeyword","ranges":[{"startOffset":35372,"endOffset":35461,"count":0}],"isBlockCoverage":false},{"functionName":"tsBooleanKeyword","ranges":[{"startOffset":35463,"endOffset":35560,"count":0}],"isBlockCoverage":false},{"functionName":"tsBigIntKeyword","ranges":[{"startOffset":35562,"endOffset":35657,"count":0}],"isBlockCoverage":false},{"functionName":"tsIntrinsicKeyword","ranges":[{"startOffset":35659,"endOffset":35760,"count":0}],"isBlockCoverage":false},{"functionName":"tsNeverKeyword","ranges":[{"startOffset":35762,"endOffset":35855,"count":0}],"isBlockCoverage":false},{"functionName":"tsNullKeyword","ranges":[{"startOffset":35857,"endOffset":35948,"count":0}],"isBlockCoverage":false},{"functionName":"tsNumberKeyword","ranges":[{"startOffset":35950,"endOffset":36045,"count":0}],"isBlockCoverage":false},{"functionName":"tsObjectKeyword","ranges":[{"startOffset":36047,"endOffset":36142,"count":0}],"isBlockCoverage":false},{"functionName":"tsStringKeyword","ranges":[{"startOffset":36144,"endOffset":36239,"count":0}],"isBlockCoverage":false},{"functionName":"tsSymbolKeyword","ranges":[{"startOffset":36241,"endOffset":36336,"count":0}],"isBlockCoverage":false},{"functionName":"tsUndefinedKeyword","ranges":[{"startOffset":36338,"endOffset":36439,"count":0}],"isBlockCoverage":false},{"functionName":"tsUnknownKeyword","ranges":[{"startOffset":36441,"endOffset":36538,"count":0}],"isBlockCoverage":false},{"functionName":"tsVoidKeyword","ranges":[{"startOffset":36540,"endOffset":36631,"count":0}],"isBlockCoverage":false},{"functionName":"tsThisType","ranges":[{"startOffset":36633,"endOffset":36718,"count":0}],"isBlockCoverage":false},{"functionName":"tsFunctionType","ranges":[{"startOffset":36720,"endOffset":36855,"count":0}],"isBlockCoverage":false},{"functionName":"tsConstructorType","ranges":[{"startOffset":36857,"endOffset":36998,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeReference","ranges":[{"startOffset":37000,"endOffset":37119,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypePredicate","ranges":[{"startOffset":37121,"endOffset":37254,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeQuery","ranges":[{"startOffset":37256,"endOffset":37351,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeLiteral","ranges":[{"startOffset":37353,"endOffset":37451,"count":0}],"isBlockCoverage":false},{"functionName":"tsArrayType","ranges":[{"startOffset":37453,"endOffset":37551,"count":0}],"isBlockCoverage":false},{"functionName":"tsTupleType","ranges":[{"startOffset":37553,"endOffset":37652,"count":0}],"isBlockCoverage":false},{"functionName":"tsOptionalType","ranges":[{"startOffset":37654,"endOffset":37761,"count":0}],"isBlockCoverage":false},{"functionName":"tsRestType","ranges":[{"startOffset":37763,"endOffset":37862,"count":0}],"isBlockCoverage":false},{"functionName":"tsNamedTupleMember","ranges":[{"startOffset":37864,"endOffset":37993,"count":0}],"isBlockCoverage":false},{"functionName":"tsUnionType","ranges":[{"startOffset":37995,"endOffset":38087,"count":0}],"isBlockCoverage":false},{"functionName":"tsIntersectionType","ranges":[{"startOffset":38089,"endOffset":38195,"count":0}],"isBlockCoverage":false},{"functionName":"tsConditionalType","ranges":[{"startOffset":38197,"endOffset":38339,"count":0}],"isBlockCoverage":false},{"functionName":"tsInferType","ranges":[{"startOffset":38341,"endOffset":38441,"count":0}],"isBlockCoverage":false},{"functionName":"tsParenthesizedType","ranges":[{"startOffset":38443,"endOffset":38560,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeOperator","ranges":[{"startOffset":38562,"endOffset":38669,"count":0}],"isBlockCoverage":false},{"functionName":"tsIndexedAccessType","ranges":[{"startOffset":38671,"endOffset":38795,"count":0}],"isBlockCoverage":false},{"functionName":"tsMappedType","ranges":[{"startOffset":38797,"endOffset":38925,"count":0}],"isBlockCoverage":false},{"functionName":"tsLiteralType","ranges":[{"startOffset":38927,"endOffset":39025,"count":0}],"isBlockCoverage":false},{"functionName":"tsExpressionWithTypeArguments","ranges":[{"startOffset":39027,"endOffset":39176,"count":0}],"isBlockCoverage":false},{"functionName":"tsInterfaceDeclaration","ranges":[{"startOffset":39178,"endOffset":39321,"count":0}],"isBlockCoverage":false},{"functionName":"tsInterfaceBody","ranges":[{"startOffset":39323,"endOffset":39422,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAliasDeclaration","ranges":[{"startOffset":39424,"endOffset":39567,"count":0}],"isBlockCoverage":false},{"functionName":"tsAsExpression","ranges":[{"startOffset":39569,"endOffset":39688,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAssertion","ranges":[{"startOffset":39690,"endOffset":39811,"count":0}],"isBlockCoverage":false},{"functionName":"tsEnumDeclaration","ranges":[{"startOffset":39813,"endOffset":39923,"count":0}],"isBlockCoverage":false},{"functionName":"tsEnumMember","ranges":[{"startOffset":39925,"endOffset":40029,"count":0}],"isBlockCoverage":false},{"functionName":"tsModuleDeclaration","ranges":[{"startOffset":40031,"endOffset":40142,"count":0}],"isBlockCoverage":false},{"functionName":"tsModuleBlock","ranges":[{"startOffset":40144,"endOffset":40239,"count":0}],"isBlockCoverage":false},{"functionName":"tsImportType","ranges":[{"startOffset":40241,"endOffset":40365,"count":0}],"isBlockCoverage":false},{"functionName":"tsImportEqualsDeclaration","ranges":[{"startOffset":40367,"endOffset":40501,"count":0}],"isBlockCoverage":false},{"functionName":"tsExternalModuleReference","ranges":[{"startOffset":40503,"endOffset":40628,"count":0}],"isBlockCoverage":false},{"functionName":"tsNonNullExpression","ranges":[{"startOffset":40630,"endOffset":40743,"count":0}],"isBlockCoverage":false},{"functionName":"tsExportAssignment","ranges":[{"startOffset":40745,"endOffset":40856,"count":0}],"isBlockCoverage":false},{"functionName":"tsNamespaceExportDeclaration","ranges":[{"startOffset":40858,"endOffset":40981,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAnnotation","ranges":[{"startOffset":40983,"endOffset":41094,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameterInstantiation","ranges":[{"startOffset":41096,"endOffset":41223,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameterDeclaration","ranges":[{"startOffset":41225,"endOffset":41348,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameter","ranges":[{"startOffset":41350,"endOffset":41471,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":41473,"endOffset":41649,"count":0}],"isBlockCoverage":false},{"functionName":"RegexLiteral","ranges":[{"startOffset":41651,"endOffset":41823,"count":0}],"isBlockCoverage":false},{"functionName":"RestProperty","ranges":[{"startOffset":41825,"endOffset":41995,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadProperty","ranges":[{"startOffset":41997,"endOffset":42175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":294,"endOffset":389,"count":2},{"startOffset":362,"endOffset":367,"count":1},{"startOffset":368,"endOffset":386,"count":1}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":391,"endOffset":1063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"618","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2517,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":156,"endOffset":205,"count":238}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":284,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":418,"endOffset":473,"count":134}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":553,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":682,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":815,"endOffset":867,"count":22}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":959,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1100,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1243,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1400,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1795,"endOffset":1890,"count":1},{"startOffset":1863,"endOffset":1868,"count":0}],"isBlockCoverage":true}]},{"scriptId":"619","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/to-fast-properties/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"FastObject","ranges":[{"startOffset":349,"endOffset":856,"count":18},{"startOffset":635,"endOffset":663,"count":9},{"startOffset":665,"endOffset":804,"count":9},{"startOffset":804,"endOffset":825,"count":1},{"startOffset":826,"endOffset":829,"count":8}],"isBlockCoverage":true},{"functionName":"toFastproperties","ranges":[{"startOffset":944,"endOffset":999,"count":8}],"isBlockCoverage":true}]},{"scriptId":"620","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":48129,"count":1},{"startOffset":1965,"endOffset":1976,"count":0},{"startOffset":2707,"endOffset":2802,"count":0},{"startOffset":5732,"endOffset":5736,"count":0},{"startOffset":8029,"endOffset":8112,"count":0},{"startOffset":8586,"endOffset":8704,"count":0},{"startOffset":17479,"endOffset":17483,"count":0},{"startOffset":19099,"endOffset":19103,"count":0},{"startOffset":20291,"endOffset":20295,"count":0},{"startOffset":22700,"endOffset":22773,"count":0},{"startOffset":26352,"endOffset":26414,"count":0},{"startOffset":47037,"endOffset":47136,"count":0},{"startOffset":47767,"endOffset":47866,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":639,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":827,"endOffset":1570,"count":1},{"startOffset":909,"endOffset":982,"count":0},{"startOffset":984,"endOffset":1080,"count":0},{"startOffset":1082,"endOffset":1210,"count":0},{"startOffset":1233,"endOffset":1569,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1572,"endOffset":1667,"count":2},{"startOffset":1646,"endOffset":1664,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2133,"endOffset":2596,"count":1},{"startOffset":2263,"endOffset":2595,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2422,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3212,"endOffset":3648,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":3400,"endOffset":3546,"count":0}],"isBlockCoverage":false},{"functionName":"fields.comments.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.each.oneOfNodeTypes","ranges":[{"startOffset":7924,"endOffset":7932,"count":0}],"isBlockCoverage":false},{"functionName":"fields.tokens.validate.Object.assign.type","ranges":[{"startOffset":8209,"endOffset":8217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10952,"endOffset":11261,"count":1},{"startOffset":11027,"endOffset":11260,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11018,"endOffset":11026,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11104,"endOffset":11256,"count":0}],"isBlockCoverage":false},{"functionName":"fields.Object.assign.name.validate.Object.assign.type","ranges":[{"startOffset":12383,"endOffset":12620,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12772,"endOffset":13980,"count":0}],"isBlockCoverage":false},{"functionName":"fields.flags.validate.Object.assign.type","ranges":[{"startOffset":15792,"endOffset":16042,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16839,"endOffset":17280,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":17027,"endOffset":17164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19177,"endOffset":19658,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":19385,"endOffset":19522,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20382,"endOffset":20863,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":20590,"endOffset":20727,"count":0}],"isBlockCoverage":false},{"functionName":"fields.shorthand.validate.Object.assign.type","ranges":[{"startOffset":21070,"endOffset":21315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21353,"endOffset":21634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21970,"endOffset":22363,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22133,"endOffset":22358,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":22789,"endOffset":23156,"count":0}],"isBlockCoverage":false},{"functionName":"fields.block.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":25196,"endOffset":25431,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":27101,"endOffset":27442,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27557,"endOffset":28006,"count":1},{"startOffset":27684,"endOffset":28005,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27865,"endOffset":27997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33661,"endOffset":33964,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33751,"endOffset":33959,"count":0}],"isBlockCoverage":false},{"functionName":"fields.declaration.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":35131,"endOffset":35381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35435,"endOffset":35648,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35955,"endOffset":36395,"count":1},{"startOffset":36232,"endOffset":36394,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36248,"endOffset":36386,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37155,"endOffset":37731,"count":1},{"startOffset":37305,"endOffset":37730,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37517,"endOffset":37722,"count":0}],"isBlockCoverage":false},{"functionName":"fields.meta.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":39700,"endOffset":40252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40852,"endOffset":41180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41042,"endOffset":41173,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44459,"endOffset":44745,"count":0}],"isBlockCoverage":false},{"functionName":"fields.delegate.validate.Object.assign.type","ranges":[{"startOffset":45025,"endOffset":45275,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46463,"endOffset":46874,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":46636,"endOffset":46773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":916,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":371,"endOffset":466,"count":3},{"startOffset":445,"endOffset":463,"count":0}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":468,"endOffset":916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":529,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":154,"endOffset":529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"623","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isPlaceholderType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"isPlaceholderType","ranges":[{"startOffset":165,"endOffset":468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isValidIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":540,"count":1}],"isBlockCoverage":true},{"functionName":"isValidIdentifier","ranges":[{"startOffset":199,"endOffset":540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"625","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-identifier/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":303,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":447,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":589,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":739,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":899,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1051,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1188,"endOffset":1236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-identifier/lib/identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11642,"count":1}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":10182,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":10435,"endOffset":10780,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":10782,"endOffset":11228,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":11230,"endOffset":11642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"627","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-identifier/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":1020,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":1123,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":1251,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":1347,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1487,"endOffset":1544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/constants/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3242,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2238,"endOffset":2252,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2280,"endOffset":2294,"count":3}],"isBlockCoverage":true}]},{"scriptId":"629","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8183,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1041,"endOffset":1136,"count":1},{"startOffset":1115,"endOffset":1133,"count":0}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1624,"endOffset":1783,"count":13},{"startOffset":1674,"endOffset":1699,"count":0},{"startOffset":1723,"endOffset":1747,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1785,"endOffset":1845,"count":133}],"isBlockCoverage":true},{"functionName":"typeIs","ranges":[{"startOffset":1847,"endOffset":1972,"count":167},{"startOffset":1913,"endOffset":1939,"count":149},{"startOffset":1940,"endOffset":1969,"count":18}],"isBlockCoverage":true},{"functionName":"validateType","ranges":[{"startOffset":1974,"endOffset":2046,"count":93}],"isBlockCoverage":true},{"functionName":"validateOptional","ranges":[{"startOffset":2048,"endOffset":2136,"count":34}],"isBlockCoverage":true},{"functionName":"validateOptionalType","ranges":[{"startOffset":2138,"endOffset":2248,"count":40}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":2250,"endOffset":2350,"count":34}],"isBlockCoverage":true},{"functionName":"arrayOfType","ranges":[{"startOffset":2352,"endOffset":2422,"count":34}],"isBlockCoverage":true},{"functionName":"validateArrayOfType","ranges":[{"startOffset":2424,"endOffset":2508,"count":12}],"isBlockCoverage":true},{"functionName":"assertEach","ranges":[{"startOffset":2510,"endOffset":2910,"count":75}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":2544,"endOffset":2858,"count":0}],"isBlockCoverage":false},{"functionName":"assertOneOf","ranges":[{"startOffset":2912,"endOffset":3208,"count":22}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2948,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeType","ranges":[{"startOffset":3210,"endOffset":3684,"count":366}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3248,"endOffset":3627,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeOrValueType","ranges":[{"startOffset":3686,"endOffset":4199,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3731,"endOffset":4135,"count":0}],"isBlockCoverage":false},{"functionName":"assertValueType","ranges":[{"startOffset":4201,"endOffset":4482,"count":149}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4236,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"assertShape","ranges":[{"startOffset":4484,"endOffset":5094,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4516,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalChainStart","ranges":[{"startOffset":5096,"endOffset":5819,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":5821,"endOffset":5991,"count":86}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":5865,"endOffset":5942,"count":0}],"isBlockCoverage":false},{"functionName":"defineType","ranges":[{"startOffset":6164,"endOffset":8164,"count":242},{"startOffset":6236,"endOffset":6259,"count":3},{"startOffset":6260,"endOffset":6265,"count":239},{"startOffset":6311,"endOffset":6656,"count":25},{"startOffset":6356,"endOffset":6652,"count":1},{"startOffset":6453,"endOffset":6646,"count":5},{"startOffset":6689,"endOffset":6708,"count":42},{"startOffset":6709,"endOffset":6714,"count":39},{"startOffset":6747,"endOffset":6766,"count":26},{"startOffset":6767,"endOffset":6772,"count":25},{"startOffset":6805,"endOffset":6824,"count":179},{"startOffset":6825,"endOffset":6840,"count":176},{"startOffset":6841,"endOffset":6846,"count":23},{"startOffset":6886,"endOffset":7004,"count":709},{"startOffset":6929,"endOffset":7000,"count":0},{"startOffset":7034,"endOffset":7089,"count":4},{"startOffset":7136,"endOffset":7178,"count":818},{"startOffset":7168,"endOffset":7173,"count":1},{"startOffset":7221,"endOffset":7734,"count":553},{"startOffset":7291,"endOffset":7321,"count":112},{"startOffset":7323,"endOffset":7359,"count":45},{"startOffset":7398,"endOffset":7433,"count":441},{"startOffset":7433,"endOffset":7556,"count":112},{"startOffset":7459,"endOffset":7483,"count":13},{"startOffset":7485,"endOffset":7556,"count":13},{"startOffset":7598,"endOffset":7730,"count":1321},{"startOffset":7644,"endOffset":7724,"count":0},{"startOffset":8083,"endOffset":8139,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7937,"endOffset":8058,"count":465},{"startOffset":8006,"endOffset":8011,"count":45}],"isBlockCoverage":true}]},{"scriptId":"630","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":850,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":234,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"validateField","ranges":[{"startOffset":473,"endOffset":659,"count":0}],"isBlockCoverage":false},{"functionName":"validateChild","ranges":[{"startOffset":661,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16915,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true},{"functionName":"defineInterfaceishType","ranges":[{"startOffset":1038,"endOffset":1822,"count":3}],"isBlockCoverage":true}]},{"scriptId":"632","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5531,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true}]},{"scriptId":"633","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":122,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":310,"endOffset":1053,"count":1},{"startOffset":392,"endOffset":465,"count":0},{"startOffset":467,"endOffset":563,"count":0},{"startOffset":565,"endOffset":693,"count":0},{"startOffset":716,"endOffset":1052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"634","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/placeholders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1078,"count":1},{"startOffset":567,"endOffset":690,"count":8},{"startOffset":630,"endOffset":638,"count":4},{"startOffset":639,"endOffset":653,"count":4},{"startOffset":655,"endOffset":688,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":836,"endOffset":1076,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":881,"endOffset":1072,"count":15},{"startOffset":964,"endOffset":1017,"count":11}],"isBlockCoverage":true}]},{"scriptId":"635","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/experimental.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6434,"count":1},{"startOffset":1462,"endOffset":1624,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":106,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":294,"endOffset":1037,"count":1},{"startOffset":376,"endOffset":449,"count":0},{"startOffset":451,"endOffset":547,"count":0},{"startOffset":549,"endOffset":677,"count":0},{"startOffset":700,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.object.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":1281,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.callee.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":1392,"endOffset":1400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14518,"count":1},{"startOffset":4523,"endOffset":4633,"count":13}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":106,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":294,"endOffset":1037,"count":1},{"startOffset":376,"endOffset":449,"count":0},{"startOffset":451,"endOffset":547,"count":0},{"startOffset":549,"endOffset":677,"count":0},{"startOffset":700,"endOffset":1036,"count":0}],"isBlockCoverage":true}]},{"scriptId":"637","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/asserts/assertNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":545,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":257,"endOffset":275,"count":0}],"isBlockCoverage":true},{"functionName":"assertNode","ranges":[{"startOffset":280,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"638","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":154,"endOffset":238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"639","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/asserts/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43259,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16441,"endOffset":16536,"count":1},{"startOffset":16515,"endOffset":16533,"count":0}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":16538,"endOffset":16746,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayExpression","ranges":[{"startOffset":16748,"endOffset":16835,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentExpression","ranges":[{"startOffset":16837,"endOffset":16934,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinaryExpression","ranges":[{"startOffset":16936,"endOffset":17025,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterpreterDirective","ranges":[{"startOffset":17027,"endOffset":17124,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirective","ranges":[{"startOffset":17126,"endOffset":17201,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirectiveLiteral","ranges":[{"startOffset":17203,"endOffset":17292,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockStatement","ranges":[{"startOffset":17294,"endOffset":17379,"count":0}],"isBlockCoverage":false},{"functionName":"assertBreakStatement","ranges":[{"startOffset":17381,"endOffset":17466,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallExpression","ranges":[{"startOffset":17468,"endOffset":17553,"count":0}],"isBlockCoverage":false},{"functionName":"assertCatchClause","ranges":[{"startOffset":17555,"endOffset":17634,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditionalExpression","ranges":[{"startOffset":17636,"endOffset":17735,"count":0}],"isBlockCoverage":false},{"functionName":"assertContinueStatement","ranges":[{"startOffset":17737,"endOffset":17828,"count":0}],"isBlockCoverage":false},{"functionName":"assertDebuggerStatement","ranges":[{"startOffset":17830,"endOffset":17921,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoWhileStatement","ranges":[{"startOffset":17923,"endOffset":18012,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyStatement","ranges":[{"startOffset":18014,"endOffset":18099,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionStatement","ranges":[{"startOffset":18101,"endOffset":18196,"count":0}],"isBlockCoverage":false},{"functionName":"assertFile","ranges":[{"startOffset":18198,"endOffset":18263,"count":0}],"isBlockCoverage":false},{"functionName":"assertForInStatement","ranges":[{"startOffset":18265,"endOffset":18350,"count":0}],"isBlockCoverage":false},{"functionName":"assertForStatement","ranges":[{"startOffset":18352,"endOffset":18433,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionDeclaration","ranges":[{"startOffset":18435,"endOffset":18530,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionExpression","ranges":[{"startOffset":18532,"endOffset":18625,"count":0}],"isBlockCoverage":false},{"functionName":"assertIdentifier","ranges":[{"startOffset":18627,"endOffset":18704,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfStatement","ranges":[{"startOffset":18706,"endOffset":18785,"count":0}],"isBlockCoverage":false},{"functionName":"assertLabeledStatement","ranges":[{"startOffset":18787,"endOffset":18876,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteral","ranges":[{"startOffset":18878,"endOffset":18961,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumericLiteral","ranges":[{"startOffset":18963,"endOffset":19048,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteral","ranges":[{"startOffset":19050,"endOffset":19129,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteral","ranges":[{"startOffset":19131,"endOffset":19216,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegExpLiteral","ranges":[{"startOffset":19218,"endOffset":19301,"count":0}],"isBlockCoverage":false},{"functionName":"assertLogicalExpression","ranges":[{"startOffset":19303,"endOffset":19394,"count":0}],"isBlockCoverage":false},{"functionName":"assertMemberExpression","ranges":[{"startOffset":19396,"endOffset":19485,"count":0}],"isBlockCoverage":false},{"functionName":"assertNewExpression","ranges":[{"startOffset":19487,"endOffset":19570,"count":0}],"isBlockCoverage":false},{"functionName":"assertProgram","ranges":[{"startOffset":19572,"endOffset":19643,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectExpression","ranges":[{"startOffset":19645,"endOffset":19734,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMethod","ranges":[{"startOffset":19736,"endOffset":19817,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectProperty","ranges":[{"startOffset":19819,"endOffset":19904,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestElement","ranges":[{"startOffset":19906,"endOffset":19985,"count":0}],"isBlockCoverage":false},{"functionName":"assertReturnStatement","ranges":[{"startOffset":19987,"endOffset":20074,"count":0}],"isBlockCoverage":false},{"functionName":"assertSequenceExpression","ranges":[{"startOffset":20076,"endOffset":20169,"count":0}],"isBlockCoverage":false},{"functionName":"assertParenthesizedExpression","ranges":[{"startOffset":20171,"endOffset":20274,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchCase","ranges":[{"startOffset":20276,"endOffset":20353,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchStatement","ranges":[{"startOffset":20355,"endOffset":20442,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisExpression","ranges":[{"startOffset":20444,"endOffset":20529,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrowStatement","ranges":[{"startOffset":20531,"endOffset":20616,"count":0}],"isBlockCoverage":false},{"functionName":"assertTryStatement","ranges":[{"startOffset":20618,"endOffset":20699,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryExpression","ranges":[{"startOffset":20701,"endOffset":20788,"count":0}],"isBlockCoverage":false},{"functionName":"assertUpdateExpression","ranges":[{"startOffset":20790,"endOffset":20879,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclaration","ranges":[{"startOffset":20881,"endOffset":20976,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclarator","ranges":[{"startOffset":20978,"endOffset":21071,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhileStatement","ranges":[{"startOffset":21073,"endOffset":21158,"count":0}],"isBlockCoverage":false},{"functionName":"assertWithStatement","ranges":[{"startOffset":21160,"endOffset":21243,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentPattern","ranges":[{"startOffset":21245,"endOffset":21336,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayPattern","ranges":[{"startOffset":21338,"endOffset":21419,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrowFunctionExpression","ranges":[{"startOffset":21421,"endOffset":21524,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassBody","ranges":[{"startOffset":21526,"endOffset":21601,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassExpression","ranges":[{"startOffset":21603,"endOffset":21690,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassDeclaration","ranges":[{"startOffset":21692,"endOffset":21781,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportAllDeclaration","ranges":[{"startOffset":21783,"endOffset":21880,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultDeclaration","ranges":[{"startOffset":21882,"endOffset":21987,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamedDeclaration","ranges":[{"startOffset":21989,"endOffset":22090,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportSpecifier","ranges":[{"startOffset":22092,"endOffset":22179,"count":0}],"isBlockCoverage":false},{"functionName":"assertForOfStatement","ranges":[{"startOffset":22181,"endOffset":22266,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDeclaration","ranges":[{"startOffset":22268,"endOffset":22359,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDefaultSpecifier","ranges":[{"startOffset":22361,"endOffset":22462,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportNamespaceSpecifier","ranges":[{"startOffset":22464,"endOffset":22569,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportSpecifier","ranges":[{"startOffset":22571,"endOffset":22658,"count":0}],"isBlockCoverage":false},{"functionName":"assertMetaProperty","ranges":[{"startOffset":22660,"endOffset":22741,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassMethod","ranges":[{"startOffset":22743,"endOffset":22822,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectPattern","ranges":[{"startOffset":22824,"endOffset":22907,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadElement","ranges":[{"startOffset":22909,"endOffset":22992,"count":0}],"isBlockCoverage":false},{"functionName":"assertSuper","ranges":[{"startOffset":22994,"endOffset":23061,"count":0}],"isBlockCoverage":false},{"functionName":"assertTaggedTemplateExpression","ranges":[{"startOffset":23063,"endOffset":23168,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateElement","ranges":[{"startOffset":23170,"endOffset":23257,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateLiteral","ranges":[{"startOffset":23259,"endOffset":23346,"count":0}],"isBlockCoverage":false},{"functionName":"assertYieldExpression","ranges":[{"startOffset":23348,"endOffset":23435,"count":0}],"isBlockCoverage":false},{"functionName":"assertAwaitExpression","ranges":[{"startOffset":23437,"endOffset":23524,"count":0}],"isBlockCoverage":false},{"functionName":"assertImport","ranges":[{"startOffset":23526,"endOffset":23595,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigIntLiteral","ranges":[{"startOffset":23597,"endOffset":23680,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamespaceSpecifier","ranges":[{"startOffset":23682,"endOffset":23787,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalMemberExpression","ranges":[{"startOffset":23789,"endOffset":23894,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalCallExpression","ranges":[{"startOffset":23896,"endOffset":23997,"count":0}],"isBlockCoverage":false},{"functionName":"assertAnyTypeAnnotation","ranges":[{"startOffset":23999,"endOffset":24090,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayTypeAnnotation","ranges":[{"startOffset":24092,"endOffset":24187,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanTypeAnnotation","ranges":[{"startOffset":24189,"endOffset":24288,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteralTypeAnnotation","ranges":[{"startOffset":24290,"endOffset":24403,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteralTypeAnnotation","ranges":[{"startOffset":24405,"endOffset":24512,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassImplements","ranges":[{"startOffset":24514,"endOffset":24601,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareClass","ranges":[{"startOffset":24603,"endOffset":24684,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareFunction","ranges":[{"startOffset":24686,"endOffset":24773,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareInterface","ranges":[{"startOffset":24775,"endOffset":24864,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModule","ranges":[{"startOffset":24866,"endOffset":24949,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModuleExports","ranges":[{"startOffset":24951,"endOffset":25048,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareTypeAlias","ranges":[{"startOffset":25050,"endOffset":25139,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareOpaqueType","ranges":[{"startOffset":25141,"endOffset":25232,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareVariable","ranges":[{"startOffset":25234,"endOffset":25321,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportDeclaration","ranges":[{"startOffset":25323,"endOffset":25428,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportAllDeclaration","ranges":[{"startOffset":25430,"endOffset":25541,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaredPredicate","ranges":[{"startOffset":25543,"endOffset":25634,"count":0}],"isBlockCoverage":false},{"functionName":"assertExistsTypeAnnotation","ranges":[{"startOffset":25636,"endOffset":25733,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeAnnotation","ranges":[{"startOffset":25735,"endOffset":25836,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeParam","ranges":[{"startOffset":25838,"endOffset":25929,"count":0}],"isBlockCoverage":false},{"functionName":"assertGenericTypeAnnotation","ranges":[{"startOffset":25931,"endOffset":26030,"count":0}],"isBlockCoverage":false},{"functionName":"assertInferredPredicate","ranges":[{"startOffset":26032,"endOffset":26123,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceExtends","ranges":[{"startOffset":26125,"endOffset":26214,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceDeclaration","ranges":[{"startOffset":26216,"endOffset":26313,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceTypeAnnotation","ranges":[{"startOffset":26315,"endOffset":26418,"count":0}],"isBlockCoverage":false},{"functionName":"assertIntersectionTypeAnnotation","ranges":[{"startOffset":26420,"endOffset":26529,"count":0}],"isBlockCoverage":false},{"functionName":"assertMixedTypeAnnotation","ranges":[{"startOffset":26531,"endOffset":26626,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyTypeAnnotation","ranges":[{"startOffset":26628,"endOffset":26723,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullableTypeAnnotation","ranges":[{"startOffset":26725,"endOffset":26826,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteralTypeAnnotation","ranges":[{"startOffset":26828,"endOffset":26939,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberTypeAnnotation","ranges":[{"startOffset":26941,"endOffset":27038,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeAnnotation","ranges":[{"startOffset":27040,"endOffset":27137,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeInternalSlot","ranges":[{"startOffset":27139,"endOffset":27240,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeCallProperty","ranges":[{"startOffset":27242,"endOffset":27343,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeIndexer","ranges":[{"startOffset":27345,"endOffset":27436,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeProperty","ranges":[{"startOffset":27438,"endOffset":27531,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeSpreadProperty","ranges":[{"startOffset":27533,"endOffset":27638,"count":0}],"isBlockCoverage":false},{"functionName":"assertOpaqueType","ranges":[{"startOffset":27640,"endOffset":27717,"count":0}],"isBlockCoverage":false},{"functionName":"assertQualifiedTypeIdentifier","ranges":[{"startOffset":27719,"endOffset":27822,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteralTypeAnnotation","ranges":[{"startOffset":27824,"endOffset":27935,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringTypeAnnotation","ranges":[{"startOffset":27937,"endOffset":28034,"count":0}],"isBlockCoverage":false},{"functionName":"assertSymbolTypeAnnotation","ranges":[{"startOffset":28036,"endOffset":28133,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisTypeAnnotation","ranges":[{"startOffset":28135,"endOffset":28228,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleTypeAnnotation","ranges":[{"startOffset":28230,"endOffset":28325,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeofTypeAnnotation","ranges":[{"startOffset":28327,"endOffset":28424,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAlias","ranges":[{"startOffset":28426,"endOffset":28501,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAnnotation","ranges":[{"startOffset":28503,"endOffset":28588,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeCastExpression","ranges":[{"startOffset":28590,"endOffset":28683,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameter","ranges":[{"startOffset":28685,"endOffset":28768,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterDeclaration","ranges":[{"startOffset":28770,"endOffset":28875,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterInstantiation","ranges":[{"startOffset":28877,"endOffset":28986,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnionTypeAnnotation","ranges":[{"startOffset":28988,"endOffset":29083,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariance","ranges":[{"startOffset":29085,"endOffset":29158,"count":0}],"isBlockCoverage":false},{"functionName":"assertVoidTypeAnnotation","ranges":[{"startOffset":29160,"endOffset":29253,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDeclaration","ranges":[{"startOffset":29255,"endOffset":29342,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanBody","ranges":[{"startOffset":29344,"endOffset":29431,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberBody","ranges":[{"startOffset":29433,"endOffset":29518,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringBody","ranges":[{"startOffset":29520,"endOffset":29605,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumSymbolBody","ranges":[{"startOffset":29607,"endOffset":29692,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanMember","ranges":[{"startOffset":29694,"endOffset":29785,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberMember","ranges":[{"startOffset":29787,"endOffset":29876,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringMember","ranges":[{"startOffset":29878,"endOffset":29967,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDefaultedMember","ranges":[{"startOffset":29969,"endOffset":30064,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXAttribute","ranges":[{"startOffset":30066,"endOffset":30147,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingElement","ranges":[{"startOffset":30149,"endOffset":30240,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXElement","ranges":[{"startOffset":30242,"endOffset":30319,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXEmptyExpression","ranges":[{"startOffset":30321,"endOffset":30414,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXExpressionContainer","ranges":[{"startOffset":30416,"endOffset":30517,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadChild","ranges":[{"startOffset":30519,"endOffset":30604,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXIdentifier","ranges":[{"startOffset":30606,"endOffset":30689,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXMemberExpression","ranges":[{"startOffset":30691,"endOffset":30786,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXNamespacedName","ranges":[{"startOffset":30788,"endOffset":30879,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningElement","ranges":[{"startOffset":30881,"endOffset":30972,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadAttribute","ranges":[{"startOffset":30974,"endOffset":31067,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXText","ranges":[{"startOffset":31069,"endOffset":31140,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXFragment","ranges":[{"startOffset":31142,"endOffset":31221,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningFragment","ranges":[{"startOffset":31223,"endOffset":31316,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingFragment","ranges":[{"startOffset":31318,"endOffset":31411,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoop","ranges":[{"startOffset":31413,"endOffset":31478,"count":0}],"isBlockCoverage":false},{"functionName":"assertPlaceholder","ranges":[{"startOffset":31480,"endOffset":31559,"count":0}],"isBlockCoverage":false},{"functionName":"assertV8IntrinsicIdentifier","ranges":[{"startOffset":31561,"endOffset":31660,"count":0}],"isBlockCoverage":false},{"functionName":"assertArgumentPlaceholder","ranges":[{"startOffset":31662,"endOffset":31757,"count":0}],"isBlockCoverage":false},{"functionName":"assertBindExpression","ranges":[{"startOffset":31759,"endOffset":31844,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassProperty","ranges":[{"startOffset":31846,"endOffset":31929,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineTopicExpression","ranges":[{"startOffset":31931,"endOffset":32034,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineBareFunction","ranges":[{"startOffset":32036,"endOffset":32133,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelinePrimaryTopicReference","ranges":[{"startOffset":32135,"endOffset":32250,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateProperty","ranges":[{"startOffset":32252,"endOffset":32349,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateMethod","ranges":[{"startOffset":32351,"endOffset":32444,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportAttribute","ranges":[{"startOffset":32446,"endOffset":32533,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecorator","ranges":[{"startOffset":32535,"endOffset":32610,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoExpression","ranges":[{"startOffset":32612,"endOffset":32693,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultSpecifier","ranges":[{"startOffset":32695,"endOffset":32796,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivateName","ranges":[{"startOffset":32798,"endOffset":32877,"count":0}],"isBlockCoverage":false},{"functionName":"assertRecordExpression","ranges":[{"startOffset":32879,"endOffset":32968,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleExpression","ranges":[{"startOffset":32970,"endOffset":33057,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecimalLiteral","ranges":[{"startOffset":33059,"endOffset":33144,"count":0}],"isBlockCoverage":false},{"functionName":"assertStaticBlock","ranges":[{"startOffset":33146,"endOffset":33225,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParameterProperty","ranges":[{"startOffset":33227,"endOffset":33322,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareFunction","ranges":[{"startOffset":33324,"endOffset":33415,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareMethod","ranges":[{"startOffset":33417,"endOffset":33504,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSQualifiedName","ranges":[{"startOffset":33506,"endOffset":33593,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSCallSignatureDeclaration","ranges":[{"startOffset":33595,"endOffset":33704,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructSignatureDeclaration","ranges":[{"startOffset":33706,"endOffset":33825,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSPropertySignature","ranges":[{"startOffset":33827,"endOffset":33922,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMethodSignature","ranges":[{"startOffset":33924,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexSignature","ranges":[{"startOffset":34017,"endOffset":34106,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAnyKeyword","ranges":[{"startOffset":34108,"endOffset":34189,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBooleanKeyword","ranges":[{"startOffset":34191,"endOffset":34280,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBigIntKeyword","ranges":[{"startOffset":34282,"endOffset":34369,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntrinsicKeyword","ranges":[{"startOffset":34371,"endOffset":34464,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNeverKeyword","ranges":[{"startOffset":34466,"endOffset":34551,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNullKeyword","ranges":[{"startOffset":34553,"endOffset":34636,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNumberKeyword","ranges":[{"startOffset":34638,"endOffset":34725,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSObjectKeyword","ranges":[{"startOffset":34727,"endOffset":34814,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSStringKeyword","ranges":[{"startOffset":34816,"endOffset":34903,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSSymbolKeyword","ranges":[{"startOffset":34905,"endOffset":34992,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUndefinedKeyword","ranges":[{"startOffset":34994,"endOffset":35087,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnknownKeyword","ranges":[{"startOffset":35089,"endOffset":35178,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSVoidKeyword","ranges":[{"startOffset":35180,"endOffset":35263,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSThisType","ranges":[{"startOffset":35265,"endOffset":35342,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSFunctionType","ranges":[{"startOffset":35344,"endOffset":35429,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructorType","ranges":[{"startOffset":35431,"endOffset":35522,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeReference","ranges":[{"startOffset":35524,"endOffset":35611,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypePredicate","ranges":[{"startOffset":35613,"endOffset":35700,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeQuery","ranges":[{"startOffset":35702,"endOffset":35781,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeLiteral","ranges":[{"startOffset":35783,"endOffset":35866,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSArrayType","ranges":[{"startOffset":35868,"endOffset":35947,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTupleType","ranges":[{"startOffset":35949,"endOffset":36028,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSOptionalType","ranges":[{"startOffset":36030,"endOffset":36115,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSRestType","ranges":[{"startOffset":36117,"endOffset":36194,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamedTupleMember","ranges":[{"startOffset":36196,"endOffset":36289,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnionType","ranges":[{"startOffset":36291,"endOffset":36370,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntersectionType","ranges":[{"startOffset":36372,"endOffset":36465,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConditionalType","ranges":[{"startOffset":36467,"endOffset":36558,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInferType","ranges":[{"startOffset":36560,"endOffset":36639,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParenthesizedType","ranges":[{"startOffset":36641,"endOffset":36736,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeOperator","ranges":[{"startOffset":36738,"endOffset":36823,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexedAccessType","ranges":[{"startOffset":36825,"endOffset":36920,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMappedType","ranges":[{"startOffset":36922,"endOffset":37003,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSLiteralType","ranges":[{"startOffset":37005,"endOffset":37088,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExpressionWithTypeArguments","ranges":[{"startOffset":37090,"endOffset":37205,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceDeclaration","ranges":[{"startOffset":37207,"endOffset":37308,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceBody","ranges":[{"startOffset":37310,"endOffset":37397,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAliasDeclaration","ranges":[{"startOffset":37399,"endOffset":37500,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAsExpression","ranges":[{"startOffset":37502,"endOffset":37587,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAssertion","ranges":[{"startOffset":37589,"endOffset":37676,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumDeclaration","ranges":[{"startOffset":37678,"endOffset":37769,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumMember","ranges":[{"startOffset":37771,"endOffset":37852,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleDeclaration","ranges":[{"startOffset":37854,"endOffset":37949,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleBlock","ranges":[{"startOffset":37951,"endOffset":38034,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportType","ranges":[{"startOffset":38036,"endOffset":38117,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportEqualsDeclaration","ranges":[{"startOffset":38119,"endOffset":38226,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExternalModuleReference","ranges":[{"startOffset":38228,"endOffset":38335,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNonNullExpression","ranges":[{"startOffset":38337,"endOffset":38432,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExportAssignment","ranges":[{"startOffset":38434,"endOffset":38527,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamespaceExportDeclaration","ranges":[{"startOffset":38529,"endOffset":38642,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAnnotation","ranges":[{"startOffset":38644,"endOffset":38733,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterInstantiation","ranges":[{"startOffset":38735,"endOffset":38848,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterDeclaration","ranges":[{"startOffset":38850,"endOffset":38959,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameter","ranges":[{"startOffset":38961,"endOffset":39048,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpression","ranges":[{"startOffset":39050,"endOffset":39127,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinary","ranges":[{"startOffset":39129,"endOffset":39198,"count":0}],"isBlockCoverage":false},{"functionName":"assertScopable","ranges":[{"startOffset":39200,"endOffset":39273,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockParent","ranges":[{"startOffset":39275,"endOffset":39354,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlock","ranges":[{"startOffset":39356,"endOffset":39423,"count":0}],"isBlockCoverage":false},{"functionName":"assertStatement","ranges":[{"startOffset":39425,"endOffset":39500,"count":0}],"isBlockCoverage":false},{"functionName":"assertTerminatorless","ranges":[{"startOffset":39502,"endOffset":39587,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompletionStatement","ranges":[{"startOffset":39589,"endOffset":39684,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditional","ranges":[{"startOffset":39686,"endOffset":39765,"count":0}],"isBlockCoverage":false},{"functionName":"assertLoop","ranges":[{"startOffset":39767,"endOffset":39832,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhile","ranges":[{"startOffset":39834,"endOffset":39901,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionWrapper","ranges":[{"startOffset":39903,"endOffset":39994,"count":0}],"isBlockCoverage":false},{"functionName":"assertFor","ranges":[{"startOffset":39996,"endOffset":40059,"count":0}],"isBlockCoverage":false},{"functionName":"assertForXStatement","ranges":[{"startOffset":40061,"endOffset":40144,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":40146,"endOffset":40219,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionParent","ranges":[{"startOffset":40221,"endOffset":40306,"count":0}],"isBlockCoverage":false},{"functionName":"assertPureish","ranges":[{"startOffset":40308,"endOffset":40379,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaration","ranges":[{"startOffset":40381,"endOffset":40460,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternLike","ranges":[{"startOffset":40462,"endOffset":40541,"count":0}],"isBlockCoverage":false},{"functionName":"assertLVal","ranges":[{"startOffset":40543,"endOffset":40608,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEntityName","ranges":[{"startOffset":40610,"endOffset":40691,"count":0}],"isBlockCoverage":false},{"functionName":"assertLiteral","ranges":[{"startOffset":40693,"endOffset":40764,"count":0}],"isBlockCoverage":false},{"functionName":"assertImmutable","ranges":[{"startOffset":40766,"endOffset":40841,"count":0}],"isBlockCoverage":false},{"functionName":"assertUserWhitespacable","ranges":[{"startOffset":40843,"endOffset":40934,"count":0}],"isBlockCoverage":false},{"functionName":"assertMethod","ranges":[{"startOffset":40936,"endOffset":41005,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMember","ranges":[{"startOffset":41007,"endOffset":41088,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":41090,"endOffset":41163,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryLike","ranges":[{"startOffset":41165,"endOffset":41240,"count":0}],"isBlockCoverage":false},{"functionName":"assertPattern","ranges":[{"startOffset":41242,"endOffset":41313,"count":0}],"isBlockCoverage":false},{"functionName":"assertClass","ranges":[{"startOffset":41315,"endOffset":41382,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleDeclaration","ranges":[{"startOffset":41384,"endOffset":41475,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDeclaration","ranges":[{"startOffset":41477,"endOffset":41568,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleSpecifier","ranges":[{"startOffset":41570,"endOffset":41657,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlow","ranges":[{"startOffset":41659,"endOffset":41724,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowType","ranges":[{"startOffset":41726,"endOffset":41799,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowBaseAnnotation","ranges":[{"startOffset":41801,"endOffset":41894,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowDeclaration","ranges":[{"startOffset":41896,"endOffset":41983,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowPredicate","ranges":[{"startOffset":41985,"endOffset":42068,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBody","ranges":[{"startOffset":42070,"endOffset":42143,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumMember","ranges":[{"startOffset":42145,"endOffset":42222,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSX","ranges":[{"startOffset":42224,"endOffset":42287,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivate","ranges":[{"startOffset":42289,"endOffset":42360,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeElement","ranges":[{"startOffset":42362,"endOffset":42445,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSType","ranges":[{"startOffset":42447,"endOffset":42516,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBaseType","ranges":[{"startOffset":42518,"endOffset":42595,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteral","ranges":[{"startOffset":42597,"endOffset":42763,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegexLiteral","ranges":[{"startOffset":42765,"endOffset":42927,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestProperty","ranges":[{"startOffset":42929,"endOffset":43089,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadProperty","ranges":[{"startOffset":43091,"endOffset":43259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"640","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeAnnotationBasedOnTypeof","ranges":[{"startOffset":177,"endOffset":995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":605,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":274,"endOffset":369,"count":1},{"startOffset":348,"endOffset":366,"count":0}],"isBlockCoverage":true},{"functionName":"createFlowUnionType","ranges":[{"startOffset":371,"endOffset":605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":true},{"functionName":"getQualifiedName","ranges":[{"startOffset":178,"endOffset":330,"count":0}],"isBlockCoverage":false},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":332,"endOffset":1763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"643","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":675,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":278,"endOffset":373,"count":1},{"startOffset":352,"endOffset":370,"count":0}],"isBlockCoverage":true},{"functionName":"createTSUnionType","ranges":[{"startOffset":375,"endOffset":675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"644","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1047,"count":1}],"isBlockCoverage":true},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":178,"endOffset":1047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"645","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/generated/uppercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34315,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":300,"endOffset":357,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":442,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":584,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":719,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":850,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":986,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1120,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1254,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1385,"endOffset":1433,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1523,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1667,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1807,"endOffset":1861,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1946,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2082,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2221,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2350,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2474,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2606,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2743,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2886,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3020,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3147,"endOffset":3195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3280,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3415,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3548,"endOffset":3599,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3679,"endOffset":3727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3810,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3943,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4079,"endOffset":4133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4218,"endOffset":4271,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4353,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4479,"endOffset":4523,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4608,"endOffset":4661,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4742,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4874,"endOffset":4925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5005,"endOffset":5053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5137,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5276,"endOffset":5331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5423,"endOffset":5483,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5562,"endOffset":5609,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5693,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5828,"endOffset":5879,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5962,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6094,"endOffset":6143,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6227,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6364,"endOffset":6417,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6505,"endOffset":6561,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6648,"endOffset":6703,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6786,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6919,"endOffset":6969,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7055,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7190,"endOffset":7239,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7331,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7469,"endOffset":7515,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7599,"endOffset":7651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7736,"endOffset":7789,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7878,"endOffset":7935,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8028,"endOffset":8089,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8180,"endOffset":8239,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8323,"endOffset":8375,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8458,"endOffset":8509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8595,"endOffset":8649,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8740,"endOffset":8799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8892,"endOffset":8953,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9037,"endOffset":9089,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9170,"endOffset":9219,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9299,"endOffset":9347,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9429,"endOffset":9479,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9561,"endOffset":9611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9685,"endOffset":9727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9820,"endOffset":9881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9965,"endOffset":10017,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10101,"endOffset":10153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10237,"endOffset":10289,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10373,"endOffset":10425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10500,"endOffset":10543,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10625,"endOffset":10675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10768,"endOffset":10829,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10922,"endOffset":10983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11074,"endOffset":11133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11219,"endOffset":11273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11361,"endOffset":11417,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11507,"endOffset":11565,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11662,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11821,"endOffset":11883,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11967,"endOffset":12019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12100,"endOffset":12149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12233,"endOffset":12285,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12370,"endOffset":12423,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12505,"endOffset":12555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12644,"endOffset":12701,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12786,"endOffset":12839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12925,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13063,"endOffset":13115,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13208,"endOffset":13269,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13365,"endOffset":13429,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13515,"endOffset":13569,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13658,"endOffset":13715,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13806,"endOffset":13865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13951,"endOffset":14005,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14095,"endOffset":14153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14239,"endOffset":14293,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14378,"endOffset":14431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14520,"endOffset":14577,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14669,"endOffset":14729,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14824,"endOffset":14887,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14975,"endOffset":15031,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15119,"endOffset":15175,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15266,"endOffset":15325,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15421,"endOffset":15485,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15574,"endOffset":15631,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15720,"endOffset":15777,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15868,"endOffset":15927,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16018,"endOffset":16077,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16163,"endOffset":16217,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16304,"endOffset":16359,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16452,"endOffset":16513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16592,"endOffset":16639,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16731,"endOffset":16791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16887,"endOffset":16951,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17040,"endOffset":17097,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17186,"endOffset":17243,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17330,"endOffset":17385,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17473,"endOffset":17529,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17618,"endOffset":17675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17753,"endOffset":17799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17882,"endOffset":17933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18020,"endOffset":18075,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18157,"endOffset":18207,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18300,"endOffset":18361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18456,"endOffset":18519,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18607,"endOffset":18663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18740,"endOffset":18785,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18872,"endOffset":18927,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19011,"endOffset":19063,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19147,"endOffset":19199,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19282,"endOffset":19333,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19416,"endOffset":19467,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19550,"endOffset":19601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19687,"endOffset":19741,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19826,"endOffset":19879,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19964,"endOffset":20017,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20105,"endOffset":20161,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20242,"endOffset":20291,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20377,"endOffset":20431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20510,"endOffset":20557,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20644,"endOffset":20699,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20790,"endOffset":20849,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20932,"endOffset":20983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21065,"endOffset":21115,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21203,"endOffset":21259,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21345,"endOffset":21399,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21485,"endOffset":21539,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21626,"endOffset":21681,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21757,"endOffset":21801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21881,"endOffset":21929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22016,"endOffset":22071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22158,"endOffset":22213,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22286,"endOffset":22327,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22407,"endOffset":22455,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22545,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22691,"endOffset":22747,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22830,"endOffset":22881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22963,"endOffset":23013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23105,"endOffset":23165,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23254,"endOffset":23311,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23409,"endOffset":23475,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23564,"endOffset":23621,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23708,"endOffset":23763,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23847,"endOffset":23899,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23977,"endOffset":24023,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24104,"endOffset":24153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24244,"endOffset":24303,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24383,"endOffset":24431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24516,"endOffset":24569,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24653,"endOffset":24705,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24788,"endOffset":24839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24919,"endOffset":24967,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25055,"endOffset":25111,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25197,"endOffset":25251,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25335,"endOffset":25387,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25471,"endOffset":25523,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25618,"endOffset":25681,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25781,"endOffset":25849,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25937,"endOffset":25993,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26079,"endOffset":26133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26218,"endOffset":26271,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26352,"endOffset":26401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26486,"endOffset":26539,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26623,"endOffset":26675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26762,"endOffset":26817,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26900,"endOffset":26951,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27033,"endOffset":27083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27167,"endOffset":27219,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27303,"endOffset":27355,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27439,"endOffset":27491,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27575,"endOffset":27627,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27714,"endOffset":27769,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27854,"endOffset":27907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27989,"endOffset":28039,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28118,"endOffset":28165,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28248,"endOffset":28299,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28385,"endOffset":28439,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28523,"endOffset":28575,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28659,"endOffset":28711,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28791,"endOffset":28839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28921,"endOffset":28971,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29051,"endOffset":29099,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29179,"endOffset":29227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29310,"endOffset":29361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29440,"endOffset":29487,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29574,"endOffset":29629,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29709,"endOffset":29757,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29844,"endOffset":29899,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29985,"endOffset":30039,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30119,"endOffset":30167,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30255,"endOffset":30311,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30394,"endOffset":30445,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30533,"endOffset":30589,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30670,"endOffset":30719,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30801,"endOffset":30851,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30949,"endOffset":31015,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31106,"endOffset":31165,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31249,"endOffset":31301,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31392,"endOffset":31451,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31534,"endOffset":31585,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31669,"endOffset":31721,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31807,"endOffset":31861,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31942,"endOffset":31991,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32079,"endOffset":32135,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32217,"endOffset":32267,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32348,"endOffset":32397,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32491,"endOffset":32553,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32647,"endOffset":32709,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32797,"endOffset":32853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32940,"endOffset":32995,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33092,"endOffset":33157,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33242,"endOffset":33295,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33392,"endOffset":33457,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33552,"endOffset":33615,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33699,"endOffset":33751,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33833,"endOffset":33883,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33964,"endOffset":34013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34094,"endOffset":34143,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34226,"endOffset":34277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2575,"count":1}],"isBlockCoverage":true},{"functionName":"cloneIfNode","ranges":[{"startOffset":277,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIfNodeOrArray","ranges":[{"startOffset":435,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNode","ranges":[{"startOffset":634,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCommentsWithoutLoc","ranges":[{"startOffset":2294,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCloneComments","ranges":[{"startOffset":2440,"endOffset":2575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":340,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":246,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":269,"endOffset":340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":176,"endOffset":271,"count":1},{"startOffset":250,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":273,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":260,"endOffset":278,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeepWithoutLoc","ranges":[{"startOffset":283,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":256,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"cloneWithoutLoc","ranges":[{"startOffset":279,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/addComment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":453,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":255,"endOffset":273,"count":0}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":278,"endOffset":453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/addComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":448,"count":1}],"isBlockCoverage":true},{"functionName":"addComments","ranges":[{"startOffset":112,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritInnerComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":264,"endOffset":282,"count":0}],"isBlockCoverage":true},{"functionName":"inheritInnerComments","ranges":[{"startOffset":287,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/utils/inherit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"inherit","ranges":[{"startOffset":108,"endOffset":267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritLeadingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":398,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":266,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"inheritLeadingComments","ranges":[{"startOffset":289,"endOffset":398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritsComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":391,"endOffset":486,"count":3},{"startOffset":465,"endOffset":483,"count":0}],"isBlockCoverage":true},{"functionName":"inheritsComments","ranges":[{"startOffset":488,"endOffset":712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritTrailingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":267,"endOffset":285,"count":0}],"isBlockCoverage":true},{"functionName":"inheritTrailingComments","ranges":[{"startOffset":290,"endOffset":401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/removeComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"removeComments","ranges":[{"startOffset":158,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/constants/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6598,"count":1}],"isBlockCoverage":true}]},{"scriptId":"660","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/ensureBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":376,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"ensureBlock","ranges":[{"startOffset":271,"endOffset":376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"toBlock","ranges":[{"startOffset":215,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":196,"endOffset":291,"count":1},{"startOffset":270,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"toBindingIdentifierName","ranges":[{"startOffset":293,"endOffset":459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":207,"endOffset":302,"count":1},{"startOffset":281,"endOffset":299,"count":0}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":304,"endOffset":642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toComputedKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":221,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":699,"count":1}],"isBlockCoverage":true},{"functionName":"toExpression","ranges":[{"startOffset":219,"endOffset":699,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toKeyAlias.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1158,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":341,"endOffset":436,"count":2},{"startOffset":415,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"toKeyAlias","ranges":[{"startOffset":438,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias.increment","ranges":[{"startOffset":1016,"endOffset":1157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":283,"endOffset":378,"count":2},{"startOffset":357,"endOffset":375,"count":0}],"isBlockCoverage":true},{"functionName":"removePropertiesDeep","ranges":[{"startOffset":380,"endOffset":509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/traverse/traverseFast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"traverseFast","ranges":[{"startOffset":160,"endOffset":586,"count":166},{"startOffset":216,"endOffset":223,"count":60},{"startOffset":223,"endOffset":290,"count":106},{"startOffset":290,"endOffset":297,"count":0},{"startOffset":297,"endOffset":312,"count":106},{"startOffset":312,"endOffset":317,"count":14},{"startOffset":433,"endOffset":525,"count":46},{"startOffset":469,"endOffset":519,"count":32},{"startOffset":525,"endOffset":580,"count":120},{"startOffset":584,"endOffset":585,"count":106}],"isBlockCoverage":true}]},{"scriptId":"669","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/removeProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":765,"count":1}],"isBlockCoverage":true},{"functionName":"removeProperties","ranges":[{"startOffset":333,"endOffset":765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toSequenceExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":293,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"toSequenceExpression","ranges":[{"startOffset":316,"endOffset":626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2497,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":408,"endOffset":503,"count":2},{"startOffset":482,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"gatherSequenceExpressions","ranges":[{"startOffset":505,"endOffset":2497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2531,"count":1}],"isBlockCoverage":true},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":176,"endOffset":1309,"count":5},{"startOffset":330,"endOffset":1292,"count":10},{"startOffset":376,"endOffset":385,"count":0},{"startOffset":483,"endOffset":661,"count":5},{"startOffset":596,"endOffset":638,"count":0},{"startOffset":661,"endOffset":711,"count":5},{"startOffset":711,"endOffset":757,"count":0},{"startOffset":759,"endOffset":887,"count":0},{"startOffset":887,"endOffset":1105,"count":5},{"startOffset":963,"endOffset":1018,"count":0},{"startOffset":1072,"endOffset":1099,"count":0},{"startOffset":1105,"endOffset":1288,"count":5}],"isBlockCoverage":true}]},{"scriptId":"673","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toStatement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":984,"count":1}],"isBlockCoverage":true},{"functionName":"toStatement","ranges":[{"startOffset":271,"endOffset":984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/valueToNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2352,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":401,"endOffset":496,"count":3},{"startOffset":469,"endOffset":474,"count":1},{"startOffset":475,"endOffset":493,"count":2}],"isBlockCoverage":true},{"functionName":"valueToNode","ranges":[{"startOffset":555,"endOffset":2352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1},{"startOffset":602,"endOffset":616,"count":0}],"isBlockCoverage":true}]},{"scriptId":"676","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":511,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsRegExp","ranges":[{"startOffset":382,"endOffset":478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"appendToMemberExpression","ranges":[{"startOffset":177,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":1},{"startOffset":316,"endOffset":334,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":339,"endOffset":816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"prependToMemberExpression","ranges":[{"startOffset":178,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":493,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":197,"endOffset":292,"count":1},{"startOffset":271,"endOffset":289,"count":0}],"isBlockCoverage":true},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":366,"endOffset":493,"count":5}],"isBlockCoverage":true}]},{"scriptId":"681","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/traverse/traverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1198,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":156,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"traverseSimpleImpl","ranges":[{"startOffset":391,"endOffset":1198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isBinding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":212,"endOffset":307,"count":1},{"startOffset":286,"endOffset":304,"count":0}],"isBlockCoverage":true},{"functionName":"isBinding","ranges":[{"startOffset":309,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"683","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isBlockScoped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isBlockScoped","ranges":[{"startOffset":311,"endOffset":470,"count":44}],"isBlockCoverage":true}]},{"scriptId":"684","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isLet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":334,"count":1}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":191,"endOffset":334,"count":44},{"startOffset":267,"endOffset":331,"count":8},{"startOffset":291,"endOffset":330,"count":0}],"isBlockCoverage":true}]},{"scriptId":"685","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isImmutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":311,"endOffset":567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isNodesEquivalent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"isNodesEquivalent","ranges":[{"startOffset":165,"endOffset":1465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isReferenced.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2386,"count":1}],"isBlockCoverage":true},{"functionName":"isReferenced","ranges":[{"startOffset":113,"endOffset":2386,"count":11},{"startOffset":193,"endOffset":217,"count":4},{"startOffset":222,"endOffset":249,"count":4},{"startOffset":254,"endOffset":404,"count":4},{"startOffset":323,"endOffset":404,"count":2},{"startOffset":410,"endOffset":471,"count":4},{"startOffset":477,"endOffset":543,"count":0},{"startOffset":549,"endOffset":588,"count":0},{"startOffset":594,"endOffset":613,"count":0},{"startOffset":618,"endOffset":644,"count":0},{"startOffset":649,"endOffset":741,"count":0},{"startOffset":747,"endOffset":769,"count":0},{"startOffset":774,"endOffset":795,"count":0},{"startOffset":800,"endOffset":1036,"count":0},{"startOffset":1042,"endOffset":1066,"count":0},{"startOffset":1071,"endOffset":1135,"count":0},{"startOffset":1141,"endOffset":1205,"count":0},{"startOffset":1211,"endOffset":1272,"count":0},{"startOffset":1278,"endOffset":1322,"count":0},{"startOffset":1328,"endOffset":1367,"count":0},{"startOffset":1373,"endOffset":1412,"count":0},{"startOffset":1418,"endOffset":1440,"count":0},{"startOffset":1445,"endOffset":1490,"count":0},{"startOffset":1496,"endOffset":1523,"count":0},{"startOffset":1528,"endOffset":1574,"count":0},{"startOffset":1580,"endOffset":1612,"count":0},{"startOffset":1617,"endOffset":1667,"count":0},{"startOffset":1673,"endOffset":1826,"count":0},{"startOffset":1832,"endOffset":1862,"count":0},{"startOffset":1867,"endOffset":1899,"count":0},{"startOffset":1904,"endOffset":1947,"count":2},{"startOffset":1953,"endOffset":1993,"count":0},{"startOffset":1999,"endOffset":2020,"count":0},{"startOffset":2025,"endOffset":2065,"count":0},{"startOffset":2071,"endOffset":2111,"count":0},{"startOffset":2117,"endOffset":2177,"count":0},{"startOffset":2183,"endOffset":2236,"count":0},{"startOffset":2242,"endOffset":2364,"count":0},{"startOffset":2368,"endOffset":2385,"count":1}],"isBlockCoverage":true}]},{"scriptId":"688","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isScope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"isScope","ranges":[{"startOffset":150,"endOffset":523,"count":158},{"startOffset":228,"endOffset":308,"count":0},{"startOffset":310,"endOffset":333,"count":0},{"startOffset":373,"endOffset":453,"count":0},{"startOffset":455,"endOffset":477,"count":0}],"isBlockCoverage":true}]},{"scriptId":"689","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isSpecifierDefault.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"isSpecifierDefault","ranges":[{"startOffset":161,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"690","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isValidES3Identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"isValidES3Identifier","ranges":[{"startOffset":594,"endOffset":719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"691","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isVar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"isVar","ranges":[{"startOffset":191,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"694","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":846,"endOffset":1451,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":246}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":1},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":1},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6029,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6003,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1020,"endOffset":1298,"count":1},{"startOffset":1116,"endOffset":1221,"count":5}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1468,"endOffset":3404,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1550,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3114,"endOffset":3193,"count":219},{"startOffset":3177,"endOffset":3193,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3203,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3407,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3771,"endOffset":4349,"count":1},{"startOffset":3944,"endOffset":3956,"count":0},{"startOffset":4105,"endOffset":4342,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4435,"endOffset":4660,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":4803,"endOffset":5190,"count":219},{"startOffset":4865,"endOffset":4886,"count":0},{"startOffset":4969,"endOffset":5039,"count":0},{"startOffset":5101,"endOffset":5170,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespace","ranges":[{"startOffset":5308,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5533,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5761,"endOffset":5937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/scope/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24393,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":448,"endOffset":634,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":636,"endOffset":1379,"count":1},{"startOffset":718,"endOffset":791,"count":0},{"startOffset":793,"endOffset":889,"count":0},{"startOffset":891,"endOffset":1019,"count":0},{"startOffset":1042,"endOffset":1378,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1381,"endOffset":1476,"count":4},{"startOffset":1449,"endOffset":1454,"count":3},{"startOffset":1455,"endOffset":1473,"count":1}],"isBlockCoverage":true},{"functionName":"gatherNodeParts","ranges":[{"startOffset":1478,"endOffset":4730,"count":0}],"isBlockCoverage":false},{"functionName":"For","ranges":[{"startOffset":4761,"endOffset":5041,"count":0}],"isBlockCoverage":false},{"functionName":"Declaration","ranges":[{"startOffset":5046,"endOffset":5332,"count":5},{"startOffset":5096,"endOffset":5103,"count":4},{"startOffset":5103,"endOffset":5140,"count":1},{"startOffset":5140,"endOffset":5182,"count":0},{"startOffset":5184,"endOffset":5205,"count":0},{"startOffset":5205,"endOffset":5289,"count":1}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":5337,"endOffset":5409,"count":3}],"isBlockCoverage":true},{"functionName":"ForXStatement","ranges":[{"startOffset":5414,"endOffset":5582,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":5612,"endOffset":6266,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":6276,"endOffset":6419,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6424,"endOffset":6497,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":6502,"endOffset":6578,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":6583,"endOffset":6709,"count":0}],"isBlockCoverage":false},{"functionName":"BlockScoped","ranges":[{"startOffset":6714,"endOffset":7086,"count":4},{"startOffset":6791,"endOffset":6812,"count":0},{"startOffset":6929,"endOffset":6944,"count":0},{"startOffset":6946,"endOffset":7082,"count":0}],"isBlockCoverage":true},{"functionName":"Block","ranges":[{"startOffset":7091,"endOffset":7308,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":7313,"endOffset":7381,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":7386,"endOffset":7710,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":7715,"endOffset":7868,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":7903,"endOffset":8252,"count":21},{"startOffset":8029,"endOffset":8037,"count":7},{"startOffset":8038,"endOffset":8051,"count":14},{"startOffset":8063,"endOffset":8091,"count":14},{"startOffset":8091,"endOffset":8251,"count":7}],"isBlockCoverage":true},{"functionName":"get parent","ranges":[{"startOffset":8256,"endOffset":8384,"count":4},{"startOffset":8365,"endOffset":8379,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8311,"endOffset":8327,"count":0}],"isBlockCoverage":false},{"functionName":"get parentBlock","ranges":[{"startOffset":8388,"endOffset":8440,"count":0}],"isBlockCoverage":false},{"functionName":"get hub","ranges":[{"startOffset":8444,"endOffset":8485,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":8489,"endOffset":8583,"count":0}],"isBlockCoverage":false},{"functionName":"generateDeclaredUidIdentifier","ranges":[{"startOffset":8587,"endOffset":8738,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidIdentifier","ranges":[{"startOffset":8742,"endOffset":8824,"count":0}],"isBlockCoverage":false},{"functionName":"generateUid","ranges":[{"startOffset":8828,"endOffset":9260,"count":0}],"isBlockCoverage":false},{"functionName":"_generateUid","ranges":[{"startOffset":9264,"endOffset":9355,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidBasedOnNode","ranges":[{"startOffset":9359,"endOffset":9593,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidIdentifierBasedOnNode","ranges":[{"startOffset":9597,"endOffset":9727,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":9731,"endOffset":10060,"count":0}],"isBlockCoverage":false},{"functionName":"maybeGenerateMemoised","ranges":[{"startOffset":10064,"endOffset":10365,"count":0}],"isBlockCoverage":false},{"functionName":"checkBlockScopedCollisions","ranges":[{"startOffset":10369,"endOffset":10790,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":10794,"endOffset":11048,"count":0}],"isBlockCoverage":false},{"functionName":"_renameFromMap","ranges":[{"startOffset":11052,"endOffset":11187,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":11191,"endOffset":11713,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":11717,"endOffset":12742,"count":0}],"isBlockCoverage":false},{"functionName":"hasLabel","ranges":[{"startOffset":12746,"endOffset":12800,"count":0}],"isBlockCoverage":false},{"functionName":"getLabel","ranges":[{"startOffset":12804,"endOffset":12858,"count":0}],"isBlockCoverage":false},{"functionName":"registerLabel","ranges":[{"startOffset":12862,"endOffset":12936,"count":0}],"isBlockCoverage":false},{"functionName":"registerDeclaration","ranges":[{"startOffset":12940,"endOffset":13952,"count":5},{"startOffset":13003,"endOffset":13042,"count":0},{"startOffset":13082,"endOffset":13150,"count":0},{"startOffset":13190,"endOffset":13356,"count":4},{"startOffset":13356,"endOffset":13948,"count":1},{"startOffset":13393,"endOffset":13441,"count":0},{"startOffset":13639,"endOffset":13948,"count":0}],"isBlockCoverage":true},{"functionName":"buildUndefinedNode","ranges":[{"startOffset":13956,"endOffset":14047,"count":0}],"isBlockCoverage":false},{"functionName":"registerConstantViolation","ranges":[{"startOffset":14051,"endOffset":14272,"count":0}],"isBlockCoverage":false},{"functionName":"registerBinding","ranges":[{"startOffset":14276,"endOffset":15300,"count":5},{"startOffset":14341,"endOffset":14379,"count":0},{"startOffset":14419,"endOffset":14588,"count":0},{"startOffset":14876,"endOffset":15002,"count":0},{"startOffset":15023,"endOffset":15089,"count":0}],"isBlockCoverage":true},{"functionName":"addGlobal","ranges":[{"startOffset":15304,"endOffset":15361,"count":3}],"isBlockCoverage":true},{"functionName":"hasUid","ranges":[{"startOffset":15365,"endOffset":15511,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobal","ranges":[{"startOffset":15515,"endOffset":15667,"count":0}],"isBlockCoverage":false},{"functionName":"hasReference","ranges":[{"startOffset":15671,"endOffset":15750,"count":0}],"isBlockCoverage":false},{"functionName":"isPure","ranges":[{"startOffset":15754,"endOffset":17716,"count":0}],"isBlockCoverage":false},{"functionName":"setData","ranges":[{"startOffset":17720,"endOffset":17776,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":17780,"endOffset":17939,"count":0}],"isBlockCoverage":false},{"functionName":"removeData","ranges":[{"startOffset":17943,"endOffset":18116,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":18120,"endOffset":18208,"count":158},{"startOffset":18151,"endOffset":18204,"count":7}],"isBlockCoverage":true},{"functionName":"crawl","ranges":[{"startOffset":18212,"endOffset":19718,"count":7},{"startOffset":18476,"endOffset":18789,"count":0},{"startOffset":18874,"endOffset":18881,"count":0},{"startOffset":19123,"endOffset":19378,"count":0},{"startOffset":19420,"endOffset":19606,"count":3},{"startOffset":19501,"endOffset":19542,"count":0},{"startOffset":19657,"endOffset":19714,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":19722,"endOffset":20799,"count":0}],"isBlockCoverage":false},{"functionName":"getProgramParent","ranges":[{"startOffset":20803,"endOffset":21010,"count":13},{"startOffset":20927,"endOffset":21009,"count":0}],"isBlockCoverage":true},{"functionName":"getFunctionParent","ranges":[{"startOffset":21014,"endOffset":21198,"count":1},{"startOffset":21109,"endOffset":21140,"count":0}],"isBlockCoverage":true},{"functionName":"getBlockParent","ranges":[{"startOffset":21202,"endOffset":21464,"count":4},{"startOffset":21328,"endOffset":21463,"count":0}],"isBlockCoverage":true},{"functionName":"getAllBindings","ranges":[{"startOffset":21468,"endOffset":21777,"count":0}],"isBlockCoverage":false},{"functionName":"getAllBindingsOfKind","ranges":[{"startOffset":21781,"endOffset":22170,"count":0}],"isBlockCoverage":false},{"functionName":"bindingIdentifierEquals","ranges":[{"startOffset":22174,"endOffset":22268,"count":0}],"isBlockCoverage":false},{"functionName":"getBinding","ranges":[{"startOffset":22272,"endOffset":22690,"count":3},{"startOffset":22414,"endOffset":22616,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnBinding","ranges":[{"startOffset":22694,"endOffset":22751,"count":8}],"isBlockCoverage":true},{"functionName":"getBindingIdentifier","ranges":[{"startOffset":22755,"endOffset":22916,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnBindingIdentifier","ranges":[{"startOffset":22920,"endOffset":23054,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnBinding","ranges":[{"startOffset":23058,"endOffset":23122,"count":0}],"isBlockCoverage":false},{"functionName":"hasBinding","ranges":[{"startOffset":23126,"endOffset":23493,"count":0}],"isBlockCoverage":false},{"functionName":"parentHasBinding","ranges":[{"startOffset":23497,"endOffset":23660,"count":0}],"isBlockCoverage":false},{"functionName":"moveBindingTo","ranges":[{"startOffset":23664,"endOffset":23861,"count":0}],"isBlockCoverage":false},{"functionName":"removeOwnBinding","ranges":[{"startOffset":23865,"endOffset":23925,"count":0}],"isBlockCoverage":false},{"functionName":"removeBinding","ranges":[{"startOffset":23929,"endOffset":24237,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/scope/lib/renamer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4493,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":341,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":529,"endOffset":1272,"count":1},{"startOffset":611,"endOffset":684,"count":0},{"startOffset":686,"endOffset":782,"count":0},{"startOffset":784,"endOffset":912,"count":0},{"startOffset":935,"endOffset":1271,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1274,"endOffset":1369,"count":2},{"startOffset":1348,"endOffset":1366,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1397,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":1529,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression|Declaration|VariableDeclarator","ranges":[{"startOffset":1671,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"Renamer","ranges":[{"startOffset":1967,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromExportDeclaration","ranges":[{"startOffset":2099,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromClassFunctionDeclaration","ranges":[{"startOffset":2480,"endOffset":2879,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromClassFunctionExpression","ranges":[{"startOffset":2883,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":3291,"endOffset":4462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/scope/binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1233,"count":1}],"isBlockCoverage":true},{"functionName":"Binding","ranges":[{"startOffset":125,"endOffset":464,"count":5}],"isBlockCoverage":true},{"functionName":"deoptValue","ranges":[{"startOffset":468,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"setValue","ranges":[{"startOffset":546,"endOffset":655,"count":0}],"isBlockCoverage":false},{"functionName":"clearValue","ranges":[{"startOffset":659,"endOffset":761,"count":5}],"isBlockCoverage":true},{"functionName":"reassign","ranges":[{"startOffset":765,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"reference","ranges":[{"startOffset":934,"endOffset":1115,"count":0}],"isBlockCoverage":false},{"functionName":"dereference","ranges":[{"startOffset":1119,"endOffset":1202,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-split-export-declaration/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3108,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":182,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":370,"endOffset":1113,"count":1},{"startOffset":452,"endOffset":525,"count":0},{"startOffset":527,"endOffset":623,"count":0},{"startOffset":625,"endOffset":753,"count":0},{"startOffset":776,"endOffset":1112,"count":0}],"isBlockCoverage":true},{"functionName":"splitExportDeclaration","ranges":[{"startOffset":1115,"endOffset":3108,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/globals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":58,"count":1}],"isBlockCoverage":true}]},{"scriptId":"702","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":304,"endOffset":355,"count":0}],"isBlockCoverage":false},{"functionName":"clearPath","ranges":[{"startOffset":357,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"clearScope","ranges":[{"startOffset":422,"endOffset":488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2537,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":270,"endOffset":365,"count":2},{"startOffset":344,"endOffset":362,"count":0}],"isBlockCoverage":true},{"functionName":"Generator","ranges":[{"startOffset":412,"endOffset":644,"count":7},{"startOffset":529,"endOffset":565,"count":0}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":648,"endOffset":701,"count":7}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":706,"endOffset":2210,"count":7},{"startOffset":1560,"endOffset":1679,"count":0},{"startOffset":1953,"endOffset":2107,"count":0},{"startOffset":2135,"endOffset":2190,"count":0}],"isBlockCoverage":true},{"functionName":"format.shouldPrintComment","ranges":[{"startOffset":1652,"endOffset":1673,"count":0}],"isBlockCoverage":false},{"functionName":"format.shouldPrintComment","ranges":[{"startOffset":1749,"endOffset":1842,"count":0}],"isBlockCoverage":false},{"functionName":"CodeGenerator","ranges":[{"startOffset":2236,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":2328,"endOffset":2383,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":2428,"endOffset":2537,"count":7}],"isBlockCoverage":true}]},{"scriptId":"704","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1988,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":240,"endOffset":245,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMap","ranges":[{"startOffset":289,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":424,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"getRawMappings","ranges":[{"startOffset":1080,"endOffset":1140,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":1144,"endOffset":1955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"706","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14101,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":2973,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":3991,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":5869,"endOffset":8581,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9016,"endOffset":10610,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":10783,"endOffset":12742,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":12802,"endOffset":13271,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13353,"endOffset":13856,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":13963,"endOffset":14049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10484,"count":1},{"startOffset":6430,"endOffset":6443,"count":0},{"startOffset":6607,"endOffset":6622,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4737,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5862,"endOffset":5942,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5948,"endOffset":5985,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6276,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6446,"endOffset":6553,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6625,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7744,"endOffset":8366,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8819,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9537,"endOffset":9669,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9799,"endOffset":10400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38390,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":770,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2521,"endOffset":2679,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2821,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3039,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3418,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4485,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6535,"endOffset":9285,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10656,"endOffset":12847,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":13229,"endOffset":15039,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15280,"endOffset":15439,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":15506,"endOffset":15682,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":15930,"endOffset":19135,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":19334,"endOffset":20153,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":20308,"endOffset":21187,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":22205,"endOffset":23481,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":23654,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":24137,"endOffset":25665,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":26630,"endOffset":27848,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":29633,"endOffset":31107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31501,"endOffset":31765,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":32436,"endOffset":33615,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":33790,"endOffset":33961,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":34189,"endOffset":34628,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":35243,"endOffset":36153,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":36404,"endOffset":38326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13796,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6745,"endOffset":7170,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7436,"endOffset":7853,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8156,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8751,"endOffset":9090,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9387,"endOffset":9820,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10108,"endOffset":10252,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10496,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11099,"endOffset":11218,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11359,"endOffset":13760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13431,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":355,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":543,"endOffset":1286,"count":3},{"startOffset":625,"endOffset":698,"count":0},{"startOffset":700,"endOffset":796,"count":0},{"startOffset":798,"endOffset":926,"count":0},{"startOffset":949,"endOffset":1285,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1288,"endOffset":1383,"count":1},{"startOffset":1362,"endOffset":1380,"count":0}],"isBlockCoverage":true},{"functionName":"Printer","ranges":[{"startOffset":1566,"endOffset":2058,"count":7},{"startOffset":2006,"endOffset":2011,"count":0}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":2062,"endOffset":2164,"count":7}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":2168,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"dedent","ranges":[{"startOffset":2266,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"semicolon","ranges":[{"startOffset":2364,"endOffset":2458,"count":7}],"isBlockCoverage":true},{"functionName":"rightBrace","ranges":[{"startOffset":2462,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"space","ranges":[{"startOffset":2583,"endOffset":2764,"count":19},{"startOffset":2635,"endOffset":2642,"count":0},{"startOffset":2722,"endOffset":2730,"count":0}],"isBlockCoverage":true},{"functionName":"word","ranges":[{"startOffset":2768,"endOffset":2977,"count":17},{"startOffset":2829,"endOffset":2854,"count":0},{"startOffset":2856,"endOffset":2884,"count":0}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":2981,"endOffset":3204,"count":0}],"isBlockCoverage":false},{"functionName":"token","ranges":[{"startOffset":3208,"endOffset":3477,"count":25},{"startOffset":3242,"endOffset":3263,"count":0},{"startOffset":3282,"endOffset":3303,"count":1},{"startOffset":3322,"endOffset":3343,"count":0},{"startOffset":3362,"endOffset":3386,"count":2},{"startOffset":3388,"endOffset":3416,"count":0}],"isBlockCoverage":true},{"functionName":"newline","ranges":[{"startOffset":3481,"endOffset":3882,"count":14},{"startOffset":3550,"endOffset":3557,"count":0},{"startOffset":3588,"endOffset":3629,"count":0},{"startOffset":3662,"endOffset":3669,"count":0},{"startOffset":3701,"endOffset":3707,"count":0},{"startOffset":3786,"endOffset":3790,"count":0},{"startOffset":3807,"endOffset":3848,"count":7},{"startOffset":3848,"endOffset":3878,"count":8},{"startOffset":3878,"endOffset":3881,"count":7}],"isBlockCoverage":true},{"functionName":"endsWith","ranges":[{"startOffset":3886,"endOffset":3941,"count":98}],"isBlockCoverage":true},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":3945,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"exactSource","ranges":[{"startOffset":4017,"endOffset":4113,"count":10}],"isBlockCoverage":true},{"functionName":"source","ranges":[{"startOffset":4117,"endOffset":4204,"count":0}],"isBlockCoverage":false},{"functionName":"withSource","ranges":[{"startOffset":4208,"endOffset":4311,"count":52}],"isBlockCoverage":true},{"functionName":"_space","ranges":[{"startOffset":4315,"endOffset":4358,"count":19}],"isBlockCoverage":true},{"functionName":"_newline","ranges":[{"startOffset":4362,"endOffset":4408,"count":8}],"isBlockCoverage":true},{"functionName":"_append","ranges":[{"startOffset":4412,"endOffset":4636,"count":76},{"startOffset":4517,"endOffset":4538,"count":34},{"startOffset":4538,"endOffset":4565,"count":42}],"isBlockCoverage":true},{"functionName":"_maybeIndent","ranges":[{"startOffset":4640,"endOffset":4777,"count":76},{"startOffset":4681,"endOffset":4703,"count":0},{"startOffset":4704,"endOffset":4722,"count":0},{"startOffset":4724,"endOffset":4773,"count":0}],"isBlockCoverage":true},{"functionName":"_maybeAddParen","ranges":[{"startOffset":4781,"endOffset":5561,"count":76},{"startOffset":4905,"endOffset":4966,"count":0},{"startOffset":4973,"endOffset":5560,"count":0}],"isBlockCoverage":true},{"functionName":"_catchUp","ranges":[{"startOffset":5565,"endOffset":5865,"count":62},{"startOffset":5628,"endOffset":5660,"count":0},{"startOffset":5661,"endOffset":5667,"count":0},{"startOffset":5691,"endOffset":5699,"count":0},{"startOffset":5700,"endOffset":5710,"count":0},{"startOffset":5721,"endOffset":5861,"count":0}],"isBlockCoverage":true},{"functionName":"_getIndent","ranges":[{"startOffset":5869,"endOffset":5945,"count":0}],"isBlockCoverage":false},{"functionName":"startTerminatorless","ranges":[{"startOffset":5949,"endOffset":6162,"count":0}],"isBlockCoverage":false},{"functionName":"endTerminatorless","ranges":[{"startOffset":6166,"endOffset":6355,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":6359,"endOffset":7574,"count":71},{"startOffset":6396,"endOffset":6403,"count":19},{"startOffset":6403,"endOffset":6472,"count":52},{"startOffset":6472,"endOffset":6513,"count":0},{"startOffset":6513,"endOffset":6579,"count":52},{"startOffset":6579,"endOffset":6753,"count":0},{"startOffset":6753,"endOffset":6906,"count":52},{"startOffset":6906,"endOffset":6918,"count":0},{"startOffset":7033,"endOffset":7070,"count":0},{"startOffset":7071,"endOffset":7084,"count":0},{"startOffset":7085,"endOffset":7112,"count":0},{"startOffset":7114,"endOffset":7147,"count":0},{"startOffset":7147,"endOffset":7170,"count":52},{"startOffset":7170,"endOffset":7186,"count":0},{"startOffset":7186,"endOffset":7261,"count":52},{"startOffset":7261,"endOffset":7278,"count":45},{"startOffset":7279,"endOffset":7285,"count":14},{"startOffset":7286,"endOffset":7296,"count":38},{"startOffset":7454,"endOffset":7470,"count":0},{"startOffset":7470,"endOffset":7573,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7332,"endOffset":7389,"count":52}],"isBlockCoverage":true},{"functionName":"_maybeAddAuxComment","ranges":[{"startOffset":7578,"endOffset":7748,"count":108},{"startOffset":7658,"endOffset":7688,"count":0}],"isBlockCoverage":true},{"functionName":"_printAuxBeforeComment","ranges":[{"startOffset":7752,"endOffset":8051,"count":0}],"isBlockCoverage":false},{"functionName":"_printAuxAfterComment","ranges":[{"startOffset":8055,"endOffset":8354,"count":108},{"startOffset":8132,"endOffset":8350,"count":0}],"isBlockCoverage":true},{"functionName":"getPossibleRaw","ranges":[{"startOffset":8358,"endOffset":8542,"count":8},{"startOffset":8507,"endOffset":8538,"count":4}],"isBlockCoverage":true},{"functionName":"printJoin","ranges":[{"startOffset":8546,"endOffset":9251,"count":23},{"startOffset":8608,"endOffset":8616,"count":0},{"startOffset":8634,"endOffset":8641,"count":7},{"startOffset":8641,"endOffset":8663,"count":16},{"startOffset":8663,"endOffset":8677,"count":0},{"startOffset":8677,"endOffset":9210,"count":16},{"startOffset":8839,"endOffset":8848,"count":0},{"startOffset":8875,"endOffset":8927,"count":7},{"startOffset":8986,"endOffset":9027,"count":0},{"startOffset":9054,"endOffset":9077,"count":9},{"startOffset":9079,"endOffset":9123,"count":0},{"startOffset":9151,"endOffset":9204,"count":7},{"startOffset":9210,"endOffset":9233,"count":16},{"startOffset":9233,"endOffset":9247,"count":0}],"isBlockCoverage":true},{"functionName":"printAndIndentOnComments","ranges":[{"startOffset":9255,"endOffset":9467,"count":0}],"isBlockCoverage":false},{"functionName":"printBlock","ranges":[{"startOffset":9471,"endOffset":9620,"count":0}],"isBlockCoverage":false},{"functionName":"_printTrailingComments","ranges":[{"startOffset":9624,"endOffset":9715,"count":52}],"isBlockCoverage":true},{"functionName":"_printLeadingComments","ranges":[{"startOffset":9719,"endOffset":9814,"count":52}],"isBlockCoverage":true},{"functionName":"printInnerComments","ranges":[{"startOffset":9818,"endOffset":10111,"count":7},{"startOffset":9960,"endOffset":9988,"count":0},{"startOffset":9998,"endOffset":10107,"count":0}],"isBlockCoverage":true},{"functionName":"printSequence","ranges":[{"startOffset":10115,"endOffset":10235,"count":14}],"isBlockCoverage":true},{"functionName":"printList","ranges":[{"startOffset":10239,"endOffset":10408,"count":9},{"startOffset":10309,"endOffset":10355,"count":5}],"isBlockCoverage":true},{"functionName":"_printNewline","ranges":[{"startOffset":10412,"endOffset":10907,"count":14},{"startOffset":10513,"endOffset":10520,"count":0},{"startOffset":10551,"endOffset":10592,"count":0},{"startOffset":10646,"endOffset":10877,"count":7},{"startOffset":10705,"endOffset":10751,"count":0},{"startOffset":10780,"endOffset":10805,"count":0},{"startOffset":10863,"endOffset":10871,"count":1}],"isBlockCoverage":true},{"functionName":"_getComments","ranges":[{"startOffset":10911,"endOffset":11027,"count":104},{"startOffset":10969,"endOffset":10991,"count":52},{"startOffset":10992,"endOffset":11015,"count":52}],"isBlockCoverage":true},{"functionName":"_printComment","ranges":[{"startOffset":11031,"endOffset":12512,"count":0}],"isBlockCoverage":false},{"functionName":"_printComments","ranges":[{"startOffset":12516,"endOffset":12927,"count":104},{"startOffset":12592,"endOffset":12600,"count":0},{"startOffset":12628,"endOffset":12683,"count":0},{"startOffset":12684,"endOffset":12729,"count":0},{"startOffset":12731,"endOffset":12923,"count":0}],"isBlockCoverage":true},{"functionName":"printAssertions","ranges":[{"startOffset":12931,"endOffset":13280,"count":1},{"startOffset":13044,"endOffset":13069,"count":0},{"startOffset":13071,"endOffset":13276,"count":0}],"isBlockCoverage":true},{"functionName":"commaSeparator","ranges":[{"startOffset":13367,"endOffset":13431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6186,"count":1}],"isBlockCoverage":true},{"functionName":"Buffer","ranges":[{"startOffset":154,"endOffset":498,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":502,"endOffset":1070,"count":7},{"startOffset":679,"endOffset":701,"count":0},{"startOffset":723,"endOffset":1046,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":833,"endOffset":889,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":900,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":1074,"endOffset":1300,"count":42}],"isBlockCoverage":true},{"functionName":"queue","ranges":[{"startOffset":1304,"endOffset":1662,"count":34},{"startOffset":1339,"endOffset":1459,"count":8},{"startOffset":1415,"endOffset":1453,"count":0}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":1666,"endOffset":1755,"count":49},{"startOffset":1729,"endOffset":1751,"count":34}],"isBlockCoverage":true},{"functionName":"_append","ranges":[{"startOffset":1759,"endOffset":2329,"count":76},{"startOffset":1952,"endOffset":2024,"count":68},{"startOffset":2047,"endOffset":2276,"count":8},{"startOffset":2161,"endOffset":2234,"count":0}],"isBlockCoverage":true},{"functionName":"_mark","ranges":[{"startOffset":2333,"endOffset":2568,"count":68},{"startOffset":2455,"endOffset":2563,"count":0}],"isBlockCoverage":true},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":2572,"endOffset":2698,"count":0}],"isBlockCoverage":false},{"functionName":"removeLastSemicolon","ranges":[{"startOffset":2702,"endOffset":2825,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":2829,"endOffset":3297,"count":98},{"startOffset":2877,"endOffset":3093,"count":56},{"startOffset":2930,"endOffset":3014,"count":9},{"startOffset":3014,"endOffset":3056,"count":47},{"startOffset":3093,"endOffset":3216,"count":42},{"startOffset":3216,"endOffset":3296,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3143,"endOffset":3171,"count":21}],"isBlockCoverage":true},{"functionName":"hasContent","ranges":[{"startOffset":3301,"endOffset":3370,"count":33},{"startOffset":3350,"endOffset":3365,"count":26}],"isBlockCoverage":true},{"functionName":"exactSource","ranges":[{"startOffset":3374,"endOffset":3514,"count":10}],"isBlockCoverage":true},{"functionName":"source","ranges":[{"startOffset":3518,"endOffset":3648,"count":20},{"startOffset":3567,"endOffset":3574,"count":0}],"isBlockCoverage":true},{"functionName":"withSource","ranges":[{"startOffset":3652,"endOffset":4665,"count":52},{"startOffset":3712,"endOffset":4074,"count":0},{"startOffset":4075,"endOffset":4124,"count":0},{"startOffset":4125,"endOffset":4178,"count":0},{"startOffset":4180,"endOffset":4352,"count":0},{"startOffset":4354,"endOffset":4661,"count":0}],"isBlockCoverage":true},{"functionName":"_disallowPop","ranges":[{"startOffset":4669,"endOffset":4790,"count":10},{"startOffset":4717,"endOffset":4724,"count":0}],"isBlockCoverage":true},{"functionName":"_normalizePosition","ranges":[{"startOffset":4794,"endOffset":5660,"count":30},{"startOffset":4876,"endOffset":4882,"count":0},{"startOffset":4918,"endOffset":5071,"count":10},{"startOffset":5244,"endOffset":5290,"count":20},{"startOffset":5260,"endOffset":5268,"count":0},{"startOffset":5291,"endOffset":5298,"count":10},{"startOffset":5333,"endOffset":5341,"count":0},{"startOffset":5389,"endOffset":5397,"count":0},{"startOffset":5449,"endOffset":5457,"count":0},{"startOffset":5489,"endOffset":5519,"count":20},{"startOffset":5520,"endOffset":5554,"count":10},{"startOffset":5555,"endOffset":5593,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentColumn","ranges":[{"startOffset":5664,"endOffset":5907,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentLine","ranges":[{"startOffset":5911,"endOffset":6156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":459,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":647,"endOffset":1390,"count":3},{"startOffset":729,"endOffset":802,"count":0},{"startOffset":804,"endOffset":900,"count":0},{"startOffset":902,"endOffset":1030,"count":0},{"startOffset":1053,"endOffset":1389,"count":0}],"isBlockCoverage":true},{"functionName":"expandAliases","ranges":[{"startOffset":1392,"endOffset":1945,"count":3},{"startOffset":1729,"endOffset":1925,"count":61},{"startOffset":1797,"endOffset":1880,"count":6},{"startOffset":1834,"endOffset":1874,"count":25},{"startOffset":1880,"endOffset":1921,"count":55}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1446,"endOffset":1688,"count":80},{"startOffset":1524,"endOffset":1676,"count":15},{"startOffset":1677,"endOffset":1683,"count":65}],"isBlockCoverage":true},{"functionName":"newObj.<computed>","ranges":[{"startOffset":1526,"endOffset":1676,"count":1},{"startOffset":1661,"endOffset":1669,"count":0}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":2122,"endOffset":2250,"count":64},{"startOffset":2210,"endOffset":2240,"count":12},{"startOffset":2241,"endOffset":2247,"count":52}],"isBlockCoverage":true},{"functionName":"isOrHasCallExpression","ranges":[{"startOffset":2252,"endOffset":2423,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespace","ranges":[{"startOffset":2425,"endOffset":2999,"count":10},{"startOffset":2485,"endOffset":2494,"count":0},{"startOffset":2533,"endOffset":2566,"count":2},{"startOffset":2650,"endOffset":2885,"count":9},{"startOffset":2730,"endOffset":2881,"count":3},{"startOffset":2861,"endOffset":2867,"count":0},{"startOffset":2923,"endOffset":2944,"count":3},{"startOffset":2946,"endOffset":2984,"count":1},{"startOffset":2975,"endOffset":2979,"count":0},{"startOffset":2984,"endOffset":2998,"count":9}],"isBlockCoverage":true},{"functionName":"needsWhitespaceBefore","ranges":[{"startOffset":3001,"endOffset":3099,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespaceAfter","ranges":[{"startOffset":3101,"endOffset":3197,"count":7}],"isBlockCoverage":true},{"functionName":"needsParens","ranges":[{"startOffset":3199,"endOffset":3452,"count":52},{"startOffset":3263,"endOffset":3276,"count":7},{"startOffset":3276,"endOffset":3310,"count":45},{"startOffset":3310,"endOffset":3335,"count":0},{"startOffset":3337,"endOffset":3392,"count":0},{"startOffset":3392,"endOffset":3451,"count":45}],"isBlockCoverage":true}]},{"scriptId":"719","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/node/whitespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6060,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":179,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":367,"endOffset":1110,"count":1},{"startOffset":449,"endOffset":522,"count":0},{"startOffset":524,"endOffset":620,"count":0},{"startOffset":622,"endOffset":750,"count":0},{"startOffset":773,"endOffset":1109,"count":0}],"isBlockCoverage":true},{"functionName":"crawl","ranges":[{"startOffset":1112,"endOffset":1752,"count":8},{"startOffset":1219,"endOffset":1307,"count":0},{"startOffset":1334,"endOffset":1367,"count":7},{"startOffset":1369,"endOffset":1433,"count":1},{"startOffset":1433,"endOffset":1733,"count":7},{"startOffset":1468,"endOffset":1503,"count":5},{"startOffset":1505,"endOffset":1567,"count":2},{"startOffset":1567,"endOffset":1733,"count":5},{"startOffset":1597,"endOffset":1632,"count":0},{"startOffset":1664,"endOffset":1733,"count":1}],"isBlockCoverage":true},{"functionName":"isHelper","ranges":[{"startOffset":1754,"endOffset":2235,"count":22},{"startOffset":1814,"endOffset":1880,"count":2},{"startOffset":1880,"endOffset":2233,"count":20},{"startOffset":1912,"endOffset":1977,"count":9},{"startOffset":1949,"endOffset":1972,"count":8},{"startOffset":1977,"endOffset":2233,"count":11},{"startOffset":2013,"endOffset":2052,"count":5},{"startOffset":2052,"endOffset":2233,"count":6},{"startOffset":2079,"endOffset":2112,"count":5},{"startOffset":2114,"endOffset":2204,"count":1},{"startOffset":2153,"endOffset":2175,"count":0},{"startOffset":2204,"endOffset":2233,"count":5}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":2237,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":2423,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":2648,"endOffset":2851,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":2856,"endOffset":2998,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":3003,"endOffset":3111,"count":1},{"startOffset":3056,"endOffset":3107,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":3116,"endOffset":3269,"count":3},{"startOffset":3192,"endOffset":3265,"count":0}],"isBlockCoverage":true},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":3274,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":3422,"endOffset":3880,"count":4},{"startOffset":3590,"endOffset":3613,"count":0},{"startOffset":3720,"endOffset":3736,"count":1},{"startOffset":3737,"endOffset":3757,"count":3},{"startOffset":3787,"endOffset":3870,"count":1},{"startOffset":3876,"endOffset":3879,"count":3}],"isBlockCoverage":true},{"functionName":"IfStatement","ranges":[{"startOffset":3885,"endOffset":4027,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectProperty.nodes.ObjectTypeProperty.nodes.ObjectMethod","ranges":[{"startOffset":4127,"endOffset":4236,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeCallProperty","ranges":[{"startOffset":4270,"endOffset":4502,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeIndexer","ranges":[{"startOffset":4531,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeInternalSlot","ranges":[{"startOffset":4919,"endOffset":5385,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":5405,"endOffset":5489,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5466,"endOffset":5483,"count":3}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":5494,"endOffset":5547,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":5552,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5775,"endOffset":6058,"count":6},{"startOffset":5957,"endOffset":5962,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5972,"endOffset":6054,"count":19}],"isBlockCoverage":true},{"functionName":"nodes.<computed>","ranges":[{"startOffset":6008,"endOffset":6049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/node/parentheses.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8477,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1271,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1459,"endOffset":2202,"count":1},{"startOffset":1541,"endOffset":1614,"count":0},{"startOffset":1616,"endOffset":1712,"count":0},{"startOffset":1714,"endOffset":1842,"count":0},{"startOffset":1865,"endOffset":2201,"count":0}],"isBlockCoverage":true},{"functionName":"isClassExtendsClause","ranges":[{"startOffset":2530,"endOffset":2639,"count":1},{"startOffset":2610,"endOffset":2639,"count":0}],"isBlockCoverage":true},{"functionName":"hasPostfixPart","ranges":[{"startOffset":2665,"endOffset":3002,"count":1},{"startOffset":2754,"endOffset":2779,"count":0},{"startOffset":2879,"endOffset":2904,"count":0},{"startOffset":2945,"endOffset":2967,"count":0}],"isBlockCoverage":true},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":3005,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":3098,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":3376,"endOffset":3496,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":3498,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":3627,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"Binary","ranges":[{"startOffset":3721,"endOffset":4393,"count":1},{"startOffset":3782,"endOffset":3839,"count":0},{"startOffset":3841,"endOffset":3879,"count":0},{"startOffset":3923,"endOffset":3945,"count":0},{"startOffset":4039,"endOffset":4061,"count":0},{"startOffset":4089,"endOffset":4391,"count":0}],"isBlockCoverage":true},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":4395,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":4600,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":4646,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":4693,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":4884,"endOffset":4986,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":4988,"endOffset":5119,"count":1},{"startOffset":5062,"endOffset":5116,"count":0}],"isBlockCoverage":true},{"functionName":"SequenceExpression","ranges":[{"startOffset":5121,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":5589,"endOffset":5876,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":5878,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryLike","ranges":[{"startOffset":6015,"endOffset":6202,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":6204,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":6344,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":6475,"endOffset":6783,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":6785,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6955,"endOffset":7144,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":7146,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstInStatement","ranges":[{"startOffset":7543,"endOffset":8477,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3811,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177,"endOffset":459,"count":3},{"startOffset":243,"endOffset":250,"count":0},{"startOffset":272,"endOffset":314,"count":0},{"startOffset":316,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":395,"endOffset":451,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":543,"endOffset":815,"count":27},{"startOffset":609,"endOffset":616,"count":0},{"startOffset":638,"endOffset":675,"count":0},{"startOffset":677,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":756,"endOffset":807,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":896,"endOffset":1166,"count":19},{"startOffset":962,"endOffset":969,"count":0},{"startOffset":991,"endOffset":1027,"count":0},{"startOffset":1029,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1108,"endOffset":1158,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1238,"endOffset":1502,"count":9},{"startOffset":1304,"endOffset":1311,"count":0},{"startOffset":1333,"endOffset":1366,"count":0},{"startOffset":1368,"endOffset":1375,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1447,"endOffset":1494,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1574,"endOffset":1838,"count":9},{"startOffset":1640,"endOffset":1647,"count":0},{"startOffset":1669,"endOffset":1702,"count":0},{"startOffset":1704,"endOffset":1711,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1783,"endOffset":1830,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1910,"endOffset":2174,"count":11},{"startOffset":1976,"endOffset":1983,"count":0},{"startOffset":2005,"endOffset":2038,"count":0},{"startOffset":2040,"endOffset":2047,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2119,"endOffset":2166,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2240,"endOffset":2500,"count":22},{"startOffset":2306,"endOffset":2313,"count":0},{"startOffset":2335,"endOffset":2366,"count":0},{"startOffset":2368,"endOffset":2375,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2447,"endOffset":2492,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2563,"endOffset":2821,"count":65},{"startOffset":2629,"endOffset":2636,"count":0},{"startOffset":2658,"endOffset":2688,"count":0},{"startOffset":2690,"endOffset":2697,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2769,"endOffset":2813,"count":65}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2884,"endOffset":3142,"count":8},{"startOffset":2950,"endOffset":2957,"count":0},{"startOffset":2979,"endOffset":3009,"count":0},{"startOffset":3011,"endOffset":3018,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3090,"endOffset":3134,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3202,"endOffset":3458,"count":15},{"startOffset":3268,"endOffset":3275,"count":0},{"startOffset":3297,"endOffset":3326,"count":0},{"startOffset":3328,"endOffset":3335,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3407,"endOffset":3450,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3539,"endOffset":3809,"count":70},{"startOffset":3605,"endOffset":3612,"count":0},{"startOffset":3634,"endOffset":3670,"count":0},{"startOffset":3672,"endOffset":3679,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3751,"endOffset":3801,"count":70}],"isBlockCoverage":true}]},{"scriptId":"722","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/template-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":228,"endOffset":374,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":376,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":633,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"723","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7616,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1320,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1508,"endOffset":2251,"count":2},{"startOffset":1590,"endOffset":1663,"count":0},{"startOffset":1665,"endOffset":1761,"count":0},{"startOffset":1763,"endOffset":1891,"count":0},{"startOffset":1914,"endOffset":2250,"count":0}],"isBlockCoverage":true},{"functionName":"UnaryExpression","ranges":[{"startOffset":2253,"endOffset":2540,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":2542,"endOffset":2639,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":2641,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":2760,"endOffset":3033,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":3035,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":3283,"endOffset":3817,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":3819,"endOffset":3898,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":3900,"endOffset":3950,"count":0}],"isBlockCoverage":false},{"functionName":"Super","ranges":[{"startOffset":3952,"endOffset":3994,"count":0}],"isBlockCoverage":false},{"functionName":"Decorator","ranges":[{"startOffset":3996,"endOffset":4098,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":4100,"endOffset":4719,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":4721,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":5007,"endOffset":5232,"count":4}],"isBlockCoverage":true},{"functionName":"Import","ranges":[{"startOffset":5234,"endOffset":5278,"count":1}],"isBlockCoverage":true},{"functionName":"buildYieldAwait","ranges":[{"startOffset":5280,"endOffset":5624,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5325,"endOffset":5621,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyStatement","ranges":[{"startOffset":5813,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":5868,"endOffset":5963,"count":2}],"isBlockCoverage":true},{"functionName":"AssignmentPattern","ranges":[{"startOffset":5965,"endOffset":6204,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6206,"endOffset":6684,"count":1},{"startOffset":6300,"endOffset":6325,"count":0},{"startOffset":6326,"endOffset":6357,"count":0},{"startOffset":6374,"endOffset":6400,"count":0},{"startOffset":6514,"endOffset":6549,"count":0},{"startOffset":6656,"endOffset":6682,"count":0}],"isBlockCoverage":true},{"functionName":"BindExpression","ranges":[{"startOffset":6686,"endOffset":6805,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":6807,"endOffset":7333,"count":2},{"startOffset":6936,"endOffset":7022,"count":0},{"startOffset":7090,"endOffset":7132,"count":0},{"startOffset":7134,"endOffset":7160,"count":0},{"startOffset":7178,"endOffset":7262,"count":0}],"isBlockCoverage":true},{"functionName":"MetaProperty","ranges":[{"startOffset":7335,"endOffset":7451,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":7453,"endOffset":7531,"count":0}],"isBlockCoverage":false},{"functionName":"V8IntrinsicIdentifier","ranges":[{"startOffset":7533,"endOffset":7616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/statements.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7718,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":839,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1027,"endOffset":1770,"count":1},{"startOffset":1109,"endOffset":1182,"count":0},{"startOffset":1184,"endOffset":1280,"count":0},{"startOffset":1282,"endOffset":1410,"count":0},{"startOffset":1433,"endOffset":1769,"count":0}],"isBlockCoverage":true},{"functionName":"WithStatement","ranges":[{"startOffset":1772,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":1939,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"getLastStatement","ranges":[{"startOffset":2578,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":2719,"endOffset":3146,"count":0}],"isBlockCoverage":false},{"functionName":"WhileStatement","ranges":[{"startOffset":3148,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"buildForXStatement","ranges":[{"startOffset":3342,"endOffset":3713,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3367,"endOffset":3710,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":3897,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"buildLabelStatement","ranges":[{"startOffset":4143,"endOffset":4530,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4206,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":4949,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":5084,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":5445,"endOffset":5713,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":5715,"endOffset":6100,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":6102,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"DebuggerStatement","ranges":[{"startOffset":6441,"endOffset":6518,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclarationIndent","ranges":[{"startOffset":6520,"endOffset":6670,"count":0}],"isBlockCoverage":false},{"functionName":"constDeclarationIndent","ranges":[{"startOffset":6672,"endOffset":6819,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":6821,"endOffset":7454,"count":4},{"startOffset":6886,"endOffset":6935,"count":0},{"startOffset":7217,"endOffset":7241,"count":2},{"startOffset":7242,"endOffset":7269,"count":2},{"startOffset":7364,"endOffset":7431,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":7456,"endOffset":7718,"count":4},{"startOffset":7542,"endOffset":7558,"count":0}],"isBlockCoverage":true}]},{"scriptId":"725","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/classes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4196,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":498,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":686,"endOffset":1429,"count":1},{"startOffset":768,"endOffset":841,"count":0},{"startOffset":843,"endOffset":939,"count":0},{"startOffset":941,"endOffset":1069,"count":0},{"startOffset":1092,"endOffset":1428,"count":0}],"isBlockCoverage":true},{"functionName":"ClassDeclaration","ranges":[{"startOffset":1431,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":2293,"endOffset":2610,"count":0}],"isBlockCoverage":false},{"functionName":"ClassProperty","ranges":[{"startOffset":2612,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":3184,"endOffset":3542,"count":0}],"isBlockCoverage":false},{"functionName":"ClassMethod","ranges":[{"startOffset":3544,"endOffset":3653,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateMethod","ranges":[{"startOffset":3655,"endOffset":3771,"count":0}],"isBlockCoverage":false},{"functionName":"_classMethodHead","ranges":[{"startOffset":3773,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"StaticBlock","ranges":[{"startOffset":3927,"endOffset":4196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/methods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4239,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":472,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":660,"endOffset":1403,"count":1},{"startOffset":742,"endOffset":815,"count":0},{"startOffset":817,"endOffset":913,"count":0},{"startOffset":915,"endOffset":1043,"count":0},{"startOffset":1066,"endOffset":1402,"count":0}],"isBlockCoverage":true},{"functionName":"_params","ranges":[{"startOffset":1405,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"_parameters","ranges":[{"startOffset":1590,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"_param","ranges":[{"startOffset":1815,"endOffset":2031,"count":0}],"isBlockCoverage":false},{"functionName":"_methodHead","ranges":[{"startOffset":2033,"endOffset":2617,"count":0}],"isBlockCoverage":false},{"functionName":"_predicate","ranges":[{"startOffset":2619,"endOffset":2790,"count":0}],"isBlockCoverage":false},{"functionName":"_functionHead","ranges":[{"startOffset":2792,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":3075,"endOffset":3188,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":3190,"endOffset":4086,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypes","ranges":[{"startOffset":4088,"endOffset":4239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"727","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6021,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":723,"endOffset":909,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":911,"endOffset":1654,"count":1},{"startOffset":993,"endOffset":1066,"count":0},{"startOffset":1068,"endOffset":1164,"count":0},{"startOffset":1166,"endOffset":1294,"count":0},{"startOffset":1317,"endOffset":1653,"count":0}],"isBlockCoverage":true},{"functionName":"ImportSpecifier","ranges":[{"startOffset":1656,"endOffset":2006,"count":1},{"startOffset":1755,"endOffset":1810,"count":0},{"startOffset":1908,"endOffset":2004,"count":0}],"isBlockCoverage":true},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":2008,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultSpecifier","ranges":[{"startOffset":2083,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"ExportSpecifier","ranges":[{"startOffset":2161,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamespaceSpecifier","ranges":[{"startOffset":2393,"endOffset":2541,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":2543,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":2861,"endOffset":3131,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":3133,"endOffset":3445,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDeclaration","ranges":[{"startOffset":3447,"endOffset":4593,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":4595,"endOffset":5753,"count":1},{"startOffset":4761,"endOffset":4816,"count":0},{"startOffset":4891,"endOffset":4899,"count":0},{"startOffset":5058,"endOffset":5208,"count":0},{"startOffset":5596,"endOffset":5621,"count":0},{"startOffset":5623,"endOffset":5730,"count":0}],"isBlockCoverage":true},{"functionName":"ImportAttribute","ranges":[{"startOffset":5755,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":5876,"endOffset":6021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6831,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1098,"endOffset":1193,"count":1},{"startOffset":1166,"endOffset":1171,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1195,"endOffset":1381,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1383,"endOffset":2126,"count":1},{"startOffset":1465,"endOffset":1538,"count":0},{"startOffset":1540,"endOffset":1636,"count":0},{"startOffset":1638,"endOffset":1766,"count":0},{"startOffset":1789,"endOffset":2125,"count":0}],"isBlockCoverage":true},{"functionName":"Identifier","ranges":[{"startOffset":2128,"endOffset":2226,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2185,"endOffset":2222,"count":10}],"isBlockCoverage":true},{"functionName":"ArgumentPlaceholder","ranges":[{"startOffset":2228,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":2283,"endOffset":2369,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":2371,"endOffset":2658,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectMethod","ranges":[{"startOffset":2660,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectProperty","ranges":[{"startOffset":2809,"endOffset":3410,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":3412,"endOffset":3812,"count":0}],"isBlockCoverage":false},{"functionName":"RecordExpression","ranges":[{"startOffset":3814,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"TupleExpression","ranges":[{"startOffset":4537,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":5279,"endOffset":5358,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":5360,"endOffset":5437,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":5439,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":5488,"endOffset":5898,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":5900,"endOffset":6230,"count":8},{"startOffset":6017,"endOffset":6176,"count":4},{"startOffset":6176,"endOffset":6199,"count":0}],"isBlockCoverage":true},{"functionName":"BigIntLiteral","ranges":[{"startOffset":6232,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"DecimalLiteral","ranges":[{"startOffset":6422,"endOffset":6611,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineTopicExpression","ranges":[{"startOffset":6613,"endOffset":6692,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineBareFunction","ranges":[{"startOffset":6694,"endOffset":6766,"count":0}],"isBlockCoverage":false},{"functionName":"PipelinePrimaryTopicReference","ranges":[{"startOffset":6768,"endOffset":6831,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/jsesc/jsesc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8389,"count":1}],"isBlockCoverage":true},{"functionName":"forOwn","ranges":[{"startOffset":95,"endOffset":229,"count":4},{"startOffset":146,"endOffset":227,"count":8}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":247,"endOffset":404,"count":4},{"startOffset":288,"endOffset":314,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":331,"endOffset":379,"count":8}],"isBlockCoverage":true},{"functionName":"forEach","ranges":[{"startOffset":423,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":670,"endOffset":807,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":826,"endOffset":921,"count":4},{"startOffset":872,"endOffset":918,"count":0}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":940,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":1056,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":1122,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":1200,"endOffset":1262,"count":0}],"isBlockCoverage":false},{"functionName":"jsesc","ranges":[{"startOffset":1765,"endOffset":8336,"count":4},{"startOffset":2327,"endOffset":2385,"count":0},{"startOffset":2491,"endOffset":2524,"count":0},{"startOffset":2528,"endOffset":2561,"count":0},{"startOffset":2612,"endOffset":2668,"count":0},{"startOffset":2933,"endOffset":2939,"count":0},{"startOffset":3199,"endOffset":3210,"count":0},{"startOffset":3211,"endOffset":3241,"count":0},{"startOffset":3243,"endOffset":3279,"count":0},{"startOffset":3307,"endOffset":5799,"count":0},{"startOffset":5972,"endOffset":7995,"count":36},{"startOffset":6035,"endOffset":6736,"count":0},{"startOffset":6952,"endOffset":7254,"count":0},{"startOffset":7258,"endOffset":7298,"count":0},{"startOffset":7299,"endOffset":7347,"count":0},{"startOffset":7352,"endOffset":7625,"count":0},{"startOffset":7626,"endOffset":7647,"count":0},{"startOffset":7649,"endOffset":7855,"count":0},{"startOffset":7892,"endOffset":7897,"count":0},{"startOffset":7898,"endOffset":7903,"count":0},{"startOffset":7948,"endOffset":7952,"count":0},{"startOffset":7953,"endOffset":7957,"count":0},{"startOffset":8074,"endOffset":8124,"count":0},{"startOffset":8155,"endOffset":8318,"count":0}],"isBlockCoverage":true},{"functionName":"increaseIndentation","ranges":[{"startOffset":1819,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4102,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5461,"endOffset":5647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16501,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3210,"endOffset":3262,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3358,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":3547,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":3735,"endOffset":4478,"count":1},{"startOffset":3817,"endOffset":3890,"count":0},{"startOffset":3892,"endOffset":3988,"count":0},{"startOffset":3990,"endOffset":4118,"count":0},{"startOffset":4141,"endOffset":4477,"count":0}],"isBlockCoverage":true},{"functionName":"AnyTypeAnnotation","ranges":[{"startOffset":4480,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":4534,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanTypeAnnotation","ranges":[{"startOffset":4650,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteralTypeAnnotation","ranges":[{"startOffset":4712,"endOffset":4803,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteralTypeAnnotation","ranges":[{"startOffset":4805,"endOffset":4866,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareClass","ranges":[{"startOffset":4868,"endOffset":5070,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareFunction","ranges":[{"startOffset":5072,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"InferredPredicate","ranges":[{"startOffset":5447,"endOffset":5521,"count":0}],"isBlockCoverage":false},{"functionName":"DeclaredPredicate","ranges":[{"startOffset":5523,"endOffset":5671,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareInterface","ranges":[{"startOffset":5673,"endOffset":5783,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModule","ranges":[{"startOffset":5785,"endOffset":5972,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModuleExports","ranges":[{"startOffset":5974,"endOffset":6160,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareTypeAlias","ranges":[{"startOffset":6162,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareOpaqueType","ranges":[{"startOffset":6263,"endOffset":6428,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareVariable","ranges":[{"startOffset":6430,"endOffset":6697,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportDeclaration","ranges":[{"startOffset":6699,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportAllDeclaration","ranges":[{"startOffset":6943,"endOffset":7082,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDeclaration","ranges":[{"startOffset":7084,"endOffset":7244,"count":0}],"isBlockCoverage":false},{"functionName":"enumExplicitType","ranges":[{"startOffset":7246,"endOffset":7446,"count":0}],"isBlockCoverage":false},{"functionName":"enumBody","ranges":[{"startOffset":7448,"endOffset":7719,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanBody","ranges":[{"startOffset":7721,"endOffset":7869,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberBody","ranges":[{"startOffset":7871,"endOffset":8017,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringBody","ranges":[{"startOffset":8019,"endOffset":8165,"count":0}],"isBlockCoverage":false},{"functionName":"EnumSymbolBody","ranges":[{"startOffset":8167,"endOffset":8266,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDefaultedMember","ranges":[{"startOffset":8268,"endOffset":8378,"count":0}],"isBlockCoverage":false},{"functionName":"enumInitializedMember","ranges":[{"startOffset":8380,"endOffset":8606,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMember","ranges":[{"startOffset":8608,"endOffset":8681,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMember","ranges":[{"startOffset":8683,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMember","ranges":[{"startOffset":8757,"endOffset":8829,"count":0}],"isBlockCoverage":false},{"functionName":"FlowExportDeclaration","ranges":[{"startOffset":8831,"endOffset":9353,"count":0}],"isBlockCoverage":false},{"functionName":"ExistsTypeAnnotation","ranges":[{"startOffset":9355,"endOffset":9409,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":9411,"endOffset":10012,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeParam","ranges":[{"startOffset":10014,"endOffset":10224,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceExtends","ranges":[{"startOffset":10226,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"_interfaceish","ranges":[{"startOffset":10333,"endOffset":10931,"count":0}],"isBlockCoverage":false},{"functionName":"_variance","ranges":[{"startOffset":10933,"endOffset":11130,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceDeclaration","ranges":[{"startOffset":11132,"endOffset":11242,"count":0}],"isBlockCoverage":false},{"functionName":"andSeparator","ranges":[{"startOffset":11244,"endOffset":11322,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceTypeAnnotation","ranges":[{"startOffset":11324,"endOffset":11592,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionTypeAnnotation","ranges":[{"startOffset":11594,"endOffset":11710,"count":0}],"isBlockCoverage":false},{"functionName":"MixedTypeAnnotation","ranges":[{"startOffset":11712,"endOffset":11768,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyTypeAnnotation","ranges":[{"startOffset":11770,"endOffset":11826,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":11828,"endOffset":11929,"count":0}],"isBlockCoverage":false},{"functionName":"NumberTypeAnnotation","ranges":[{"startOffset":11931,"endOffset":11989,"count":0}],"isBlockCoverage":false},{"functionName":"StringTypeAnnotation","ranges":[{"startOffset":11991,"endOffset":12049,"count":0}],"isBlockCoverage":false},{"functionName":"ThisTypeAnnotation","ranges":[{"startOffset":12051,"endOffset":12105,"count":0}],"isBlockCoverage":false},{"functionName":"TupleTypeAnnotation","ranges":[{"startOffset":12107,"endOffset":12219,"count":0}],"isBlockCoverage":false},{"functionName":"TypeofTypeAnnotation","ranges":[{"startOffset":12221,"endOffset":12334,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAlias","ranges":[{"startOffset":12336,"endOffset":12574,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":12576,"endOffset":12723,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterInstantiation","ranges":[{"startOffset":12725,"endOffset":12849,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameter","ranges":[{"startOffset":12851,"endOffset":13111,"count":0}],"isBlockCoverage":false},{"functionName":"OpaqueType","ranges":[{"startOffset":13113,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":13539,"endOffset":14366,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeInternalSlot","ranges":[{"startOffset":14368,"endOffset":14720,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeCallProperty","ranges":[{"startOffset":14722,"endOffset":14864,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeIndexer","ranges":[{"startOffset":14866,"endOffset":15224,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeProperty","ranges":[{"startOffset":15226,"endOffset":15692,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeSpreadProperty","ranges":[{"startOffset":15694,"endOffset":15793,"count":0}],"isBlockCoverage":false},{"functionName":"QualifiedTypeIdentifier","ranges":[{"startOffset":15795,"endOffset":15925,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolTypeAnnotation","ranges":[{"startOffset":15927,"endOffset":15985,"count":0}],"isBlockCoverage":false},{"functionName":"orSeparator","ranges":[{"startOffset":15987,"endOffset":16064,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":16066,"endOffset":16174,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":16176,"endOffset":16329,"count":0}],"isBlockCoverage":false},{"functionName":"Variance","ranges":[{"startOffset":16331,"endOffset":16445,"count":0}],"isBlockCoverage":false},{"functionName":"VoidTypeAnnotation","ranges":[{"startOffset":16447,"endOffset":16501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2312,"count":1}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":355,"endOffset":487,"count":7}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":489,"endOffset":704,"count":7},{"startOffset":648,"endOffset":663,"count":0}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":706,"endOffset":1375,"count":0}],"isBlockCoverage":false},{"functionName":"Noop","ranges":[{"startOffset":1377,"endOffset":1395,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":1397,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":1592,"endOffset":2069,"count":0}],"isBlockCoverage":false},{"functionName":"InterpreterDirective","ranges":[{"startOffset":2071,"endOffset":2145,"count":0}],"isBlockCoverage":false},{"functionName":"Placeholder","ranges":[{"startOffset":2147,"endOffset":2312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"732","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2973,"count":1}],"isBlockCoverage":true},{"functionName":"JSXAttribute","ranges":[{"startOffset":738,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"JSXIdentifier","ranges":[{"startOffset":882,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"JSXNamespacedName","ranges":[{"startOffset":940,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"JSXMemberExpression","ranges":[{"startOffset":1064,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":1191,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":1324,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadChild","ranges":[{"startOffset":1442,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"JSXText","ranges":[{"startOffset":1573,"endOffset":1726,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":1728,"endOffset":2000,"count":0}],"isBlockCoverage":false},{"functionName":"spaceSeparator","ranges":[{"startOffset":2002,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":2049,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":2424,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"JSXEmptyExpression","ranges":[{"startOffset":2532,"endOffset":2602,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":2604,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":2828,"endOffset":2899,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":2901,"endOffset":2973,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15577,"count":1}],"isBlockCoverage":true},{"functionName":"TSTypeAnnotation","ranges":[{"startOffset":3455,"endOffset":3604,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterInstantiation","ranges":[{"startOffset":3606,"endOffset":3732,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameter","ranges":[{"startOffset":3734,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"TSParameterProperty","ranges":[{"startOffset":4045,"endOffset":4273,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareFunction","ranges":[{"startOffset":4275,"endOffset":4430,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareMethod","ranges":[{"startOffset":4432,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"TSQualifiedName","ranges":[{"startOffset":4519,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"TSCallSignatureDeclaration","ranges":[{"startOffset":4637,"endOffset":4747,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructSignatureDeclaration","ranges":[{"startOffset":4749,"endOffset":4900,"count":0}],"isBlockCoverage":false},{"functionName":"TSPropertySignature","ranges":[{"startOffset":4902,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintPropertyOrMethodName","ranges":[{"startOffset":5284,"endOffset":5507,"count":0}],"isBlockCoverage":false},{"functionName":"TSMethodSignature","ranges":[{"startOffset":5509,"endOffset":5652,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexSignature","ranges":[{"startOffset":5654,"endOffset":5936,"count":0}],"isBlockCoverage":false},{"functionName":"TSAnyKeyword","ranges":[{"startOffset":5938,"endOffset":5985,"count":0}],"isBlockCoverage":false},{"functionName":"TSBigIntKeyword","ranges":[{"startOffset":5987,"endOffset":6040,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnknownKeyword","ranges":[{"startOffset":6042,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"TSNumberKeyword","ranges":[{"startOffset":6099,"endOffset":6152,"count":0}],"isBlockCoverage":false},{"functionName":"TSObjectKeyword","ranges":[{"startOffset":6154,"endOffset":6207,"count":0}],"isBlockCoverage":false},{"functionName":"TSBooleanKeyword","ranges":[{"startOffset":6209,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"TSStringKeyword","ranges":[{"startOffset":6266,"endOffset":6319,"count":0}],"isBlockCoverage":false},{"functionName":"TSSymbolKeyword","ranges":[{"startOffset":6321,"endOffset":6374,"count":0}],"isBlockCoverage":false},{"functionName":"TSVoidKeyword","ranges":[{"startOffset":6376,"endOffset":6425,"count":0}],"isBlockCoverage":false},{"functionName":"TSUndefinedKeyword","ranges":[{"startOffset":6427,"endOffset":6486,"count":0}],"isBlockCoverage":false},{"functionName":"TSNullKeyword","ranges":[{"startOffset":6488,"endOffset":6537,"count":0}],"isBlockCoverage":false},{"functionName":"TSNeverKeyword","ranges":[{"startOffset":6539,"endOffset":6590,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntrinsicKeyword","ranges":[{"startOffset":6592,"endOffset":6651,"count":0}],"isBlockCoverage":false},{"functionName":"TSThisType","ranges":[{"startOffset":6653,"endOffset":6699,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":6701,"endOffset":6781,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructorType","ranges":[{"startOffset":6783,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintFunctionOrConstructorType","ranges":[{"startOffset":6904,"endOffset":7234,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeReference","ranges":[{"startOffset":7236,"endOffset":7346,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypePredicate","ranges":[{"startOffset":7348,"endOffset":7630,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeQuery","ranges":[{"startOffset":7632,"endOffset":7730,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeLiteral","ranges":[{"startOffset":7732,"endOffset":7826,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintTypeLiteralOrInterfaceBody","ranges":[{"startOffset":7828,"endOffset":7926,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintBraced","ranges":[{"startOffset":7928,"endOffset":8228,"count":0}],"isBlockCoverage":false},{"functionName":"TSArrayType","ranges":[{"startOffset":8230,"endOffset":8318,"count":0}],"isBlockCoverage":false},{"functionName":"TSTupleType","ranges":[{"startOffset":8320,"endOffset":8431,"count":0}],"isBlockCoverage":false},{"functionName":"TSOptionalType","ranges":[{"startOffset":8433,"endOffset":8526,"count":0}],"isBlockCoverage":false},{"functionName":"TSRestType","ranges":[{"startOffset":8528,"endOffset":8619,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamedTupleMember","ranges":[{"startOffset":8621,"endOffset":8801,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":8803,"endOffset":8883,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":8885,"endOffset":8972,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintUnionOrIntersectionType","ranges":[{"startOffset":8974,"endOffset":9159,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":9161,"endOffset":9476,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":9478,"endOffset":9581,"count":0}],"isBlockCoverage":false},{"functionName":"TSParenthesizedType","ranges":[{"startOffset":9583,"endOffset":9700,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":9702,"endOffset":9820,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexedAccessType","ranges":[{"startOffset":9822,"endOffset":9971,"count":0}],"isBlockCoverage":false},{"functionName":"TSMappedType","ranges":[{"startOffset":9973,"endOffset":10712,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIfPlusMinus","ranges":[{"startOffset":10714,"endOffset":10801,"count":0}],"isBlockCoverage":false},{"functionName":"TSLiteralType","ranges":[{"startOffset":10803,"endOffset":10869,"count":0}],"isBlockCoverage":false},{"functionName":"TSExpressionWithTypeArguments","ranges":[{"startOffset":10871,"endOffset":10997,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceDeclaration","ranges":[{"startOffset":10999,"endOffset":11465,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceBody","ranges":[{"startOffset":11467,"endOffset":11560,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAliasDeclaration","ranges":[{"startOffset":11562,"endOffset":11955,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":11957,"endOffset":12166,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":12168,"endOffset":12381,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumDeclaration","ranges":[{"startOffset":12383,"endOffset":12739,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumMember","ranges":[{"startOffset":12741,"endOffset":12980,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleDeclaration","ranges":[{"startOffset":12982,"endOffset":13517,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleBlock","ranges":[{"startOffset":13519,"endOffset":13590,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportType","ranges":[{"startOffset":13592,"endOffset":13929,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportEqualsDeclaration","ranges":[{"startOffset":13931,"endOffset":14276,"count":0}],"isBlockCoverage":false},{"functionName":"TSExternalModuleReference","ranges":[{"startOffset":14278,"endOffset":14404,"count":0}],"isBlockCoverage":false},{"functionName":"TSNonNullExpression","ranges":[{"startOffset":14406,"endOffset":14500,"count":0}],"isBlockCoverage":false},{"functionName":"TSExportAssignment","ranges":[{"startOffset":14502,"endOffset":14669,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamespaceExportDeclaration","ranges":[{"startOffset":14671,"endOffset":14863,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintSignatureDeclarationBase","ranges":[{"startOffset":14865,"endOffset":15127,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintClassMemberModifiers","ranges":[{"startOffset":15129,"endOffset":15577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/ancestry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4717,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":618,"endOffset":713,"count":1},{"startOffset":692,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":715,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":903,"endOffset":1646,"count":1},{"startOffset":985,"endOffset":1058,"count":0},{"startOffset":1060,"endOffset":1156,"count":0},{"startOffset":1158,"endOffset":1286,"count":0},{"startOffset":1309,"endOffset":1645,"count":0}],"isBlockCoverage":true},{"functionName":"findParent","ranges":[{"startOffset":1648,"endOffset":1793,"count":4},{"startOffset":1733,"endOffset":1775,"count":0}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":1795,"endOffset":1938,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionParent","ranges":[{"startOffset":1940,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementParent","ranges":[{"startOffset":2021,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEarliestCommonAncestorFrom","ranges":[{"startOffset":2413,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"getDeepestCommonAncestorFrom","ranges":[{"startOffset":3178,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestry","ranges":[{"startOffset":4176,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"isAncestor","ranges":[{"startOffset":4326,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"isDescendant","ranges":[{"startOffset":4413,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"inType","ranges":[{"startOffset":4519,"endOffset":4717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/inference/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4445,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":474,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":662,"endOffset":1405,"count":2},{"startOffset":744,"endOffset":817,"count":0},{"startOffset":819,"endOffset":915,"count":0},{"startOffset":917,"endOffset":1045,"count":0},{"startOffset":1068,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"getTypeAnnotation","ranges":[{"startOffset":1407,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"_getTypeAnnotation","ranges":[{"startOffset":1711,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"isBaseType","ranges":[{"startOffset":2815,"endOffset":2918,"count":0}],"isBlockCoverage":false},{"functionName":"_isBaseType","ranges":[{"startOffset":2920,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"couldBeBaseType","ranges":[{"startOffset":3642,"endOffset":4030,"count":0}],"isBlockCoverage":false},{"functionName":"baseTypeStrictlyMatches","ranges":[{"startOffset":4032,"endOffset":4265,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericType","ranges":[{"startOffset":4267,"endOffset":4445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"736","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/inference/inferers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7648,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1302,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1503,"endOffset":1598,"count":1},{"startOffset":1577,"endOffset":1595,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1600,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1788,"endOffset":2531,"count":1},{"startOffset":1870,"endOffset":1943,"count":0},{"startOffset":1945,"endOffset":2041,"count":0},{"startOffset":2043,"endOffset":2171,"count":0},{"startOffset":2194,"endOffset":2530,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":2533,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":2996,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":3105,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":3235,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":3302,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":3746,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":4441,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":4840,"endOffset":5251,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":5253,"endOffset":5346,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":5348,"endOffset":5439,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":5441,"endOffset":5524,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":5526,"endOffset":5685,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":5687,"endOffset":5750,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":5752,"endOffset":5816,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":5818,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":5885,"endOffset":5951,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":5953,"endOffset":6039,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":6041,"endOffset":6130,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":6132,"endOffset":6219,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":6221,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"Func","ranges":[{"startOffset":6310,"endOffset":6389,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":6664,"endOffset":7136,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":7138,"endOffset":7216,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCall","ranges":[{"startOffset":7218,"endOffset":7648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"737","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5873,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":168,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":356,"endOffset":1099,"count":1},{"startOffset":438,"endOffset":511,"count":0},{"startOffset":513,"endOffset":609,"count":0},{"startOffset":611,"endOffset":739,"count":0},{"startOffset":762,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1101,"endOffset":1648,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationBindingConstantViolations","ranges":[{"startOffset":1650,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantViolationsBefore","ranges":[{"startOffset":2711,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"inferAnnotationFromBinaryExpression","ranges":[{"startOffset":3129,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"getParentConditionalPath","ranges":[{"startOffset":4325,"endOffset":4756,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionalAnnotation","ranges":[{"startOffset":4758,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/replacement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7836,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":678,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":866,"endOffset":1609,"count":1},{"startOffset":948,"endOffset":1021,"count":0},{"startOffset":1023,"endOffset":1119,"count":0},{"startOffset":1121,"endOffset":1249,"count":0},{"startOffset":1272,"endOffset":1608,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1611,"endOffset":1706,"count":2},{"startOffset":1685,"endOffset":1703,"count":0}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":1742,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":1784,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWithMultiple","ranges":[{"startOffset":2276,"endOffset":2790,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWithSourceString","ranges":[{"startOffset":2792,"endOffset":3442,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWith","ranges":[{"startOffset":3444,"endOffset":5241,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceWith","ranges":[{"startOffset":5243,"endOffset":5744,"count":0}],"isBlockCoverage":false},{"functionName":"replaceExpressionWithStatements","ranges":[{"startOffset":5746,"endOffset":7455,"count":0}],"isBlockCoverage":false},{"functionName":"replaceInline","ranges":[{"startOffset":7457,"endOffset":7836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/code-frame/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5604,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":414,"endOffset":1157,"count":1},{"startOffset":496,"endOffset":569,"count":0},{"startOffset":571,"endOffset":667,"count":0},{"startOffset":669,"endOffset":797,"count":0},{"startOffset":820,"endOffset":1156,"count":0}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":1197,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"getMarkerLines","ranges":[{"startOffset":1366,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"codeFrameColumns","ranges":[{"startOffset":2936,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":4905,"endOffset":5604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/highlight/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3434,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":383,"endOffset":478,"count":1},{"startOffset":451,"endOffset":456,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":480,"endOffset":666,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":668,"endOffset":1411,"count":1},{"startOffset":750,"endOffset":823,"count":0},{"startOffset":825,"endOffset":921,"count":0},{"startOffset":923,"endOffset":1051,"count":0},{"startOffset":1074,"endOffset":1410,"count":0}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":1413,"endOffset":1708,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenType","ranges":[{"startOffset":1819,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"highlightTokens","ranges":[{"startOffset":2599,"endOffset":2913,"count":0}],"isBlockCoverage":false},{"functionName":"shouldHighlight","ranges":[{"startOffset":2915,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"getChalk","ranges":[{"startOffset":3015,"endOffset":3214,"count":0}],"isBlockCoverage":false},{"functionName":"highlight","ranges":[{"startOffset":3216,"endOffset":3434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/js-tokens/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"exports.matchToToken","ranges":[{"startOffset":917,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/chalk/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6437,"count":1},{"startOffset":274,"endOffset":336,"count":0},{"startOffset":1637,"endOffset":1678,"count":0},{"startOffset":1723,"endOffset":1982,"count":41},{"startOffset":2227,"endOffset":2673,"count":15},{"startOffset":2257,"endOffset":2273,"count":1},{"startOffset":2273,"endOffset":2673,"count":14},{"startOffset":2825,"endOffset":3344,"count":15},{"startOffset":2855,"endOffset":2871,"count":1},{"startOffset":2871,"endOffset":3344,"count":14}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":619,"endOffset":915,"count":1},{"startOffset":750,"endOffset":769,"count":0},{"startOffset":826,"endOffset":841,"count":0},{"startOffset":879,"endOffset":896,"count":0}],"isBlockCoverage":true},{"functionName":"Chalk","ranges":[{"startOffset":917,"endOffset":1542,"count":1},{"startOffset":1100,"endOffset":1127,"count":0},{"startOffset":1128,"endOffset":1144,"count":0},{"startOffset":1509,"endOffset":1541,"count":0}],"isBlockCoverage":true},{"functionName":"Chalk.chalk.template","ranges":[{"startOffset":1220,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1832,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2004,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2296,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2961,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3384,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":3404,"endOffset":4262,"count":0}],"isBlockCoverage":false},{"functionName":"applyStyle","ranges":[{"startOffset":4264,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"chalkTag","ranges":[{"startOffset":5739,"endOffset":6224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":79,"endOffset":224,"count":43},{"startOffset":126,"endOffset":174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"744","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3574,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":81,"endOffset":197,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":97,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":220,"endOffset":344,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":236,"endOffset":344,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":367,"endOffset":512,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":383,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":515,"endOffset":3456,"count":5},{"startOffset":1771,"endOffset":2251,"count":15},{"startOffset":1855,"endOffset":2070,"count":205},{"startOffset":2828,"endOffset":3437,"count":75},{"startOffset":2875,"endOffset":2893,"count":0},{"startOffset":2955,"endOffset":2977,"count":5},{"startOffset":3004,"endOffset":3126,"count":70},{"startOffset":3154,"endOffset":3286,"count":70},{"startOffset":3310,"endOffset":3434,"count":70}],"isBlockCoverage":true},{"functionName":"ansi2ansi","ranges":[{"startOffset":2272,"endOffset":2278,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":2297,"endOffset":2319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-convert/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1725,"count":1}],"isBlockCoverage":true},{"functionName":"wrapRaw","ranges":[{"startOffset":136,"endOffset":509,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":176,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"wrapRounded","ranges":[{"startOffset":511,"endOffset":1187,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":555,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1204,"endOffset":1695,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1541,"endOffset":1691,"count":210}],"isBlockCoverage":true}]},{"scriptId":"746","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-convert/conversions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16850,"count":1},{"startOffset":312,"endOffset":401,"count":148},{"startOffset":1111,"endOffset":1793,"count":15},{"startOffset":1190,"endOffset":1254,"count":0},{"startOffset":1293,"endOffset":1363,"count":0},{"startOffset":1429,"endOffset":1501,"count":0}],"isBlockCoverage":true},{"functionName":"convert.rgb.hsl","ranges":[{"startOffset":1813,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hsv","ranges":[{"startOffset":2453,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hwb","ranges":[{"startOffset":3122,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.cmyk","ranges":[{"startOffset":3376,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"comparativeDistance","ranges":[{"startOffset":3776,"endOffset":3913,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.keyword","ranges":[{"startOffset":3937,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"convert.keyword.rgb","ranges":[{"startOffset":4543,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.xyz","ranges":[{"startOffset":4616,"endOffset":5131,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.lab","ranges":[{"startOffset":5152,"endOffset":5603,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.rgb","ranges":[{"startOffset":5624,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hsv","ranges":[{"startOffset":6304,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.rgb","ranges":[{"startOffset":6660,"endOffset":7122,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hsl","ranges":[{"startOffset":7143,"endOffset":7437,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.rgb","ranges":[{"startOffset":7507,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"convert.cmyk.rgb","ranges":[{"startOffset":8228,"endOffset":8523,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.rgb","ranges":[{"startOffset":8544,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.lab","ranges":[{"startOffset":9231,"endOffset":9649,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.xyz","ranges":[{"startOffset":9670,"endOffset":10111,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.lch","ranges":[{"startOffset":10132,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lch.lab","ranges":[{"startOffset":10383,"endOffset":10573,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi16","ranges":[{"startOffset":10597,"endOffset":11000,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.ansi16","ranges":[{"startOffset":11024,"endOffset":11199,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi256","ranges":[{"startOffset":11224,"endOffset":11712,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi16.rgb","ranges":[{"startOffset":11736,"endOffset":12128,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi256.rgb","ranges":[{"startOffset":12153,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hex","ranges":[{"startOffset":12461,"endOffset":12709,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hex.rgb","ranges":[{"startOffset":12730,"endOffset":13168,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hcg","ranges":[{"startOffset":13189,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hcg","ranges":[{"startOffset":13783,"endOffset":14037,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hcg","ranges":[{"startOffset":14058,"endOffset":14233,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.rgb","ranges":[{"startOffset":14254,"endOffset":14993,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsv","ranges":[{"startOffset":15014,"endOffset":15189,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsl","ranges":[{"startOffset":15210,"endOffset":15469,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hwb","ranges":[{"startOffset":15490,"endOffset":15630,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.hcg","ranges":[{"startOffset":15651,"endOffset":15839,"count":0}],"isBlockCoverage":false},{"functionName":"convert.apple.rgb","ranges":[{"startOffset":15862,"endOffset":15970,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.apple","ranges":[{"startOffset":15993,"endOffset":16093,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.rgb","ranges":[{"startOffset":16115,"endOffset":16207,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hsl.convert.gray.hsv","ranges":[{"startOffset":16248,"endOffset":16292,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hwb","ranges":[{"startOffset":16314,"endOffset":16360,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.cmyk","ranges":[{"startOffset":16383,"endOffset":16430,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.lab","ranges":[{"startOffset":16452,"endOffset":16496,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hex","ranges":[{"startOffset":16518,"endOffset":16738,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.gray","ranges":[{"startOffset":16760,"endOffset":16848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"747","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4617,"count":1}],"isBlockCoverage":true}]},{"scriptId":"748","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-convert/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"buildGraph","ranges":[{"startOffset":389,"endOffset":741,"count":15},{"startOffset":583,"endOffset":723,"count":225}],"isBlockCoverage":true},{"functionName":"deriveBFS","ranges":[{"startOffset":797,"endOffset":1337,"count":15},{"startOffset":965,"endOffset":1319,"count":225},{"startOffset":1106,"endOffset":1316,"count":660},{"startOffset":1201,"endOffset":1312,"count":210}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1339,"endOffset":1421,"count":210}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1373,"endOffset":1418,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConversion","ranges":[{"startOffset":1423,"endOffset":1786,"count":210}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1805,"endOffset":2224,"count":15},{"startOffset":1972,"endOffset":2201,"count":225},{"startOffset":2059,"endOffset":2141,"count":15},{"startOffset":2141,"endOffset":2201,"count":210}],"isBlockCoverage":true}]},{"scriptId":"749","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/chalk/templates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3133,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":528,"endOffset":718,"count":0}],"isBlockCoverage":false},{"functionName":"parseArguments","ranges":[{"startOffset":720,"endOffset":1214,"count":0}],"isBlockCoverage":false},{"functionName":"parseStyle","ranges":[{"startOffset":1216,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"buildStyle","ranges":[{"startOffset":1566,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2181,"endOffset":3131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/evaluation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9177,"count":1}],"isBlockCoverage":true},{"functionName":"evaluateTruthy","ranges":[{"startOffset":239,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deopt","ranges":[{"startOffset":342,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateCached","ranges":[{"startOffset":460,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_evaluate","ranges":[{"startOffset":978,"endOffset":8499,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateQuasis","ranges":[{"startOffset":8501,"endOffset":8888,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":8890,"endOffset":9177,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/conversion.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14333,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":490,"endOffset":585,"count":1},{"startOffset":564,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":587,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":775,"endOffset":1518,"count":1},{"startOffset":857,"endOffset":930,"count":0},{"startOffset":932,"endOffset":1028,"count":0},{"startOffset":1030,"endOffset":1158,"count":0},{"startOffset":1181,"endOffset":1517,"count":0}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":1520,"endOffset":1878,"count":0}],"isBlockCoverage":false},{"functionName":"ensureBlock","ranges":[{"startOffset":1880,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionToShadowed","ranges":[{"startOffset":2851,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapFunctionEnvironment","ranges":[{"startOffset":2976,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionToExpression","ranges":[{"startOffset":3251,"endOffset":4357,"count":0}],"isBlockCoverage":false},{"functionName":"hoistFunctionEnvironment","ranges":[{"startOffset":4359,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeSuperProperty","ranges":[{"startOffset":8401,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"hasSuperClass","ranges":[{"startOffset":10608,"endOffset":10734,"count":0}],"isBlockCoverage":false},{"functionName":"getThisBinding","ranges":[{"startOffset":10736,"endOffset":11464,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperBinding","ranges":[{"startOffset":11466,"endOffset":11782,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperPropBinding","ranges":[{"startOffset":11784,"endOffset":12583,"count":0}],"isBlockCoverage":false},{"functionName":"getBinding","ranges":[{"startOffset":12585,"endOffset":12935,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeInformation","ranges":[{"startOffset":12937,"endOffset":14333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"752","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-function-name/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5139,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":337,"endOffset":523,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":525,"endOffset":1268,"count":1},{"startOffset":607,"endOffset":680,"count":0},{"startOffset":682,"endOffset":778,"count":0},{"startOffset":780,"endOffset":908,"count":0},{"startOffset":931,"endOffset":1267,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1270,"endOffset":1365,"count":2},{"startOffset":1344,"endOffset":1362,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier|BindingIdentifier","ranges":[{"startOffset":2033,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromLiteralId","ranges":[{"startOffset":2314,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":2658,"endOffset":3520,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":3522,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":3992,"endOffset":5139,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-get-function-arity/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1350,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":168,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":356,"endOffset":1099,"count":1},{"startOffset":438,"endOffset":511,"count":0},{"startOffset":513,"endOffset":609,"count":0},{"startOffset":611,"endOffset":739,"count":0},{"startOffset":762,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1101,"endOffset":1350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":333,"endOffset":428,"count":1},{"startOffset":407,"endOffset":425,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":430,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":618,"endOffset":1361,"count":1},{"startOffset":700,"endOffset":773,"count":0},{"startOffset":775,"endOffset":871,"count":0},{"startOffset":873,"endOffset":1001,"count":0},{"startOffset":1024,"endOffset":1360,"count":0}],"isBlockCoverage":true}]},{"scriptId":"755","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/formatters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2493,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":244,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":432,"endOffset":1175,"count":1},{"startOffset":514,"endOffset":587,"count":0},{"startOffset":589,"endOffset":685,"count":0},{"startOffset":687,"endOffset":815,"count":0},{"startOffset":838,"endOffset":1174,"count":0}],"isBlockCoverage":true},{"functionName":"makeStatementFormatter","ranges":[{"startOffset":1177,"endOffset":1378,"count":3}],"isBlockCoverage":true},{"functionName":"code","ranges":[{"startOffset":1236,"endOffset":1275,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1291,"endOffset":1299,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":1313,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1417,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1573,"endOffset":1585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1662,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"code","ranges":[{"startOffset":1930,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1965,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":2210,"endOffset":2338,"count":0}],"isBlockCoverage":false},{"functionName":"code","ranges":[{"startOffset":2401,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2425,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":2445,"endOffset":2463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2579,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":282,"endOffset":377,"count":2},{"startOffset":356,"endOffset":374,"count":0}],"isBlockCoverage":true},{"functionName":"createTemplateBuilder","ranges":[{"startOffset":460,"endOffset":2222,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":689,"endOffset":1522,"count":2},{"startOffset":771,"endOffset":815,"count":0},{"startOffset":953,"endOffset":1521,"count":0}],"isBlockCoverage":true},{"functionName":"ast","ranges":[{"startOffset":1535,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"extendedTrace","ranges":[{"startOffset":2224,"endOffset":2579,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2433,"endOffset":2576,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3041,"count":1}],"isBlockCoverage":true},{"functionName":"_objectWithoutPropertiesLoose","ranges":[{"startOffset":188,"endOffset":495,"count":8},{"startOffset":267,"endOffset":277,"count":0},{"startOffset":385,"endOffset":478,"count":1},{"startOffset":449,"endOffset":478,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":497,"endOffset":898,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":900,"endOffset":2627,"count":8},{"startOffset":945,"endOffset":972,"count":1},{"startOffset":974,"endOffset":1029,"count":0},{"startOffset":1051,"endOffset":1056,"count":7},{"startOffset":1361,"endOffset":1402,"count":0},{"startOffset":1404,"endOffset":1491,"count":0},{"startOffset":1526,"endOffset":1568,"count":1},{"startOffset":1569,"endOffset":1600,"count":1},{"startOffset":1602,"endOffset":1697,"count":0},{"startOffset":1730,"endOffset":1770,"count":0},{"startOffset":1772,"endOffset":1859,"count":0},{"startOffset":1897,"endOffset":1942,"count":0},{"startOffset":1944,"endOffset":2036,"count":0},{"startOffset":2075,"endOffset":2138,"count":0},{"startOffset":2140,"endOffset":2278,"count":0},{"startOffset":2415,"endOffset":2426,"count":7},{"startOffset":2427,"endOffset":2447,"count":1},{"startOffset":2508,"endOffset":2526,"count":0},{"startOffset":2597,"endOffset":2620,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReplacements","ranges":[{"startOffset":2629,"endOffset":3041,"count":0}],"isBlockCoverage":false}]},{"scriptId":"758","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":275,"endOffset":370,"count":2},{"startOffset":349,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"stringTemplate","ranges":[{"startOffset":372,"endOffset":710,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":477,"endOffset":707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5310,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":270,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":458,"endOffset":1201,"count":1},{"startOffset":540,"endOffset":613,"count":0},{"startOffset":615,"endOffset":711,"count":0},{"startOffset":713,"endOffset":841,"count":0},{"startOffset":864,"endOffset":1200,"count":0}],"isBlockCoverage":true},{"functionName":"parseAndBuildMetadata","ranges":[{"startOffset":1237,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"placeholderVisitorHandler","ranges":[{"startOffset":2039,"endOffset":4237,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAncestors","ranges":[{"startOffset":4239,"endOffset":4647,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithCodeFrame","ranges":[{"startOffset":4649,"endOffset":5310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4747,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":180,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":368,"endOffset":1111,"count":1},{"startOffset":450,"endOffset":523,"count":0},{"startOffset":525,"endOffset":621,"count":0},{"startOffset":623,"endOffset":751,"count":0},{"startOffset":774,"endOffset":1110,"count":0}],"isBlockCoverage":true},{"functionName":"populatePlaceholders","ranges":[{"startOffset":1113,"endOffset":2311,"count":0}],"isBlockCoverage":false},{"functionName":"applyReplacement","ranges":[{"startOffset":2313,"endOffset":4747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/literal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2221,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":276,"endOffset":371,"count":2},{"startOffset":350,"endOffset":368,"count":0}],"isBlockCoverage":true},{"functionName":"literalTemplate","ranges":[{"startOffset":373,"endOffset":1162,"count":0}],"isBlockCoverage":false},{"functionName":"buildLiteralData","ranges":[{"startOffset":1164,"endOffset":1962,"count":0}],"isBlockCoverage":false},{"functionName":"buildTemplateCode","ranges":[{"startOffset":1964,"endOffset":2221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/introspection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11892,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1072,"endOffset":1258,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1260,"endOffset":2003,"count":1},{"startOffset":1342,"endOffset":1415,"count":0},{"startOffset":1417,"endOffset":1513,"count":0},{"startOffset":1515,"endOffset":1643,"count":0},{"startOffset":1666,"endOffset":2002,"count":0}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":2005,"endOffset":2116,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2118,"endOffset":2276,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":2278,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"isnt","ranges":[{"startOffset":2378,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":2427,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeType","ranges":[{"startOffset":2495,"endOffset":2560,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveVariableDeclarationOrExpression","ranges":[{"startOffset":2562,"endOffset":2697,"count":0}],"isBlockCoverage":false},{"functionName":"canSwapBetweenExpressionAndStatement","ranges":[{"startOffset":2699,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionRecord","ranges":[{"startOffset":3037,"endOffset":3451,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":3453,"endOffset":3660,"count":0}],"isBlockCoverage":false},{"functionName":"referencesImport","ranges":[{"startOffset":3662,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":4413,"endOffset":4592,"count":0}],"isBlockCoverage":false},{"functionName":"willIMaybeExecuteBefore","ranges":[{"startOffset":4594,"endOffset":4705,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterFunction","ranges":[{"startOffset":4707,"endOffset":4823,"count":0}],"isBlockCoverage":false},{"functionName":"isExecutionUncertain","ranges":[{"startOffset":4825,"endOffset":5636,"count":0}],"isBlockCoverage":false},{"functionName":"isExecutionUncertainInList","ranges":[{"startOffset":5638,"endOffset":5873,"count":0}],"isBlockCoverage":false},{"functionName":"_guessExecutionStatusRelativeTo","ranges":[{"startOffset":5875,"endOffset":7610,"count":0}],"isBlockCoverage":false},{"functionName":"_guessExecutionStatusRelativeToDifferentFunctions","ranges":[{"startOffset":7663,"endOffset":8636,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8638,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"_resolve","ranges":[{"startOffset":8734,"endOffset":10469,"count":0}],"isBlockCoverage":false},{"functionName":"isConstantExpression","ranges":[{"startOffset":10471,"endOffset":11227,"count":0}],"isBlockCoverage":false},{"functionName":"isInStrictMode","ranges":[{"startOffset":11229,"endOffset":11892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5582,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":797,"endOffset":892,"count":1},{"startOffset":871,"endOffset":889,"count":0}],"isBlockCoverage":true},{"functionName":"call","ranges":[{"startOffset":894,"endOffset":1144,"count":146},{"startOffset":1011,"endOffset":1023,"count":0},{"startOffset":1091,"endOffset":1119,"count":62},{"startOffset":1125,"endOffset":1143,"count":0}],"isBlockCoverage":true},{"functionName":"_call","ranges":[{"startOffset":1146,"endOffset":1892,"count":292},{"startOffset":1180,"endOffset":1193,"count":222},{"startOffset":1193,"endOffset":1873,"count":70},{"startOffset":1234,"endOffset":1243,"count":0},{"startOffset":1287,"endOffset":1299,"count":0},{"startOffset":1368,"endOffset":1394,"count":0},{"startOffset":1395,"endOffset":1428,"count":0},{"startOffset":1430,"endOffset":1683,"count":0},{"startOffset":1698,"endOffset":1781,"count":0},{"startOffset":1811,"endOffset":1823,"count":0},{"startOffset":1857,"endOffset":1869,"count":0},{"startOffset":1873,"endOffset":1891,"count":70}],"isBlockCoverage":true},{"functionName":"isDenylisted","ranges":[{"startOffset":1894,"endOffset":2124,"count":73},{"startOffset":2018,"endOffset":2039,"count":0},{"startOffset":2081,"endOffset":2121,"count":0}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":2126,"endOffset":2624,"count":73},{"startOffset":2163,"endOffset":2186,"count":0},{"startOffset":2215,"endOffset":2238,"count":0},{"startOffset":2267,"endOffset":2296,"count":0},{"startOffset":2298,"endOffset":2321,"count":0},{"startOffset":2387,"endOffset":2447,"count":0}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":2626,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"skipKey","ranges":[{"startOffset":2673,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":2789,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"setScope","ranges":[{"startOffset":2878,"endOffset":3201,"count":158},{"startOffset":2916,"endOffset":2936,"count":151},{"startOffset":2938,"endOffset":2945,"count":0},{"startOffset":3005,"endOffset":3015,"count":246},{"startOffset":3017,"endOffset":3123,"count":137},{"startOffset":3037,"endOffset":3057,"count":123},{"startOffset":3059,"endOffset":3066,"count":0}],"isBlockCoverage":true},{"functionName":"setContext","ranges":[{"startOffset":3203,"endOffset":3469,"count":158},{"startOffset":3263,"endOffset":3292,"count":0},{"startOffset":3337,"endOffset":3432,"count":78}],"isBlockCoverage":true},{"functionName":"resync","ranges":[{"startOffset":3471,"endOffset":3590,"count":73},{"startOffset":3511,"endOffset":3518,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncParent","ranges":[{"startOffset":3592,"endOffset":3689,"count":73},{"startOffset":3642,"endOffset":3687,"count":66}],"isBlockCoverage":true},{"functionName":"_resyncKey","ranges":[{"startOffset":3691,"endOffset":4167,"count":73},{"startOffset":3738,"endOffset":3745,"count":0},{"startOffset":3799,"endOffset":4166,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncList","ranges":[{"startOffset":4169,"endOffset":4377,"count":73},{"startOffset":4230,"endOffset":4237,"count":41},{"startOffset":4237,"endOffset":4334,"count":32},{"startOffset":4334,"endOffset":4374,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncRemoved","ranges":[{"startOffset":4379,"endOffset":4524,"count":0}],"isBlockCoverage":false},{"functionName":"popContext","ranges":[{"startOffset":4526,"endOffset":4718,"count":73},{"startOffset":4606,"endOffset":4673,"count":0}],"isBlockCoverage":true},{"functionName":"pushContext","ranges":[{"startOffset":4720,"endOffset":4812,"count":73}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":4814,"endOffset":4996,"count":85},{"startOffset":4955,"endOffset":4973,"count":14}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":4998,"endOffset":5174,"count":85},{"startOffset":5145,"endOffset":5153,"count":0}],"isBlockCoverage":true},{"functionName":"requeue","ranges":[{"startOffset":5176,"endOffset":5363,"count":0}],"isBlockCoverage":false},{"functionName":"_getQueueContexts","ranges":[{"startOffset":5365,"endOffset":5582,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/removal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1571,"count":1}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":429,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"_removeFromScope","ranges":[{"startOffset":782,"endOffset":935,"count":0}],"isBlockCoverage":false},{"functionName":"_callRemovalHooks","ranges":[{"startOffset":937,"endOffset":1063,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":1065,"endOffset":1252,"count":0}],"isBlockCoverage":false},{"functionName":"_markRemoved","ranges":[{"startOffset":1254,"endOffset":1430,"count":0}],"isBlockCoverage":false},{"functionName":"_assertUnremoved","ranges":[{"startOffset":1432,"endOffset":1571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1313,"count":1}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":119,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"hooks","ranges":[{"startOffset":593,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"hooks","ranges":[{"startOffset":774,"endOffset":989,"count":0}],"isBlockCoverage":false},{"functionName":"hooks","ranges":[{"startOffset":991,"endOffset":1288,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/modification.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7068,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":725,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":913,"endOffset":1656,"count":1},{"startOffset":995,"endOffset":1068,"count":0},{"startOffset":1070,"endOffset":1166,"count":0},{"startOffset":1168,"endOffset":1296,"count":0},{"startOffset":1319,"endOffset":1655,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1658,"endOffset":1753,"count":2},{"startOffset":1732,"endOffset":1750,"count":0}],"isBlockCoverage":true},{"functionName":"insertBefore","ranges":[{"startOffset":1755,"endOffset":2873,"count":0}],"isBlockCoverage":false},{"functionName":"_containerInsert","ranges":[{"startOffset":2875,"endOffset":3482,"count":0}],"isBlockCoverage":false},{"functionName":"_containerInsertBefore","ranges":[{"startOffset":3484,"endOffset":3575,"count":0}],"isBlockCoverage":false},{"functionName":"_containerInsertAfter","ranges":[{"startOffset":3577,"endOffset":3671,"count":0}],"isBlockCoverage":false},{"functionName":"insertAfter","ranges":[{"startOffset":3673,"endOffset":5288,"count":0}],"isBlockCoverage":false},{"functionName":"updateSiblingKeys","ranges":[{"startOffset":5290,"endOffset":5528,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyNodeList","ranges":[{"startOffset":5530,"endOffset":6247,"count":0}],"isBlockCoverage":false},{"functionName":"unshiftContainer","ranges":[{"startOffset":6249,"endOffset":6579,"count":0}],"isBlockCoverage":false},{"functionName":"pushContainer","ranges":[{"startOffset":6581,"endOffset":6951,"count":0}],"isBlockCoverage":false},{"functionName":"hoist","ranges":[{"startOffset":6953,"endOffset":7068,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/lib/hoister.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6019,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":166,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":354,"endOffset":1097,"count":1},{"startOffset":436,"endOffset":509,"count":0},{"startOffset":511,"endOffset":607,"count":0},{"startOffset":609,"endOffset":737,"count":0},{"startOffset":760,"endOffset":1096,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1128,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"PathHoister","ranges":[{"startOffset":2025,"endOffset":2243,"count":0}],"isBlockCoverage":false},{"functionName":"isCompatibleScope","ranges":[{"startOffset":2247,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"getCompatibleScopes","ranges":[{"startOffset":2499,"endOffset":2804,"count":0}],"isBlockCoverage":false},{"functionName":"getAttachmentPath","ranges":[{"startOffset":2808,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"_getAttachmentPath","ranges":[{"startOffset":3812,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"getNextScopeAttachmentParent","ranges":[{"startOffset":4425,"endOffset":4565,"count":0}],"isBlockCoverage":false},{"functionName":"getAttachmentParentForPath","ranges":[{"startOffset":4569,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnParamBindings","ranges":[{"startOffset":4772,"endOffset":5042,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":5046,"endOffset":5984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/family.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8837,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":836,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1024,"endOffset":1767,"count":1},{"startOffset":1106,"endOffset":1179,"count":0},{"startOffset":1181,"endOffset":1277,"count":0},{"startOffset":1279,"endOffset":1407,"count":0},{"startOffset":1430,"endOffset":1766,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1769,"endOffset":1864,"count":1},{"startOffset":1843,"endOffset":1861,"count":0}],"isBlockCoverage":true},{"functionName":"getOpposite","ranges":[{"startOffset":1866,"endOffset":2035,"count":0}],"isBlockCoverage":false},{"functionName":"addCompletionRecords","ranges":[{"startOffset":2037,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"findBreak","ranges":[{"startOffset":2163,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"completionRecordForSwitch","ranges":[{"startOffset":3127,"endOffset":4415,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionRecords","ranges":[{"startOffset":4417,"endOffset":5388,"count":0}],"isBlockCoverage":false},{"functionName":"getSibling","ranges":[{"startOffset":5390,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"getPrevSibling","ranges":[{"startOffset":5610,"endOffset":5679,"count":0}],"isBlockCoverage":false},{"functionName":"getNextSibling","ranges":[{"startOffset":5681,"endOffset":5750,"count":0}],"isBlockCoverage":false},{"functionName":"getAllNextSiblings","ranges":[{"startOffset":5752,"endOffset":5989,"count":0}],"isBlockCoverage":false},{"functionName":"getAllPrevSiblings","ranges":[{"startOffset":5991,"endOffset":6228,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6230,"endOffset":6475,"count":5},{"startOffset":6417,"endOffset":6473,"count":0}],"isBlockCoverage":true},{"functionName":"_getKey","ranges":[{"startOffset":6477,"endOffset":6984,"count":5},{"startOffset":6829,"endOffset":6982,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6627,"endOffset":6823,"count":5}],"isBlockCoverage":true},{"functionName":"_getPattern","ranges":[{"startOffset":6986,"endOffset":7292,"count":0}],"isBlockCoverage":false},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":7294,"endOffset":7397,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":7399,"endOffset":7512,"count":5}],"isBlockCoverage":true},{"functionName":"getBindingIdentifierPaths","ranges":[{"startOffset":7514,"endOffset":8721,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterBindingIdentifierPaths","ranges":[{"startOffset":8723,"endOffset":8837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/comments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":271,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":459,"endOffset":1202,"count":1},{"startOffset":541,"endOffset":614,"count":0},{"startOffset":616,"endOffset":712,"count":0},{"startOffset":714,"endOffset":842,"count":0},{"startOffset":865,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"shareCommentsWithSiblings","ranges":[{"startOffset":1204,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"addComment","ranges":[{"startOffset":1780,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"addComments","ranges":[{"startOffset":1874,"endOffset":1958,"count":0}],"isBlockCoverage":false}]},{"scriptId":"770","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/visitors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6790,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":297,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":485,"endOffset":1228,"count":2},{"startOffset":567,"endOffset":640,"count":0},{"startOffset":642,"endOffset":738,"count":0},{"startOffset":740,"endOffset":868,"count":0},{"startOffset":891,"endOffset":1227,"count":0}],"isBlockCoverage":true},{"functionName":"explode","ranges":[{"startOffset":1230,"endOffset":3181,"count":36},{"startOffset":1283,"endOffset":1298,"count":27},{"startOffset":1298,"endOffset":1375,"count":9},{"startOffset":1375,"endOffset":1633,"count":31},{"startOffset":1412,"endOffset":1421,"count":9},{"startOffset":1421,"endOffset":1498,"count":22},{"startOffset":1498,"endOffset":1633,"count":0},{"startOffset":1633,"endOffset":1798,"count":9},{"startOffset":1798,"endOffset":2339,"count":40},{"startOffset":1835,"endOffset":1844,"count":18},{"startOffset":1844,"endOffset":1907,"count":22},{"startOffset":1907,"endOffset":1916,"count":20},{"startOffset":1916,"endOffset":2106,"count":2},{"startOffset":2106,"endOffset":2291,"count":1},{"startOffset":2148,"endOffset":2285,"count":2},{"startOffset":2177,"endOffset":2229,"count":0},{"startOffset":2291,"endOffset":2335,"count":1},{"startOffset":2339,"endOffset":2388,"count":9},{"startOffset":2388,"endOffset":3016,"count":41},{"startOffset":2425,"endOffset":2434,"count":19},{"startOffset":2434,"endOffset":2601,"count":22},{"startOffset":2601,"endOffset":2743,"count":0},{"startOffset":2743,"endOffset":2763,"count":22},{"startOffset":2763,"endOffset":2772,"count":15},{"startOffset":2772,"endOffset":2837,"count":7},{"startOffset":2837,"endOffset":3012,"count":46},{"startOffset":2899,"endOffset":2942,"count":6},{"startOffset":2942,"endOffset":3006,"count":40},{"startOffset":3012,"endOffset":3016,"count":7},{"startOffset":3016,"endOffset":3065,"count":9},{"startOffset":3065,"endOffset":3160,"count":74},{"startOffset":3102,"endOffset":3111,"count":19},{"startOffset":3111,"endOffset":3160,"count":55},{"startOffset":3160,"endOffset":3180,"count":9}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":3183,"endOffset":4317,"count":9},{"startOffset":3235,"endOffset":3242,"count":0},{"startOffset":3281,"endOffset":3437,"count":0},{"startOffset":3486,"endOffset":4286,"count":31},{"startOffset":3541,"endOffset":3607,"count":0},{"startOffset":3644,"endOffset":3653,"count":9},{"startOffset":3653,"endOffset":3694,"count":22},{"startOffset":3694,"endOffset":3805,"count":0},{"startOffset":3805,"endOffset":3886,"count":22},{"startOffset":3886,"endOffset":4282,"count":2},{"startOffset":4101,"endOffset":4268,"count":0}],"isBlockCoverage":true},{"functionName":"validateVisitorMethods","ranges":[{"startOffset":4319,"endOffset":4559,"count":2},{"startOffset":4455,"endOffset":4553,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":4561,"endOffset":5117,"count":7},{"startOffset":4681,"endOffset":5092,"count":14},{"startOffset":4813,"endOffset":5088,"count":56},{"startOffset":4871,"endOffset":4881,"count":0},{"startOffset":5033,"endOffset":5038,"count":42}],"isBlockCoverage":true},{"functionName":"wrapWithStateOrWrapper","ranges":[{"startOffset":5119,"endOffset":5741,"count":56},{"startOffset":5252,"endOffset":5717,"count":28},{"startOffset":5314,"endOffset":5323,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5342,"endOffset":5684,"count":28},{"startOffset":5519,"endOffset":5576,"count":0}],"isBlockCoverage":true},{"functionName":"newFn","ranges":[{"startOffset":5416,"endOffset":5489,"count":15}],"isBlockCoverage":true},{"functionName":"newFn.toString","ranges":[{"startOffset":5629,"endOffset":5648,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEntranceObjects","ranges":[{"startOffset":5743,"endOffset":5983,"count":9},{"startOffset":5819,"endOffset":5981,"count":40},{"startOffset":5851,"endOffset":5860,"count":18},{"startOffset":5860,"endOffset":5923,"count":22},{"startOffset":5923,"endOffset":5977,"count":20}],"isBlockCoverage":true},{"functionName":"ensureCallbackArrays","ranges":[{"startOffset":5985,"endOffset":6161,"count":64},{"startOffset":6038,"endOffset":6066,"count":52},{"startOffset":6068,"endOffset":6092,"count":48},{"startOffset":6108,"endOffset":6135,"count":6},{"startOffset":6137,"endOffset":6159,"count":3}],"isBlockCoverage":true},{"functionName":"wrapCheck","ranges":[{"startOffset":6163,"endOffset":6376,"count":2}],"isBlockCoverage":true},{"functionName":"newFn","ranges":[{"startOffset":6213,"endOffset":6315,"count":50},{"startOffset":6264,"endOffset":6311,"count":7}],"isBlockCoverage":true},{"functionName":"newFn.toString","ranges":[{"startOffset":6337,"endOffset":6356,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnoreKey","ranges":[{"startOffset":6378,"endOffset":6657,"count":257},{"startOffset":6432,"endOffset":6444,"count":90},{"startOffset":6444,"endOffset":6467,"count":167},{"startOffset":6467,"endOffset":6484,"count":165},{"startOffset":6485,"endOffset":6508,"count":165},{"startOffset":6510,"endOffset":6522,"count":2},{"startOffset":6522,"endOffset":6569,"count":165},{"startOffset":6570,"endOffset":6591,"count":165},{"startOffset":6592,"endOffset":6614,"count":165},{"startOffset":6616,"endOffset":6638,"count":0},{"startOffset":6638,"endOffset":6656,"count":165}],"isBlockCoverage":true},{"functionName":"mergePair","ranges":[{"startOffset":6659,"endOffset":6790,"count":63},{"startOffset":6729,"endOffset":6788,"count":35},{"startOffset":6767,"endOffset":6772,"count":32}],"isBlockCoverage":true}]},{"scriptId":"771","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/hub.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"getCode","ranges":[{"startOffset":121,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"getScope","ranges":[{"startOffset":137,"endOffset":150,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":154,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"buildError","ranges":[{"startOffset":245,"endOffset":318,"count":0}],"isBlockCoverage":false}]}],"timestamp":350634.178286,"source-map-cache":{"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/mablung-babel-plugin-replace-string-literal/release/test/library/visitor.test.js":{"lineLengths":[56,32,23,0,47,0,25,0,25,16,5,39,5,15,7,46,41,0,0,0,0,0,0,0,3,0,30,0,50,59,0,88,0,42,0,3,0,35,0,57,66,0,88,0,42,0,3,0,36,0,51,60,0,88,0,42,0,3,0,27,0,40,49,0,88,0,42,0,3,0,31,0,47,57,0,88,0,42,0,3,0,40,0,73,83,0,88,0,42,0,3,0,45,0,50,60,0,88,0,42,0,3,40],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/source/test/library/visitor.test.js"],"names":["createRequire","CreateRequire","Babel","Test","Require","import","meta","url","beforeEach","test","context","option","resolve","codeIn","expectedCodeOut","code","actualCodeOut","transformAsync","is"],"mappings":"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","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport Babel from '@babel/core'\nimport Test from 'ava'\n\nconst Require = CreateRequire(import.meta.url)\n\nTest.beforeEach((test) => {\n\n  test.context.option = { \n    'plugins': [ \n      [\n        Require.resolve('../../index.cjs'),\n        {\n          'rule': [\n            {\n              'searchFor': /^(\\.{1,2}\\/.*?)\\.js$/gi,\n              'replaceWith': '$1.cjs'\n            }\n          ]\n        }      \n      ]\n    ]\n  }\n  \n})\n\nTest('import', async (test) => {\n\n  let codeIn = 'import { abc } from \\'./abc.js\\''\n  let expectedCodeOut = 'import { abc } from \"./abc.cjs\";'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('import(...)', async (test) => {\n\n  let codeIn = 'const abcPromise = import(\\'./abc.js\\')'\n  let expectedCodeOut = 'const abcPromise = import(\"./abc.cjs\");'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('require(...)', async (test) => {\n\n  let codeIn = 'const abc = require(\\'./abc.js\\')'\n  let expectedCodeOut = 'const abc = require(\"./abc.cjs\");'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('let', async (test) => {\n\n  let codeIn = 'let abc = \\'./abc.js\\''\n  let expectedCodeOut = 'let abc = \"./abc.cjs\";'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('let ...', async (test) => {\n\n  let codeIn = 'let abc = \\'./ab\\' + \\'c.js\\''\n  let expectedCodeOut = 'let abc = \\'./ab\\' + \\'c.js\\';'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('console.log(...)', async (test) => {\n\n  let codeIn = 'console.log(\\'Here at ./abc.js and there at ./def.js\\')'\n  let expectedCodeOut = 'console.log(\\'Here at ./abc.js and there at ./def.js\\');'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('fs.readFileAsync(...)', async (test) => {\n\n  let codeIn = 'fs.readFileAsync(\\'./abc.json\\')'\n  let expectedCodeOut = 'fs.readFileAsync(\\'./abc.json\\');'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n"],"file":"visitor.test.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/install.cjs":{"lineLengths":[13,0,50,0,36,0,95,0,33,36,42,32,91,12,18,5,3,3,36],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/source-commonjs/install.cjs"],"names":["SourceMapSupport","install","source","test","retrieveSourceMap","URL","fileURLToPath"],"mappings":";;AAAA;;AAEA;;;;AAEAA,wBAAiBC,OAAjB,CAAyB;AACvB,8BAA4B,KADL;AAEvB,uBAAqB,UAASC,MAAT,EAAiB;AAEpC,QAAI,SAASC,IAAT,CAAcD,MAAd,CAAJ,EAA2B;AACzB,aAAOF,wBAAiBI,iBAAjB,CAAmCC,aAAIC,aAAJ,CAAkBJ,MAAlB,CAAnC,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AAEF;AAVsB,CAAzB","sourcesContent":["import URL from 'url'\n\nimport { SourceMapSupport } from './index.cjs'\n\nSourceMapSupport.install({ \n  'handleUncaughtExceptions': false, \n  'retrieveSourceMap': function(source) {\n\n    if (/^file:/.test(source)) {\n      return SourceMapSupport.retrieveSourceMap(URL.fileURLToPath(source))\n    } else {\n      return null\n    }\n\n  }\n})\n"],"file":"install.cjs","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/index.cjs":{"lineLengths":[13,0,46,13,3,52,19,20,37,3,3,0,78,0,95,34],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/source-commonjs/index.cjs"],"names":[],"mappings":";;;;;;;;;;;;AAAA","sourcesContent":["import SourceMapSupport from 'source-map-support'\n\nexport { SourceMapSupport }\n"],"file":"index.cjs","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/release/index.cjs":{"lineLengths":[13,0,46,13,3,43,19,20,26,3,3,0,68,0,95,34],"data":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[],"file":"index.cjs","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/release/library/index.cjs":{"lineLengths":[13,0,46,13,3,25,0,70,0,40,0,61,0,27,34],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/source/library/index.cjs"],"names":["Plugin","createPlugin","Visitor"],"mappings":";;;;;;;AAAA;;AAEA;;eAEeA,eAAOC,YAAP,CAAoBC,gBAApB,C","sourcesContent":["import { Plugin } from '@virtualpatterns/mablung-babel-plugin/plugin'\n\nimport { Visitor } from './visitor.cjs'\n\nexport default Plugin.createPlugin(Visitor)\n"],"file":"index.cjs","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/plugin.cjs":{"lineLengths":[13,0,46,13,3,24,0,65,0,186,0,743,0,7,24,15,0,14,37,63,29,72,52,97,36,10,0,43,44,8,0,44,43,8,0,46,29,36,57,0,44,60,59,12,9,0,67,65,0,86,37,32,55,68,15,14,0,31,54,67,15,13,0,12,9,9,43,26,6,3,0,1,0,24,35],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/source/library/plugin.cjs"],"names":["pascalCase","PascalCase","ChangeCase","Plugin","createPlugin","visitorClass","babel","visitorInstance","pluginObject","pre","state","onBeforeNode","post","onAfterNode","nodeType","visitorObject","forEach","onNodeName","path","onEnterNodeName","onExitNodeName","enter","exit","visitor"],"mappings":";;;;;;;AAAA;;;;;;AAEA,MAAM;AAAEA,EAAAA,UAAU,EAAEC;AAAd,IAA6BC,UAAnC;;AAEA,MAAMC,MAAN,CAAa;AAEX,SAAOC,YAAP,CAAoBC,YAApB,EAAkC;AAChC;AAEA,WAAO,UAASC,KAAT,EAAgB;AACrB;AAEA,UAAIC,eAAe,GAAG,IAAIF,YAAJ,CAAiBC,KAAjB,CAAtB;AAEA,UAAIE,YAAY,GAAG,EAAnB,CALqB,CAOrB;AACA;AACA;;AAEAA,MAAAA,YAAY,CAACC,GAAb,GAAmB,UAASC,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACI,YAAhB,CAA6BD,KAA7B;AAAqC,OAA1E;;AACAF,MAAAA,YAAY,CAACI,IAAb,GAAoB,UAASF,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACM,WAAhB,CAA4BH,KAA5B;AAAoC,OAA1E;;AAEA,UAAII,QAAQ,GAAGP,eAAe,CAACO,QAA/B;AACA,UAAIC,aAAa,GAAG,EAApB;AAEAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBF,QAAD,IAAc;AAE7B,YAAIG,UAAU,GAAI,KAAIhB,UAAU,CAACa,QAAD,CAAW,MAA3C;;AAEA,YAAIG,UAAU,IAAIV,eAAlB,EAAmC;AACjCQ,UAAAA,aAAa,CAACD,QAAD,CAAb,GAA0B,UAASI,IAAT,EAAeR,KAAf,EAAsB;AAAEH,YAAAA,eAAe,CAACU,UAAD,CAAf,CAA4BC,IAA5B,EAAkCR,KAAlC,EAAyC,IAAzC;AAAgD,WAAlG;AACD;;AAED,YAAIS,eAAe,GAAI,UAASlB,UAAU,CAACa,QAAD,CAAW,MAArD;AACA,YAAIM,cAAc,GAAI,SAAQnB,UAAU,CAACa,QAAD,CAAW,MAAnD;;AAEA,YAAIK,eAAe,IAAIZ,eAAnB,IACAa,cAAc,IAAIb,eADtB,EACuC;AAErCQ,UAAAA,aAAa,CAACD,QAAD,CAAb,GAA0B;AAExBO,YAAAA,KAAK,CAACH,IAAD,EAAOR,KAAP,EAAc;AACjB,kBAAIS,eAAe,IAAIZ,eAAvB,EAAwC;AACtCA,gBAAAA,eAAe,CAACY,eAAD,CAAf,CAAiCD,IAAjC,EAAuCR,KAAvC,EAA8C,IAA9C;AACD;AACF,aANuB;;AAQxBY,YAAAA,IAAI,CAACJ,IAAD,EAAOR,KAAP,EAAc;AAChB,kBAAIU,cAAc,IAAIb,eAAtB,EAAuC;AACrCA,gBAAAA,eAAe,CAACa,cAAD,CAAf,CAAgCF,IAAhC,EAAsCR,KAAtC,EAA6C,IAA7C;AACD;AACF;;AAZuB,WAA1B;AAgBD;AAEF,OAhCD;AAkCAF,MAAAA,YAAY,CAACe,OAAb,GAAuBR,aAAvB;AAEA,aAAOP,YAAP;AAED,KAvDD;AAyDD;;AA9DU","sourcesContent":["import * as ChangeCase from 'change-case'\n\nconst { pascalCase: PascalCase } = ChangeCase\n\nclass Plugin {\n\n  static createPlugin(visitorClass) {\n    // console.log(`Plugin.createPlugin(${visitorClass.name})`)\n\n    return function(babel) {\n      // console.log(`Plugin.createPlugin(${visitorClass.name})(babel)`)\n\n      let visitorInstance = new visitorClass(babel)\n\n      let pluginObject = {}\n\n      // pluginObject.manipulateOptions = function(option, parserOption) {\n      //   console.dir(parserOption)\n      // }\n\n      pluginObject.pre = function(state) { visitorInstance.onBeforeNode(state) }\n      pluginObject.post = function(state) { visitorInstance.onAfterNode(state) }\n\n      let nodeType = visitorInstance.nodeType\n      let visitorObject = {}\n\n      nodeType.forEach((nodeType) => {\n\n        let onNodeName = `on${PascalCase(nodeType)}Node`\n\n        if (onNodeName in visitorInstance) {\n          visitorObject[nodeType] = function(path, state) { visitorInstance[onNodeName](path, state, this) }\n        }\n\n        let onEnterNodeName = `onEnter${PascalCase(nodeType)}Node`\n        let onExitNodeName = `onExit${PascalCase(nodeType)}Node`\n\n        if (onEnterNodeName in visitorInstance ||\n            onExitNodeName in visitorInstance) {\n\n          visitorObject[nodeType] = { \n\n            enter(path, state) {\n              if (onEnterNodeName in visitorInstance) {\n                visitorInstance[onEnterNodeName](path, state, this)\n              }\n            }, \n\n            exit(path, state) {\n              if (onExitNodeName in visitorInstance) {\n                visitorInstance[onExitNodeName](path, state, this)\n              }\n            } \n\n          }\n\n        }\n\n      })\n\n      pluginObject.visitor = visitorObject\n\n      return pluginObject\n\n    }\n\n  }\n\n}\n\nexport { Plugin }\n"],"file":"plugin.cjs","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/change-case/dist/index.js":{"lineLengths":[13,62,31,53,55,56,51,54,50,53,54,52,56,53,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/change-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qDAA2B;AAC3B,uDAA6B;AAC7B,wDAA8B;AAC9B,mDAAyB;AACzB,sDAA4B;AAC5B,kDAAwB;AACxB,qDAA2B;AAC3B,sDAA4B;AAC5B,oDAA0B;AAC1B,wDAA8B;AAC9B,qDAA2B","sourcesContent":["export * from \"camel-case\";\nexport * from \"capital-case\";\nexport * from \"constant-case\";\nexport * from \"dot-case\";\nexport * from \"header-case\";\nexport * from \"no-case\";\nexport * from \"param-case\";\nexport * from \"pascal-case\";\nexport * from \"path-case\";\nexport * from \"sentence-case\";\nexport * from \"snake-case\";\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/camel-case/dist/index.js":{"lineLengths":[13,62,90,31,43,43,20,35,59,1,48,48,20,35,57,1,58,36,45,105,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/camel-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,2CAKqB;AAIrB,SAAgB,kBAAkB,CAAC,KAAa,EAAE,KAAa;IAC7D,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,iCAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3C,CAAC;AAHD,gDAGC;AAED,SAAgB,uBAAuB,CAAC,KAAa,EAAE,KAAa;IAClE,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,sCAAwB,CAAC,KAAK,CAAC,CAAC;AACzC,CAAC;AAHD,0DAGC;AAED,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,wBAAU,CAAC,KAAK,qBACrB,SAAS,EAAE,kBAAkB,IAC1B,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import {\n  pascalCase,\n  pascalCaseTransform,\n  pascalCaseTransformMerge,\n  Options,\n} from \"pascal-case\";\n\nexport { Options };\n\nexport function camelCaseTransform(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransform(input, index);\n}\n\nexport function camelCaseTransformMerge(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransformMerge(input);\n}\n\nexport function camelCase(input: string, options: Options = {}) {\n  return pascalCase(input, {\n    transform: camelCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/pascal-case/dist/index.js":{"lineLengths":[13,62,93,31,35,44,36,51,60,44,5,53,1,50,42,72,1,60,37,45,113,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/pascal-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAI1C,SAAgB,mBAAmB,CAAC,KAAa,EAAE,KAAa;IAC9D,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjD,IAAI,KAAK,GAAG,CAAC,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,IAAI,GAAG,EAAE;QACrD,OAAO,MAAI,SAAS,GAAG,UAAY,CAAC;KACrC;IACD,OAAO,KAAG,SAAS,CAAC,WAAW,EAAE,GAAG,UAAY,CAAC;AACnD,CAAC;AAPD,kDAOC;AAED,SAAgB,wBAAwB,CAAC,KAAa;IACpD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACtE,CAAC;AAFD,4DAEC;AAED,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,EAAE,EACb,SAAS,EAAE,mBAAmB,IAC3B,OAAO,EACV,CAAC;AACL,CAAC;AAND,gCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/no-case/dist/index.js":{"lineLengths":[13,62,24,41,84,74,34,42,3,77,3,33,45,316,83,18,28,56,41,16,43,14,42,79,1,24,3,63,3,36,29,40,87,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/no-case/src/index.ts"],"names":[],"mappings":";;;AAAA,yCAAuC;AASvC,oFAAoF;AACpF,IAAM,oBAAoB,GAAG,CAAC,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;AAE5E,kCAAkC;AAClC,IAAM,oBAAoB,GAAG,cAAc,CAAC;AAE5C;;GAEG;AACH,SAAgB,MAAM,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAEvD,IAAA,KAIE,OAAO,YAJyB,EAAlC,WAAW,mBAAG,oBAAoB,KAAA,EAClC,KAGE,OAAO,YAHyB,EAAlC,WAAW,mBAAG,oBAAoB,KAAA,EAClC,KAEE,OAAO,UAFY,EAArB,SAAS,mBAAG,sBAAS,KAAA,EACrB,KACE,OAAO,UADM,EAAf,SAAS,mBAAG,GAAG,KAAA,CACL;IAEZ,IAAI,MAAM,GAAG,OAAO,CAClB,OAAO,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,CAAC,EACrC,WAAW,EACX,IAAI,CACL,CAAC;IACF,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAExB,oDAAoD;IACpD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI;QAAE,KAAK,EAAE,CAAC;IAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI;QAAE,GAAG,EAAE,CAAC;IAE9C,sCAAsC;IACtC,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7E,CAAC;AAtBD,wBAsBC;AAED;;GAEG;AACH,SAAS,OAAO,CAAC,KAAa,EAAE,EAAqB,EAAE,KAAa;IAClE,IAAI,EAAE,YAAY,MAAM;QAAE,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC1D,OAAO,EAAE,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,EAAE,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,EAAxB,CAAwB,EAAE,KAAK,CAAC,CAAC;AACnE,CAAC","sourcesContent":["import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \",\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/lower-case/dist/index.js":{"lineLengths":[13,62,53,3,72,3,24,9,46,14,24,24,25,10,6,9,26,14,24,24,25,10,6,9,61,14,30,30,30,36,36,36,10,6,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/lower-case/src/index.ts"],"names":[],"mappings":";;;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,6BAA6B;QACrC,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,SAAS;QACjB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,4CAA4C;QACpD,GAAG,EAAE;YACH,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;SACxB;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACzE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/capital-case/dist/index.js":{"lineLengths":[13,62,60,31,35,53,38,66,1,52,38,45,115,1,34,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/capital-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,oBAAoB,CAAC,KAAa;IAChD,OAAO,iCAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AAC7C,CAAC;AAFD,oDAEC;AAED,SAAgB,WAAW,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC9D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,oBAAoB,IAC5B,OAAO,EACV,CAAC;AACL,CAAC;AAND,kCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case-first/dist/index.js":{"lineLengths":[13,62,32,3,53,3,32,59,1,40,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case-first/src/index.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,SAAgB,cAAc,CAAC,KAAa;IAC1C,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC;AAFD,wCAEC","sourcesContent":["/**\n * Upper case the first character of an input string.\n */\nexport function upperCaseFirst(input: string) {\n  return input.charAt(0).toUpperCase() + input.substr(1);\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/constant-case/dist/index.js":{"lineLengths":[13,62,30,31,35,41,39,45,117,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/constant-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAC1C,yCAAuC;AAIvC,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,sBAAS,IACjB,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCase } from \"upper-case\";\n\nexport { Options };\n\nexport function constantCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"_\",\n    transform: upperCase,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case/dist/index.js":{"lineLengths":[13,62,53,3,72,3,24,9,28,14,24,10,6,9,28,14,24,10,6,9,79,14,25,25,25,26,26,26,10,6,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case/src/index.ts"],"names":[],"mappings":";;;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,8DAA8D;QACtE,GAAG,EAAE;YACH,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;SACd;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACzE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\",\n    },\n  },\n};\n\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return upperCase(str);\n}\n\n/**\n * Upper case as a function.\n */\nexport function upperCase(str: string) {\n  return str.toUpperCase();\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/dot-case/dist/index.js":{"lineLengths":[13,62,25,31,35,34,45,82,1,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/dot-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAI1C,SAAgB,OAAO,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC1D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,0BAKC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/header-case/dist/index.js":{"lineLengths":[13,62,28,31,45,37,45,92,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/header-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,6CAAoD;AAIpD,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,0BAAW,CAAC,KAAK,qBACtB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,gCAKC","sourcesContent":["import { capitalCase, Options } from \"capital-case\";\n\nexport { Options };\n\nexport function headerCase(input: string, options: Options = {}) {\n  return capitalCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/param-case/dist/index.js":{"lineLengths":[13,62,27,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/param-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-case/dist/index.js":{"lineLengths":[13,62,26,31,37,35,45,84,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,qCAA4C;AAI5C,SAAgB,QAAQ,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC3D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,4BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function pathCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"/\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/sentence-case/dist/index.js":{"lineLengths":[13,62,62,31,35,53,46,37,20,57,18,1,54,39,45,116,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/sentence-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,qBAAqB,CAAC,KAAa,EAAE,KAAa;IAChE,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IACnC,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,iCAAc,CAAC,MAAM,CAAC,CAAC;IAC/C,OAAO,MAAM,CAAC;AAChB,CAAC;AAJD,sDAIC;AAED,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,qBAAqB,IAC7B,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/snake-case/dist/index.js":{"lineLengths":[13,62,27,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/snake-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function snakeCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"_\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/release/library/visitor.cjs":{"lineLengths":[13,0,46,13,3,25,0,53,0,72,0,95,0,40,22,17,3,0,18,29,3,0,36,77,28,27,26,165,89,7,3,0,6,14,8,50,30,8,6,10,0,0,26,36],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/source/library/visitor.cjs"],"names":["Visitor","BaseVisitor","constructor","babel","nodeType","onStringLiteralNode","path","state","option","opts","rule","forEach","searchForPattern","Is","regexp","searchFor","RegExp","node","value","replace","replaceWith"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,OAAN,SAAsBC,gBAAtB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAED,MAAIC,QAAJ,GAAe;AACb,WAAO,CAAE,eAAF,CAAP;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,IAAD,EAAOC,KAAP,EAAc;AAC/B;AAEA,QAAIC,MAAM,GAAGD,KAAK,CAACE,IAAnB;AACA,QAAIC,IAAI,GAAGF,MAAM,CAACE,IAAlB;AAEAA,IAAAA,IAAI,CAACC,OAAL,CAAcD,IAAD,IAAU;AAErBA,MAAAA,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAA7B,GAAgDC,YAAGC,MAAH,CAAUJ,IAAI,CAACK,SAAf,IAA4BL,IAAI,CAACK,SAAjC,GAA6C,IAAIC,MAAJ,CAAWN,IAAI,CAACK,SAAhB,EAA2B,IAA3B,CAArH;AAEAT,MAAAA,IAAI,CAACW,IAAL,CAAUC,KAAV,GAAkBZ,IAAI,CAACW,IAAL,CAAUC,KAAV,CAAgBC,OAAhB,CAAwBT,IAAI,CAACE,gBAA7B,EAA+CF,IAAI,CAACU,WAApD,CAAlB;AAED,KAND;AAQD;;AAxB+B,C,CA8BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Is from '@pwn/is'\nimport { Visitor as BaseVisitor } from '@virtualpatterns/mablung-babel-plugin/visitor'\n\nclass Visitor extends BaseVisitor {\n\n  constructor(babel) {\n    super(babel)\n  }\n\n  get nodeType() {\n    return [ 'StringLiteral' ]\n  }\n\n  onStringLiteralNode(path, state) {\n    // console.log(`Visitor.onStringLiteralNode('${path.node.name}', state)`)\n\n    let option = state.opts\n    let rule = option.rule\n\n    rule.forEach((rule) => {\n\n      rule.searchForPattern = rule.searchForPattern ? rule.searchForPattern : Is.regexp(rule.searchFor) ? rule.searchFor : new RegExp(rule.searchFor, 'gi')\n\n      path.node.value = path.node.value.replace(rule.searchForPattern, rule.replaceWith)\n\n    })\n\n  }\n\n}\n\nexport { Visitor }\n\n// {\n//   'rule': [\n//     {\n//       'searchFor': '../error/replace-error.js',\n//       'replaceWith': '...',\n//     }\n//   ]\n// }      \n"],"file":"visitor.cjs","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/visitor.cjs":{"lineLengths":[13,0,46,13,3,25,0,15,22,24,3,0,18,12,24,6,3,0,16,13,56,68,6,0,0,15,13,4,0,1,0,26,36],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/source/library/visitor.cjs"],"names":["Visitor","constructor","babel","_babel","nodeType","onBeforeNode","onAfterNode"],"mappings":";;;;;;;AAAA,MAAMA,OAAN,CAAc;AAEZC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKC,MAAL,GAAcD,KAAd;AACD;;AAED,MAAIE,QAAJ,GAAe;AACb,WAAO;AAAE;AAAF,KAAP;AACD;;AAEDC,EAAAA,YAAY;AAAE;AAAc,GAAE,CAVlB,CAYZ;AACA;AACA;;;AAEAC,EAAAA,WAAW;AAAE;AAAc,GAAE;;AAhBjB","sourcesContent":["class Visitor {\n\n  constructor(babel) {\n    this._babel = babel\n  }\n\n  get nodeType() {\n    return [ /* 'Identifier' */ ]\n  }\n  \n  onBeforeNode( /* state */ ) {}\n\n  // onIdentifierNode( /* path, state, context */ ) {\n  //   console.log('Visitor.onIdentifierNode(path, state, context)')\n  // }\n  \n  onAfterNode( /* state */ ) {}\n\n}\n\nexport { Visitor }"],"file":"visitor.cjs","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/lib/index.js":{"lineLengths":[13,0,62,0,24,24,20,22,20,21,17,33,24,26,29,29,35,25,27,25,26,24,32,23,32,40,40,52,32,36,32,34,56,30,3,0,1,27,0,44,25,45,28,15,1,0,35,30,15,9,5,1,0,15,29,14,5,35,14,5,37,14,5,35,14,5,35,14,5,31,14,5,28,32,15,14,5,37,15,14,5,36,15,14,5,31,35,30,15,14,5,34,15,14,5,35,15,14,5,29,33,30,15,14,5,29,29,14,5,28,14,5,29,14,5,36,14,5,26,32,14,5,35,30,14,5,38,34,14,5,33,14,5,37,15,14,5,25,28,14,5,47,26,15,12,5,31,15,12,5,34,11,12,14,5,28,15,11,14,5,29,15,11,14,5,33,42,34,35,33,34,34,44,42,40,33,15,13,11,14,5,30,15,14,14,5,28,13,5,30,33,15,14,26,5,33,32,14,5,33,39,39,38,14,5,28,11,14,5,32,14,5,37,30,10,5,40,14,5,27,36,14,5,35,34,15,11,14,5,29,29,33,34,10,5,31,30,15,14,5,32,14,5,34,14,5,34,14,5,38,14,5,35,36,14,5,32,14,5,32,14,5,34,14,5,28,15,12,5,44,15,12,5,36,15,11,14,5,32,15,11,14,5,36,15,11,14,4,2,0,43,53,26,17,12,12,14,14,18,0,12,19,3,1,55,29,17,16,16,16,12,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,12,19,3,1,0,16,26,23,25,21,22,3,0,1,22,27,24,22,27,33,23,19,3,0,1,37,15,20,12,27,0,68,11,37,3,0,48,1,0,18,17,35,45,3,0,19,34,3,0,33,70,3,0,1,0,22,33,1,0,41,23,60,46,45,3,0,69,50,13,5,0,27,28,0,43,34,5,0,31,13,5,0,65,83,48,12,7,5,0,35,0,65,59,0,42,49,0,31,50,14,9,14,50,37,9,0,51,7,5,0,57,0,41,57,60,40,5,3,0,24,64,42,54,0,49,61,55,41,14,47,7,34,38,0,94,56,44,7,5,0,62,31,5,0,65,30,5,0,57,0,21,26,32,71,16,0,29,77,16,0,30,70,16,0,31,69,16,0,28,75,16,7,242,84,5,0,20,38,126,59,43,16,71,65,80,20,13,11,9,7,55,63,45,67,89,54,18,13,11,9,0,52,60,42,9,14,65,63,18,11,9,0,71,0,37,49,9,0,63,0,44,34,9,7,5,0,42,0,27,121,46,14,105,0,44,84,84,16,51,9,7,5,0,21,3,0,1,0,37,55,81,115,87,86,108,76,63,66,82,76,92,68,63,61,70,188,106,139,71,71,64,127,66,72,90,55,60,67,56,55,160,97,85,106,41,108,48,125,95,50,64,61,85,91,48,47,36,46,57,71,62,45,45,60,34,92,56,77,67,61,97,67,55,101,68,58,47,87,68,114,83,93,94,100,54,55,51,54,55,129,109,83,90,35,70,59,122,99,102,85,96,132,127,57,176,180,182,68,68,140,74,57,58,60,103,79,77,38,165,65,70,174,178,180,67,126,64,83,47,91,98,66,87,180,58,73,43,121,69,83,106,74,74,84,98,137,46,56,53,48,64,81,75,80,3,0,42,31,12,303,15,3,0,40,72,3,0,54,49,107,38,10,9,23,3,0,33,41,37,0,37,57,17,12,16,5,3,0,1,0,54,28,12,9,6,21,0,9,41,18,0,48,18,14,11,6,16,3,0,35,15,0,9,29,23,20,5,0,49,46,16,3,0,36,25,50,47,16,3,0,29,47,3,0,30,45,72,92,62,48,111,61,92,3,0,31,38,28,3,0,26,54,40,12,35,5,3,0,40,31,3,0,26,30,0,239,3,0,25,50,40,61,21,3,0,33,40,82,54,27,3,0,94,106,0,32,58,35,5,0,32,3,0,38,30,21,24,57,0,24,63,0,24,63,0,25,64,0,23,45,0,23,45,0,24,46,0,14,56,5,3,0,49,69,30,22,16,3,0,62,61,58,3,0,104,36,30,118,41,25,26,62,39,3,0,72,92,0,15,29,53,29,5,0,16,3,0,81,101,0,15,25,29,5,0,16,3,0,37,54,43,18,5,0,43,3,0,51,53,67,29,65,12,60,5,3,0,40,47,0,40,37,38,28,25,5,0,16,3,0,31,43,13,5,0,38,3,0,21,28,0,24,34,29,14,0,36,101,45,54,33,9,0,14,5,0,16,3,0,60,80,0,36,95,43,7,0,23,49,32,57,7,84,28,5,0,16,3,0,34,42,29,5,0,48,3,0,25,43,3,0,26,76,3,0,24,69,3,0,3,0,18,55,24,25,32,27,23,27,41,29,3,0,1,17,45,45,47,45,45,45,68,55,54,2,0,71,40,34,11,3,0,37,0,81,35,3,0,39,2,0,48,22,0,31,124,21,5,3,0,35,0,30,34,3,2,0,50,106,32,2,0,48,49,32,2,0,50,133,94,32,2,0,44,0,82,250,56,10,55,3,0,33,2,0,45,47,29,10,46,3,0,33,2,0,46,52,32,2,0,4315,2645,85,106,62,1815,929,0,35,20,0,60,18,33,22,33,3,0,15,1,0,34,36,30,36,31,0,23,83,3,0,57,1,33,36,29,30,30,36,31,0,23,78,3,0,103,1,0,23,329,109,35,2,50,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,30,1,0,52,41,39,1,0,31,33,34,31,38,31,38,31,35,67,38,37,37,41,42,38,39,41,47,48,92,66,58,68,68,48,96,62,46,63,67,64,40,40,40,90,90,90,64,64,30,0,178,34,110,198,58,81,102,80,137,127,207,126,145,123,111,156,148,108,155,207,99,100,66,128,133,89,78,107,59,140,91,107,56,88,94,90,82,104,166,89,106,54,3,0,38,248,1,0,34,68,1,0,38,87,1,0,27,30,28,22,31,2,0,32,19,19,0,41,59,3,0,24,1,0,51,27,12,0,43,33,28,31,34,5,0,24,79,5,0,24,53,5,0,28,96,44,33,9,7,0,42,5,0,25,42,62,0,57,35,45,37,16,52,9,7,0,39,5,0,35,42,31,38,40,36,18,5,0,26,36,44,41,32,44,38,0,91,77,7,0,35,44,34,58,14,58,7,5,0,44,42,31,31,22,27,0,37,38,46,14,36,38,0,39,48,9,7,0,31,5,0,33,18,45,51,5,0,36,18,50,40,45,0,35,75,14,39,7,0,32,53,35,31,32,90,89,75,32,23,54,5,0,42,37,48,47,51,42,51,48,36,58,16,29,80,11,0,51,9,45,52,47,53,50,52,45,74,14,32,7,5,0,36,18,62,68,23,54,5,0,34,36,0,37,39,14,41,7,0,52,38,32,0,41,40,0,40,22,0,73,96,11,0,37,16,91,59,9,0,28,7,0,24,32,50,22,34,35,42,36,81,11,0,22,65,32,84,11,0,30,81,11,0,28,33,9,9,37,52,5,0,59,33,0,37,70,69,16,50,27,9,0,28,65,14,137,41,54,105,9,0,127,71,33,69,168,42,0,57,46,35,37,13,0,46,24,11,7,0,30,5,0,41,18,39,59,23,59,5,0,37,18,36,37,18,5,0,38,18,43,38,18,5,0,37,18,39,55,5,0,50,67,98,0,35,71,14,35,7,0,24,27,23,0,37,12,62,52,7,0,40,20,0,12,61,40,7,0,44,20,0,12,65,40,7,0,44,29,26,27,28,27,9,5,0,33,36,56,0,35,73,14,35,7,0,55,5,0,30,39,59,5,0,30,25,78,7,5,0,52,43,114,5,0,57,78,43,5,0,30,64,72,0,35,71,14,35,7,0,59,23,48,5,0,40,36,63,72,0,35,71,14,35,7,0,28,0,36,68,7,0,27,0,21,64,7,0,23,49,5,0,52,41,36,48,62,29,31,40,0,33,27,44,14,29,68,9,7,0,52,5,0,41,42,36,23,31,0,68,20,14,26,7,0,34,0,10,75,40,0,36,33,9,0,38,35,9,40,0,33,36,63,5,0,43,36,42,23,31,33,66,44,0,39,47,0,38,35,9,7,0,60,33,36,65,5,0,52,36,42,23,31,33,0,39,70,0,38,35,9,7,0,33,36,65,5,0,30,36,41,24,0,37,12,62,40,7,0,44,27,26,27,26,27,9,62,5,0,34,115,5,0,58,29,0,50,52,51,14,23,40,7,0,34,51,31,56,5,0,53,29,50,34,34,0,63,27,30,101,14,28,0,39,31,9,0,53,7,0,61,5,0,40,23,23,33,0,35,71,7,0,32,0,72,60,0,40,35,9,7,0,37,54,7,0,32,56,61,5,0,53,41,29,64,61,5,0,25,18,17,18,17,18,8,42,31,41,36,32,30,35,19,16,26,0,54,37,35,21,14,34,32,22,7,0,30,0,37,29,30,32,38,0,55,45,0,84,24,42,32,11,9,0,57,45,0,84,24,28,11,9,0,50,0,39,35,40,11,0,41,27,46,13,0,95,18,95,11,72,35,40,11,0,25,44,11,0,94,16,28,0,69,47,0,115,38,26,13,11,0,168,0,39,27,51,18,53,11,9,0,39,0,88,81,9,7,0,28,0,24,36,7,0,69,36,17,5,0,104,37,140,0,29,29,83,37,79,11,0,25,67,11,0,22,9,0,27,79,9,0,33,38,9,0,23,64,9,0,45,65,14,53,31,40,25,29,0,65,29,0,35,40,11,0,25,44,11,0,103,0,49,51,11,16,49,30,0,41,28,11,0,55,35,9,0,33,59,7,5,0,43,57,35,82,0,34,38,58,16,58,9,7,0,59,64,7,5,0,31,121,26,7,5,0,62,46,49,64,0,35,59,35,60,65,7,0,18,5,0,50,56,33,78,0,35,73,7,0,60,5,0,27,36,33,50,59,5,0,26,36,22,34,0,75,46,46,33,7,0,34,58,5,0,34,22,27,32,36,34,0,66,38,0,39,26,9,0,57,14,46,7,0,23,31,43,56,5,0,46,64,23,28,33,56,5,0,46,22,0,72,55,0,40,35,9,7,0,37,49,7,0,14,15,12,8,5,0,61,24,19,60,0,20,23,64,0,21,62,0,21,62,0,22,63,0,22,63,0,22,63,0,16,43,67,7,5,0,28,40,43,36,14,15,32,66,0,32,24,47,49,11,0,98,0,26,43,31,30,30,30,30,13,0,29,43,31,29,30,30,31,13,0,28,48,43,64,22,0,30,41,75,38,53,37,33,38,37,51,67,11,0,16,0,26,22,0,73,41,50,80,20,35,13,11,0,30,50,40,66,0,147,40,26,20,36,13,11,0,21,100,18,53,11,0,35,31,36,35,49,37,65,0,26,84,0,25,26,47,22,71,0,27,41,24,0,40,117,13,0,43,117,13,0,88,11,0,34,0,23,84,0,26,84,0,25,22,61,0,25,22,68,0,25,22,61,0,24,22,63,0,16,53,46,47,48,24,55,11,0,7,0,30,5,0,28,40,43,45,0,72,58,32,36,36,60,7,0,18,5,0,27,36,0,37,57,63,14,43,7,5,0,42,47,0,68,68,71,25,47,35,63,7,0,19,5,0,33,36,33,61,26,0,42,67,7,0,98,5,0,26,36,32,52,26,0,41,58,7,0,91,5,0,21,42,31,45,36,87,18,5,0,44,71,42,45,44,67,14,36,7,5,0,31,36,60,53,5,0,64,107,0,36,62,37,7,0,19,5,0,31,59,99,29,5,0,25,26,0,38,36,0,39,33,16,34,9,0,20,46,7,0,22,5,0,68,32,112,7,0,60,5,0,62,36,42,96,103,7,0,61,5,0,39,92,43,0,74,40,22,47,9,72,38,20,51,7,0,59,0,74,31,7,0,18,5,0,42,39,38,153,47,11,44,42,49,44,49,46,57,11,9,7,0,56,5,0,36,200,5,0,32,195,21,7,0,46,5,0,36,65,38,20,51,7,0,50,5,0,66,51,0,29,93,0,27,72,22,9,0,56,27,7,0,34,39,53,56,11,19,14,47,70,0,41,49,0,33,29,43,0,52,45,11,0,12,23,18,52,70,9,0,41,72,9,0,43,29,66,12,23,18,52,9,7,0,53,47,31,23,35,129,60,5,0,37,66,56,46,49,14,19,14,8,5,0,52,27,24,0,34,33,0,54,56,45,18,30,11,0,32,59,38,37,9,7,0,28,65,28,7,0,99,5,0,33,22,0,121,53,43,24,5,0,51,17,0,76,68,25,51,14,25,7,0,20,5,0,46,60,0,37,29,36,7,0,36,66,39,69,67,7,0,18,5,0,35,252,15,7,0,42,5,0,23,43,0,91,53,7,0,18,5,0,34,38,33,49,20,0,39,57,37,22,16,58,9,47,33,49,20,64,50,33,49,20,56,72,34,49,20,62,14,50,7,5,0,25,57,0,78,33,20,20,20,7,0,19,5,0,46,35,74,0,55,29,7,0,26,5,0,49,56,0,35,71,7,5,0,48,35,0,41,67,17,9,0,30,7,0,55,0,27,88,58,34,82,9,7,5,0,28,61,0,41,49,69,50,52,48,47,37,32,14,44,7,5,0,35,26,26,29,28,33,22,0,32,11,52,55,126,15,11,0,30,47,0,29,50,0,31,76,0,36,39,0,39,34,52,0,32,40,28,0,16,23,7,5,0,39,47,73,14,47,7,5,0,57,49,33,0,75,55,9,7,0,71,5,0,53,49,24,0,33,0,184,78,9,7,0,22,5,0,71,91,0,63,45,7,0,18,5,0,30,47,46,7,5,0,30,36,61,7,0,44,5,0,37,36,61,7,0,51,5,0,21,61,5,0,23,64,5,0,36,78,5,0,96,28,47,7,0,29,0,35,73,7,0,103,5,0,69,28,47,7,0,29,0,35,73,7,0,76,5,0,27,34,0,54,78,7,0,44,20,49,0,12,40,61,0,39,77,18,39,11,0,69,40,7,5,0,51,48,70,31,17,5,0,115,26,45,7,0,27,25,0,50,66,57,7,0,122,0,27,61,7,5,0,41,37,42,69,9,0,30,7,0,36,62,7,0,35,19,5,0,49,69,0,117,80,7,0,18,5,0,36,37,52,7,0,46,5,0,74,122,72,61,5,0,44,32,22,0,38,24,45,22,7,0,17,36,0,56,36,9,0,93,22,33,9,7,0,58,5,0,32,41,45,54,35,0,45,41,37,50,39,9,7,0,28,0,73,52,0,96,40,51,47,16,42,38,51,9,101,56,49,0,39,51,16,27,57,9,14,50,99,9,0,25,40,36,55,7,0,55,65,0,54,82,7,0,54,82,7,0,69,82,7,0,72,74,5,0,47,29,0,71,71,7,0,54,5,0,28,35,0,36,64,39,7,5,0,51,36,68,45,57,62,7,0,65,5,0,29,70,5,0,77,15,0,23,14,0,95,35,120,40,15,17,23,0,61,30,68,30,9,7,0,83,25,0,44,27,46,36,0,68,95,105,68,26,13,0,175,20,11,0,75,47,64,33,18,35,0,110,47,35,107,13,0,30,11,0,39,9,0,58,37,26,9,0,30,39,33,9,0,75,44,93,7,0,91,5,0,22,36,44,70,47,44,98,64,59,58,26,11,39,56,109,7,0,36,5,0,24,65,5,0,46,76,29,14,55,7,5,0,57,95,15,7,0,45,5,0,52,123,5,0,56,113,20,58,27,80,55,97,41,123,62,108,61,0,25,39,28,9,0,26,40,29,9,0,42,7,0,70,5,0,71,72,50,0,22,37,22,9,0,20,58,27,72,34,80,29,53,81,58,27,44,83,36,82,72,85,11,0,26,58,29,9,7,0,85,5,0,29,23,0,62,94,7,0,33,36,5,0,59,56,37,41,62,5,0,33,61,0,68,42,28,25,15,7,0,40,5,0,30,61,0,41,42,15,7,0,37,5,0,34,58,0,38,71,7,0,22,5,0,24,69,40,62,9,0,40,49,41,15,7,0,38,67,0,25,82,9,0,33,15,7,0,31,5,0,23,13,11,21,40,0,88,36,7,0,73,77,0,37,45,7,0,119,46,7,0,37,41,7,0,19,5,0,32,59,0,23,76,7,5,0,51,15,16,8,88,5,0,41,15,16,8,75,90,5,0,43,15,16,8,80,5,0,48,14,8,73,5,0,43,15,18,8,165,5,0,48,15,19,16,8,25,0,29,23,22,22,71,16,0,22,70,16,0,16,71,7,0,74,5,0,50,15,16,8,87,5,0,61,14,8,86,5,0,26,40,0,82,0,32,23,11,82,0,30,22,31,35,30,16,13,0,20,30,27,14,11,0,26,11,81,0,30,22,31,35,30,16,13,0,20,30,27,14,11,0,25,26,11,55,0,30,22,32,35,30,16,13,0,20,30,27,14,11,0,16,18,28,25,12,7,5,0,25,35,44,69,21,11,8,14,11,12,8,5,0,67,13,20,18,0,34,15,7,0,42,65,7,5,0,21,15,18,8,34,23,27,26,26,28,8,0,41,44,15,13,14,37,35,0,32,19,9,0,40,57,21,22,13,9,0,40,59,21,22,13,9,0,34,25,19,23,20,10,27,0,28,25,13,83,43,92,20,13,0,24,13,82,43,90,20,13,0,24,13,82,43,90,20,13,0,25,13,82,13,0,22,13,37,31,83,24,0,30,82,24,0,24,100,15,13,9,0,40,35,9,7,0,21,5,0,65,14,8,44,32,49,34,71,64,48,81,20,13,9,0,32,14,65,47,81,20,13,9,0,34,7,5,0,31,14,8,37,38,73,21,30,13,9,0,15,15,23,20,0,100,67,21,31,13,9,0,21,7,0,18,5,0,24,15,13,8,59,16,9,32,44,17,20,9,0,29,23,35,48,36,58,0,22,35,47,36,57,0,22,35,102,20,13,36,57,0,22,50,36,57,0,16,11,33,32,40,61,14,0,38,59,57,57,65,0,69,29,47,106,24,17,40,61,74,126,58,77,27,44,19,15,0,52,40,62,74,128,59,76,27,44,19,15,0,51,40,61,20,67,24,17,29,13,11,7,5,0,36,40,19,55,26,25,9,54,5,0,29,175,39,14,38,7,5,0,27,41,0,47,58,52,7,0,19,5,0,41,73,5,0,11,3,0,18,17,11,17,10,10,17,18,17,18,19,16,19,17,16,17,17,18,16,16,16,17,16,19,17,17,18,18,17,19,18,17,17,18,19,19,19,19,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,18,19,19,19,18,17,19,18,18,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,19,19,19,19,18,17,19,18,17,18,18,19,19,17,17,17,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,18,16,20,16,16,16,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,19,18,16,20,16,16,16,18,21,18,16,17,17,19,17,16,16,16,18,18,18,18,18,18,18,18,19,19,17,19,19,18,18,19,19,18,18,17,18,19,17,18,20,17,17,17,17,17,18,17,17,17,17,17,19,17,18,18,18,17,18,15,17,16,18,19,18,17,18,16,16,15,16,16,16,19,16,17,18,15,18,15,15,16,16,17,17,17,18,19,17,17,18,18,19,19,17,17,16,19,18,19,17,2,0,35,31,33,82,77,78,139,87,54,130,3,47,48,62,41,42,18,3,50,18,3,45,0,47,42,42,33,2,0,53,39,0,85,29,66,10,34,3,2,0,29,103,1,0,38,40,23,3,0,44,58,3,0,46,91,3,0,62,1,0,51,18,17,36,0,14,42,77,7,0,55,0,19,16,17,52,54,31,57,13,0,46,11,0,62,54,0,16,62,38,38,16,0,16,30,64,45,40,18,29,11,0,7,5,3,0,33,53,12,21,0,68,23,42,12,36,5,0,25,42,15,3,0,24,17,38,0,14,42,77,7,0,55,30,0,22,60,36,36,33,60,42,36,14,25,7,5,0,58,47,3,0,19,17,18,15,40,38,0,58,40,0,23,29,31,32,0,39,63,13,18,32,0,43,63,13,11,16,33,9,0,14,7,0,16,5,0,18,32,17,5,0,18,3,0,17,11,33,0,8,51,48,0,84,3,0,24,34,0,36,35,41,42,12,24,5,0,16,50,3,0,28,38,41,43,44,54,26,42,54,3,0,25,38,41,45,0,44,18,5,0,33,59,28,51,61,5,0,16,3,0,28,13,0,30,24,32,20,54,0,60,61,9,0,20,0,29,24,36,0,14,74,5,3,0,29,83,96,3,0,29,16,45,30,51,3,0,37,35,55,12,48,35,5,0,30,59,3,0,23,34,0,33,34,53,32,57,5,0,46,75,49,3,0,48,54,0,38,35,57,5,0,43,54,3,0,41,26,0,70,48,5,0,33,45,33,54,3,0,48,54,0,38,35,57,5,0,43,33,54,3,0,41,54,24,77,30,0,38,26,34,33,40,43,24,0,40,81,29,13,0,70,18,0,29,48,18,0,28,13,44,26,0,47,62,22,70,15,0,20,13,0,18,36,9,7,0,70,78,77,119,78,100,121,9,7,5,0,37,44,44,12,43,43,5,0,29,0,33,81,5,0,115,3,0,21,38,41,16,54,3,0,38,36,60,47,36,88,42,36,12,54,5,3,0,26,71,38,0,37,33,5,0,67,36,34,7,0,24,25,49,7,0,71,40,7,5,0,100,23,49,5,0,40,3,0,27,35,43,0,42,57,49,55,14,38,7,0,36,75,37,46,37,12,43,5,3,0,3,0,13,22,24,18,22,24,23,3,0,1,20,32,25,38,43,23,29,3,0,20,63,3,0,20,61,3,0,26,68,3,0,17,61,3,0,28,64,3,0,29,64,3,0,22,28,3,0,16,50,3,0,10,26,3,0,37,93,3,0,39,36,0,80,68,0,46,35,14,33,7,0,45,45,7,46,61,35,70,29,45,43,7,5,0,55,41,5,3,0,35,55,41,5,3,0,60,61,60,5,3,0,49,55,0,43,116,5,0,44,121,5,0,193,3,0,24,167,51,5,3,0,18,55,3,0,21,52,39,0,36,21,7,5,3,0,22,52,39,0,99,21,7,5,3,0,1,0,37,24,19,20,20,25,22,33,3,0,1,0,51,22,38,3,0,39,38,0,50,43,42,13,5,0,36,0,39,45,70,45,7,0,29,5,0,65,76,65,3,0,49,41,45,67,61,36,7,0,18,5,0,77,45,49,14,21,7,5,0,73,18,5,0,51,3,0,24,124,33,5,3,0,1,0,21,27,27,28,24,34,17,21,3,0,16,28,3,0,10,22,3,0,18,47,3,0,18,51,3,0,18,51,3,0,19,52,3,0,15,48,3,0,1,46,71,1,0,21,18,46,3,0,11,1,0,20,11,35,3,1,0,32,76,78,94,87,96,48,56,60,62,84,98,80,82,85,95,86,102,85,98,144,103,101,69,79,86,104,127,3,0,37,18,15,28,0,19,32,0,18,31,0,17,30,0,18,31,0,18,31,0,18,31,0,18,31,0,21,34,0,19,32,0,12,23,3,1,0,58,21,34,3,0,20,34,3,0,34,16,215,3,0,37,34,23,5,0,38,0,117,22,5,0,21,3,0,48,14,40,62,27,0,59,67,7,0,32,5,3,0,28,19,25,25,40,0,35,40,0,31,42,0,39,38,5,0,35,3,0,35,22,0,44,34,5,0,18,3,0,44,78,3,0,65,22,0,14,42,14,7,0,37,0,28,25,7,0,27,0,34,17,7,0,42,14,7,0,26,33,7,0,23,5,0,18,3,0,69,26,20,36,14,35,7,5,0,65,0,18,34,12,33,5,0,18,3,0,23,34,31,30,0,36,75,5,0,41,30,0,30,52,5,0,33,56,5,0,49,3,0,41,40,0,33,48,25,60,56,5,0,18,3,0,26,34,50,0,66,56,5,0,52,3,0,33,16,43,29,60,25,52,3,0,25,34,16,47,3,0,22,34,31,0,36,47,12,51,5,0,48,3,0,26,34,53,62,53,52,3,0,30,33,42,5,3,0,27,34,0,66,18,12,24,5,0,124,0,35,59,5,0,63,3,0,35,49,18,41,5,0,16,3,0,43,60,63,30,65,0,30,88,41,88,5,3,0,36,67,147,92,7,0,21,7,3,0,32,33,23,5,3,0,38,44,38,39,3,0,37,16,59,3,0,34,109,23,5,0,32,38,53,30,32,27,49,41,38,53,3,0,52,55,25,0,76,29,48,40,58,12,31,45,51,47,40,62,5,3,0,23,34,0,61,77,5,0,33,34,18,0,63,84,14,52,66,7,5,0,58,52,0,14,41,17,5,0,40,65,3,0,24,34,51,50,3,0,30,30,87,30,19,3,0,27,16,0,34,43,5,0,40,18,5,0,38,19,5,0,16,0,33,19,5,0,16,33,3,0,32,34,53,60,52,3,0,23,34,30,0,36,39,18,40,48,27,5,0,32,59,73,32,0,36,39,18,34,42,27,5,0,48,21,30,49,3,0,22,34,125,36,31,46,27,0,11,12,22,0,146,75,7,0,134,0,34,49,32,7,0,54,100,0,42,81,7,7,48,3,0,29,11,22,14,19,42,34,46,42,0,18,53,38,0,107,42,14,65,33,7,0,51,64,26,58,45,65,5,0,15,60,37,53,5,0,16,3,0,30,34,30,45,30,56,3,0,42,34,0,39,30,5,0,44,39,3,0,28,34,0,27,32,23,26,26,25,26,38,0,16,34,7,9,0,50,3,0,32,34,45,50,3,0,31,53,45,3,0,40,51,0,67,56,12,25,5,3,0,25,30,22,23,23,9,149,0,70,42,24,47,11,0,45,9,0,24,21,24,23,24,45,0,25,39,40,45,0,80,36,11,0,48,56,9,0,14,0,23,57,0,25,39,0,25,40,0,24,126,0,26,39,0,24,47,0,27,49,5,0,28,3,0,30,42,0,71,39,48,32,36,52,14,48,31,44,36,60,7,5,0,16,3,0,33,34,36,29,61,0,34,50,5,0,51,3,0,42,39,25,25,15,0,14,60,5,3,0,22,34,35,43,71,75,48,3,0,33,87,146,3,0,72,23,38,0,31,27,0,34,43,7,0,46,25,41,5,0,16,3,0,37,132,3,0,30,128,3,0,29,33,18,5,0,110,3,0,26,60,18,18,5,0,35,32,18,0,37,39,30,46,30,9,0,20,7,0,18,5,0,37,32,18,0,37,41,30,48,30,9,0,20,7,0,18,5,0,17,3,0,42,16,0,65,18,5,0,38,117,20,7,0,37,20,0,38,22,9,7,5,0,17,3,0,53,32,33,31,85,0,47,74,0,54,47,49,30,71,16,43,9,0,45,54,7,0,121,0,35,23,54,9,0,45,52,31,68,54,7,0,53,43,49,33,29,66,52,7,3,0,45,104,3,0,30,78,3,0,20,48,3,0,32,38,0,67,18,16,5,3,0,33,100,19,5,0,47,16,0,62,19,5,0,22,95,5,0,16,3,0,64,25,45,44,7,50,3,0,17,30,50,0,68,18,5,0,44,26,56,32,39,29,40,54,3,0,31,41,69,5,0,33,72,5,0,43,3,0,26,34,0,56,0,63,31,45,52,3,0,37,43,129,0,32,78,5,0,25,3,0,40,34,52,0,33,56,5,0,66,3,0,37,37,83,58,0,35,59,5,0,34,72,57,59,3,0,37,37,67,58,47,28,0,82,38,20,59,7,0,32,7,21,59,3,0,21,42,41,0,9,18,15,38,5,3,0,16,40,29,0,9,18,15,36,5,3,0,29,71,3,0,32,60,3,0,25,53,3,0,25,32,11,32,7,3,0,23,34,91,0,29,56,5,0,49,3,0,41,35,37,104,30,95,30,54,3,0,24,34,34,30,84,22,50,3,0,61,37,0,18,84,5,0,30,37,60,24,12,40,34,44,28,24,5,0,56,3,0,49,38,25,39,42,37,12,24,5,0,35,40,34,44,28,24,12,23,5,0,56,3,0,50,38,37,71,26,57,21,62,3,0,33,75,3,0,28,118,3,0,36,34,37,30,0,36,30,5,0,43,30,62,3,0,18,37,20,23,15,3,0,25,58,57,52,23,3,0,17,37,23,0,51,20,12,25,23,5,3,0,27,34,13,5,0,36,13,0,35,29,19,5,0,42,26,29,30,64,0,26,30,52,0,26,79,38,42,59,11,0,24,42,52,0,24,11,43,0,37,72,20,64,13,11,7,7,3,0,33,77,3,0,42,24,21,9,59,0,28,39,31,11,0,16,9,0,20,39,44,38,27,28,24,47,28,32,61,9,0,14,0,14,63,5,3,0,41,20,22,69,27,30,0,21,24,0,44,50,13,11,0,51,9,0,14,0,18,45,32,58,9,0,14,0,23,67,32,56,9,0,14,0,20,30,0,39,68,74,64,9,0,14,0,23,67,32,64,9,0,14,0,18,67,32,56,9,0,14,5,3,0,50,71,3,0,59,34,23,5,0,72,45,47,56,57,38,71,31,18,7,66,0,15,23,5,0,54,3,0,26,34,64,33,97,8,0,35,58,5,0,35,31,65,3,0,26,33,33,24,23,20,25,22,25,20,22,7,5,0,17,3,0,30,50,44,3,0,55,38,41,22,25,0,39,49,54,0,68,67,7,5,0,42,44,73,0,36,54,0,30,35,7,0,58,43,0,74,72,7,0,25,56,5,0,28,35,5,0,15,3,0,60,34,79,5,0,135,0,79,42,13,5,0,78,72,0,25,71,15,7,5,0,59,3,0,37,32,64,12,54,5,3,0,37,27,75,81,7,7,3,0,42,46,20,3,0,27,47,0,42,53,5,0,16,3,0,60,66,37,18,69,42,71,5,0,33,52,58,92,0,29,32,11,9,0,58,27,58,0,28,51,84,60,48,78,51,95,50,26,11,9,0,26,9,32,5,0,74,3,0,27,33,60,49,57,20,9,0,27,45,7,5,0,34,3,0,58,105,64,29,0,58,0,19,37,14,57,7,0,46,26,73,5,0,72,3,0,64,0,28,0,21,87,37,0,62,57,7,0,126,33,20,7,5,0,27,32,5,0,47,0,141,119,5,0,22,3,0,21,36,33,61,36,26,49,23,59,42,24,41,39,23,67,12,80,20,33,14,34,7,0,37,5,3,0,21,83,3,0,34,33,35,18,39,26,17,5,0,43,87,32,5,0,48,3,0,44,43,37,0,64,38,34,38,55,7,5,0,58,3,0,25,68,3,0,46,47,53,60,47,0,40,55,6,0,25,52,12,29,5,3,0,68,71,54,0,14,31,0,28,69,7,0,21,67,7,0,33,96,7,0,27,68,7,0,13,5,0,75,3,0,46,46,47,0,60,70,5,0,59,69,5,3,0,40,102,62,3,0,34,49,48,3,0,64,59,80,5,0,89,0,23,68,18,5,0,52,23,3,0,44,58,0,35,27,34,5,0,34,64,37,65,67,5,0,16,3,0,32,38,41,52,20,0,33,55,5,0,23,55,5,0,135,31,5,0,35,63,33,5,0,23,3,0,47,74,13,5,0,99,59,61,3,0,38,49,27,5,0,49,41,3,0,28,44,0,62,77,5,0,42,3,0,35,24,65,5,0,29,90,5,0,44,49,3,0,94,59,0,42,78,5,0,63,101,3,0,67,59,63,74,3,0,25,32,0,52,61,5,0,43,65,5,3,0,36,59,61,43,3,0,45,59,61,52,3,0,26,33,0,64,27,5,0,49,0,15,36,37,5,3,0,49,34,53,5,0,63,3,0,29,69,0,14,12,17,0,40,33,72,38,13,15,21,0,59,28,66,28,7,5,0,83,45,5,0,23,40,42,26,0,52,51,0,94,16,7,0,104,62,7,0,43,18,14,58,0,15,37,77,48,5,0,54,33,22,5,0,21,35,24,5,0,67,38,27,5,0,71,40,91,137,3,0,40,59,41,12,56,5,3,0,20,34,45,82,75,26,9,33,0,27,56,38,7,5,0,34,3,0,39,35,94,60,7,0,28,5,0,49,42,33,17,3,0,37,24,34,73,0,33,47,0,28,33,29,68,20,0,14,47,5,3,0,48,24,34,15,0,33,70,15,0,28,33,29,69,15,0,14,59,15,5,3,0,22,30,23,42,0,14,40,5,3,0,38,33,56,0,37,62,44,20,7,0,54,5,0,52,3,0,19,59,3,0,21,88,3,0,30,50,0,115,80,5,0,16,3,0,26,60,48,12,42,5,3,0,18,39,59,0,39,28,35,7,5,3,0,30,47,31,26,0,26,36,55,16,0,30,31,51,57,18,75,11,0,16,7,5,0,48,3,0,29,57,97,27,3,0,22,63,3,0,27,68,3,0,29,69,3,0,41,33,87,61,5,0,55,3,0,45,70,61,33,105,55,3,0,27,48,49,0,15,34,35,5,0,17,3,0,26,60,39,0,9,18,15,56,5,3,0,3,0,41,18,3,60,34,40,36,18,61,46,61,37,56,5,3,0,41,76,37,68,3,0,26,74,49,5,0,48,3,0,19,84,3,0,21,86,3,0,27,66,3,0,22,84,3,0,19,67,3,0,22,84,36,18,5,0,44,3,0,29,64,44,3,0,40,80,58,5,0,34,24,62,18,47,55,5,0,21,26,53,3,0,16,85,3,0,21,86,3,0,45,70,16,30,40,60,0,22,100,30,46,23,69,43,14,58,7,12,55,5,0,31,104,39,3,0,21,60,61,0,65,27,25,76,61,5,0,43,39,37,77,35,3,0,30,37,41,0,52,97,22,9,7,5,0,44,3,0,42,56,18,5,0,64,3,0,21,11,16,13,0,58,88,5,0,28,33,3,0,21,60,61,25,0,65,73,23,56,5,0,56,34,57,36,0,32,69,64,5,0,34,43,21,54,3,0,23,91,3,0,3,0,59,22,35,48,36,29,0,35,64,61,50,0,39,28,9,7,0,40,5,3,0,19,72,3,0,3,0,35,33,32,32,12,29,5,5,1,49,41,32,32,12,29,5,5,0,40,29,3,0,14,1,58,54,35,41,50,89,5,0,100,0,41,296,61,69,5,3,0,71,67,3,0,80,76,3,0,137,151,3,0,47,49,87,5,0,103,0,60,184,5,3,0,146,162,3,1,22,9,6,7,13,14,14,2,51,0,24,23,28,15,35,36,37,33,32,14,19,16,16,40,22,2,27,21,0,96,33,79,3,0,17,1,0,13,17,25,26,27,25,21,31,24,40,40,28,24,36,32,32,28,34,25,34,25,6,27,44,21,31,23,31,30,27,36,17,23,26,22,19,17,30,32,26,24,44,28,29,34,34,26,3,0,17,89,37,53,3,0,17,65,3,0,21,30,35,0,60,26,26,0,46,26,7,0,23,5,0,17,3,0,1,0,39,34,2,66,43,48,24,2,43,47,103,87,130,13,22,27,29,29,25,64,3,0,1,37,31,12,30,21,29,29,23,31,29,3,0,20,49,28,30,3,0,10,28,33,0,32,46,7,5,0,43,47,49,53,21,3,0,13,27,18,18,12,19,5,3,0,15,36,3,0,15,27,33,28,16,29,28,21,16,3,0,20,52,3,0,28,35,49,32,3,0,23,56,3,0,21,31,0,17,82,38,5,3,0,16,61,3,0,15,41,84,38,51,0,40,34,13,5,0,71,0,19,21,12,68,5,3,0,58,21,51,18,19,15,47,6,53,38,29,3,0,22,46,33,61,79,29,33,14,0,83,27,59,5,0,33,120,3,0,30,33,46,64,0,39,64,51,7,5,0,33,140,3,0,15,48,55,0,19,16,17,15,27,16,0,16,65,29,11,0,16,18,18,27,31,48,16,0,16,62,20,38,20,0,20,38,20,0,20,25,11,0,16,0,16,33,29,18,23,11,0,7,5,3,0,26,36,49,37,27,27,56,3,0,26,63,13,5,0,39,48,0,35,79,5,0,74,42,0,76,176,7,0,25,43,14,45,7,0,26,12,35,5,3,0,19,59,0,35,28,13,5,0,74,26,39,12,23,34,5,3,0,21,55,23,24,13,5,0,59,0,22,37,12,36,5,3,0,27,62,55,32,33,24,0,62,49,5,0,62,56,16,3,0,31,55,18,57,47,0,37,14,55,28,5,0,38,14,26,5,0,31,3,0,28,59,0,24,61,39,14,76,7,0,13,5,0,23,24,41,15,7,0,61,77,100,9,0,42,15,7,0,60,77,99,9,0,44,15,7,5,0,22,37,13,5,0,72,3,0,21,59,0,22,37,12,41,5,3,0,28,59,0,24,159,32,25,25,15,7,0,37,13,5,0,22,37,12,38,5,3,0,25,59,17,0,24,85,0,64,46,15,7,0,42,13,5,0,159,30,23,23,13,5,0,22,15,5,0,42,3,0,27,59,0,22,94,13,5,0,37,26,36,13,5,0,58,3,0,24,59,60,0,22,25,39,14,50,7,62,26,42,12,23,39,5,3,0,26,19,14,29,15,0,14,25,39,15,0,14,25,39,15,0,14,25,37,15,0,14,25,38,15,0,14,100,79,103,11,0,46,30,16,27,43,9,0,15,0,14,25,41,15,0,15,100,79,104,11,0,44,30,16,27,41,9,0,15,0,15,25,39,15,0,14,97,46,16,27,40,9,0,15,0,14,34,15,0,14,25,42,15,0,14,9,65,0,44,37,19,11,0,44,36,19,11,0,43,36,19,11,9,0,14,14,14,14,14,14,14,14,14,31,15,0,14,14,30,15,0,14,31,15,0,14,14,41,15,0,15,14,38,15,0,14,31,15,0,14,14,38,15,0,14,14,35,15,0,14,14,37,15,0,15,38,15,0,14,25,35,15,0,14,36,15,0,14,24,15,0,14,38,26,17,9,0,5,0,105,3,0,24,72,27,32,3,0,16,33,25,0,14,42,66,7,0,51,0,31,66,7,0,20,24,14,25,25,43,26,44,16,9,0,30,7,0,23,5,0,60,21,18,0,42,46,62,0,40,38,77,9,65,75,14,14,7,0,23,19,5,0,36,23,17,7,3,0,59,33,129,222,24,18,0,67,57,14,0,24,63,63,0,51,79,120,79,9,0,33,85,9,0,25,17,7,0,23,29,30,29,34,24,14,23,7,0,25,53,18,82,30,18,25,16,16,9,7,0,23,34,5,0,95,18,5,0,17,3,0,26,33,25,24,36,0,22,74,5,0,55,0,23,23,22,30,60,5,0,68,71,5,0,19,79,42,13,5,0,37,3,0,29,33,24,25,26,28,24,0,54,53,5,0,94,0,25,62,75,0,31,51,0,32,85,9,7,0,56,5,0,53,0,34,23,23,21,51,5,0,52,53,0,39,25,7,0,38,66,7,0,21,25,51,5,0,23,38,62,7,0,23,22,5,0,23,51,0,42,56,7,0,23,23,5,0,68,71,5,0,78,0,19,42,13,5,0,20,43,13,5,0,61,37,3,0,33,53,13,0,21,39,110,23,0,45,29,62,16,22,9,7,12,56,5,0,16,3,0,21,17,38,0,14,42,77,7,0,55,30,0,22,60,43,36,46,25,29,46,33,77,14,25,7,5,0,58,40,3,0,19,17,36,32,0,14,42,79,7,0,55,0,88,80,26,32,49,19,18,29,46,19,11,9,0,60,71,15,7,0,22,60,51,0,31,33,16,25,9,0,36,33,60,25,0,21,18,63,31,13,0,18,24,18,0,18,43,18,9,0,29,46,36,14,25,7,5,3,0,40,65,31,12,48,5,3,0,31,39,55,21,0,17,15,20,0,15,20,0,15,9,66,66,9,0,15,9,58,67,9,0,15,20,0,14,20,0,15,24,0,15,20,0,14,59,27,9,0,14,46,29,0,16,16,18,0,14,14,25,22,16,93,9,0,14,35,45,82,34,44,0,28,45,42,11,0,48,61,0,63,29,26,20,86,13,11,0,44,9,0,39,5,3,0,46,35,53,0,21,27,65,14,37,7,5,0,13,3,0,15,18,35,33,36,0,42,56,0,33,47,54,25,29,38,61,40,96,0,62,73,19,9,0,25,45,0,27,38,75,11,0,44,9,0,36,14,14,7,5,0,63,3,0,20,63,3,0,14,34,50,0,82,72,5,0,33,3,0,25,39,0,39,81,5,3,0,26,37,0,88,18,5,0,112,28,5,0,90,42,5,0,145,18,5,0,36,47,5,0,90,19,5,0,40,18,5,0,35,3,0,27,33,15,0,85,37,45,34,12,47,5,3,0,1,0,36,28,22,48,21,3,0,20,67,3,0,24,32,18,12,46,5,3,0,22,90,3,0,41,44,145,3,0,31,39,49,3,0,23,59,3,0,35,66,3,0,24,93,3,0,27,85,3,0,22,61,3,0,15,68,3,0,21,49,3,0,48,51,49,5,3,0,55,44,76,5,0,74,3,0,27,32,70,29,84,5,0,16,3,0,31,46,70,28,116,5,3,0,47,25,16,6,0,9,40,32,26,9,0,62,37,30,16,15,58,24,25,19,10,7,0,14,13,20,22,23,23,8,21,35,28,0,41,16,21,16,23,25,19,10,7,0,34,16,33,22,24,24,19,10,7,0,18,5,3,0,56,43,11,22,17,28,67,0,31,39,5,0,27,60,5,3,0,27,173,3,0,23,39,3,0,26,24,3,0,34,127,3,0,25,94,3,0,26,42,3,0,24,40,3,0,1,24,17,30,26,3,0,1,0,12,33,23,24,22,22,24,34,35,32,24,19,21,17,39,79,87,3,0,13,31,35,0,60,26,0,95,33,7,5,0,19,3,0,1,0,36,15,65,3,0,25,36,3,0,25,56,3,0,26,90,3,0,38,0,21,19,23,49,30,16,3,0,45,23,30,51,3,0,90,19,26,49,3,0,50,78,3,0,1,0,47,105,2,0,36,37,34,0,34,0,127,58,0,18,50,124,63,79,9,14,77,7,5,0,24,24,27,26,31,14,0,30,36,0,94,27,0,42,36,69,0,133,60,11,9,0,14,0,28,45,14,0,27,9,43,36,36,40,16,9,0,29,35,127,14,0,34,36,73,9,0,40,29,44,14,0,37,48,14,5,0,16,3,0,57,39,131,40,58,40,12,37,5,3,0,55,30,0,14,37,0,66,14,75,34,32,38,49,0,138,37,9,0,31,61,9,0,14,7,5,0,35,30,0,16,38,0,41,43,9,7,5,0,20,3,0,51,20,3,0,55,57,0,50,32,0,70,49,7,5,3,0,54,34,16,99,50,3,0,22,34,16,44,48,3,0,22,30,26,9,40,22,74,55,9,0,24,56,5,0,34,3,0,70,20,21,0,30,18,22,14,33,7,0,50,24,35,14,46,78,48,27,14,14,30,0,67,84,9,0,38,49,9,0,76,7,5,0,16,3,0,55,42,44,73,0,28,35,5,0,15,3,0,39,17,3,0,47,36,0,80,77,68,41,54,21,48,54,3,0,125,24,24,9,17,16,19,0,142,147,11,0,29,41,62,20,37,13,11,0,53,70,11,0,43,66,11,0,16,9,0,30,40,78,9,0,14,0,27,101,43,106,110,9,0,14,0,26,95,43,0,21,111,11,9,0,14,0,31,83,14,0,25,81,14,0,37,95,14,0,14,9,141,9,5,3,0,31,91,82,5,3,0,30,34,47,59,14,48,7,5,3,0,25,58,3,0,36,53,3,0,1,0,22,42,47,32,0,23,35,23,21,3,0,36,111,3,0,37,47,3,0,1,0,53,21,16,28,3,0,40,34,3,0,30,28,3,0,27,34,3,0,1,0,30,22,41,23,3,0,16,27,3,0,10,21,3,0,49,11,11,13,29,25,0,54,51,51,14,15,7,0,25,5,0,29,3,0,52,11,11,13,42,0,50,31,56,49,12,13,5,3,0,49,11,11,13,29,25,0,52,64,51,7,0,25,5,3,0,23,11,11,13,49,63,50,31,31,27,0,54,41,27,7,7,3,0,1,41,52,1,30,68,1,31,73,1,31,31,1,0,43,61,104,13,5,0,25,66,0,31,21,59,15,7,0,26,34,55,56,11,16,62,9,7,0,27,5,3,0,48,86,3,0,19,27,0,59,32,5,0,36,37,21,40,0,33,24,5,0,40,36,16,3,0,52,21,85,5,0,80,3,0,44,38,41,60,0,34,56,32,0,37,74,7,0,46,57,5,0,16,3,0,85,114,3,0,82,111,3,0,75,38,41,0,37,36,38,37,0,29,69,9,0,20,7,5,0,28,0,30,34,12,51,33,5,0,61,53,5,0,81,0,25,65,5,0,35,56,40,31,0,33,50,45,14,25,7,0,67,49,7,0,52,18,43,59,37,60,5,0,16,3,0,64,38,41,57,56,0,60,18,5,0,77,3,0,64,35,56,23,55,31,47,60,5,0,16,3,0,37,38,41,57,59,0,60,18,5,0,58,3,0,58,37,0,75,27,35,0,36,48,0,54,24,11,0,39,64,9,0,66,25,41,0,165,92,9,0,74,56,0,23,40,9,0,20,0,106,98,95,11,9,0,57,94,39,0,135,86,9,0,75,7,5,0,16,3,0,34,38,41,0,17,26,71,23,58,110,15,0,24,62,56,15,9,0,14,55,5,3,0,38,38,41,111,3,0,40,62,31,5,0,44,34,0,33,39,25,0,37,46,7,0,49,18,45,60,0,42,34,0,40,61,56,67,9,7,0,20,56,7,5,0,63,3,0,50,17,56,55,5,0,38,41,61,76,0,67,56,39,26,27,48,18,55,5,0,16,3,0,44,38,41,57,57,0,60,18,5,0,58,3,0,54,19,33,55,17,6,0,8,75,36,26,0,16,3,0,60,50,70,45,81,5,0,25,0,40,55,26,20,7,0,50,18,5,0,47,93,79,73,12,24,18,5,3,0,58,54,46,23,29,90,0,39,41,62,7,0,86,5,0,29,0,19,34,5,0,36,31,63,12,55,5,3,0,55,54,23,41,22,102,3,0,78,72,45,16,52,23,0,32,55,5,0,36,31,5,0,19,78,12,147,5,0,63,0,77,24,47,34,96,12,34,36,7,0,39,5,0,66,16,3,0,52,67,3,0,66,54,20,42,0,36,69,5,0,61,3,0,30,208,3,0,40,40,40,50,48,9,7,0,69,178,14,95,42,0,45,74,11,9,7,5,0,89,3,0,106,20,21,80,50,0,30,18,22,14,33,0,32,108,95,11,0,29,82,11,0,22,16,9,7,0,125,16,40,5,0,74,16,3,0,27,65,3,0,49,20,0,29,131,16,3,0,21,38,41,80,3,0,38,59,72,13,0,30,24,33,0,25,32,20,0,36,52,9,0,40,79,9,0,47,0,23,32,20,55,0,22,9,53,44,0,82,46,57,0,75,50,15,0,68,26,83,48,59,13,11,0,84,24,84,11,0,20,9,0,21,9,32,9,0,24,9,41,65,39,35,22,9,0,21,69,0,24,68,0,25,69,0,24,68,0,23,32,20,52,0,23,24,42,0,24,67,0,29,30,9,147,9,0,26,9,87,9,0,27,28,9,142,9,0,24,9,87,9,0,27,50,0,20,31,0,24,32,34,44,0,22,42,0,27,41,0,29,9,34,22,29,62,0,51,59,18,74,11,9,0,22,9,38,36,0,83,86,13,0,24,0,78,75,13,0,42,74,11,0,64,0,59,43,52,0,40,45,71,53,92,20,43,13,0,24,11,9,0,28,9,41,78,0,71,68,15,11,9,0,14,32,5,3,0,36,42,71,44,26,0,39,74,5,0,29,50,16,3,0,13,39,34,16,40,27,34,34,49,3,0,16,34,16,0,108,60,81,60,5,0,93,61,5,0,42,3,0,25,34,41,16,51,3,0,47,45,0,20,78,0,34,73,7,0,36,18,70,43,50,12,40,5,3,0,33,34,16,0,59,81,18,56,5,0,36,3,0,47,21,0,62,44,42,51,26,7,5,0,47,47,0,61,102,5,0,49,3,0,33,75,16,0,36,27,38,57,50,7,0,36,5,0,52,3,0,49,44,47,54,43,75,23,16,39,3,0,50,38,41,12,16,52,72,80,45,50,43,46,24,55,30,14,6,21,20,27,0,39,18,22,14,65,0,39,48,16,9,7,0,39,52,55,39,108,37,14,14,112,7,5,0,46,49,30,66,74,57,0,92,47,34,60,23,5,0,32,0,27,47,5,0,64,50,58,72,46,0,30,59,33,77,12,24,5,0,55,48,49,17,5,0,65,37,64,27,3,0,22,38,3,0,20,32,18,5,3,0,44,16,3,0,25,34,16,0,32,76,18,68,0,66,54,0,48,42,9,0,42,7,0,22,5,0,31,3,0,18,41,0,40,78,51,77,45,72,5,0,33,50,3,0,27,33,52,34,28,12,26,5,3,0,34,34,0,36,22,86,7,5,0,18,86,30,6,16,44,52,3,0,27,34,16,26,53,27,0,26,38,62,32,69,5,0,16,52,3,0,31,34,3,0,68,19,42,5,0,80,50,41,21,34,25,16,0,32,18,22,14,33,0,32,72,16,9,7,0,80,0,23,71,7,0,86,68,7,0,27,47,7,0,33,5,0,35,16,74,34,0,20,29,26,32,5,0,39,3,0,34,150,3,0,59,24,0,31,41,81,7,0,36,47,7,5,0,34,28,24,27,17,17,0,37,47,0,22,20,47,38,52,7,0,32,5,0,28,35,22,5,0,24,0,43,34,37,5,0,21,41,5,0,47,52,0,92,31,0,65,23,43,44,7,0,51,26,28,0,37,29,81,22,9,0,44,7,5,0,119,16,3,0,45,41,3,0,40,25,3,0,35,16,0,70,61,31,0,39,34,56,14,56,7,5,0,125,62,5,3,0,72,21,79,41,18,5,0,61,39,27,25,88,5,3,0,81,27,0,32,145,53,5,0,59,73,0,22,84,63,57,65,9,0,84,14,40,7,0,28,53,5,3,0,113,177,33,16,3,0,49,35,27,48,34,12,58,39,198,0,42,30,7,0,52,5,0,20,3,0,31,19,27,27,3,0,104,37,35,41,132,65,51,54,26,22,16,3,0,69,18,42,5,0,80,50,34,16,83,74,82,3,0,65,51,46,0,62,24,5,0,32,37,72,0,17,47,70,5,0,46,39,26,22,66,60,3,0,62,73,3,0,60,50,32,3,0,62,70,53,0,23,42,60,12,42,42,29,73,74,63,0,50,125,75,9,0,66,134,0,43,106,9,9,28,34,36,5,3,0,29,56,56,5,0,16,3,0,81,35,0,85,38,134,5,3,0,71,20,21,0,30,18,22,14,33,0,32,29,82,11,0,22,16,9,7,0,73,5,0,16,3,0,90,12,0,34,24,71,7,0,17,44,50,53,129,44,46,0,30,82,7,0,36,18,57,12,101,5,0,15,3,0,28,34,63,45,3,0,32,21,35,47,3,0,37,13,11,12,10,19,0,30,30,30,26,43,0,155,33,7,12,30,5,0,18,35,12,65,5,0,16,16,3,0,63,54,65,13,5,0,27,36,67,15,14,109,7,5,0,87,59,13,5,0,43,66,13,5,0,123,0,44,57,141,14,73,7,5,3,0,20,45,0,75,18,5,0,17,3,0,16,34,16,115,0,31,62,5,0,76,275,48,14,38,7,5,0,32,45,5,0,52,3,0,16,34,101,16,0,123,28,27,12,43,46,5,0,52,3,0,52,75,47,79,7,5,3,0,63,70,83,3,0,64,34,76,63,73,5,3,0,70,58,70,0,28,40,12,63,64,7,0,44,5,0,109,3,0,33,30,30,81,0,24,20,0,14,21,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,44,60,32,0,9,24,15,56,5,3,0,24,48,45,0,25,45,0,11,26,17,30,7,5,0,22,3,0,27,48,46,0,27,46,0,11,26,17,30,7,5,0,22,3,0,28,46,3,0,57,65,3,0,48,103,3,0,33,38,41,51,80,49,83,74,15,3,0,1,0,19,14,2,21,16,2,28,29,37,31,41,48,32,49,59,56,0,104,110,39,58,67,7,5,0,55,40,55,41,3,0,25,33,74,67,55,58,48,53,102,77,3,0,31,50,18,5,0,34,34,16,57,3,0,18,36,19,5,0,39,47,35,30,36,0,36,25,0,60,14,7,0,48,62,5,0,17,3,0,37,31,33,5,0,57,3,0,44,36,34,13,0,30,29,19,5,0,24,24,27,73,0,27,49,0,21,43,0,22,44,0,27,51,0,22,34,71,63,71,11,9,0,66,0,24,39,43,0,21,43,0,25,47,0,25,47,0,24,46,0,22,44,0,24,22,40,0,40,83,9,0,50,0,24,46,0,23,45,0,24,33,0,22,46,0,25,9,61,0,69,20,13,9,0,25,9,71,79,11,0,22,21,0,44,44,0,111,44,13,18,44,0,261,44,13,11,0,45,24,9,0,14,9,39,26,96,13,0,24,69,11,9,5,0,39,40,0,90,72,12,55,5,3,0,33,70,38,55,44,5,3,0,24,87,0,28,35,59,75,5,3,0,29,36,3,0,32,101,0,34,46,47,5,0,36,25,26,7,0,106,73,7,49,83,5,3,0,20,62,34,16,0,39,41,40,43,15,0,35,38,34,14,43,0,37,60,29,53,32,59,9,7,0,64,38,12,51,5,0,46,3,0,38,33,46,25,78,44,53,5,0,16,3,0,46,40,16,0,34,24,12,42,23,5,0,44,83,3,0,38,40,10,0,52,39,0,63,72,41,7,5,0,41,74,5,3,0,32,16,21,54,3,0,27,30,39,30,15,3,0,26,16,38,81,28,30,45,25,53,3,0,27,16,38,21,0,63,40,5,0,34,30,0,33,25,33,7,0,39,5,0,31,0,70,36,52,18,38,51,0,97,52,7,0,25,33,7,0,39,5,0,55,65,0,59,36,92,40,50,12,60,5,0,23,31,5,0,37,3,0,62,16,114,3,0,26,16,45,48,78,48,3,0,30,80,64,5,0,16,0,34,27,12,45,23,5,0,52,3,0,30,16,53,34,30,40,34,12,0,54,66,47,52,43,28,20,0,21,44,16,27,88,11,0,28,26,9,0,33,14,18,57,16,28,9,7,5,0,22,48,16,28,52,3,0,29,16,0,39,73,5,0,43,21,51,3,0,27,42,47,54,56,17,3,0,27,16,35,24,0,35,38,18,0,37,34,52,34,14,28,38,7,0,89,24,60,5,0,73,0,43,61,5,0,49,3,0,33,16,37,21,56,3,0,29,16,45,38,84,28,51,3,0,28,28,61,5,0,16,47,83,50,3,0,29,16,51,3,0,57,103,44,0,37,76,7,5,0,95,0,61,41,0,48,48,26,14,14,7,5,0,28,22,17,38,7,119,28,22,53,3,0,40,27,21,56,3,0,86,34,0,26,38,5,0,30,0,32,36,5,0,85,0,32,24,5,0,51,3,0,26,131,3,0,73,32,44,117,3,0,81,40,39,35,0,30,55,0,46,42,55,37,0,82,42,33,11,0,19,9,0,34,40,7,0,22,5,0,26,57,5,0,21,28,5,0,16,3,0,24,21,28,71,28,75,30,82,22,28,49,3,0,35,42,16,0,18,49,12,32,5,0,190,98,51,67,5,0,21,83,30,82,22,28,80,3,0,31,48,54,21,0,14,36,34,0,31,95,14,86,30,113,11,117,117,9,0,25,7,0,69,40,5,0,16,3,0,26,38,121,3,0,67,51,66,71,37,0,55,84,5,0,42,0,22,48,5,0,72,46,37,65,0,23,39,5,0,42,43,104,7,26,22,0,45,45,5,0,66,16,3,0,30,79,3,0,45,30,63,81,32,3,0,37,25,182,3,0,45,16,30,40,29,53,31,66,87,3,0,21,86,3,0,19,36,3,0,34,123,3,0,53,28,19,29,28,27,6,24,39,24,30,43,41,35,38,86,11,0,19,9,0,35,49,19,9,0,40,0,32,41,65,26,9,0,56,0,97,71,9,7,7,34,16,0,28,74,5,0,27,51,3,0,51,43,0,31,28,29,30,23,28,74,18,40,26,28,21,26,57,18,5,0,17,3,0,46,49,0,19,65,15,7,0,35,61,15,7,5,0,74,3,0,68,32,33,30,31,32,38,29,0,31,29,41,0,43,75,15,7,0,54,81,7,0,79,13,5,0,47,51,46,47,53,52,0,31,29,0,22,76,15,7,0,70,36,0,26,42,0,68,68,9,0,36,57,7,0,100,40,22,62,14,54,7,94,47,0,34,49,7,0,29,41,54,0,43,81,14,56,79,9,0,87,7,144,29,47,0,43,76,14,56,82,9,0,82,7,0,49,41,22,62,14,54,7,12,24,5,3,0,33,53,0,103,59,5,0,82,72,5,0,15,3,0,51,27,0,56,48,53,40,27,32,34,75,26,32,22,34,64,0,31,67,5,0,96,67,5,0,32,3,0,38,98,70,5,0,55,3,0,45,64,54,30,109,3,0,94,127,3,0,67,63,106,30,233,94,3,0,47,0,35,32,21,57,3,0,28,55,43,5,0,32,21,50,3,0,26,48,53,32,76,32,26,22,3,0,73,33,39,0,24,59,7,12,39,23,14,62,7,5,3,0,25,83,3,0,21,67,67,66,82,94,49,0,35,40,39,59,5,0,69,0,129,48,5,0,23,0,42,29,49,12,62,5,0,60,57,61,5,0,35,61,41,63,5,0,46,3,0,23,32,3,0,42,42,45,41,54,79,18,5,0,17,3,0,44,34,49,94,18,56,83,18,5,0,17,3,0,41,35,49,60,25,30,18,5,0,17,3,0,37,46,27,25,59,18,5,0,17,3,0,21,50,39,114,3,0,34,34,43,0,49,18,0,20,20,7,0,82,42,47,38,105,74,7,0,34,47,84,81,12,49,23,17,5,3,0,32,37,3,0,30,33,37,0,76,21,7,0,83,35,0,85,55,23,9,7,45,19,5,0,39,60,0,82,18,5,0,48,86,58,5,0,17,3,0,33,37,45,29,59,0,23,37,7,12,19,26,14,27,7,5,0,21,3,0,34,31,64,0,41,75,81,16,22,9,7,5,0,207,3,0,52,21,22,52,0,50,33,0,47,0,225,87,11,9,61,101,50,17,20,24,95,62,0,43,19,19,26,0,49,106,20,75,49,13,11,9,36,110,41,56,52,69,127,59,50,11,9,7,5,0,101,0,42,77,5,3,0,26,37,50,47,99,43,36,7,46,93,41,0,19,38,9,7,48,40,45,43,51,39,5,3,0,37,60,126,5,0,46,3,0,27,21,21,30,0,37,18,22,14,33,42,7,0,36,48,101,59,5,0,17,3,0,27,35,45,74,58,0,22,122,7,0,20,5,0,38,3,0,21,25,0,36,69,61,76,71,36,5,0,43,57,0,21,35,12,61,0,25,39,9,7,0,21,54,3,0,23,53,32,3,0,34,34,3,0,72,45,70,59,3,0,24,21,32,0,8,37,14,7,0,36,39,0,37,63,14,46,7,0,31,0,31,92,7,0,35,93,7,0,29,0,38,91,7,0,72,47,23,36,0,17,3,0,32,67,44,18,12,56,18,5,0,21,33,0,8,36,44,0,37,98,7,0,42,99,7,0,36,31,0,38,91,7,0,72,47,23,36,0,17,3,0,32,71,44,18,12,56,18,5,0,27,44,27,17,3,0,42,46,115,18,5,0,17,3,0,39,33,41,18,34,112,18,5,0,17,3,0,36,21,30,0,37,18,22,14,36,83,9,0,33,42,7,0,38,5,3,0,30,39,54,0,35,47,12,13,16,20,0,46,95,7,0,73,43,5,0,70,72,3,0,1,0,18,17,34,35,43,3,0,1,25,22,20,43,23,3,0,13,45,3,0,11,38,3,0,10,43,35,0,116,42,0,20,55,55,9,14,75,7,5,3,0,46,38,54,0,52,71,0,21,63,66,63,66,67,62,30,56,7,5,0,20,68,5,0,38,50,3,0,29,19,0,82,36,52,5,0,21,54,12,73,5,3,0,1,0,38,31,34,26,48,27,57,72,54,67,77,52,43,3,0,21,24,3,0,11,27,0,59,32,5,0,36,37,34,37,21,23,38,36,16,3,0,1,0,30,30,0,47,31,74,65,3,0,19,1,0,32,15,0,88,41,0,9,36,47,33,0,37,19,7,0,47,13,40,51,28,14,42,7,0,17,27,11,38,49,27,0,24,5,10,45,3,1,42,43,0,34,31,3,0,32,1,0,36,19,0,51,37,42,3,0,33,1,0,28,0,45,90,35,34,0,13,17,0,52,36,38,5,0,32,3,0,13,1,0,22,42,25,33,0],"data":{"version":3,"file":"index.js","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/types.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/whitespace.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/location.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/base.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/comments.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/error-message.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/error.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/estree.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/context.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/identifier.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/scopeflags.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/flow.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/jsx/xhtml.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/jsx/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/typescript/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/production-parameter.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/typescript/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/placeholders.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/v8intrinsic.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugin-utils.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/options.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/state.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/util.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/node.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/lval.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/expression-scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/expression.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/statement.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/class-scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/index.js"],"sourcesContent":["// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString:\n    \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString:\n    'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate:\n    \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport { ErrorMessages as Errors } from \"./error-message.js\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n\n      type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n      return this.finishNode(node, type);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      this.state.value === \"of\" &&\n      !this.state.exprAllowed &&\n      prevType !== tt._function &&\n      prevType !== tt._class\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b00000000,\n             SCOPE_PROGRAM      = 0b00000001,\n             SCOPE_FUNCTION     = 0b00000010,\n             SCOPE_ARROW        = 0b00000100,\n             SCOPE_SIMPLE_CATCH = 0b00001000,\n             SCOPE_SUPER        = 0b00010000,\n             SCOPE_DIRECT_SUPER = 0b00100000,\n             SCOPE_CLASS        = 0b01000000,\n             SCOPE_TS_MODULE    = 0b10000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE           = 0b00000_0000_01,\n             BIND_KIND_TYPE            = 0b00000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR            = 0b00000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL        = 0b00000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION       = 0b00000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE        = 0b00000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE           = 0b00001_0000_00,\n             BIND_FLAGS_CLASS          = 0b00010_0000_00,\n             BIND_FLAGS_TS_ENUM        = 0b00100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM  = 0b01000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY = 0b10000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"public\"\n  | \"private\"\n  | \"protected\";\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.hash) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers<T: TsModifier>(\n      modified: { [key: TsModifier]: ?true },\n      allowedModifiers: T[],\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?T = this.tsParseModifier(allowedModifiers);\n\n        if (!modifier) break;\n\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n        modified[modifier] = true;\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (!readonly && (this.match(tt.parenL) || this.isRelational(\"<\"))) {\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      const readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        if (readonly) node.readonly = true;\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        this.expect(tt._new);\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      this.eat(operator);\n      let type = parseConstituentType();\n      if (this.match(operator)) {\n        const types = [type];\n        while (this.eat(operator)) {\n          types.push(parseConstituentType());\n        }\n        const node: N.TsUnionType | N.TsIntersectionType = this.startNodeAtNode(\n          type,\n        );\n        node.types = types;\n        type = this.finishNode(node, kind);\n      }\n      return type;\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            const node: N.TsTypePredicate = this.startNodeAtNode(t);\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          const node: N.TsTypePredicate = this.startNodeAtNode(t);\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        const node = this.startNodeAtNode(t);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      node.moduleReference = this.tsParseModuleReference();\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInDeclareContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      switch (value) {\n        case \"abstract\":\n          if (this.tsCheckLineTerminatorAndMatch(tt._class, next)) {\n            const cls: N.ClassDeclaration = node;\n            cls.abstract = true;\n            if (next) {\n              this.next();\n              if (!this.match(tt._class)) {\n                this.unexpected(null, tt._class);\n              }\n            }\n            return this.parseClass(\n              cls,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (next) this.next();\n          if (this.match(tt.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminatorAndMatch(tokenType: TokenType, next: boolean) {\n      return (next || this.match(tokenType)) && !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        const ahead = this.lookahead();\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\")\n        ) {\n          node.importKind = \"type\";\n          this.next();\n        }\n      }\n\n      if (!node.importKind) {\n        node.importKind = \"value\";\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.expect(tt._import);\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        this.parseClass(cls, true, true);\n        cls.abstract = true;\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      this.tsParseModifiers(member, [\"declare\"]);\n      const accessibility = this.parseAccessModifier();\n      if (accessibility) member.accessibility = accessibility;\n      this.tsParseModifiers(member, [\"declare\"]);\n\n      const callParseClassMember = () => {\n        super.parseClassMember(classBody, member, state);\n      };\n      if (member.declare) {\n        this.tsInDeclareContext(callParseClassMember);\n      } else {\n        callParseClassMember();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n\n        return;\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isDeclareContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (this.match(tt.jsxTagStart)) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isDeclareContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInDeclareContext<T>(cb: () => T): T {\n      const oldIsDeclareContext = this.state.isDeclareContext;\n      this.state.isDeclareContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isDeclareContext = oldIsDeclareContext;\n      }\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and moduleAttributes plugins.\",\n      );\n    }\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: SyntaxError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n  isDeclareContext: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, string> = new Map();\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: string) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport { Errors } from \"./error\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(): void {\n    if (!this.isLineTerminator()) this.unexpected(null, tt.semi);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\ntype raiseFunction = (number, string, ...any) => void;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ string> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, message: string) {\n    this.errors.set(pos, message);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (message: string, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {string} message Error message\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, message);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {string} message\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(pos: number, message: string): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {string} message\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((message, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, message);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope.js\";\nimport { Errors } from \"./error\";\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        // If we have [Yield] production, `yield` will start a YieldExpression thus\n        // regex is allowed following. Otherwise `yield` is an identifier and regex\n        // is disallowed in tt.name.updateContext\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        if (\n          op === tt.exponent &&\n          left.type === \"UnaryExpression\" &&\n          (this.options.createParenthesizedExpressions ||\n            !(left.extra && left.extra.parenthesized))\n        ) {\n          this.raise(\n            left.argument.start,\n            Errors.UnexpectedTokenUnaryExponentiation,\n          );\n        }\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary();\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    return this.parseUpdate(node, update, refExpressionErrors);\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed\n      ? this.parseExpression()\n      : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(\n        this.getPrivateNameSV(property),\n        property.start,\n      );\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        // todo(Babel 8): remove the if condition,\n        // moduleAttributes is renamed to importAssertions\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            return this.parseAsyncArrowUnaryFunction(id);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo();\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(node.id.name, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              node.id.name,\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  parseDo(): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    // The tokenizer uses `braceIsBlock` to detect whether `{` starts a block statement.\n    // If `{` is a block statement, `exprAllowed` will be `true`.\n    // However the tokenizer can not handle edge cases like `0 ? a : { a : 1 } / 2`, here\n    // we update `exprAllowed` when an object-like is parsed.\n    this.state.exprAllowed = false;\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bigint) ||\n        this.match(tt.decimal)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(\n          startLoc,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n      } else {\n        this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(): N.AwaitExpression {\n    const node = this.startNode();\n\n    this.next();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (\n        this.hasPrecedingLineBreak() ||\n        // All the following expressions are ambiguous:\n        //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n        this.match(tt.plusMin) ||\n        this.match(tt.parenL) ||\n        this.match(tt.bracketL) ||\n        this.match(tt.backQuote) ||\n        // Sometimes the tokenizer generates tt.slash for regexps, and this is\n        // handler by parseExprAtom\n        this.match(tt.regexp) ||\n        this.match(tt.slash) ||\n        // This code could be parsed both as a modulo operator or as an intrinsic:\n        //   await %x(0)\n        (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n      ) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    program.sourceType = this.options.sourceType;\n\n    program.interpreter = this.parseInterpreterDirective();\n\n    this.parseBlockBody(program, true, true, tt.eof);\n\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.expect(tt.semi);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.expect(tt.semi);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n      hadStaticBlock: false,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(\n          classBody,\n          ((member: any): N.StaticBlock),\n          state,\n        );\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (\n      this.isPrivateName(key) &&\n      this.getPrivateNameSV(key) === \"constructor\"\n    ) {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n    state: N.ParseClassMemberState,\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // Start a new expression scope, this is required for parsing edge cases like:\n    // async (x = class { static { await; } }) => {}\n    this.expressionScope.enter(newExpressionScope());\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.expressionScope.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (state.hadStaticBlock) {\n      this.raise(member.start, Errors.DuplicateStaticBlock);\n    }\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n    state.hadStaticBlock = true;\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation || this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    }\n    // todo(Babel 8): remove module attributes support\n    else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      if (this.match(tt.string)) {\n        node.key = this.parseLiteral<N.StringLiteral>(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (keyName !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          keyName,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ScopeHandler from \"../util/scope\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    const ScopeHandler = this.getScopeHandler();\n\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n"],"names":["beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","name","options","token","set","createBinop","types","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","getLineInfo","input","offset","lineStart","match","lastIndex","exec","index","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","stack","length","CommentsParser","addComment","comment","loc","state","trailingComments","push","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","processComment","type","body","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","slice","innerComments","firstTrailingCommentIndex","findIndex","ErrorMessages","Object","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","data","message","replace","_","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","superClass","estreeParseRegExpLiteral","pattern","flags","regex","e","estreeParseLiteral","estreeParseBigIntLiteral","value","bigInt","BigInt","String","estreeParseDecimalLiteral","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","args","directiveStatements","directives","map","d","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","refExpressionErrors","tt","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","finishNode","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","toAssignable","isLHS","toAssignableObjectExpressionProp","key","Errors","finishCallExpression","optional","callee","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","finishToken","val","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","id","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","scope","declareName","enter","bodyNode","parseImport","exit","hasModuleExport","forEach","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","refNeedsArrowPos","result","tryParse","error","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parse","indexOf","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","getTokenFromCode","charCodeAt","finishOp","readWord","isBinding","element","operator","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","maybeInArrowParameters","checkLVal","parseClassProperty","parseClassPrivateProperty","isClassMethod","isClassProperty","isNonstaticConstructor","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","toUpperCase","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","str","count","entity","substr","fromCodePoint","parseInt","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","getScopeHandler","tsIsIdentifier","tsNextTokenCanFollowModifier","isLiteralPropertyName","tsParseModifier","allowedModifiers","modifier","tsTryParse","bind","tsParseModifiers","modified","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tokenType","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","accessibility","parseAccessModifier","elt","pp","parameter","bodilessType","isDeclareContext","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","parseStatementContent","callParseClassMember","parseClassMemberWithIsStatic","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","ct","parseBindingAtom","parseMaybeDecoratorArguments","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsDeclareContext","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","some","Array","isArray","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","join","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","setStrict","clear","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","size","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","escaped","charAt","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","n","readWord1","escStart","identifierCheck","esc","keywordTypes","parent","update","UtilParser","op","nameStart","nameEnd","messageOrType","missingPlugin","expectOnePlugin","names","fn","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","isPrivateName","getPrivateNameSV","ExpressionErrors","Node","parser","range","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","expressionScope","recordParenthesizedIdentifierError","isLast","raiseRestNotLast","checkToRestConversion","arg","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","first","checkCommaAfterRest","parseDecorator","checkClashes","disallowLetBinding","strictModeChanged","elem","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","ExpressionParser","checkProto","isRecord","protoRef","computed","used","shouldExitDescending","getExpression","paramFlags","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","isDelete","parseUpdate","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","classScope","usePrivateName","parseNoCallExpr","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","oldLabels","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","create","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","checkGetterSetterParams","oldInPropertyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","ret","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","from","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","constructorAllowsSuper","hadConstructor","hadStaticBlock","parseClassStaticBlock","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","declarePrivateName","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","toString","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList"],"mappings":"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","sourceRoot":""},"url":null}}}