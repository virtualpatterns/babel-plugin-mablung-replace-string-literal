{"result":[{"scriptId":"6","url":"internal/per_context/primordials.js","functions":[{"functionName":"uncurryThis","ranges":[{"startOffset":1000,"endOffset":1096,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1093,"count":20632}],"isBlockCoverage":true}]},{"scriptId":"9","url":"internal/bootstrap/loaders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10314,"count":1}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":3655,"endOffset":4052,"count":0}],"isBlockCoverage":false},{"functionName":"_linkedBinding","ranges":[{"startOffset":4082,"endOffset":4290,"count":0}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":4470,"endOffset":4732,"count":841},{"startOffset":4572,"endOffset":4712,"count":42}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":4877,"endOffset":5031,"count":3025},{"startOffset":5013,"endOffset":5028,"count":0}],"isBlockCoverage":true},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5398,"endOffset":5496,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5457,"endOffset":5491,"count":229}],"isBlockCoverage":true},{"functionName":"NativeModule","ranges":[{"startOffset":5501,"endOffset":6253,"count":229}],"isBlockCoverage":true},{"functionName":"exposeInternals","ranges":[{"startOffset":6403,"endOffset":6629,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6640,"endOffset":6693,"count":0}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":6704,"endOffset":6820,"count":2255},{"startOffset":6788,"endOffset":6815,"count":84}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":6892,"endOffset":7586,"count":84},{"startOffset":6955,"endOffset":7147,"count":0},{"startOffset":7211,"endOffset":7508,"count":16},{"startOffset":7470,"endOffset":7474,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":7590,"endOffset":8141,"count":85},{"startOffset":7628,"endOffset":7647,"count":69},{"startOffset":7647,"endOffset":8140,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7868,"endOffset":7981,"count":16}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":8437,"endOffset":8781,"count":100},{"startOffset":8556,"endOffset":8771,"count":3025},{"startOffset":8633,"endOffset":8642,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":8785,"endOffset":9370,"count":936},{"startOffset":8834,"endOffset":8849,"count":118},{"startOffset":8851,"endOffset":8885,"count":822},{"startOffset":8885,"endOffset":9024,"count":114},{"startOffset":9024,"endOffset":9059,"count":1},{"startOffset":9060,"endOffset":9081,"count":113},{"startOffset":9235,"endOffset":9369,"count":114}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":9568,"endOffset":9939,"count":858},{"startOffset":9626,"endOffset":9657,"count":6},{"startOffset":9657,"endOffset":9841,"count":852},{"startOffset":9841,"endOffset":9896,"count":0},{"startOffset":9896,"endOffset":9938,"count":852}],"isBlockCoverage":true},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":10055,"endOffset":10227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"10","url":"internal/bootstrap/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12616,"count":1}],"isBlockCoverage":true},{"functionName":"process.openStdin","ranges":[{"startOffset":3399,"endOffset":3469,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6160,"endOffset":6322,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6424,"endOffset":6596,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":9383,"endOffset":9969,"count":1}],"isBlockCoverage":true},{"functionName":"setupProcessObject","ranges":[{"startOffset":9971,"endOffset":10576,"count":1}],"isBlockCoverage":true},{"functionName":"setupGlobalProxy","ranges":[{"startOffset":10578,"endOffset":10755,"count":1}],"isBlockCoverage":true},{"functionName":"setupBuffer","ranges":[{"startOffset":10757,"endOffset":11193,"count":1}],"isBlockCoverage":true},{"functionName":"createGlobalConsole","ranges":[{"startOffset":11195,"endOffset":11876,"count":1}],"isBlockCoverage":true},{"functionName":"exposeNamespace","ranges":[{"startOffset":11928,"endOffset":12126,"count":1}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":12178,"endOffset":12376,"count":4}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":12436,"endOffset":12615,"count":7}],"isBlockCoverage":true}]},{"scriptId":"11","url":"internal/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":53129,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":1404,"endOffset":2120,"count":32},{"startOffset":1581,"endOffset":1697,"count":0},{"startOffset":1846,"endOffset":2119,"count":0}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":2162,"endOffset":2869,"count":32},{"startOffset":2497,"endOffset":2868,"count":0}],"isBlockCoverage":true},{"functionName":"lazyInternalUtil","ranges":[{"startOffset":2959,"endOffset":3085,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":3119,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":3295,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"SystemError","ranges":[{"startOffset":3906,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6448,"endOffset":6523,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6527,"endOffset":6716,"count":0}],"isBlockCoverage":false},{"functionName":"makeSystemErrorWithCode","ranges":[{"startOffset":6720,"endOffset":6865,"count":4}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6811,"endOffset":6858,"count":0}],"isBlockCoverage":false},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":6867,"endOffset":7622,"count":232}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6955,"endOffset":7536,"count":30},{"startOffset":7045,"endOffset":7254,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":7542,"endOffset":7615,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":7694,"endOffset":8105,"count":28}],"isBlockCoverage":true},{"functionName":"hidden","ranges":[{"startOffset":7734,"endOffset":8102,"count":8543},{"startOffset":7898,"endOffset":7962,"count":6033},{"startOffset":8046,"endOffset":8092,"count":6033}],"isBlockCoverage":true},{"functionName":"addCodeToName","ranges":[{"startOffset":8107,"endOffset":8723,"count":30},{"startOffset":8205,"endOffset":8260,"count":0},{"startOffset":8545,"endOffset":8689,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":8835,"endOffset":9343,"count":233},{"startOffset":9077,"endOffset":9122,"count":4},{"startOffset":9122,"endOffset":9176,"count":229},{"startOffset":9211,"endOffset":9321,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9238,"endOffset":9315,"count":3}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":9345,"endOffset":10149,"count":30},{"startOffset":9446,"endOffset":9482,"count":1},{"startOffset":9773,"endOffset":9831,"count":0},{"startOffset":10053,"endOffset":10148,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":10167,"endOffset":10271,"count":34},{"startOffset":10205,"endOffset":10249,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":10328,"endOffset":10498,"count":34},{"startOffset":10406,"endOffset":10459,"count":1}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":10791,"endOffset":11988,"count":34},{"startOffset":10868,"endOffset":10886,"count":0},{"startOffset":11080,"endOffset":11149,"count":0},{"startOffset":11689,"endOffset":11811,"count":102},{"startOffset":11737,"endOffset":11755,"count":68},{"startOffset":11757,"endOffset":11780,"count":34},{"startOffset":11780,"endOffset":11811,"count":68},{"startOffset":11883,"endOffset":11909,"count":0}],"isBlockCoverage":true},{"functionName":"uvExceptionWithHostPort","ranges":[{"startOffset":12301,"endOffset":13207,"count":0}],"isBlockCoverage":false},{"functionName":"errnoException","ranges":[{"startOffset":13386,"endOffset":14092,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionWithHostPort","ranges":[{"startOffset":14445,"endOffset":15662,"count":0}],"isBlockCoverage":false},{"functionName":"dnsException","ranges":[{"startOffset":15826,"endOffset":17342,"count":0}],"isBlockCoverage":false},{"functionName":"connResetException","ranges":[{"startOffset":17344,"endOffset":17499,"count":0}],"isBlockCoverage":false},{"functionName":"isStackOverflowError","ranges":[{"startOffset":17789,"endOffset":18167,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericalSeparator","ranges":[{"startOffset":18248,"endOffset":18484,"count":0}],"isBlockCoverage":false},{"functionName":"beforeInspector","ranges":[{"startOffset":18763,"endOffset":19154,"count":0}],"isBlockCoverage":false},{"functionName":"afterInspector","ranges":[{"startOffset":19158,"endOffset":20496,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22263,"endOffset":22427,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25266,"endOffset":25381,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25670,"endOffset":25764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28045,"endOffset":28273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":30006,"endOffset":30224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31974,"endOffset":32274,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32316,"endOffset":32460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32503,"endOffset":35708,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35749,"endOffset":36005,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36397,"endOffset":36560,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37222,"endOffset":37357,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37398,"endOffset":37722,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37881,"endOffset":38029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38073,"endOffset":38847,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39225,"endOffset":39389,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39442,"endOffset":39773,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39817,"endOffset":40124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40494,"endOffset":40569,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40613,"endOffset":40901,"count":1},{"startOffset":40768,"endOffset":40824,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41229,"endOffset":41660,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42336,"endOffset":42859,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42953,"endOffset":43054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43756,"endOffset":44454,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44505,"endOffset":44697,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44746,"endOffset":45062,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45095,"endOffset":45972,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46424,"endOffset":46683,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48033,"endOffset":48202,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50100,"endOffset":50231,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50824,"endOffset":51107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52087,"endOffset":52185,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52379,"endOffset":52734,"count":0}],"isBlockCoverage":false}]},{"scriptId":"12","url":"internal/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12301,"count":1}],"isBlockCoverage":false},{"functionName":"removeColors","ranges":[{"startOffset":975,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":1046,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":1581,"endOffset":2678,"count":34},{"startOffset":1655,"endOffset":1675,"count":0},{"startOffset":1702,"endOffset":1729,"count":32},{"startOffset":1735,"endOffset":1790,"count":0},{"startOffset":2432,"endOffset":2654,"count":29}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":1816,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorStack","ranges":[{"startOffset":2680,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":3021,"endOffset":3095,"count":1},{"startOffset":3067,"endOffset":3093,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":3274,"endOffset":3405,"count":715},{"startOffset":3344,"endOffset":3362,"count":0},{"startOffset":3378,"endOffset":3404,"count":0}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":3407,"endOffset":4987,"count":0}],"isBlockCoverage":false},{"functionName":"emitExperimentalWarning","ranges":[{"startOffset":4989,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":5279,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":5589,"endOffset":5732,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5640,"endOffset":5729,"count":0}],"isBlockCoverage":false},{"functionName":"createClassWrapper","ranges":[{"startOffset":5997,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsToNamesMapping","ranges":[{"startOffset":6391,"endOffset":6669,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":6671,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorOf","ranges":[{"startOffset":6980,"endOffset":7326,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7328,"endOffset":7457,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":7602,"endOffset":9073,"count":4},{"startOffset":7675,"endOffset":7740,"count":0},{"startOffset":7784,"endOffset":8105,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":8305,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":9168,"endOffset":9490,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":9631,"endOffset":9758,"count":2},{"startOffset":9712,"endOffset":9742,"count":0}],"isBlockCoverage":true},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":9840,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":11014,"endOffset":11172,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":11195,"endOffset":11410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"13","url":"events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22365,"count":1}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":1850,"endOffset":1919,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2230,"endOffset":2286,"count":4}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2290,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":3077,"endOffset":3227,"count":23},{"startOffset":3150,"endOffset":3225,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3316,"endOffset":3364,"count":11}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3373,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":3674,"endOffset":4404,"count":7},{"startOffset":3725,"endOffset":3785,"count":2},{"startOffset":3787,"endOffset":3858,"count":5},{"startOffset":3929,"endOffset":3954,"count":4},{"startOffset":3956,"endOffset":4215,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":4407,"endOffset":4966,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":4968,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":5797,"endOffset":5996,"count":1},{"startOffset":5883,"endOffset":5953,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":5999,"endOffset":6148,"count":7},{"startOffset":6117,"endOffset":6147,"count":0}],"isBlockCoverage":true},{"functionName":"getMaxListeners","ranges":[{"startOffset":6191,"endOffset":6254,"count":0}],"isBlockCoverage":false},{"functionName":"identicalSequenceRange","ranges":[{"startOffset":6382,"endOffset":6958,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceStackTrace","ranges":[{"startOffset":6960,"endOffset":7566,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":7598,"endOffset":9881,"count":23},{"startOffset":7743,"endOffset":7781,"count":0},{"startOffset":7789,"endOffset":7823,"count":0},{"startOffset":7847,"endOffset":7876,"count":0},{"startOffset":7882,"endOffset":7919,"count":0},{"startOffset":7991,"endOffset":8923,"count":0},{"startOffset":8991,"endOffset":9004,"count":1},{"startOffset":9004,"endOffset":9043,"count":22},{"startOffset":9043,"endOffset":9332,"count":3},{"startOffset":9259,"endOffset":9277,"count":0},{"startOffset":9279,"endOffset":9328,"count":0},{"startOffset":9332,"endOffset":9863,"count":19},{"startOffset":9449,"endOffset":9859,"count":38},{"startOffset":9780,"endOffset":9798,"count":0},{"startOffset":9800,"endOffset":9853,"count":0},{"startOffset":9863,"endOffset":9880,"count":22}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":9884,"endOffset":11939,"count":18},{"startOffset":10064,"endOffset":10148,"count":0},{"startOffset":10333,"endOffset":10613,"count":15},{"startOffset":10410,"endOffset":10429,"count":0},{"startOffset":10678,"endOffset":10816,"count":11},{"startOffset":10816,"endOffset":11919,"count":7},{"startOffset":10975,"endOffset":10997,"count":0},{"startOffset":11080,"endOffset":11184,"count":0},{"startOffset":11288,"endOffset":11307,"count":0},{"startOffset":11309,"endOffset":11915,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":11978,"endOffset":12070,"count":18}],"isBlockCoverage":true},{"functionName":"prependListener","ranges":[{"startOffset":12183,"endOffset":12286,"count":0}],"isBlockCoverage":false},{"functionName":"onceWrapper","ranges":[{"startOffset":12289,"endOffset":12553,"count":0}],"isBlockCoverage":false},{"functionName":"_onceWrap","ranges":[{"startOffset":12555,"endOffset":12796,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":12828,"endOffset":12954,"count":0}],"isBlockCoverage":false},{"functionName":"prependOnceListener","ranges":[{"startOffset":13006,"endOffset":13176,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":13298,"endOffset":14592,"count":5},{"startOffset":13447,"endOffset":13459,"count":0},{"startOffset":13532,"endOffset":13544,"count":0},{"startOffset":13574,"endOffset":13603,"count":4},{"startOffset":13605,"endOffset":13865,"count":1},{"startOffset":13656,"endOffset":13690,"count":0},{"startOffset":13865,"endOffset":14566,"count":4},{"startOffset":13984,"endOffset":14123,"count":6},{"startOffset":14021,"endOffset":14053,"count":2},{"startOffset":14055,"endOffset":14113,"count":4},{"startOffset":14161,"endOffset":14173,"count":0},{"startOffset":14213,"endOffset":14387,"count":2},{"startOffset":14293,"endOffset":14340,"count":1}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":14712,"endOffset":16038,"count":0}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":16041,"endOffset":16436,"count":0}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":16473,"endOffset":16540,"count":0}],"isBlockCoverage":false},{"functionName":"rawListeners","ranges":[{"startOffset":16581,"endOffset":16652,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.listenerCount","ranges":[{"startOffset":16684,"endOffset":16852,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":16909,"endOffset":17199,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":17237,"endOffset":17330,"count":0}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":17333,"endOffset":17793,"count":19},{"startOffset":17542,"endOffset":17582,"count":0},{"startOffset":17587,"endOffset":17635,"count":0},{"startOffset":17640,"endOffset":17696,"count":0},{"startOffset":17701,"endOffset":17765,"count":0},{"startOffset":17769,"endOffset":17792,"count":0}],"isBlockCoverage":true},{"functionName":"unwrapListeners","ranges":[{"startOffset":17795,"endOffset":18009,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":18011,"endOffset":18576,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18654,"endOffset":18675,"count":0}],"isBlockCoverage":false},{"functionName":"createIterResult","ranges":[{"startOffset":18690,"endOffset":18758,"count":0}],"isBlockCoverage":false},{"functionName":"addErrorHandlerIfEventEmitter","ranges":[{"startOffset":18760,"endOffset":18943,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticRemoveListener","ranges":[{"startOffset":18945,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"eventTargetAgnosticAddListener","ranges":[{"startOffset":19332,"endOffset":19921,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":19923,"endOffset":22364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"internal/util/inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":71569,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2893,"endOffset":2929,"count":62}],"isBlockCoverage":true},{"functionName":"isUndetectableObject","ranges":[{"startOffset":3020,"endOffset":3070,"count":0}],"isBlockCoverage":false},{"functionName":"getUserOptions","ranges":[{"startOffset":6215,"endOffset":7666,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":7961,"endOffset":9878,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9970,"endOffset":10015,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10019,"endOffset":10227,"count":0}],"isBlockCoverage":false},{"functionName":"defineColorAlias","ranges":[{"startOffset":11964,"endOffset":12206,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12059,"endOffset":12099,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":12105,"endOffset":12151,"count":0}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":13216,"endOffset":13374,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":13393,"endOffset":13425,"count":0}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":13538,"endOffset":15164,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":15166,"endOffset":15432,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":15434,"endOffset":15480,"count":0}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":15559,"endOffset":15606,"count":0}],"isBlockCoverage":false},{"functionName":"isInstanceof","ranges":[{"startOffset":15608,"endOffset":15726,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":15728,"endOffset":16988,"count":0}],"isBlockCoverage":false},{"functionName":"addPrototypeProperties","ranges":[{"startOffset":17175,"endOffset":19018,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":19020,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":19444,"endOffset":20386,"count":0}],"isBlockCoverage":false},{"functionName":"getCtxStyle","ranges":[{"startOffset":20388,"endOffset":20651,"count":0}],"isBlockCoverage":false},{"functionName":"formatProxy","ranges":[{"startOffset":20653,"endOffset":21102,"count":0}],"isBlockCoverage":false},{"functionName":"findTypedConstructor","ranges":[{"startOffset":21104,"endOffset":21627,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":21809,"endOffset":24348,"count":0}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":24350,"endOffset":34825,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorBraces","ranges":[{"startOffset":34827,"endOffset":35009,"count":0}],"isBlockCoverage":false},{"functionName":"getBoxedBase","ranges":[{"startOffset":35011,"endOffset":36185,"count":0}],"isBlockCoverage":false},{"functionName":"getClassBase","ranges":[{"startOffset":36187,"endOffset":36787,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionBase","ranges":[{"startOffset":36789,"endOffset":37882,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":37884,"endOffset":41005,"count":0}],"isBlockCoverage":false},{"functionName":"groupArrayElements","ranges":[{"startOffset":41007,"endOffset":45258,"count":0}],"isBlockCoverage":false},{"functionName":"handleMaxCallStackSize","ranges":[{"startOffset":45260,"endOffset":45612,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":45614,"endOffset":45791,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigInt","ranges":[{"startOffset":45793,"endOffset":45865,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":45867,"endOffset":47050,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamespaceObject","ranges":[{"startOffset":47052,"endOffset":48200,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpecialArray","ranges":[{"startOffset":48247,"endOffset":49454,"count":0}],"isBlockCoverage":false},{"functionName":"formatArrayBuffer","ranges":[{"startOffset":49456,"endOffset":50056,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":50058,"endOffset":50652,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypedArray","ranges":[{"startOffset":50654,"endOffset":51670,"count":0}],"isBlockCoverage":false},{"functionName":"formatSet","ranges":[{"startOffset":51672,"endOffset":51904,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":51906,"endOffset":52204,"count":0}],"isBlockCoverage":false},{"functionName":"formatSetIterInner","ranges":[{"startOffset":52206,"endOffset":53019,"count":0}],"isBlockCoverage":false},{"functionName":"formatMapIterInner","ranges":[{"startOffset":53021,"endOffset":54343,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakCollection","ranges":[{"startOffset":54345,"endOffset":54437,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakSet","ranges":[{"startOffset":54439,"endOffset":54596,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakMap","ranges":[{"startOffset":54598,"endOffset":54755,"count":0}],"isBlockCoverage":false},{"functionName":"formatIterator","ranges":[{"startOffset":54757,"endOffset":55148,"count":0}],"isBlockCoverage":false},{"functionName":"formatPromise","ranges":[{"startOffset":55150,"endOffset":55615,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":55617,"endOffset":57951,"count":0}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":57953,"endOffset":58895,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":58897,"endOffset":61647,"count":0}],"isBlockCoverage":false},{"functionName":"hasBuiltInToString","ranges":[{"startOffset":61649,"endOffset":62668,"count":0}],"isBlockCoverage":false},{"functionName":"firstErrorLine","ranges":[{"startOffset":62693,"endOffset":62732,"count":0}],"isBlockCoverage":false},{"functionName":"tryStringify","ranges":[{"startOffset":62762,"endOffset":63231,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":63233,"endOffset":63317,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptions","ranges":[{"startOffset":63319,"endOffset":63597,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":63599,"endOffset":67383,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":67812,"endOffset":68363,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":68478,"endOffset":68890,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidthCodePoint","ranges":[{"startOffset":69058,"endOffset":70667,"count":0}],"isBlockCoverage":false},{"functionName":"isZeroWidthCodePoint","ranges":[{"startOffset":70701,"endOffset":71269,"count":0}],"isBlockCoverage":false},{"functionName":"stripVTControlCharacters","ranges":[{"startOffset":71359,"endOffset":71433,"count":0}],"isBlockCoverage":false}]},{"scriptId":"15","url":"internal/util/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1915,"count":1}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":425,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":518,"endOffset":612,"count":1711}],"isBlockCoverage":true},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":614,"endOffset":722,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":724,"endOffset":820,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":822,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":920,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":1014,"endOffset":1108,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":1110,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":1206,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":1306,"endOffset":1404,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1406,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1508,"endOffset":1610,"count":9}],"isBlockCoverage":true}]},{"scriptId":"16","url":"internal/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":false},{"functionName":"lazyError","ranges":[{"startOffset":26,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":779},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":309,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35721,"count":1}],"isBlockCoverage":false},{"functionName":"validateOffset","ranges":[{"startOffset":2784,"endOffset":2868,"count":0}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":4082,"endOffset":4218,"count":245}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4220,"endOffset":4379,"count":84}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4395,"endOffset":4517,"count":561},{"startOffset":4469,"endOffset":4515,"count":487}],"isBlockCoverage":true},{"functionName":"showFlaggedDeprecation","ranges":[{"startOffset":4821,"endOffset":5501,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5503,"endOffset":5721,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":5723,"endOffset":6988,"count":0}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6990,"endOffset":7592,"count":1},{"startOffset":7131,"endOffset":7185,"count":0},{"startOffset":7347,"endOffset":7362,"count":0},{"startOffset":7389,"endOffset":7404,"count":0},{"startOffset":7464,"endOffset":7540,"count":0}],"isBlockCoverage":true},{"functionName":"Buffer","ranges":[{"startOffset":8168,"endOffset":8501,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8594,"endOffset":8622,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8879,"endOffset":9843,"count":14},{"startOffset":8965,"endOffset":9008,"count":8},{"startOffset":9008,"endOffset":9059,"count":6},{"startOffset":9061,"endOffset":9698,"count":6},{"startOffset":9158,"endOffset":9212,"count":0},{"startOffset":9238,"endOffset":9266,"count":0},{"startOffset":9267,"endOffset":9338,"count":0},{"startOffset":9340,"endOffset":9694,"count":0},{"startOffset":9698,"endOffset":9842,"count":0}],"isBlockCoverage":true},{"functionName":"of","ranges":[{"startOffset":10214,"endOffset":10366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10655,"endOffset":10876,"count":720},{"startOffset":10699,"endOffset":10764,"count":0},{"startOffset":10807,"endOffset":10874,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10979,"endOffset":11224,"count":4},{"startOffset":11063,"endOffset":11076,"count":0},{"startOffset":11077,"endOffset":11088,"count":0},{"startOffset":11090,"endOffset":11191,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11403,"endOffset":11478,"count":716}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11719,"endOffset":11808,"count":0}],"isBlockCoverage":false},{"functionName":"SlowBuffer","ranges":[{"startOffset":11904,"endOffset":11994,"count":0}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":12108,"endOffset":12440,"count":716},{"startOffset":12151,"endOffset":12185,"count":0},{"startOffset":12224,"endOffset":12403,"count":555},{"startOffset":12272,"endOffset":12285,"count":83},{"startOffset":12403,"endOffset":12439,"count":161}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12442,"endOffset":12988,"count":7},{"startOffset":12568,"endOffset":12617,"count":1},{"startOffset":12617,"endOffset":12663,"count":6},{"startOffset":12663,"endOffset":12676,"count":0},{"startOffset":12676,"endOffset":12809,"count":6},{"startOffset":12809,"endOffset":12935,"count":0},{"startOffset":12935,"endOffset":12987,"count":6}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12990,"endOffset":13443,"count":8},{"startOffset":13076,"endOffset":13100,"count":5},{"startOffset":13102,"endOffset":13221,"count":3},{"startOffset":13139,"endOffset":13163,"count":0},{"startOffset":13221,"endOffset":13403,"count":5},{"startOffset":13298,"endOffset":13339,"count":0},{"startOffset":13375,"endOffset":13399,"count":1},{"startOffset":13403,"endOffset":13442,"count":7}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13445,"endOffset":14142,"count":6},{"startOffset":13589,"endOffset":13685,"count":0},{"startOffset":13762,"endOffset":13807,"count":0},{"startOffset":13866,"endOffset":14089,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":14144,"endOffset":14518,"count":0}],"isBlockCoverage":false},{"functionName":"fromObject","ranges":[{"startOffset":14520,"endOffset":14826,"count":0}],"isBlockCoverage":false},{"functionName":"isBuffer","ranges":[{"startOffset":14865,"endOffset":14919,"count":57}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":14939,"endOffset":15264,"count":0}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15287,"endOffset":15438,"count":714}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":15504,"endOffset":16708,"count":3},{"startOffset":15563,"endOffset":15627,"count":0},{"startOffset":15658,"endOffset":15682,"count":2},{"startOffset":15682,"endOffset":15853,"count":1},{"startOffset":15853,"endOffset":15902,"count":0},{"startOffset":15902,"endOffset":16352,"count":1},{"startOffset":16059,"endOffset":16291,"count":0},{"startOffset":16352,"endOffset":16443,"count":1},{"startOffset":16443,"endOffset":16688,"count":0},{"startOffset":16688,"endOffset":16707,"count":1}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16711,"endOffset":16947,"count":1},{"startOffset":16885,"endOffset":16893,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17082,"endOffset":17146,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":17159,"endOffset":17205,"count":712}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17220,"endOffset":17316,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17409,"endOffset":17438,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17451,"endOffset":17515,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17528,"endOffset":17574,"count":1}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17589,"endOffset":17688,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17787,"endOffset":17816,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17829,"endOffset":17893,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17906,"endOffset":17952,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17967,"endOffset":18066,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18162,"endOffset":18187,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18200,"endOffset":18266,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18279,"endOffset":18327,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18342,"endOffset":18440,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18533,"endOffset":18558,"count":3}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18571,"endOffset":18636,"count":3}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18649,"endOffset":18696,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18711,"endOffset":18923,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19019,"endOffset":19070,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":19083,"endOffset":19149,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19162,"endOffset":19210,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19225,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19526,"endOffset":19557,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19570,"endOffset":19633,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19646,"endOffset":19691,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19706,"endOffset":19914,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":19922,"endOffset":21477,"count":718},{"startOffset":20009,"endOffset":20294,"count":714},{"startOffset":20048,"endOffset":20072,"count":713},{"startOffset":20072,"endOffset":20128,"count":1},{"startOffset":20128,"endOffset":20294,"count":0},{"startOffset":20299,"endOffset":20704,"count":3},{"startOffset":20339,"endOffset":20363,"count":0},{"startOffset":20421,"endOffset":20704,"count":0},{"startOffset":20709,"endOffset":20839,"count":0},{"startOffset":20844,"endOffset":20976,"count":0},{"startOffset":20981,"endOffset":21348,"count":1},{"startOffset":21055,"endOffset":21081,"count":0},{"startOffset":21141,"endOffset":21239,"count":0},{"startOffset":21249,"endOffset":21348,"count":0},{"startOffset":21353,"endOffset":21471,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":21479,"endOffset":22136,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22276,"endOffset":22370,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22448,"endOffset":22546,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":22578,"endOffset":22711,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":22992,"endOffset":23571,"count":717},{"startOffset":23064,"endOffset":23112,"count":1},{"startOffset":23112,"endOffset":23164,"count":716},{"startOffset":23164,"endOffset":23174,"count":0},{"startOffset":23174,"endOffset":23237,"count":716},{"startOffset":23204,"endOffset":23214,"count":0},{"startOffset":23237,"endOffset":23263,"count":716},{"startOffset":23263,"endOffset":23275,"count":0},{"startOffset":23281,"endOffset":23291,"count":716},{"startOffset":23291,"endOffset":23312,"count":0},{"startOffset":23312,"endOffset":23338,"count":716},{"startOffset":23338,"endOffset":23348,"count":3},{"startOffset":23348,"endOffset":23384,"count":713},{"startOffset":23384,"endOffset":23418,"count":0},{"startOffset":23418,"endOffset":23489,"count":713},{"startOffset":23489,"endOffset":23530,"count":0},{"startOffset":23530,"endOffset":23570,"count":713}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":23600,"endOffset":23954,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":24082,"endOffset":25077,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":25173,"endOffset":26322,"count":0}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":26750,"endOffset":28057,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":28086,"endOffset":28203,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":28237,"endOffset":28359,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":28390,"endOffset":28495,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":28673,"endOffset":28772,"count":0}],"isBlockCoverage":false},{"functionName":"_fill","ranges":[{"startOffset":28775,"endOffset":30684,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":30711,"endOffset":31726,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":31755,"endOffset":31989,"count":0}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":31992,"endOffset":32426,"count":2},{"startOffset":32232,"endOffset":32270,"count":1},{"startOffset":32270,"endOffset":32333,"count":0},{"startOffset":32333,"endOffset":32357,"count":1},{"startOffset":32357,"endOffset":32381,"count":0},{"startOffset":32381,"endOffset":32411,"count":1},{"startOffset":32411,"endOffset":32414,"count":0},{"startOffset":32415,"endOffset":32423,"count":1}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":32453,"endOffset":32753,"count":1},{"startOffset":32614,"endOffset":32625,"count":0},{"startOffset":32673,"endOffset":32676,"count":0}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":32756,"endOffset":32827,"count":0}],"isBlockCoverage":false},{"functionName":"swap16","ranges":[{"startOffset":32855,"endOffset":33259,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":33288,"endOffset":33732,"count":0}],"isBlockCoverage":false},{"functionName":"swap64","ranges":[{"startOffset":33761,"endOffset":34269,"count":0}],"isBlockCoverage":false},{"functionName":"transcode","ranges":[{"startOffset":34582,"endOffset":35322,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35634,"endOffset":35669,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":35675,"endOffset":35712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"18","url":"internal/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6930,"count":1}],"isBlockCoverage":false},{"functionName":"isInt32","ranges":[{"startOffset":581,"endOffset":640,"count":1432}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":642,"endOffset":704,"count":1431}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1326,"endOffset":1807,"count":716},{"startOffset":1389,"endOffset":1409,"count":0},{"startOffset":1411,"endOffset":1432,"count":0},{"startOffset":1480,"endOffset":1806,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1852,"endOffset":2233,"count":717},{"startOffset":1972,"endOffset":2026,"count":0},{"startOffset":2066,"endOffset":2120,"count":0},{"startOffset":2163,"endOffset":2229,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2279,"endOffset":2860,"count":1432},{"startOffset":2441,"endOffset":2739,"count":0},{"startOffset":2776,"endOffset":2856,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2904,"endOffset":3414,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":3418,"endOffset":3550,"count":22214},{"startOffset":3494,"endOffset":3548,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3552,"endOffset":3684,"count":1},{"startOffset":3628,"endOffset":3682,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3724,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":4178,"endOffset":4313,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4357,"endOffset":4582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4624,"endOffset":4911,"count":0}],"isBlockCoverage":false},{"functionName":"validateSignalName","ranges":[{"startOffset":4915,"endOffset":5336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5377,"endOffset":5607,"count":715},{"startOffset":5442,"endOffset":5605,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":5611,"endOffset":5945,"count":0}],"isBlockCoverage":false},{"functionName":"validatePort","ranges":[{"startOffset":6089,"endOffset":6463,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6506,"endOffset":6607,"count":1},{"startOffset":6564,"endOffset":6605,"count":0}],"isBlockCoverage":true}]},{"scriptId":"19","url":"internal/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29662,"count":1}],"isBlockCoverage":false},{"functionName":"checkBounds","ranges":[{"startOffset":1107,"endOffset":1323,"count":1},{"startOffset":1270,"endOffset":1321,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1325,"endOffset":1943,"count":1},{"startOffset":1421,"endOffset":1901,"count":0}],"isBlockCoverage":true},{"functionName":"boundsError","ranges":[{"startOffset":1945,"endOffset":2348,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64LE","ranges":[{"startOffset":2368,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64BE","ranges":[{"startOffset":2869,"endOffset":3368,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64LE","ranges":[{"startOffset":3370,"endOffset":3871,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64BE","ranges":[{"startOffset":3873,"endOffset":4368,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntLE","ranges":[{"startOffset":4370,"endOffset":4922,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48LE","ranges":[{"startOffset":4924,"endOffset":5307,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40LE","ranges":[{"startOffset":5309,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5667,"endOffset":5993,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":5995,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6285,"endOffset":6545,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt8","ranges":[{"startOffset":6547,"endOffset":6727,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntBE","ranges":[{"startOffset":6729,"endOffset":7281,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48BE","ranges":[{"startOffset":7283,"endOffset":7666,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40BE","ranges":[{"startOffset":7668,"endOffset":8024,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32BE","ranges":[{"startOffset":8026,"endOffset":8352,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24BE","ranges":[{"startOffset":8354,"endOffset":8642,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16BE","ranges":[{"startOffset":8644,"endOffset":8904,"count":0}],"isBlockCoverage":false},{"functionName":"readIntLE","ranges":[{"startOffset":8906,"endOffset":9451,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48LE","ranges":[{"startOffset":9453,"endOffset":9884,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40LE","ranges":[{"startOffset":9886,"endOffset":10273,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32LE","ranges":[{"startOffset":10275,"endOffset":10610,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":10612,"endOffset":10944,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":10946,"endOffset":11252,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":11254,"endOffset":11462,"count":0}],"isBlockCoverage":false},{"functionName":"readIntBE","ranges":[{"startOffset":11464,"endOffset":12009,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48BE","ranges":[{"startOffset":12011,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40BE","ranges":[{"startOffset":12442,"endOffset":12830,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32BE","ranges":[{"startOffset":12832,"endOffset":13167,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":13169,"endOffset":13501,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16BE","ranges":[{"startOffset":13503,"endOffset":13809,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatBackwards","ranges":[{"startOffset":13826,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatForwards","ranges":[{"startOffset":14233,"endOffset":14637,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleBackwards","ranges":[{"startOffset":14639,"endOffset":15209,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleForwards","ranges":[{"startOffset":15211,"endOffset":15780,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64LE","ranges":[{"startOffset":15801,"endOffset":16283,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64LE","ranges":[{"startOffset":16285,"endOffset":16407,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64BE","ranges":[{"startOffset":16409,"endOffset":16907,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64BE","ranges":[{"startOffset":16909,"endOffset":17031,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64LE","ranges":[{"startOffset":17033,"endOffset":17177,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64BE","ranges":[{"startOffset":17179,"endOffset":17323,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntLE","ranges":[{"startOffset":17325,"endOffset":17934,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48LE","ranges":[{"startOffset":17936,"endOffset":18349,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40LE","ranges":[{"startOffset":18351,"endOffset":18730,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":18732,"endOffset":19039,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":19041,"endOffset":19147,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24LE","ranges":[{"startOffset":19149,"endOffset":19408,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":19410,"endOffset":19606,"count":1}],"isBlockCoverage":true},{"functionName":"writeUInt16LE","ranges":[{"startOffset":19608,"endOffset":19710,"count":1}],"isBlockCoverage":true},{"functionName":"writeU_Int8","ranges":[{"startOffset":19712,"endOffset":20124,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20126,"endOffset":20220,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntBE","ranges":[{"startOffset":20222,"endOffset":20831,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48BE","ranges":[{"startOffset":20833,"endOffset":21254,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40BE","ranges":[{"startOffset":21256,"endOffset":21618,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":21620,"endOffset":21935,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32BE","ranges":[{"startOffset":21937,"endOffset":22043,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24BE","ranges":[{"startOffset":22045,"endOffset":22310,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":22312,"endOffset":22508,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16BE","ranges":[{"startOffset":22510,"endOffset":22612,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntLE","ranges":[{"startOffset":22614,"endOffset":23276,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32LE","ranges":[{"startOffset":23278,"endOffset":23393,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16LE","ranges":[{"startOffset":23395,"endOffset":23502,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt8","ranges":[{"startOffset":23504,"endOffset":23601,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntBE","ranges":[{"startOffset":23603,"endOffset":24265,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32BE","ranges":[{"startOffset":24267,"endOffset":24382,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16BE","ranges":[{"startOffset":24384,"endOffset":24491,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":24510,"endOffset":24976,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleBackwards","ranges":[{"startOffset":24978,"endOffset":25445,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatForwards","ranges":[{"startOffset":25447,"endOffset":25748,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatBackwards","ranges":[{"startOffset":25750,"endOffset":26052,"count":0}],"isBlockCoverage":false},{"functionName":"addBufferPrototypeMethods","ranges":[{"startOffset":26094,"endOffset":29151,"count":1},{"startOffset":28177,"endOffset":28197,"count":0},{"startOffset":28251,"endOffset":28270,"count":0},{"startOffset":28326,"endOffset":28347,"count":0},{"startOffset":28403,"endOffset":28423,"count":0},{"startOffset":28480,"endOffset":28501,"count":0},{"startOffset":28557,"endOffset":28577,"count":0},{"startOffset":28635,"endOffset":28657,"count":0},{"startOffset":28715,"endOffset":28736,"count":0}],"isBlockCoverage":true},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29307,"endOffset":29571,"count":84},{"startOffset":29375,"endOffset":29403,"count":0},{"startOffset":29426,"endOffset":29433,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"internal/worker/js_transferable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1310,"count":1}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":304,"endOffset":1091,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":585,"endOffset":1087,"count":0}],"isBlockCoverage":false}]},{"scriptId":"21","url":"internal/process/per_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10598,"count":1}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":796,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProcessMethods","ranges":[{"startOffset":962,"endOffset":6703,"count":1}],"isBlockCoverage":true},{"functionName":"_rawDebug","ranges":[{"startOffset":1173,"endOffset":1255,"count":0}],"isBlockCoverage":false},{"functionName":"cpuUsage","ranges":[{"startOffset":1466,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"previousValueIsValid","ranges":[{"startOffset":3178,"endOffset":3315,"count":0}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":3539,"endOffset":4142,"count":0}],"isBlockCoverage":false},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":4329,"endOffset":4423,"count":0}],"isBlockCoverage":false},{"functionName":"memoryUsage","ranges":[{"startOffset":4468,"endOffset":4694,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4698,"endOffset":5136,"count":1},{"startOffset":4754,"endOffset":4778,"count":0}],"isBlockCoverage":true},{"functionName":"kill","ranges":[{"startOffset":5140,"endOffset":5785,"count":0}],"isBlockCoverage":false},{"functionName":"resourceUsage","ranges":[{"startOffset":5836,"endOffset":6569,"count":0}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":6914,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":10164,"endOffset":10494,"count":1},{"startOffset":10244,"endOffset":10419,"count":0},{"startOffset":10451,"endOffset":10492,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"internal/async_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18879,"count":1}],"isBlockCoverage":false},{"functionName":"useDomainTrampoline","ranges":[{"startOffset":5221,"endOffset":5275,"count":0}],"isBlockCoverage":false},{"functionName":"callbackTrampoline","ranges":[{"startOffset":5277,"endOffset":5870,"count":0}],"isBlockCoverage":false},{"functionName":"executionAsyncResource","ranges":[{"startOffset":5946,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError","ranges":[{"startOffset":6505,"endOffset":6880,"count":0}],"isBlockCoverage":false},{"functionName":"lookupPublicResource","ranges":[{"startOffset":6882,"endOffset":7231,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitNative","ranges":[{"startOffset":7422,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"emitHook","ranges":[{"startOffset":8616,"endOffset":9566,"count":0}],"isBlockCoverage":false},{"functionName":"emitHookFactory","ranges":[{"startOffset":9568,"endOffset":9828,"count":4}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":9857,"endOffset":10347,"count":0}],"isBlockCoverage":false},{"functionName":"storeActiveHooks","ranges":[{"startOffset":10350,"endOffset":10650,"count":0}],"isBlockCoverage":false},{"functionName":"copyHooks","ranges":[{"startOffset":10652,"endOffset":10917,"count":0}],"isBlockCoverage":false},{"functionName":"restoreActiveHooks","ranges":[{"startOffset":11032,"endOffset":11237,"count":0}],"isBlockCoverage":false},{"functionName":"trackPromise","ranges":[{"startOffset":11239,"endOffset":11596,"count":0}],"isBlockCoverage":false},{"functionName":"fastPromiseHook","ranges":[{"startOffset":11598,"endOffset":12734,"count":0}],"isBlockCoverage":false},{"functionName":"enableHooks","ranges":[{"startOffset":12765,"endOffset":12825,"count":0}],"isBlockCoverage":false},{"functionName":"updatePromiseHookMode","ranges":[{"startOffset":12853,"endOffset":13144,"count":0}],"isBlockCoverage":false},{"functionName":"disableHooks","ranges":[{"startOffset":13146,"endOffset":13421,"count":0}],"isBlockCoverage":false},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":13423,"endOffset":13549,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":13750,"endOffset":13820,"count":14}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":13822,"endOffset":14012,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14195,"endOffset":14485,"count":14},{"startOffset":14451,"endOffset":14484,"count":0}],"isBlockCoverage":true},{"functionName":"clearDefaultTriggerAsyncId","ranges":[{"startOffset":14488,"endOffset":14577,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":14580,"endOffset":15055,"count":0}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":15057,"endOffset":15120,"count":70}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":15122,"endOffset":15181,"count":14}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":15183,"endOffset":15238,"count":14}],"isBlockCoverage":true},{"functionName":"afterHooksExist","ranges":[{"startOffset":15240,"endOffset":15297,"count":0}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":15299,"endOffset":15360,"count":14}],"isBlockCoverage":true},{"functionName":"emitInitScript","ranges":[{"startOffset":15363,"endOffset":15771,"count":0}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":15774,"endOffset":15950,"count":14},{"startOffset":15922,"endOffset":15948,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":15953,"endOffset":16073,"count":14},{"startOffset":16017,"endOffset":16042,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":16076,"endOffset":16286,"count":0}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":16289,"endOffset":16352,"count":0}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":16418,"endOffset":16988,"count":14},{"startOffset":16638,"endOffset":16688,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":17053,"endOffset":17677,"count":14},{"startOffset":17169,"endOffset":17182,"count":0},{"startOffset":17261,"endOffset":17367,"count":0}],"isBlockCoverage":true},{"functionName":"executionAsyncId","ranges":[{"startOffset":17680,"endOffset":17756,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":17758,"endOffset":17830,"count":0}],"isBlockCoverage":false}]},{"scriptId":"23","url":"internal/process/task_queues.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4577,"count":1}],"isBlockCoverage":false},{"functionName":"hasTickScheduled","ranges":[{"startOffset":956,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1033,"endOffset":1119,"count":8},{"startOffset":1109,"endOffset":1112,"count":5},{"startOffset":1113,"endOffset":1116,"count":3}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1221,"endOffset":1417,"count":0}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1419,"endOffset":2387,"count":4},{"startOffset":1475,"endOffset":2267,"count":5},{"startOffset":1510,"endOffset":2242,"count":13},{"startOffset":1711,"endOffset":1744,"count":3},{"startOffset":1744,"endOffset":2118,"count":10},{"startOffset":1831,"endOffset":1864,"count":8},{"startOffset":1877,"endOffset":1919,"count":0},{"startOffset":1932,"endOffset":1983,"count":2},{"startOffset":1996,"endOffset":2056,"count":0},{"startOffset":2069,"endOffset":2096,"count":0},{"startOffset":2180,"endOffset":2201,"count":0},{"startOffset":2267,"endOffset":2321,"count":3}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2531,"endOffset":3446,"count":13},{"startOffset":2603,"endOffset":2644,"count":0},{"startOffset":2674,"endOffset":2681,"count":0},{"startOffset":2729,"endOffset":2743,"count":3},{"startOffset":2748,"endOffset":2785,"count":8},{"startOffset":2790,"endOffset":2841,"count":0},{"startOffset":2846,"endOffset":2911,"count":2},{"startOffset":2916,"endOffset":3059,"count":0},{"startOffset":3088,"endOffset":3114,"count":5},{"startOffset":3358,"endOffset":3418,"count":0}],"isBlockCoverage":true},{"functionName":"createMicrotaskResource","ranges":[{"startOffset":3536,"endOffset":3782,"count":0}],"isBlockCoverage":false},{"functionName":"runMicrotask","ranges":[{"startOffset":3784,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":3962,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"setupTaskQueue","ranges":[{"startOffset":4298,"endOffset":4555,"count":1}],"isBlockCoverage":true}]},{"scriptId":"24","url":"internal/process/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9605,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":1918,"endOffset":2008,"count":3},{"startOffset":1998,"endOffset":2001,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":2010,"endOffset":2089,"count":0}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":2091,"endOffset":2626,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":2628,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"resolveError","ranges":[{"startOffset":3199,"endOffset":3449,"count":0}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":3451,"endOffset":3745,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":3747,"endOffset":4563,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionWarning","ranges":[{"startOffset":4635,"endOffset":5531,"count":0}],"isBlockCoverage":false},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":5564,"endOffset":5849,"count":0}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6022,"endOffset":8506,"count":3},{"startOffset":6180,"endOffset":6346,"count":0},{"startOffset":6411,"endOffset":8410,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithoutStack","ranges":[{"startOffset":8508,"endOffset":8926,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnhandledRejectionError","ranges":[{"startOffset":8928,"endOffset":9398,"count":0}],"isBlockCoverage":false},{"functionName":"listenForRejections","ranges":[{"startOffset":9400,"endOffset":9484,"count":1}],"isBlockCoverage":true}]},{"scriptId":"25","url":"internal/fixed_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":false},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":2959,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":35}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":13}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":13}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":18},{"startOffset":3388,"endOffset":3400,"count":5},{"startOffset":3400,"endOffset":3509,"count":13}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":3552,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":17}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":13},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4180,"count":18},{"startOffset":4041,"endOffset":4062,"count":10},{"startOffset":4064,"endOffset":4159,"count":0}],"isBlockCoverage":true}]},{"scriptId":"26","url":"internal/console/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1939,"count":1}],"isBlockCoverage":false}]},{"scriptId":"27","url":"internal/console/constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19933,"count":1}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2592,"endOffset":4763,"count":1},{"startOffset":2857,"endOffset":2900,"count":0},{"startOffset":2957,"endOffset":3069,"count":0},{"startOffset":3274,"endOffset":3332,"count":0},{"startOffset":3386,"endOffset":3444,"count":0},{"startOffset":3483,"endOffset":3506,"count":0},{"startOffset":3512,"endOffset":3568,"count":0},{"startOffset":3608,"endOffset":3717,"count":0},{"startOffset":3760,"endOffset":3786,"count":0},{"startOffset":3788,"endOffset":4031,"count":0},{"startOffset":4071,"endOffset":4183,"count":0},{"startOffset":4316,"endOffset":4649,"count":19}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":4972,"endOffset":5026,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":5274,"endOffset":5480,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5683,"endOffset":6271,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5865,"endOffset":5960,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5972,"endOffset":6002,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6104,"endOffset":6203,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6215,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6341,"endOffset":7523,"count":2}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":7593,"endOffset":9039,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9112,"endOffset":9602,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9673,"endOffset":9801,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":9872,"endOffset":10000,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10089,"endOffset":10978,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10157,"endOffset":10975,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":11007,"endOffset":11094,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":11100,"endOffset":11188,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":11194,"endOffset":11379,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":11384,"endOffset":11742,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":11747,"endOffset":12036,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":12041,"endOffset":12279,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":12291,"endOffset":12477,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":12482,"endOffset":12700,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":12761,"endOffset":13191,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":13252,"endOffset":13708,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":13774,"endOffset":14062,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":14067,"endOffset":14235,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":14240,"endOffset":14408,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":14457,"endOffset":17867,"count":0}],"isBlockCoverage":false},{"functionName":"timeLogImpl","ranges":[{"startOffset":17908,"endOffset":18404,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":18406,"endOffset":18483,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":18485,"endOffset":19247,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":19381,"endOffset":19437,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":19440,"endOffset":19458,"count":0}],"isBlockCoverage":false}]},{"scriptId":"28","url":"internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1582,"count":1}],"isBlockCoverage":false}]},{"scriptId":"29","url":"internal/util/inspector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2215,"count":1}],"isBlockCoverage":false},{"functionName":"sendInspectorCommand","ranges":[{"startOffset":92,"endOffset":434,"count":0}],"isBlockCoverage":false},{"functionName":"installConsoleExtensions","ranges":[{"startOffset":508,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConsole","ranges":[{"startOffset":1141,"endOffset":1931,"count":1},{"startOffset":1299,"endOffset":1929,"count":23},{"startOffset":1514,"endOffset":1807,"count":19},{"startOffset":1807,"endOffset":1925,"count":4}],"isBlockCoverage":true},{"functionName":"get consoleFromVM","ranges":[{"startOffset":2103,"endOffset":2154,"count":0}],"isBlockCoverage":false},{"functionName":"set consoleFromVM","ranges":[{"startOffset":2158,"endOffset":2211,"count":1}],"isBlockCoverage":true}]},{"scriptId":"30","url":"internal/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41335,"count":1}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":2224,"endOffset":2520,"count":3},{"startOffset":2477,"endOffset":2519,"count":0}],"isBlockCoverage":true},{"functionName":"serializeTupleOrigin","ranges":[{"startOffset":2732,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"URLContext","ranges":[{"startOffset":3254,"endOffset":3477,"count":1569}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":3767,"endOffset":6130,"count":1540},{"startOffset":3882,"endOffset":6068,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6134,"endOffset":7204,"count":0}],"isBlockCoverage":false},{"functionName":"onParseComplete","ranges":[{"startOffset":7208,"endOffset":7901,"count":1540},{"startOffset":7463,"endOffset":7473,"count":0},{"startOffset":7536,"endOffset":7546,"count":0},{"startOffset":7627,"endOffset":7631,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":7903,"endOffset":7978,"count":29}],"isBlockCoverage":true},{"functionName":"onParseProtocolComplete","ranges":[{"startOffset":7980,"endOffset":8325,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostnameComplete","ranges":[{"startOffset":8327,"endOffset":8673,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePortComplete","ranges":[{"startOffset":8675,"endOffset":8837,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostComplete","ranges":[{"startOffset":8839,"endOffset":9145,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePathComplete","ranges":[{"startOffset":9147,"endOffset":9641,"count":708},{"startOffset":9413,"endOffset":9481,"count":0}],"isBlockCoverage":true},{"functionName":"onParseSearchComplete","ranges":[{"startOffset":9643,"endOffset":9811,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHashComplete","ranges":[{"startOffset":9813,"endOffset":9983,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":9999,"endOffset":10327,"count":1569},{"startOffset":10134,"endOffset":10186,"count":69}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10331,"endOffset":10412,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10416,"endOffset":10509,"count":3191}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10584,"endOffset":10784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10788,"endOffset":11721,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":11890,"endOffset":13081,"count":830},{"startOffset":11975,"endOffset":12036,"count":0},{"startOffset":12263,"endOffset":12770,"count":829},{"startOffset":12446,"endOffset":12607,"count":0},{"startOffset":12639,"endOffset":12681,"count":0},{"startOffset":12740,"endOffset":12762,"count":0},{"startOffset":12770,"endOffset":12834,"count":1},{"startOffset":12804,"endOffset":12834,"count":0},{"startOffset":12946,"endOffset":12969,"count":0},{"startOffset":13031,"endOffset":13057,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":13355,"endOffset":13414,"count":88}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13480,"endOffset":13525,"count":742}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13531,"endOffset":13711,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13792,"endOffset":14420,"count":57},{"startOffset":13932,"endOffset":14176,"count":0},{"startOffset":14185,"endOffset":14197,"count":0},{"startOffset":14206,"endOffset":14221,"count":0},{"startOffset":14230,"endOffset":14243,"count":0},{"startOffset":14252,"endOffset":14266,"count":0},{"startOffset":14275,"endOffset":14286,"count":0},{"startOffset":14295,"endOffset":14378,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14490,"endOffset":14538,"count":751}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":14544,"endOffset":14913,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14983,"endOffset":15033,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15039,"endOffset":15437,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15507,"endOffset":15557,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15563,"endOffset":15961,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16027,"endOffset":16183,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16189,"endOffset":16480,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16550,"endOffset":16602,"count":1565}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":16608,"endOffset":16907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16973,"endOffset":17073,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17079,"endOffset":17396,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17466,"endOffset":17661,"count":2483},{"startOffset":17545,"endOffset":17564,"count":4},{"startOffset":17564,"endOffset":17606,"count":2479},{"startOffset":17606,"endOffset":17616,"count":0},{"startOffset":17616,"endOffset":17660,"count":2479}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17667,"endOffset":17886,"count":708},{"startOffset":17777,"endOffset":17784,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17954,"endOffset":18093,"count":3},{"startOffset":18026,"endOffset":18041,"count":0},{"startOffset":18061,"endOffset":18092,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18099,"endOffset":18591,"count":3},{"startOffset":18285,"endOffset":18533,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":18678,"endOffset":18724,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18790,"endOffset":18941,"count":3},{"startOffset":18868,"endOffset":18886,"count":0},{"startOffset":18906,"endOffset":18940,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":18947,"endOffset":19365,"count":3},{"startOffset":19169,"endOffset":19364,"count":0}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":19511,"endOffset":19568,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":19578,"endOffset":19883,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":19885,"endOffset":20025,"count":1543},{"startOffset":19982,"endOffset":20024,"count":0}],"isBlockCoverage":true},{"functionName":"parseParams","ranges":[{"startOffset":20134,"endOffset":22435,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":23414,"endOffset":23974,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":24029,"endOffset":24717,"count":2},{"startOffset":24367,"endOffset":24513,"count":13},{"startOffset":24568,"endOffset":24715,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":24737,"endOffset":25367,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":25434,"endOffset":25821,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":25826,"endOffset":26325,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26330,"endOffset":26764,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":26769,"endOffset":27237,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":27242,"endOffset":27670,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27675,"endOffset":28701,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":28706,"endOffset":29883,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":30046,"endOffset":30255,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":30260,"endOffset":30832,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":30887,"endOffset":31087,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":31092,"endOffset":31296,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":31429,"endOffset":31629,"count":0}],"isBlockCoverage":false},{"functionName":"createSearchParamsIterator","ranges":[{"startOffset":31909,"endOffset":32112,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":32336,"endOffset":33089,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":33093,"endOffset":34307,"count":0}],"isBlockCoverage":false},{"functionName":"domainToASCII","ranges":[{"startOffset":34313,"endOffset":34488,"count":0}],"isBlockCoverage":false},{"functionName":"domainToUnicode","ranges":[{"startOffset":34490,"endOffset":34669,"count":0}],"isBlockCoverage":false},{"functionName":"urlToOptions","ranges":[{"startOffset":34812,"endOffset":35355,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":35391,"endOffset":36784,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":36786,"endOffset":37290,"count":736},{"startOffset":36849,"endOffset":36905,"count":0},{"startOffset":36983,"endOffset":37249,"count":93148},{"startOffset":37014,"endOffset":37245,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":37292,"endOffset":37639,"count":737},{"startOffset":37359,"endOffset":37380,"count":681},{"startOffset":37380,"endOffset":37482,"count":56},{"startOffset":37418,"endOffset":37482,"count":0},{"startOffset":37520,"endOffset":37561,"count":1},{"startOffset":37561,"endOffset":37581,"count":736},{"startOffset":37581,"endOffset":37608,"count":0},{"startOffset":37609,"endOffset":37636,"count":736}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":38399,"endOffset":38955,"count":708},{"startOffset":38470,"endOffset":38519,"count":0},{"startOffset":38625,"endOffset":38676,"count":0},{"startOffset":38712,"endOffset":38761,"count":0},{"startOffset":38797,"endOffset":38853,"count":0},{"startOffset":38889,"endOffset":38934,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":38957,"endOffset":40072,"count":708},{"startOffset":39045,"endOffset":39075,"count":0},{"startOffset":39077,"endOffset":39626,"count":0},{"startOffset":39881,"endOffset":39920,"count":0},{"startOffset":39923,"endOffset":39976,"count":0},{"startOffset":39984,"endOffset":40000,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":40074,"endOffset":40193,"count":1767},{"startOffset":40167,"endOffset":40190,"count":57}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":40195,"endOffset":40340,"count":1710},{"startOffset":40278,"endOffset":40299,"count":1709},{"startOffset":40299,"endOffset":40339,"count":1}],"isBlockCoverage":true},{"functionName":"constructUrl","ranges":[{"startOffset":40342,"endOffset":41042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"31","url":"internal/querystring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2903,"count":1}],"isBlockCoverage":false},{"functionName":"encodeStr","ranges":[{"startOffset":1218,"endOffset":2841,"count":0}],"isBlockCoverage":false}]},{"scriptId":"32","url":"path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41803,"count":1}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":1492,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1598,"endOffset":1675,"count":1055053}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1677,"endOffset":1847,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":1910,"endOffset":3714,"count":8374},{"startOffset":2127,"endOffset":3698,"count":1054948},{"startOffset":2160,"endOffset":2186,"count":1046574},{"startOffset":2186,"endOffset":2277,"count":8374},{"startOffset":2229,"endOffset":2235,"count":8269},{"startOffset":2235,"endOffset":2277,"count":105},{"startOffset":2277,"endOffset":2310,"count":1046679},{"startOffset":2310,"endOffset":3599,"count":99553},{"startOffset":2342,"endOffset":2355,"count":87374},{"startOffset":2357,"endOffset":2382,"count":12774},{"startOffset":2382,"endOffset":3556,"count":86779},{"startOffset":2404,"endOffset":3343,"count":218},{"startOffset":2460,"endOffset":2518,"count":0},{"startOffset":2519,"endOffset":2577,"count":0},{"startOffset":2715,"endOffset":2791,"count":0},{"startOffset":3024,"endOffset":3193,"count":0},{"startOffset":3203,"endOffset":3335,"count":0},{"startOffset":3343,"endOffset":3556,"count":86561},{"startOffset":3389,"endOffset":3442,"count":78187},{"startOffset":3442,"endOffset":3501,"count":8374},{"startOffset":3556,"endOffset":3599,"count":99335},{"startOffset":3599,"endOffset":3694,"count":947126},{"startOffset":3627,"endOffset":3641,"count":7624},{"startOffset":3643,"endOffset":3664,"count":1042},{"startOffset":3664,"endOffset":3694,"count":946084}],"isBlockCoverage":true},{"functionName":"_format","ranges":[{"startOffset":3716,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4195,"endOffset":8598,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":8603,"endOffset":11354,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":11359,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":11732,"endOffset":13788,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":14002,"endOffset":17476,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":17481,"endOffset":18509,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":18514,"endOffset":20842,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":20847,"endOffset":23482,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":23487,"endOffset":25496,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":25538,"endOffset":30004,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":30123,"endOffset":31019,"count":8269},{"startOffset":30246,"endOffset":30266,"count":22444},{"startOffset":30273,"endOffset":30573,"count":14191},{"startOffset":30301,"endOffset":30310,"count":14175},{"startOffset":30311,"endOffset":30326,"count":16},{"startOffset":30423,"endOffset":30450,"count":0},{"startOffset":30958,"endOffset":31008,"count":0},{"startOffset":31009,"endOffset":31014,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":31024,"endOffset":31599,"count":105},{"startOffset":31110,"endOffset":31121,"count":0},{"startOffset":31411,"endOffset":31505,"count":0},{"startOffset":31539,"endOffset":31551,"count":0},{"startOffset":31588,"endOffset":31594,"count":0}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":31604,"endOffset":31733,"count":1776}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":31738,"endOffset":32152,"count":105},{"startOffset":31787,"endOffset":31798,"count":0},{"startOffset":31857,"endOffset":32064,"count":210},{"startOffset":31993,"endOffset":32050,"count":105},{"startOffset":32101,"endOffset":32112,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":32157,"endOffset":34367,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":34372,"endOffset":34448,"count":6316}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":34453,"endOffset":35081,"count":3700},{"startOffset":34536,"endOffset":34547,"count":7},{"startOffset":34547,"endOffset":34705,"count":3693},{"startOffset":34705,"endOffset":34942,"count":46035},{"startOffset":34760,"endOffset":34844,"count":3661},{"startOffset":34844,"endOffset":34936,"count":42374},{"startOffset":34942,"endOffset":34970,"count":3693},{"startOffset":34970,"endOffset":34997,"count":32},{"startOffset":34991,"endOffset":34996,"count":0},{"startOffset":34997,"endOffset":35026,"count":3661},{"startOffset":35034,"endOffset":35046,"count":0},{"startOffset":35046,"endOffset":35080,"count":3661}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":35086,"endOffset":37406,"count":694},{"startOffset":35141,"endOffset":35168,"count":0},{"startOffset":35297,"endOffset":35314,"count":0},{"startOffset":35315,"endOffset":35343,"count":0},{"startOffset":35345,"endOffset":36812,"count":0},{"startOffset":36860,"endOffset":37329,"count":8732},{"startOffset":36915,"endOffset":37139,"count":687},{"startOffset":37139,"endOffset":37323,"count":8045},{"startOffset":37161,"endOffset":37323,"count":694},{"startOffset":37357,"endOffset":37367,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":37411,"endOffset":39069,"count":46},{"startOffset":37744,"endOffset":38690,"count":637},{"startOffset":37824,"endOffset":38070,"count":39},{"startOffset":38044,"endOffset":38070,"count":0},{"startOffset":38070,"endOffset":38093,"count":598},{"startOffset":38093,"endOffset":38250,"count":46},{"startOffset":38250,"endOffset":38280,"count":598},{"startOffset":38280,"endOffset":38480,"count":68},{"startOffset":38396,"endOffset":38409,"count":39},{"startOffset":38409,"endOffset":38472,"count":29},{"startOffset":38480,"endOffset":38684,"count":530},{"startOffset":38507,"endOffset":38684,"count":368},{"startOffset":38716,"endOffset":38737,"count":39},{"startOffset":38738,"endOffset":38831,"count":39},{"startOffset":38832,"endOffset":39001,"count":39},{"startOffset":38929,"endOffset":38961,"count":0},{"startOffset":38962,"endOffset":39000,"count":0},{"startOffset":39003,"endOffset":39027,"count":7},{"startOffset":39027,"endOffset":39068,"count":39}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":39110,"endOffset":41464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"33","url":"internal/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15873,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":958,"endOffset":1067,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1069,"endOffset":1194,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1196,"endOffset":1321,"count":2},{"startOffset":1277,"endOffset":1319,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgument","ranges":[{"startOffset":1323,"endOffset":1490,"count":3},{"startOffset":1427,"endOffset":1488,"count":0}],"isBlockCoverage":true},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8231,"endOffset":8713,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8715,"endOffset":8894,"count":1},{"startOffset":8826,"endOffset":8893,"count":0}],"isBlockCoverage":true},{"functionName":"TextEncoder","ranges":[{"startOffset":8965,"endOffset":9011,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":9015,"endOffset":9082,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9086,"endOffset":9178,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9182,"endOffset":9492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9496,"endOffset":9891,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10262,"endOffset":11923,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10400,"endOffset":11127,"count":1},{"startOffset":10632,"endOffset":10679,"count":0},{"startOffset":10763,"endOffset":10786,"count":0},{"startOffset":10827,"endOffset":10855,"count":0},{"startOffset":10957,"endOffset":11004,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":11134,"endOffset":11894,"count":2},{"startOffset":11236,"endOffset":11287,"count":0},{"startOffset":11324,"endOffset":11503,"count":0},{"startOffset":11650,"endOffset":11653,"count":0},{"startOffset":11771,"endOffset":11853,"count":0}],"isBlockCoverage":true},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":11925,"endOffset":14466,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":14591,"endOffset":14672,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":14679,"endOffset":14806,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":14813,"endOffset":14968,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":14975,"endOffset":15589,"count":0}],"isBlockCoverage":false}]},{"scriptId":"34","url":"timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8988,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1805,"endOffset":1830,"count":0}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2306,"endOffset":3490,"count":0}],"isBlockCoverage":false},{"functionName":"enroll","ranges":[{"startOffset":3697,"endOffset":3950,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":3982,"endOffset":4627,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout.<computed>","ranges":[{"startOffset":4659,"endOffset":4892,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":4895,"endOffset":5261,"count":14},{"startOffset":4938,"endOffset":4957,"count":0},{"startOffset":4959,"endOffset":5026,"count":0},{"startOffset":5089,"endOffset":5259,"count":0}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":5263,"endOffset":5910,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":5912,"endOffset":6210,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":6238,"endOffset":6289,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":6331,"endOffset":6492,"count":0}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":6533,"endOffset":6855,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":6859,"endOffset":7032,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":7036,"endOffset":7212,"count":0}],"isBlockCoverage":false},{"functionName":"hasRef","ranges":[{"startOffset":7216,"endOffset":7257,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":7262,"endOffset":7803,"count":1},{"startOffset":7437,"endOffset":7478,"count":0},{"startOffset":7483,"endOffset":7530,"count":0},{"startOffset":7535,"endOffset":7756,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate.<computed>","ranges":[{"startOffset":7837,"endOffset":7924,"count":0}],"isBlockCoverage":false},{"functionName":"clearImmediate","ranges":[{"startOffset":7927,"endOffset":8349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"35","url":"internal/linkedlist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1112,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":15,"endOffset":88,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":118,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":245,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":528,"endOffset":980,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":982,"endOffset":1042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"36","url":"internal/timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17730,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4376,"endOffset":4401,"count":0}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5344,"endOffset":5622,"count":1},{"startOffset":5570,"endOffset":5620,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5707,"endOffset":6704,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":6817,"endOffset":6988,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.refresh","ranges":[{"startOffset":7019,"endOffset":7117,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref","ranges":[{"startOffset":7146,"endOffset":7274,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.ref","ranges":[{"startOffset":7301,"endOffset":7429,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.hasRef","ranges":[{"startOffset":7459,"endOffset":7496,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":7499,"endOffset":7799,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList.<computed>","ranges":[{"startOffset":7915,"endOffset":8086,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList","ranges":[{"startOffset":8144,"endOffset":8212,"count":2}],"isBlockCoverage":true},{"functionName":"ImmediateList.append","ranges":[{"startOffset":8391,"endOffset":8558,"count":1},{"startOffset":8434,"endOffset":8503,"count":0}],"isBlockCoverage":true},{"functionName":"ImmediateList.remove","ranges":[{"startOffset":8736,"endOffset":9091,"count":0}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":9094,"endOffset":9170,"count":0}],"isBlockCoverage":false},{"functionName":"decRefCount","ranges":[{"startOffset":9172,"endOffset":9249,"count":0}],"isBlockCoverage":false},{"functionName":"active","ranges":[{"startOffset":9332,"endOffset":9386,"count":0}],"isBlockCoverage":false},{"functionName":"unrefActive","ranges":[{"startOffset":9533,"endOffset":9593,"count":0}],"isBlockCoverage":false},{"functionName":"insertGuarded","ranges":[{"startOffset":9814,"endOffset":10330,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":10332,"endOffset":10983,"count":0}],"isBlockCoverage":false},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":10985,"endOffset":11291,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerDuration","ranges":[{"startOffset":11358,"endOffset":11880,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":11882,"endOffset":12087,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":12089,"endOffset":12160,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerCallbacks","ranges":[{"startOffset":12162,"endOffset":17259,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12474,"endOffset":14275,"count":1},{"startOffset":12553,"endOffset":12577,"count":0},{"startOffset":13014,"endOffset":13029,"count":0},{"startOffset":13346,"endOffset":13442,"count":0},{"startOffset":13872,"endOffset":13928,"count":0},{"startOffset":14030,"endOffset":14051,"count":0},{"startOffset":14202,"endOffset":14231,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14280,"endOffset":14754,"count":0}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":14758,"endOffset":17200,"count":0}],"isBlockCoverage":false}]},{"scriptId":"37","url":"internal/priority_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2924,"count":1}],"isBlockCoverage":false},{"functionName":"PriorityQueue","ranges":[{"startOffset":570,"endOffset":811,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":815,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":859,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1048,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1091,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1763,"endOffset":2254,"count":0}],"isBlockCoverage":false},{"functionName":"removeAt","ranges":[{"startOffset":2258,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":2595,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2765,"endOffset":2920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"38","url":"internal/util/debuglog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2815,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDebugEnv","ranges":[{"startOffset":500,"endOffset":873,"count":1},{"startOffset":591,"endOffset":790,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":947,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1274,"endOffset":1292,"count":4181}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1294,"endOffset":1859,"count":5},{"startOffset":1369,"endOffset":1831,"count":3},{"startOffset":1388,"endOffset":1784,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1477,"endOffset":1777,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2079,"endOffset":2758,"count":13}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":2110,"endOffset":2206,"count":5}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2221,"endOffset":2458,"count":5}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2488,"endOffset":2557,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2576,"endOffset":2603,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2653,"endOffset":2687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"39","url":"internal/process/execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6944,"count":1}],"isBlockCoverage":false},{"functionName":"tryGetCwd","ranges":[{"startOffset":526,"endOffset":856,"count":1},{"startOffset":587,"endOffset":854,"count":0}],"isBlockCoverage":true},{"functionName":"evalModule","ranges":[{"startOffset":858,"endOffset":1298,"count":0}],"isBlockCoverage":false},{"functionName":"evalScript","ranges":[{"startOffset":1300,"endOffset":2682,"count":0}],"isBlockCoverage":false},{"functionName":"setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":2759,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3455,"endOffset":3556,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3558,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"createOnGlobalUncaughtException","ranges":[{"startOffset":4119,"endOffset":6518,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4388,"endOffset":6515,"count":0}],"isBlockCoverage":false},{"functionName":"readStdin","ranges":[{"startOffset":6520,"endOffset":6725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"internal/process/warning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4833,"count":1}],"isBlockCoverage":false},{"functionName":"lazyOption","ranges":[{"startOffset":277,"endOffset":831,"count":0}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":932,"endOffset":1054,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFile","ranges":[{"startOffset":1056,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1442,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"onWarning","ranges":[{"startOffset":1552,"endOffset":2730,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":2853,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarningSync","ranges":[{"startOffset":3999,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":4095,"endOffset":4762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"41","url":"internal/bootstrap/switches/is_main_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6397,"count":1}],"isBlockCoverage":true},{"functionName":"process._startProfilerIdleNotifier","ranges":[{"startOffset":513,"endOffset":521,"count":0}],"isBlockCoverage":false},{"functionName":"process._stopProfilerIdleNotifier","ranges":[{"startOffset":559,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"defineStream","ranges":[{"startOffset":570,"endOffset":717,"count":3}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1278,"endOffset":2845,"count":2},{"startOffset":1430,"endOffset":1556,"count":0},{"startOffset":1562,"endOffset":1748,"count":0},{"startOffset":2083,"endOffset":2303,"count":0},{"startOffset":2479,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2667,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"dummyDestroy","ranges":[{"startOffset":2847,"endOffset":3230,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3268,"endOffset":3599,"count":2},{"startOffset":3305,"endOffset":3518,"count":1},{"startOffset":3518,"endOffset":3580,"count":0},{"startOffset":3580,"endOffset":3598,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3547,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":3601,"endOffset":3932,"count":7},{"startOffset":3638,"endOffset":3652,"count":6},{"startOffset":3652,"endOffset":3851,"count":1},{"startOffset":3851,"endOffset":3913,"count":0},{"startOffset":3913,"endOffset":3931,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3880,"endOffset":3907,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":3934,"endOffset":6253,"count":0}],"isBlockCoverage":false},{"functionName":"rawMethods.resetStdioForTesting","ranges":[{"startOffset":6316,"endOffset":6395,"count":0}],"isBlockCoverage":false}]},{"scriptId":"42","url":"internal/process/signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"isSignal","ranges":[{"startOffset":205,"endOffset":301,"count":15}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":365,"endOffset":853,"count":15},{"startOffset":426,"endOffset":451,"count":0},{"startOffset":453,"endOffset":851,"count":0}],"isBlockCoverage":true},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":855,"endOffset":1050,"count":5},{"startOffset":957,"endOffset":993,"count":0},{"startOffset":995,"endOffset":1048,"count":0}],"isBlockCoverage":true}]},{"scriptId":"43","url":"internal/bootstrap/switches/does_own_process_state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3480,"count":1}],"isBlockCoverage":true},{"functionName":"wrapPosixCredentialSetters","ranges":[{"startOffset":817,"endOffset":2914,"count":1}],"isBlockCoverage":true},{"functionName":"initgroups","ranges":[{"startOffset":1278,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"setgroups","ranges":[{"startOffset":1699,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"wrapIdSetter","ranges":[{"startOffset":2183,"endOffset":2465,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2232,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"validateId","ranges":[{"startOffset":2469,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedChdir","ranges":[{"startOffset":3065,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedUmask","ranges":[{"startOffset":3238,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedCwd","ranges":[{"startOffset":3376,"endOffset":3479,"count":18},{"startOffset":3428,"endOffset":3457,"count":1}],"isBlockCoverage":true}]},{"scriptId":"44","url":"internal/main/run_main_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"45","url":"internal/bootstrap/pre_execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14933,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":384,"endOffset":2511,"count":1},{"startOffset":1122,"endOffset":1344,"count":0}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2513,"endOffset":4090,"count":1},{"startOffset":3109,"endOffset":3117,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":4092,"endOffset":4349,"count":13},{"startOffset":4213,"endOffset":4347,"count":2}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":4351,"endOffset":4580,"count":1},{"startOffset":4490,"endOffset":4533,"count":0},{"startOffset":4535,"endOffset":4578,"count":0}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":4692,"endOffset":5369,"count":1},{"startOffset":5162,"endOffset":5339,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":5371,"endOffset":5596,"count":1},{"startOffset":5473,"endOffset":5595,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":5598,"endOffset":5822,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5780,"endOffset":5814,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":5824,"endOffset":6056,"count":1},{"startOffset":5975,"endOffset":6054,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":6118,"endOffset":6253,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":6255,"endOffset":6562,"count":1},{"startOffset":6390,"endOffset":6561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6522,"endOffset":6558,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":6564,"endOffset":6823,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":6825,"endOffset":7406,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":7601,"endOffset":10122,"count":1},{"startOffset":8312,"endOffset":8614,"count":16},{"startOffset":8357,"endOffset":8589,"count":0},{"startOffset":8931,"endOffset":9104,"count":0},{"startOffset":9132,"endOffset":9526,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9775,"endOffset":9811,"count":512}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9817,"endOffset":9859,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9985,"endOffset":10020,"count":12}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":10026,"endOffset":10067,"count":0}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":10124,"endOffset":10689,"count":1},{"startOffset":10526,"endOffset":10535,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":10691,"endOffset":10961,"count":1},{"startOffset":10778,"endOffset":10959,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":10963,"endOffset":12787,"count":1},{"startOffset":11089,"endOffset":12785,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":12789,"endOffset":13018,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":13020,"endOffset":13306,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":13308,"endOffset":13976,"count":1},{"startOffset":13517,"endOffset":13524,"count":0}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":13978,"endOffset":14235,"count":1},{"startOffset":14063,"endOffset":14233,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":14237,"endOffset":14584,"count":1},{"startOffset":14431,"endOffset":14582,"count":0}],"isBlockCoverage":true}]},{"scriptId":"46","url":"internal/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":175,"endOffset":314,"count":729},{"startOffset":262,"endOffset":289,"count":1},{"startOffset":289,"endOffset":313,"count":728}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":316,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"internal/inspector_async_hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1972,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":75,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1259,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1842,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"48","url":"internal/source_map/source_map_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8219,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":305,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":665,"endOffset":690,"count":1}],"isBlockCoverage":true},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":1287,"endOffset":2534,"count":680},{"startOffset":1400,"endOffset":1474,"count":1},{"startOffset":1512,"endOffset":1537,"count":0},{"startOffset":1540,"endOffset":1547,"count":0},{"startOffset":1672,"endOffset":1810,"count":1},{"startOffset":1810,"endOffset":1914,"count":679},{"startOffset":1914,"endOffset":2532,"count":24},{"startOffset":2015,"endOffset":2046,"count":0},{"startOffset":2075,"endOffset":2303,"count":23},{"startOffset":2096,"endOffset":2151,"count":1},{"startOffset":2303,"endOffset":2528,"count":1}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":2536,"endOffset":3068,"count":24},{"startOffset":2672,"endOffset":2746,"count":0},{"startOffset":2753,"endOffset":2833,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":3258,"endOffset":3566,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3523,"endOffset":3562,"count":14625}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":3568,"endOffset":3839,"count":24},{"startOffset":3781,"endOffset":3837,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":3933,"endOffset":4568,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":4753,"endOffset":5203,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4828,"endOffset":5060,"count":58}],"isBlockCoverage":true},{"functionName":"rekeySourceMap","ranges":[{"startOffset":5272,"endOffset":5467,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":5905,"endOffset":6274,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":6513,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":7386,"endOffset":8111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"49","url":"fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":57858,"count":1}],"isBlockCoverage":false},{"functionName":"showTruncateDeprecation","ranges":[{"startOffset":3832,"endOffset":4119,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":4121,"endOffset":4237,"count":0}],"isBlockCoverage":false},{"functionName":"makeCallback","ranges":[{"startOffset":4440,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"makeStatsCallback","ranges":[{"startOffset":4764,"endOffset":4979,"count":0}],"isBlockCoverage":false},{"functionName":"isFileType","ranges":[{"startOffset":5005,"endOffset":5265,"count":14470},{"startOffset":5204,"endOffset":5224,"count":991}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":5267,"endOffset":5625,"count":0}],"isBlockCoverage":false},{"functionName":"accessSync","ranges":[{"startOffset":5627,"endOffset":5865,"count":21}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":5867,"endOffset":6105,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6178,"endOffset":6256,"count":0}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":6673,"endOffset":7203,"count":41},{"startOffset":6748,"endOffset":6777,"count":0},{"startOffset":7085,"endOffset":7111,"count":0},{"startOffset":7113,"endOffset":7166,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":7205,"endOffset":7485,"count":0}],"isBlockCoverage":false},{"functionName":"readFileAfterStat","ranges":[{"startOffset":7487,"endOffset":7988,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":7990,"endOffset":8816,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":8818,"endOffset":9048,"count":715},{"startOffset":8961,"endOffset":8973,"count":0},{"startOffset":8975,"endOffset":9030,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":9050,"endOffset":9361,"count":713},{"startOffset":9168,"endOffset":9220,"count":0},{"startOffset":9307,"endOffset":9319,"count":0},{"startOffset":9321,"endOffset":9338,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":9363,"endOffset":9618,"count":715},{"startOffset":9561,"endOffset":9573,"count":0},{"startOffset":9575,"endOffset":9592,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":9620,"endOffset":11003,"count":715},{"startOffset":9789,"endOffset":9795,"count":0},{"startOffset":9935,"endOffset":9938,"count":0},{"startOffset":10068,"endOffset":10091,"count":2},{"startOffset":10091,"endOffset":10152,"count":713},{"startOffset":10190,"endOffset":10343,"count":713},{"startOffset":10343,"endOffset":10697,"count":2},{"startOffset":10579,"endOffset":10638,"count":0},{"startOffset":10757,"endOffset":10853,"count":2},{"startOffset":10853,"endOffset":10915,"count":713},{"startOffset":10875,"endOffset":10915,"count":0},{"startOffset":10941,"endOffset":10984,"count":714}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":11005,"endOffset":11195,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":11197,"endOffset":11340,"count":715}],"isBlockCoverage":true},{"functionName":"open","ranges":[{"startOffset":11342,"endOffset":11919,"count":0}],"isBlockCoverage":false},{"functionName":"openSync","ranges":[{"startOffset":11922,"endOffset":12318,"count":715}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":12425,"endOffset":13923,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":14192,"endOffset":15107,"count":715},{"startOffset":14310,"endOffset":14459,"count":0},{"startOffset":14510,"endOffset":14531,"count":0},{"startOffset":14619,"endOffset":14638,"count":0},{"startOffset":14671,"endOffset":14801,"count":0}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":15109,"endOffset":15539,"count":0}],"isBlockCoverage":false},{"functionName":"readvSync","ranges":[{"startOffset":15682,"endOffset":15992,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16138,"endOffset":17406,"count":0}],"isBlockCoverage":false},{"functionName":"writeSync","ranges":[{"startOffset":17683,"endOffset":18549,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":18610,"endOffset":19038,"count":0}],"isBlockCoverage":false},{"functionName":"writevSync","ranges":[{"startOffset":19167,"endOffset":19480,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":19482,"endOffset":19863,"count":0}],"isBlockCoverage":false},{"functionName":"renameSync","ranges":[{"startOffset":19865,"endOffset":20212,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":20214,"endOffset":20832,"count":0}],"isBlockCoverage":false},{"functionName":"truncateSync","ranges":[{"startOffset":20834,"endOffset":21237,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":21239,"endOffset":21579,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncateSync","ranges":[{"startOffset":21581,"endOffset":21801,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadRimraf","ranges":[{"startOffset":21804,"endOffset":21923,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21925,"endOffset":22565,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":22567,"endOffset":23005,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":23007,"endOffset":23345,"count":0}],"isBlockCoverage":false},{"functionName":"rmSync","ranges":[{"startOffset":23347,"endOffset":23517,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":23519,"endOffset":23693,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasyncSync","ranges":[{"startOffset":23695,"endOffset":23845,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":23847,"endOffset":24013,"count":0}],"isBlockCoverage":false},{"functionName":"fsyncSync","ranges":[{"startOffset":24015,"endOffset":24157,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":24159,"endOffset":24940,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":24942,"endOffset":25714,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":25716,"endOffset":26297,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":26299,"endOffset":26725,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":26727,"endOffset":27066,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":27068,"endOffset":27443,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":27445,"endOffset":27818,"count":0}],"isBlockCoverage":false},{"functionName":"fstatSync","ranges":[{"startOffset":27820,"endOffset":28062,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":28064,"endOffset":28374,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":28376,"endOffset":28683,"count":22}],"isBlockCoverage":true},{"functionName":"readlink","ranges":[{"startOffset":28685,"endOffset":29033,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":29035,"endOffset":29366,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":29368,"endOffset":30978,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkSync","ranges":[{"startOffset":30980,"endOffset":31637,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":31639,"endOffset":32040,"count":0}],"isBlockCoverage":false},{"functionName":"linkSync","ranges":[{"startOffset":32042,"endOffset":32491,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":32493,"endOffset":32720,"count":0}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":32722,"endOffset":32908,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":32910,"endOffset":33152,"count":0}],"isBlockCoverage":false},{"functionName":"fchmodSync","ranges":[{"startOffset":33154,"endOffset":33348,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":33350,"endOffset":33787,"count":0}],"isBlockCoverage":false},{"functionName":"lchmodSync","ranges":[{"startOffset":33789,"endOffset":34111,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":34114,"endOffset":34390,"count":0}],"isBlockCoverage":false},{"functionName":"chmodSync","ranges":[{"startOffset":34392,"endOffset":34627,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":34629,"endOffset":34970,"count":0}],"isBlockCoverage":false},{"functionName":"lchownSync","ranges":[{"startOffset":34972,"endOffset":35272,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":35274,"endOffset":35580,"count":0}],"isBlockCoverage":false},{"functionName":"fchownSync","ranges":[{"startOffset":35582,"endOffset":35841,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":35843,"endOffset":36183,"count":0}],"isBlockCoverage":false},{"functionName":"chownSync","ranges":[{"startOffset":36185,"endOffset":36483,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":36485,"endOffset":36826,"count":0}],"isBlockCoverage":false},{"functionName":"utimesSync","ranges":[{"startOffset":36828,"endOffset":37110,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":37112,"endOffset":37420,"count":0}],"isBlockCoverage":false},{"functionName":"futimesSync","ranges":[{"startOffset":37422,"endOffset":37682,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":37684,"endOffset":38030,"count":0}],"isBlockCoverage":false},{"functionName":"lutimesSync","ranges":[{"startOffset":38032,"endOffset":38336,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":38338,"endOffset":38988,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":38990,"endOffset":39717,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":39719,"endOffset":40429,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":40431,"endOffset":40871,"count":0}],"isBlockCoverage":false},{"functionName":"appendFileSync","ranges":[{"startOffset":40873,"endOffset":41252,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":41254,"endOffset":42146,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":42182,"endOffset":43295,"count":0}],"isBlockCoverage":false},{"functionName":"unwatchFile","ranges":[{"startOffset":43297,"endOffset":43985,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":44201,"endOffset":44267,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":44292,"endOffset":44470,"count":690},{"startOffset":44359,"endOffset":44450,"count":1380},{"startOffset":44421,"endOffset":44444,"count":690},{"startOffset":44450,"endOffset":44469,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":44475,"endOffset":44762,"count":690},{"startOffset":44560,"endOffset":44590,"count":0},{"startOffset":44610,"endOffset":44761,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":44885,"endOffset":45128,"count":0}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":45152,"endOffset":45205,"count":7373}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":45247,"endOffset":49113,"count":910},{"startOffset":45381,"endOffset":45399,"count":0},{"startOffset":45568,"endOffset":45603,"count":220},{"startOffset":45603,"endOffset":46175,"count":690},{"startOffset":46175,"endOffset":46350,"count":0},{"startOffset":46350,"endOffset":46487,"count":690},{"startOffset":46487,"endOffset":49030,"count":7373},{"startOffset":46599,"endOffset":46714,"count":690},{"startOffset":46714,"endOffset":46840,"count":6683},{"startOffset":46963,"endOffset":47100,"count":6382},{"startOffset":47054,"endOffset":47078,"count":0},{"startOffset":47100,"endOffset":47180,"count":991},{"startOffset":47211,"endOffset":47260,"count":0},{"startOffset":47260,"endOffset":48544,"count":991},{"startOffset":47713,"endOffset":48538,"count":0},{"startOffset":48544,"endOffset":48839,"count":0},{"startOffset":48841,"endOffset":49026,"count":0},{"startOffset":49030,"endOffset":49112,"count":690}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":49138,"endOffset":49377,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":49381,"endOffset":52816,"count":0}],"isBlockCoverage":false},{"functionName":"realpath.native","ranges":[{"startOffset":52837,"endOffset":53107,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":53110,"endOffset":53581,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtempSync","ranges":[{"startOffset":53584,"endOffset":54058,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":54061,"endOffset":54615,"count":0}],"isBlockCoverage":false},{"functionName":"copyFileSync","ranges":[{"startOffset":54618,"endOffset":54990,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":54992,"endOffset":55186,"count":60},{"startOffset":55040,"endOffset":55184,"count":1}],"isBlockCoverage":true},{"functionName":"createReadStream","ranges":[{"startOffset":55188,"endOffset":55293,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":55295,"endOffset":55402,"count":0}],"isBlockCoverage":false},{"functionName":"get ReadStream","ranges":[{"startOffset":56625,"endOffset":56693,"count":15}],"isBlockCoverage":true},{"functionName":"set ReadStream","ranges":[{"startOffset":56698,"endOffset":56745,"count":0}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":56750,"endOffset":56820,"count":15}],"isBlockCoverage":true},{"functionName":"set WriteStream","ranges":[{"startOffset":56825,"endOffset":56874,"count":0}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":57012,"endOffset":57088,"count":15}],"isBlockCoverage":true},{"functionName":"set FileReadStream","ranges":[{"startOffset":57093,"endOffset":57148,"count":0}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":57153,"endOffset":57231,"count":15}],"isBlockCoverage":true},{"functionName":"set FileWriteStream","ranges":[{"startOffset":57236,"endOffset":57293,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":57724,"endOffset":57849,"count":15},{"startOffset":57769,"endOffset":57820,"count":1}],"isBlockCoverage":true}]},{"scriptId":"50","url":"internal/fs/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21593,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFs","ranges":[{"startOffset":2473,"endOffset":2552,"count":0}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":2554,"endOffset":2701,"count":1624},{"startOffset":2605,"endOffset":2636,"count":714},{"startOffset":2638,"endOffset":2699,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":2720,"endOffset":2795,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":2799,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":2864,"endOffset":2921,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":2925,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":2994,"endOffset":3062,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":3066,"endOffset":3131,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":3135,"endOffset":3192,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":3196,"endOffset":3257,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":3302,"endOffset":3381,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats.<computed>","ranges":[{"startOffset":3526,"endOffset":3575,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":3580,"endOffset":3708,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3758,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"getDirents","ranges":[{"startOffset":4367,"endOffset":5462,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":5464,"endOffset":6186,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":6188,"endOffset":6728,"count":1626},{"startOffset":6283,"endOffset":6321,"count":1624},{"startOffset":6323,"endOffset":6355,"count":2},{"startOffset":6355,"endOffset":6392,"count":1624},{"startOffset":6392,"endOffset":6510,"count":714},{"startOffset":6510,"endOffset":6632,"count":910},{"startOffset":6549,"endOffset":6632,"count":0},{"startOffset":6632,"endOffset":6727,"count":1624}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":6730,"endOffset":7259,"count":3179},{"startOffset":6800,"endOffset":6935,"count":34},{"startOffset":6935,"endOffset":6967,"count":3145},{"startOffset":6967,"endOffset":7257,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7400,"endOffset":7953,"count":1710},{"startOffset":7630,"endOffset":7650,"count":0},{"startOffset":7704,"endOffset":7752,"count":0},{"startOffset":7771,"endOffset":7952,"count":0}],"isBlockCoverage":true},{"functionName":"preprocessSymlinkDestination","ranges":[{"startOffset":7957,"endOffset":8628,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":8661,"endOffset":8968,"count":15}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":9004,"endOffset":9061,"count":11}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":9093,"endOffset":9150,"count":7}],"isBlockCoverage":true},{"functionName":"StatsBase.isBlockDevice","ranges":[{"startOffset":9189,"endOffset":9246,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isCharacterDevice","ranges":[{"startOffset":9289,"endOffset":9346,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":9386,"endOffset":9443,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":9475,"endOffset":9532,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSocket","ranges":[{"startOffset":9566,"endOffset":9624,"count":0}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":9749,"endOffset":9831,"count":36}],"isBlockCoverage":true},{"functionName":"nsFromTimeSpecBigInt","ranges":[{"startOffset":9833,"endOffset":9916,"count":0}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":10265,"endOffset":10329,"count":60}],"isBlockCoverage":true},{"functionName":"BigIntStats","ranges":[{"startOffset":10331,"endOffset":11067,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats._checkModeProperty","ranges":[{"startOffset":11225,"endOffset":11471,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":11474,"endOffset":11991,"count":15}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":12332,"endOffset":12562,"count":18},{"startOffset":12369,"endOffset":12447,"count":0},{"startOffset":12449,"endOffset":12516,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":12565,"endOffset":13643,"count":9},{"startOffset":12646,"endOffset":13171,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":13645,"endOffset":14853,"count":716},{"startOffset":13710,"endOffset":13733,"count":0},{"startOffset":13756,"endOffset":13782,"count":0},{"startOffset":13839,"endOffset":13850,"count":0},{"startOffset":13872,"endOffset":13909,"count":0},{"startOffset":13914,"endOffset":13940,"count":0},{"startOffset":13945,"endOffset":13957,"count":0},{"startOffset":13979,"endOffset":14015,"count":0},{"startOffset":14021,"endOffset":14068,"count":0},{"startOffset":14073,"endOffset":14084,"count":0},{"startOffset":14106,"endOffset":14163,"count":0},{"startOffset":14169,"endOffset":14215,"count":0},{"startOffset":14220,"endOffset":14231,"count":0},{"startOffset":14253,"endOffset":14308,"count":0},{"startOffset":14314,"endOffset":14362,"count":0},{"startOffset":14367,"endOffset":14378,"count":0},{"startOffset":14400,"endOffset":14458,"count":0},{"startOffset":14463,"endOffset":14474,"count":0},{"startOffset":14496,"endOffset":14554,"count":0},{"startOffset":14560,"endOffset":14607,"count":0},{"startOffset":14612,"endOffset":14623,"count":0},{"startOffset":14645,"endOffset":14701,"count":0},{"startOffset":14706,"endOffset":14717,"count":0},{"startOffset":14739,"endOffset":14795,"count":0},{"startOffset":14799,"endOffset":14852,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14899,"endOffset":15259,"count":0}],"isBlockCoverage":false},{"functionName":"toUnixTimestamp","ranges":[{"startOffset":15321,"endOffset":15764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15818,"endOffset":16197,"count":717},{"startOffset":15874,"endOffset":15941,"count":0},{"startOffset":15962,"endOffset":16029,"count":0},{"startOffset":16070,"endOffset":16193,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16255,"endOffset":16529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16571,"endOffset":16841,"count":1710},{"startOffset":16633,"endOffset":16655,"count":0},{"startOffset":16657,"endOffset":16743,"count":0},{"startOffset":16819,"endOffset":16839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16886,"endOffset":17021,"count":800}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17069,"endOffset":17400,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnNonPortableTemplate","ranges":[{"startOffset":17441,"endOffset":17899,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18135,"endOffset":18755,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18805,"endOffset":19387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19439,"endOffset":19921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19962,"endOffset":20540,"count":21},{"startOffset":20089,"endOffset":20186,"count":0},{"startOffset":20270,"endOffset":20314,"count":0},{"startOffset":20315,"endOffset":20329,"count":0},{"startOffset":20331,"endOffset":20539,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20603,"endOffset":20975,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"internal/fs/dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6531,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1092,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1868,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1915,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1986,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":3362,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4122,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":4686,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":5067,"endOffset":5330,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":5491,"endOffset":6116,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6118,"endOffset":6475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"52","url":"internal/modules/cjs/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5427,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":681,"endOffset":706,"count":1}],"isBlockCoverage":true},{"functionName":"loadNativeModule","ranges":[{"startOffset":860,"endOffset":1066,"count":771},{"startOffset":964,"endOffset":1064,"count":84}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":1315,"endOffset":3313,"count":679},{"startOffset":1429,"endOffset":2705,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1567,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":2727,"endOffset":2789,"count":1460}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2798,"endOffset":2944,"count":14}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":2978,"endOffset":3100,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":3498,"endOffset":3624,"count":9},{"startOffset":3567,"endOffset":3604,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":3626,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":5093,"endOffset":5281,"count":682},{"startOffset":5200,"endOffset":5246,"count":680},{"startOffset":5246,"endOffset":5280,"count":2}],"isBlockCoverage":true}]},{"scriptId":"53","url":"url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29943,"count":1}],"isBlockCoverage":false},{"functionName":"Url","ranges":[{"startOffset":1850,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":3804,"endOffset":4018,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":4042,"endOffset":13470,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname","ranges":[{"startOffset":13473,"endOffset":14198,"count":0}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":15254,"endOffset":15960,"count":0}],"isBlockCoverage":false},{"functionName":"urlFormat","ranges":[{"startOffset":16006,"endOffset":16716,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":17423,"endOffset":19839,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolve","ranges":[{"startOffset":19842,"endOffset":19941,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":19967,"endOffset":20068,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolveObject","ranges":[{"startOffset":20071,"endOffset":20214,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":20246,"endOffset":29365,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":29394,"endOffset":29667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"54","url":"internal/idna.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":false}]},{"scriptId":"55","url":"internal/process/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2945,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":298,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":809,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":1049,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1104,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1196,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1249,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1341,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1392,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1473,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1522,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1663,"endOffset":1735,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1739,"endOffset":1923,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1927,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1995,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2226,"endOffset":2312,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2316,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2519,"endOffset":2690,"count":1},{"startOffset":2585,"endOffset":2688,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2692,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2818,"endOffset":2892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"56","url":"child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18694,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1538,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":2179,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":3866,"endOffset":4355,"count":1}],"isBlockCoverage":true},{"functionName":"onNewListener","ranges":[{"startOffset":4094,"endOffset":4203,"count":12},{"startOffset":4152,"endOffset":4176,"count":9},{"startOffset":4178,"endOffset":4199,"count":3}],"isBlockCoverage":true},{"functionName":"onRemoveListener","ranges":[{"startOffset":4237,"endOffset":4351,"count":5},{"startOffset":4298,"endOffset":4322,"count":3},{"startOffset":4324,"endOffset":4347,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":4357,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":4768,"endOffset":5015,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":5051,"endOffset":5479,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5072,"endOffset":5476,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":5596,"endOffset":10450,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":10574,"endOffset":14813,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":14816,"endOffset":15018,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":15020,"endOffset":16506,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":16509,"endOffset":16938,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":16941,"endOffset":17351,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":17354,"endOffset":17730,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":17733,"endOffset":17921,"count":0}],"isBlockCoverage":false},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":17924,"endOffset":18197,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":18200,"endOffset":18563,"count":0}],"isBlockCoverage":false}]},{"scriptId":"57","url":"internal/child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30545,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2131,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2197,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2312,"endOffset":2379,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2386,"endOffset":2527,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2556,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4117,"endOffset":4863,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":4870,"endOffset":5325,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5389,"endOffset":5448,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5455,"endOffset":5509,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5573,"endOffset":5693,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5700,"endOffset":5859,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":5868,"endOffset":6215,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6217,"endOffset":7562,"count":0}],"isBlockCoverage":false},{"functionName":"flushStdio","ranges":[{"startOffset":7685,"endOffset":8163,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":8166,"endOffset":8277,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8280,"endOffset":8509,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":8511,"endOffset":8624,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":8658,"endOffset":12476,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12480,"endOffset":12541,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12574,"endOffset":13239,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13272,"endOffset":13326,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13361,"endOffset":13417,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13459,"endOffset":13516,"count":1}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":13521,"endOffset":13589,"count":1}],"isBlockCoverage":true},{"functionName":"refCounted","ranges":[{"startOffset":13903,"endOffset":14011,"count":27},{"startOffset":13945,"endOffset":13971,"count":1},{"startOffset":13973,"endOffset":14007,"count":1}],"isBlockCoverage":true},{"functionName":"unrefCounted","ranges":[{"startOffset":14015,"endOffset":14153,"count":26},{"startOffset":14059,"endOffset":14085,"count":0},{"startOffset":14087,"endOffset":14149,"count":0}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":14157,"endOffset":14228,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":14232,"endOffset":14307,"count":2}],"isBlockCoverage":true},{"functionName":"get fd","ranges":[{"startOffset":14311,"endOffset":14382,"count":2},{"startOffset":14366,"endOffset":14377,"count":0}],"isBlockCoverage":true},{"functionName":"setupChannel","ranges":[{"startOffset":14532,"endOffset":26185,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14761,"endOffset":14803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14859,"endOffset":14903,"count":0}],"isBlockCoverage":false},{"functionName":"channel.onread","ranges":[{"startOffset":15396,"endOffset":16575,"count":2},{"startOffset":15730,"endOffset":15757,"count":0},{"startOffset":16079,"endOffset":16312,"count":0},{"startOffset":16395,"endOffset":16571,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16729,"endOffset":19070,"count":0}],"isBlockCoverage":false},{"functionName":"target.send","ranges":[{"startOffset":19090,"endOffset":19904,"count":32},{"startOffset":19260,"endOffset":19537,"count":0},{"startOffset":19684,"endOffset":19903,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19846,"endOffset":19874,"count":0}],"isBlockCoverage":false},{"functionName":"target._send","ranges":[{"startOffset":19924,"endOffset":24189,"count":32},{"startOffset":19997,"endOffset":20012,"count":0},{"startOffset":20053,"endOffset":20091,"count":0},{"startOffset":20416,"endOffset":20454,"count":0},{"startOffset":20455,"endOffset":20494,"count":0},{"startOffset":20496,"endOffset":20613,"count":0},{"startOffset":20694,"endOffset":20745,"count":0},{"startOffset":20822,"endOffset":22539,"count":0},{"startOffset":22567,"endOffset":22701,"count":0},{"startOffset":22703,"endOffset":22960,"count":0},{"startOffset":23167,"endOffset":23343,"count":0},{"startOffset":23370,"endOffset":23561,"count":24},{"startOffset":23561,"endOffset":23654,"count":8},{"startOffset":23660,"endOffset":24062,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":23397,"endOffset":23522,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24008,"endOffset":24036,"count":0}],"isBlockCoverage":false},{"functionName":"target.disconnect","ranges":[{"startOffset":24763,"endOffset":25187,"count":0}],"isBlockCoverage":false},{"functionName":"target._disconnect","ranges":[{"startOffset":25213,"endOffset":25830,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":25835,"endOffset":25919,"count":2}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":25923,"endOffset":26141,"count":2},{"startOffset":26006,"endOffset":26013,"count":0},{"startOffset":26047,"endOffset":26066,"count":0}],"isBlockCoverage":true},{"functionName":"isInternal","ranges":[{"startOffset":26220,"endOffset":26502,"count":2},{"startOffset":26364,"endOffset":26420,"count":0},{"startOffset":26421,"endOffset":26498,"count":0}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":26504,"endOffset":26522,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":26524,"endOffset":29243,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":29246,"endOffset":29562,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":29565,"endOffset":29766,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":29768,"endOffset":30420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47106,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1448,"endOffset":1473,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3388,"endOffset":3406,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":3408,"endOffset":3502,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":3504,"endOffset":3885,"count":2},{"startOffset":3671,"endOffset":3693,"count":0},{"startOffset":3727,"endOffset":3884,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":3888,"endOffset":4026,"count":2},{"startOffset":3983,"endOffset":4001,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":4029,"endOffset":4112,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4114,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4441,"endOffset":4732,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":5227,"endOffset":5953,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":6025,"endOffset":6628,"count":2},{"startOffset":6381,"endOffset":6622,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":6763,"endOffset":10585,"count":2},{"startOffset":6823,"endOffset":6850,"count":0},{"startOffset":7400,"endOffset":7426,"count":0},{"startOffset":7970,"endOffset":8078,"count":0},{"startOffset":8175,"endOffset":8254,"count":0},{"startOffset":8255,"endOffset":8303,"count":0},{"startOffset":8305,"endOffset":8536,"count":0},{"startOffset":9087,"endOffset":9121,"count":0},{"startOffset":9201,"endOffset":9212,"count":1},{"startOffset":9272,"endOffset":9801,"count":0},{"startOffset":10167,"endOffset":10432,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":10758,"endOffset":10888,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":11008,"endOffset":11656,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":11660,"endOffset":12039,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":12246,"endOffset":12702,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":12784,"endOffset":13288,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":13322,"endOffset":13771,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":13807,"endOffset":14054,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":14085,"endOffset":14129,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14196,"endOffset":14240,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14300,"endOffset":14356,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14447,"endOffset":14762,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14831,"endOffset":14911,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14979,"endOffset":15024,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":15031,"endOffset":15277,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":15369,"endOffset":15598,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":15625,"endOffset":15777,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":15806,"endOffset":16140,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":16170,"endOffset":16354,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":16382,"endOffset":16568,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":16615,"endOffset":16900,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":16934,"endOffset":17081,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":17113,"endOffset":18067,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":18102,"endOffset":18393,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":18396,"endOffset":18556,"count":8}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":18583,"endOffset":18674,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":18707,"endOffset":18773,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":18805,"endOffset":18869,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":18899,"endOffset":18959,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":18996,"endOffset":19281,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":19313,"endOffset":19378,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":19408,"endOffset":19467,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":19509,"endOffset":19556,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":19592,"endOffset":20353,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":20384,"endOffset":20452,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":20482,"endOffset":20563,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":20756,"endOffset":20860,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":20892,"endOffset":21821,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":21826,"endOffset":22625,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":22628,"endOffset":24333,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":24363,"endOffset":25667,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":25671,"endOffset":28698,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":28701,"endOffset":28760,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":28786,"endOffset":28973,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":29002,"endOffset":29195,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":29199,"endOffset":30447,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":30450,"endOffset":31779,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":31890,"endOffset":31955,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":32023,"endOffset":33475,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":33477,"endOffset":35828,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":35895,"endOffset":35957,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":35960,"endOffset":36075,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":36078,"endOffset":37296,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":37325,"endOffset":40823,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":40826,"endOffset":41238,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41301,"endOffset":41344,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":41419,"endOffset":41708,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":41711,"endOffset":42372,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":42409,"endOffset":43162,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":43191,"endOffset":44058,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":44100,"endOffset":44486,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":44490,"endOffset":44573,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":44632,"endOffset":44794,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44997,"endOffset":45033,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":45037,"endOffset":45078,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45138,"endOffset":45169,"count":16}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":45173,"endOffset":45209,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":45247,"endOffset":45473,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":45499,"endOffset":45597,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":45625,"endOffset":45724,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":45866,"endOffset":46535,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":46574,"endOffset":46815,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2187,"count":1}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1978,"endOffset":2185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7429,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":526,"endOffset":1918,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1920,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":2293,"endOffset":2372,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":2374,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":2456,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":2539,"endOffset":2610,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2612,"endOffset":2935,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":2937,"endOffset":3213,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":3215,"endOffset":3379,"count":0}],"isBlockCoverage":false},{"functionName":"pump","ranges":[{"startOffset":3381,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3766,"endOffset":7400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"61","url":"internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3954,"count":1}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":123,"endOffset":1394,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":1396,"endOffset":1483,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1485,"endOffset":1703,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":1705,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1994,"endOffset":2557,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2559,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":3460,"endOffset":3565,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":3600,"endOffset":3876,"count":0}],"isBlockCoverage":false}]},{"scriptId":"62","url":"internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5791,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":280,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":377,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":537,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":697,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":936,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":955,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1190,"endOffset":5767,"count":0}],"isBlockCoverage":false}]},{"scriptId":"63","url":"internal/streams/legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2081,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":96,"endOffset":144,"count":4}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":258,"endOffset":2053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"64","url":"internal/streams/readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40358,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1596,"endOffset":1621,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2218,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2278,"endOffset":3085,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3087,"endOffset":6664,"count":2},{"startOffset":3486,"endOffset":3529,"count":0},{"startOffset":4062,"endOffset":4098,"count":0},{"startOffset":6476,"endOffset":6662,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6667,"endOffset":7237,"count":2},{"startOffset":6735,"endOffset":6764,"count":0},{"startOffset":7087,"endOffset":7113,"count":0},{"startOffset":7168,"endOffset":7200,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":7374,"endOffset":7406,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7457,"endOffset":7495,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7724,"endOffset":7810,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":7906,"endOffset":7991,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7994,"endOffset":10247,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10249,"endOffset":10949,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":10981,"endOffset":11093,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":11157,"endOffset":11801,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11862,"endOffset":12227,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12340,"endOffset":12734,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12831,"endOffset":17061,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":17064,"endOffset":17884,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":18085,"endOffset":18412,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18414,"endOffset":19050,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19400,"endOffset":19556,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19558,"endOffset":21354,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21625,"endOffset":21691,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21720,"endOffset":26107,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":26110,"endOffset":26784,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":26815,"endOffset":27484,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":27610,"endOffset":28517,"count":2},{"startOffset":27742,"endOffset":28074,"count":0},{"startOffset":28103,"endOffset":28500,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":28612,"endOffset":29126,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":29229,"endOffset":29767,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":29770,"endOffset":30280,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30282,"endOffset":30370,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":30524,"endOffset":30849,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":30852,"endOffset":31002,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":31004,"endOffset":31255,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":31284,"endOffset":31551,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":31554,"endOffset":31701,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":31885,"endOffset":33700,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33745,"endOffset":34126,"count":0}],"isBlockCoverage":false},{"functionName":"createAsyncIterator","ranges":[{"startOffset":34129,"endOffset":35422,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35620,"endOffset":36009,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36015,"endOffset":36145,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":36211,"endOffset":36277,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36336,"endOffset":36418,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36478,"endOffset":36538,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":36549,"endOffset":36658,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36712,"endOffset":36766,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36824,"endOffset":36912,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":36968,"endOffset":37053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37102,"endOffset":37236,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37242,"endOffset":37531,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37584,"endOffset":37672,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37791,"endOffset":37836,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":37894,"endOffset":37945,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":37951,"endOffset":38000,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":38304,"endOffset":38866,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":38868,"endOffset":39089,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":39091,"endOffset":40023,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":40025,"endOffset":40192,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":40210,"endOffset":40356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3798,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":204,"endOffset":288,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":292,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":483,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":645,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":876,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":948,"endOffset":1119,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1123,"endOffset":1386,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1470,"endOffset":1924,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":1928,"endOffset":1968,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1972,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2143,"endOffset":2738,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2808,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3599,"endOffset":3794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"66","url":"internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":881,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":4},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":4},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":811,"count":4},{"startOffset":546,"endOffset":737,"count":0}],"isBlockCoverage":true}]},{"scriptId":"67","url":"internal/streams/writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22608,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2223,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2242,"endOffset":6406,"count":2},{"startOffset":2637,"endOffset":2680,"count":0},{"startOffset":3231,"endOffset":3267,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6408,"endOffset":6540,"count":2}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":6578,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6729,"endOffset":6794,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7121,"endOffset":7335,"count":0}],"isBlockCoverage":false},{"functionName":"realHasInstance","ranges":[{"startOffset":7371,"endOffset":7428,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7433,"endOffset":8605,"count":2},{"startOffset":8074,"endOffset":8114,"count":0},{"startOffset":8120,"endOffset":8149,"count":0},{"startOffset":8288,"endOffset":8316,"count":0},{"startOffset":8370,"endOffset":8400,"count":0},{"startOffset":8455,"endOffset":8487,"count":0},{"startOffset":8540,"endOffset":8568,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.pipe","ranges":[{"startOffset":8701,"endOffset":8769,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":8799,"endOffset":10008,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.cork","ranges":[{"startOffset":10037,"endOffset":10083,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10114,"endOffset":10269,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":10312,"endOffset":10623,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":10813,"endOffset":11804,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":11806,"endOffset":12184,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":12186,"endOffset":12606,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":12608,"endOffset":14202,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteTick","ranges":[{"startOffset":14204,"endOffset":14343,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":14345,"endOffset":14755,"count":0}],"isBlockCoverage":false},{"functionName":"errorBuffer","ranges":[{"startOffset":14827,"endOffset":15148,"count":0}],"isBlockCoverage":false},{"functionName":"clearBuffer","ranges":[{"startOffset":15214,"endOffset":16647,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":16677,"endOffset":16846,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":16910,"endOffset":18094,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":18097,"endOffset":18310,"count":0}],"isBlockCoverage":false},{"functionName":"callFinal","ranges":[{"startOffset":18312,"endOffset":18572,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":18574,"endOffset":18922,"count":0}],"isBlockCoverage":false},{"functionName":"finishMaybe","ranges":[{"startOffset":18924,"endOffset":19251,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":19253,"endOffset":19871,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":19937,"endOffset":20401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20468,"endOffset":20555,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20561,"endOffset":20743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20768,"endOffset":21160,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":21166,"endOffset":21300,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21333,"endOffset":21419,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21454,"endOffset":21542,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21573,"endOffset":21655,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21685,"endOffset":21769,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21807,"endOffset":21891,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21922,"endOffset":22002,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22033,"endOffset":22110,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":22186,"endOffset":22397,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._destroy","ranges":[{"startOffset":22485,"endOffset":22517,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":22568,"endOffset":22606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"68","url":"internal/streams/duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3661,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1936,"endOffset":2360,"count":2},{"startOffset":2000,"endOffset":2027,"count":0},{"startOffset":2248,"endOffset":2270,"count":0},{"startOffset":2313,"endOffset":2354,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3173,"endOffset":3385,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3391,"endOffset":3652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"69","url":"internal/streams/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8217,"count":1}],"isBlockCoverage":false},{"functionName":"afterTransform","ranges":[{"startOffset":4032,"endOffset":4550,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4553,"endOffset":5382,"count":0}],"isBlockCoverage":false},{"functionName":"prefinish","ranges":[{"startOffset":5384,"endOffset":5596,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5691,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5838,"endOffset":5890,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5988,"endOffset":6124,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6607,"endOffset":6696,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6728,"endOffset":7067,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":7239,"endOffset":7613,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7648,"endOffset":7745,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7749,"endOffset":8216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"70","url":"internal/streams/passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1762,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1529,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1708,"endOffset":1760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"internal/net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1694,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":974,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1024,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1074,"endOffset":1160,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1162,"endOffset":1576,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"internal/stream_base_commons.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7120,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":987,"endOffset":1012,"count":0}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1131,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":1988,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2500,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":2703,"endOffset":3344,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3346,"endOffset":3553,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3555,"endOffset":3864,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":3866,"endOffset":5991,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":5993,"endOffset":6895,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"internal/dtrace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"74","url":"dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27004,"count":1}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":2681,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":3690,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":3771,"endOffset":4205,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":4207,"endOffset":4777,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":4779,"endOffset":5071,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5138,"endOffset":5561,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":5587,"endOffset":9177,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9207,"endOffset":9949,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":9953,"endOffset":10298,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":10301,"endOffset":10943,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":10976,"endOffset":11283,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":11388,"endOffset":11829,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":11833,"endOffset":12403,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":12406,"endOffset":12790,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":12793,"endOffset":13205,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":13208,"endOffset":13328,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":13331,"endOffset":13455,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":13458,"endOffset":13655,"count":0}],"isBlockCoverage":false},{"functionName":"isConnected","ranges":[{"startOffset":13657,"endOffset":13772,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":14344,"endOffset":17238,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":17241,"endOffset":18380,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":18382,"endOffset":18559,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":18586,"endOffset":19121,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":19125,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":19209,"endOffset":19399,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":19435,"endOffset":19745,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":19781,"endOffset":19929,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":19959,"endOffset":20133,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":20172,"endOffset":20364,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":20408,"endOffset":20608,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":20653,"endOffset":20915,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":20951,"endOffset":21325,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":21363,"endOffset":21740,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":21790,"endOffset":22547,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":22599,"endOffset":23362,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":23366,"endOffset":23529,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":23532,"endOffset":23696,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":23699,"endOffset":23953,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":23979,"endOffset":24086,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":24115,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":24265,"endOffset":24322,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":24363,"endOffset":24420,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":24461,"endOffset":24518,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":24559,"endOffset":24616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24717,"endOffset":24771,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24844,"endOffset":24900,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25033,"endOffset":25090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25166,"endOffset":25225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25361,"endOffset":25418,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25494,"endOffset":25553,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25685,"endOffset":25738,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25810,"endOffset":25865,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25997,"endOffset":26054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26130,"endOffset":26189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26295,"endOffset":26330,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26439,"endOffset":26476,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26742,"endOffset":26778,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26782,"endOffset":26823,"count":0}],"isBlockCoverage":false}]},{"scriptId":"75","url":"internal/dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1844,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":448,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":552,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":649,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1320,"endOffset":1768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"internal/socket_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1193,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1542,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2404,"endOffset":2645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"77","url":"internal/child_process/serialization.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":775,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":1090,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":1513,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"parseChannelMessages","ranges":[{"startOffset":1629,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"writeChannelMessage","ranges":[{"startOffset":2285,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":2726,"endOffset":2831,"count":1}],"isBlockCoverage":true},{"functionName":"parseChannelMessages","ranges":[{"startOffset":2836,"endOffset":3598,"count":2},{"startOffset":2910,"endOffset":2917,"count":0},{"startOffset":2972,"endOffset":3024,"count":1},{"startOffset":3284,"endOffset":3338,"count":0}],"isBlockCoverage":true},{"functionName":"writeChannelMessage","ranges":[{"startOffset":3603,"endOffset":3766,"count":32}],"isBlockCoverage":true}]},{"scriptId":"78","url":"string_decoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4033,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":1850,"endOffset":2112,"count":1},{"startOffset":1962,"endOffset":2095,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2382,"endOffset":2581,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2615,"endOffset":2916,"count":2},{"startOffset":2672,"endOffset":2683,"count":0},{"startOffset":2719,"endOffset":2870,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":2949,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":3237,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3511,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3735,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3869,"endOffset":3984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"v8.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8781,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":1665,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":1869,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":3302,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":3406,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":4187,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":4746,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":5246,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":6648,"endOffset":6736,"count":0}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":6740,"endOffset":7354,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":7409,"endOffset":8222,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":8226,"endOffset":8370,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":8372,"endOffset":8497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"internal/heap_utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":322,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":480,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":553,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":737,"endOffset":779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"internal/modules/cjs/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37972,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":1880,"endOffset":1949,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":4272,"endOffset":4589,"count":4200},{"startOffset":4370,"endOffset":4464,"count":554},{"startOffset":4446,"endOffset":4460,"count":244},{"startOffset":4464,"endOffset":4538,"count":3956},{"startOffset":4538,"endOffset":4570,"count":310},{"startOffset":4570,"endOffset":4588,"count":3956}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":4591,"endOffset":4766,"count":1394},{"startOffset":4664,"endOffset":4682,"count":1380},{"startOffset":4699,"endOffset":4737,"count":1380},{"startOffset":4709,"endOffset":4736,"count":697},{"startOffset":4743,"endOffset":4764,"count":1373}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":4768,"endOffset":5005,"count":695}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":5456,"endOffset":5533,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5678,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":5805,"endOffset":5938,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5985,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6018,"endOffset":6072,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6122,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6163,"endOffset":6225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6296,"endOffset":6321,"count":1}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":6669,"endOffset":7479,"count":4318},{"startOffset":6849,"endOffset":6865,"count":3993},{"startOffset":6865,"endOffset":6963,"count":325},{"startOffset":6963,"endOffset":6969,"count":0},{"startOffset":6970,"endOffset":6985,"count":325},{"startOffset":7013,"endOffset":7079,"count":188},{"startOffset":7079,"endOffset":7362,"count":137},{"startOffset":7362,"endOffset":7477,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":7481,"endOffset":8024,"count":1753},{"startOffset":7616,"endOffset":7961,"count":3793},{"startOffset":7823,"endOffset":7836,"count":0},{"startOffset":7900,"endOffset":7957,"count":1753},{"startOffset":7961,"endOffset":8023,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":8026,"endOffset":9327,"count":227},{"startOffset":8148,"endOffset":8229,"count":97},{"startOffset":8229,"endOffset":8323,"count":130},{"startOffset":8323,"endOffset":8367,"count":6},{"startOffset":8368,"endOffset":8435,"count":3},{"startOffset":8461,"endOffset":9308,"count":0},{"startOffset":9308,"endOffset":9326,"count":130}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":9668,"endOffset":9878,"count":1827},{"startOffset":9756,"endOffset":9763,"count":948},{"startOffset":9763,"endOffset":9787,"count":879},{"startOffset":9787,"endOffset":9797,"count":0},{"startOffset":9799,"endOffset":9842,"count":0},{"startOffset":9842,"endOffset":9877,"count":879}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":9880,"endOffset":10011,"count":907}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":10086,"endOffset":10292,"count":1047},{"startOffset":10168,"endOffset":10274,"count":1675},{"startOffset":10240,"endOffset":10270,"count":733},{"startOffset":10274,"endOffset":10291,"count":314}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":10381,"endOffset":10817,"count":687},{"startOffset":10640,"endOffset":10649,"count":0},{"startOffset":10771,"endOffset":10795,"count":680},{"startOffset":10799,"endOffset":10816,"count":7}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":10819,"endOffset":11108,"count":1084},{"startOffset":10871,"endOffset":10884,"count":3},{"startOffset":10884,"endOffset":10942,"count":1081},{"startOffset":10942,"endOffset":11106,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":11110,"endOffset":11959,"count":1084},{"startOffset":11169,"endOffset":11182,"count":3},{"startOffset":11182,"endOffset":11252,"count":1081},{"startOffset":11252,"endOffset":11257,"count":0},{"startOffset":11270,"endOffset":11298,"count":1081},{"startOffset":11300,"endOffset":11313,"count":1049},{"startOffset":11313,"endOffset":11350,"count":32},{"startOffset":11350,"endOffset":11363,"count":0},{"startOffset":11363,"endOffset":11410,"count":32},{"startOffset":11410,"endOffset":11436,"count":0},{"startOffset":11436,"endOffset":11602,"count":32},{"startOffset":11498,"endOffset":11573,"count":0},{"startOffset":11602,"endOffset":11957,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":12120,"endOffset":12858,"count":986},{"startOffset":12322,"endOffset":12327,"count":688},{"startOffset":12346,"endOffset":12353,"count":688},{"startOffset":12353,"endOffset":12446,"count":298},{"startOffset":12446,"endOffset":12469,"count":213},{"startOffset":12470,"endOffset":12498,"count":213},{"startOffset":12500,"endOffset":12856,"count":22},{"startOffset":12703,"endOffset":12852,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":12924,"endOffset":15551,"count":1085},{"startOffset":13034,"endOffset":13057,"count":13},{"startOffset":13057,"endOffset":13120,"count":1072},{"startOffset":13097,"endOffset":13120,"count":0},{"startOffset":13196,"endOffset":13206,"count":838},{"startOffset":13207,"endOffset":13227,"count":247},{"startOffset":13292,"endOffset":13305,"count":179},{"startOffset":13305,"endOffset":13428,"count":906},{"startOffset":13452,"endOffset":13527,"count":905},{"startOffset":13527,"endOffset":13589,"count":906},{"startOffset":13589,"endOffset":15532,"count":1409},{"startOffset":13687,"endOffset":13707,"count":1404},{"startOffset":13709,"endOffset":13718,"count":418},{"startOffset":13718,"endOffset":13746,"count":991},{"startOffset":13746,"endOffset":13876,"count":986},{"startOffset":13847,"endOffset":13870,"count":22},{"startOffset":13876,"endOffset":14005,"count":969},{"startOffset":14005,"endOffset":15183,"count":968},{"startOffset":14027,"endOffset":14960,"count":27},{"startOffset":14060,"endOffset":14228,"count":26},{"startOffset":14094,"endOffset":14154,"count":0},{"startOffset":14228,"endOffset":14952,"count":1},{"startOffset":14260,"endOffset":14892,"count":0},{"startOffset":14983,"endOffset":15177,"count":941},{"startOffset":15073,"endOffset":15111,"count":861},{"startOffset":15183,"endOffset":15203,"count":969},{"startOffset":15203,"endOffset":15214,"count":312},{"startOffset":15216,"endOffset":15432,"count":227},{"startOffset":15326,"endOffset":15364,"count":1},{"startOffset":15432,"endOffset":15452,"count":969},{"startOffset":15452,"endOffset":15528,"count":884},{"startOffset":15532,"endOffset":15550,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":15795,"endOffset":17186,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":17278,"endOffset":18319,"count":699},{"startOffset":17556,"endOffset":17581,"count":0},{"startOffset":17874,"endOffset":18212,"count":79907},{"startOffset":17954,"endOffset":18082,"count":6743},{"startOffset":17991,"endOffset":18041,"count":5962},{"startOffset":18082,"endOffset":18206,"count":73164},{"startOffset":18102,"endOffset":18206,"count":18602},{"startOffset":18137,"endOffset":18163,"count":12640},{"startOffset":18163,"endOffset":18198,"count":5962}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":18353,"endOffset":19491,"count":1084},{"startOffset":18431,"endOffset":18497,"count":0},{"startOffset":18566,"endOffset":18717,"count":825},{"startOffset":18630,"endOffset":18664,"count":592},{"startOffset":18665,"endOffset":18716,"count":0},{"startOffset":18719,"endOffset":18963,"count":259},{"startOffset":18774,"endOffset":18789,"count":256},{"startOffset":18790,"endOffset":18812,"count":256},{"startOffset":18814,"endOffset":18863,"count":256},{"startOffset":18952,"endOffset":18958,"count":0},{"startOffset":18963,"endOffset":19031,"count":825},{"startOffset":19032,"endOffset":19051,"count":825},{"startOffset":19053,"endOffset":19302,"count":0},{"startOffset":19302,"endOffset":19490,"count":825}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":19494,"endOffset":19677,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19870,"endOffset":20242,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":20247,"endOffset":20488,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":20689,"endOffset":21339,"count":21},{"startOffset":20864,"endOffset":21157,"count":20},{"startOffset":21159,"endOffset":21311,"count":2}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":21751,"endOffset":24767,"count":1466},{"startOffset":21834,"endOffset":22611,"count":1463},{"startOffset":22254,"endOffset":22607,"count":314},{"startOffset":22444,"endOffset":22494,"count":1},{"startOffset":22494,"endOffset":22539,"count":313},{"startOffset":22539,"endOffset":22607,"count":0},{"startOffset":22611,"endOffset":22765,"count":1152},{"startOffset":22765,"endOffset":23125,"count":385},{"startOffset":22845,"endOffset":23073,"count":23},{"startOffset":22941,"endOffset":22968,"count":5},{"startOffset":22978,"endOffset":23028,"count":20},{"startOffset":23028,"endOffset":23073,"count":3},{"startOffset":23073,"endOffset":23121,"count":362},{"startOffset":23125,"endOffset":23188,"count":770},{"startOffset":23188,"endOffset":23215,"count":83},{"startOffset":23217,"endOffset":23236,"count":83},{"startOffset":23236,"endOffset":23335,"count":687},{"startOffset":23335,"endOffset":23366,"count":684},{"startOffset":23383,"endOffset":23442,"count":1},{"startOffset":23442,"endOffset":23508,"count":687},{"startOffset":23508,"endOffset":23577,"count":685},{"startOffset":23577,"endOffset":23816,"count":687},{"startOffset":23816,"endOffset":24006,"count":0},{"startOffset":24006,"endOffset":24739,"count":687},{"startOffset":24097,"endOffset":24479,"count":0},{"startOffset":24504,"endOffset":24546,"count":686},{"startOffset":24547,"endOffset":24659,"count":686},{"startOffset":24661,"endOffset":24735,"count":2},{"startOffset":24739,"endOffset":24766,"count":687}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":24796,"endOffset":27659,"count":1167},{"startOffset":24891,"endOffset":24916,"count":83},{"startOffset":24916,"endOffset":24966,"count":1084},{"startOffset":24966,"endOffset":24985,"count":7},{"startOffset":24987,"endOffset":25970,"count":7},{"startOffset":25142,"endOffset":25170,"count":0},{"startOffset":25237,"endOffset":25277,"count":0},{"startOffset":25649,"endOffset":25753,"count":70},{"startOffset":25777,"endOffset":25966,"count":0},{"startOffset":25970,"endOffset":26038,"count":1077},{"startOffset":26038,"endOffset":26053,"count":1084},{"startOffset":26053,"endOffset":26071,"count":1081},{"startOffset":26073,"endOffset":26653,"count":1081},{"startOffset":26103,"endOffset":26649,"count":0},{"startOffset":26653,"endOffset":26814,"count":1084},{"startOffset":26814,"endOffset":27010,"count":0},{"startOffset":27010,"endOffset":27173,"count":1084},{"startOffset":27173,"endOffset":27658,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":27662,"endOffset":28376,"count":22},{"startOffset":27828,"endOffset":27947,"count":0},{"startOffset":28039,"endOffset":28049,"count":0},{"startOffset":28051,"endOffset":28208,"count":0},{"startOffset":28241,"endOffset":28375,"count":0}],"isBlockCoverage":true},{"functionName":"createEsmNotFoundErr","ranges":[{"startOffset":28378,"endOffset":28668,"count":0}],"isBlockCoverage":false},{"functionName":"Module.load","ranges":[{"startOffset":28757,"endOffset":29561,"count":687},{"startOffset":29076,"endOffset":29106,"count":0},{"startOffset":29108,"endOffset":29154,"count":0},{"startOffset":29427,"endOffset":29475,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":29679,"endOffset":29978,"count":1463},{"startOffset":29739,"endOffset":29857,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":30158,"endOffset":31274,"count":678},{"startOffset":30231,"endOffset":30571,"count":0},{"startOffset":30860,"endOffset":30969,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":30412,"endOffset":30558,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":31097,"endOffset":31237,"count":2}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":31474,"endOffset":33316,"count":678},{"startOffset":31562,"endOffset":31729,"count":0},{"startOffset":31910,"endOffset":31934,"count":0},{"startOffset":31936,"endOffset":32672,"count":0},{"startOffset":32895,"endOffset":32917,"count":3},{"startOffset":32942,"endOffset":33081,"count":0},{"startOffset":33280,"endOffset":33297,"count":3}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":33375,"endOffset":34149,"count":678},{"startOffset":33436,"endOffset":33832,"count":671},{"startOffset":33594,"endOffset":33828,"count":0},{"startOffset":33966,"endOffset":33982,"count":3},{"startOffset":33984,"endOffset":34049,"count":3},{"startOffset":34049,"endOffset":34109,"count":675}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":34213,"endOffset":34577,"count":9},{"startOffset":34320,"endOffset":34429,"count":0},{"startOffset":34494,"endOffset":34575,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":34641,"endOffset":34959,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":34962,"endOffset":35387,"count":1},{"startOffset":35122,"endOffset":35148,"count":0},{"startOffset":35186,"endOffset":35222,"count":0}],"isBlockCoverage":true},{"functionName":"createRequire","ranges":[{"startOffset":35672,"endOffset":36225,"count":1},{"startOffset":35885,"endOffset":36017,"count":0},{"startOffset":36021,"endOffset":36181,"count":0}],"isBlockCoverage":true},{"functionName":"Module._initPaths","ranges":[{"startOffset":36286,"endOffset":37194,"count":1},{"startOffset":36327,"endOffset":36352,"count":0},{"startOffset":36404,"endOffset":36427,"count":0},{"startOffset":36635,"endOffset":36677,"count":0},{"startOffset":36944,"endOffset":37073,"count":0}],"isBlockCoverage":true},{"functionName":"pathsFilterCB","ranges":[{"startOffset":36996,"endOffset":37053,"count":0}],"isBlockCoverage":false},{"functionName":"Module._preloadModules","ranges":[{"startOffset":37222,"endOffset":37728,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":37762,"endOffset":37918,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"vm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12941,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":1992,"endOffset":4152,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":4156,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":4440,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":4850,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"validateContext","ranges":[{"startOffset":5025,"endOffset":5244,"count":0}],"isBlockCoverage":false},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5246,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"getContextOptions","ranges":[{"startOffset":5839,"endOffset":6907,"count":0}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":6909,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":7126,"endOffset":8261,"count":0}],"isBlockCoverage":false},{"functionName":"createScript","ranges":[{"startOffset":8263,"endOffset":8339,"count":0}],"isBlockCoverage":false},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8493,"endOffset":8939,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8941,"endOffset":9338,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":9340,"endOffset":9692,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":9694,"endOffset":9880,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9882,"endOffset":11615,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11892,"endOffset":12454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"internal/modules/package_json_reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":975,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":279,"endOffset":946,"count":332},{"startOffset":332,"endOffset":369,"count":7},{"startOffset":369,"endOffset":593,"count":325},{"startOffset":593,"endOffset":896,"count":137},{"startOffset":627,"endOffset":761,"count":1},{"startOffset":686,"endOffset":739,"count":0},{"startOffset":789,"endOffset":892,"count":0},{"startOffset":896,"endOffset":945,"count":325}],"isBlockCoverage":true}]},{"scriptId":"84","url":"internal/process/esm_loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2326,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":405,"endOffset":701,"count":1}],"isBlockCoverage":true},{"functionName":"exports.importModuleDynamicallyCallback","ranges":[{"startOffset":746,"endOffset":1137,"count":2},{"startOffset":1081,"endOffset":1136,"count":0}],"isBlockCoverage":true},{"functionName":"initializeLoader","ranges":[{"startOffset":1202,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"loadESM","ranges":[{"startOffset":1989,"endOffset":2324,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"internal/modules/esm/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8287,"count":1}],"isBlockCoverage":false},{"functionName":"Loader","ranges":[{"startOffset":1361,"endOffset":3134,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3138,"endOffset":3761,"count":5},{"startOffset":3459,"endOffset":3562,"count":0},{"startOffset":3634,"endOffset":3741,"count":0}],"isBlockCoverage":true},{"functionName":"getFormat","ranges":[{"startOffset":3765,"endOffset":4790,"count":5},{"startOffset":3922,"endOffset":4029,"count":0},{"startOffset":4109,"endOffset":4224,"count":0},{"startOffset":4256,"endOffset":4284,"count":1},{"startOffset":4284,"endOffset":4328,"count":4},{"startOffset":4328,"endOffset":4497,"count":0},{"startOffset":4497,"endOffset":4589,"count":4},{"startOffset":4590,"endOffset":4639,"count":1},{"startOffset":4646,"endOffset":4766,"count":0},{"startOffset":4766,"endOffset":4789,"count":4}],"isBlockCoverage":true},{"functionName":"eval","ranges":[{"startOffset":4794,"endOffset":5469,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":5473,"endOffset":5644,"count":2}],"isBlockCoverage":true},{"functionName":"hook","ranges":[{"startOffset":5648,"endOffset":6609,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalPreloadCode","ranges":[{"startOffset":6613,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":7421,"endOffset":8211,"count":5},{"startOffset":7708,"endOffset":7745,"count":0},{"startOffset":7779,"endOffset":7790,"count":0},{"startOffset":7832,"endOffset":7876,"count":0},{"startOffset":7978,"endOffset":8008,"count":0},{"startOffset":8009,"endOffset":8043,"count":0}],"isBlockCoverage":true}]},{"scriptId":"86","url":"internal/modules/esm/module_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":878,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175,"endOffset":200,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":419,"endOffset":492,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":495,"endOffset":771,"count":5},{"startOffset":585,"endOffset":621,"count":0},{"startOffset":623,"endOffset":693,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":774,"endOffset":847,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"internal/modules/esm/module_job.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5778,"count":1}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":832,"endOffset":2478,"count":5}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1301,"endOffset":2105,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1757,"endOffset":1984,"count":3}],"isBlockCoverage":true},{"functionName":"instantiate","ranges":[{"startOffset":2482,"endOffset":2627,"count":2}],"isBlockCoverage":true},{"functionName":"_instantiate","ranges":[{"startOffset":2631,"endOffset":5498,"count":2},{"startOffset":3105,"endOffset":3282,"count":0},{"startOffset":3339,"endOffset":5251,"count":0},{"startOffset":5298,"endOffset":5494,"count":5}],"isBlockCoverage":true},{"functionName":"addJobsToDependencyGraph","ranges":[{"startOffset":2730,"endOffset":3004,"count":5},{"startOffset":2791,"endOffset":2816,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":5502,"endOffset":5698,"count":2}],"isBlockCoverage":true}]},{"scriptId":"88","url":"internal/modules/esm/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28247,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":1873,"endOffset":2225,"count":3},{"startOffset":1982,"endOffset":2190,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":2336,"endOffset":2441,"count":13},{"startOffset":2404,"endOffset":2439,"count":6}],"isBlockCoverage":true},{"functionName":"getPackageConfig","ranges":[{"startOffset":2443,"endOffset":3781,"count":17},{"startOffset":2571,"endOffset":2597,"count":10},{"startOffset":2597,"endOffset":2680,"count":7},{"startOffset":2680,"endOffset":2955,"count":4},{"startOffset":2955,"endOffset":3025,"count":3},{"startOffset":3025,"endOffset":3204,"count":0},{"startOffset":3204,"endOffset":3326,"count":3},{"startOffset":3326,"endOffset":3345,"count":0},{"startOffset":3347,"endOffset":3400,"count":3},{"startOffset":3400,"endOffset":3417,"count":1},{"startOffset":3417,"endOffset":3450,"count":3},{"startOffset":3450,"endOffset":3467,"count":0},{"startOffset":3467,"endOffset":3545,"count":3},{"startOffset":3545,"endOffset":3567,"count":2},{"startOffset":3569,"endOffset":3583,"count":2},{"startOffset":3583,"endOffset":3780,"count":3}],"isBlockCoverage":true},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":3783,"endOffset":4883,"count":5},{"startOffset":3901,"endOffset":4554,"count":15},{"startOffset":4041,"endOffset":4047,"count":0},{"startOffset":4206,"endOffset":4227,"count":5},{"startOffset":4227,"endOffset":4544,"count":10},{"startOffset":4544,"endOffset":4550,"count":0},{"startOffset":4554,"endOffset":4882,"count":0}],"isBlockCoverage":true},{"functionName":"fileExists","ranges":[{"startOffset":5139,"endOffset":5218,"count":2}],"isBlockCoverage":true},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5220,"endOffset":6891,"count":2},{"startOffset":5339,"endOffset":6485,"count":1},{"startOffset":5559,"endOffset":6461,"count":0},{"startOffset":6485,"endOffset":6574,"count":1},{"startOffset":6574,"endOffset":6890,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":6893,"endOffset":7024,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":7080,"endOffset":7337,"count":0}],"isBlockCoverage":false},{"functionName":"resolveIndex","ranges":[{"startOffset":7339,"endOffset":7426,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":7464,"endOffset":8671,"count":3},{"startOffset":7577,"endOffset":7720,"count":0},{"startOffset":7834,"endOffset":8243,"count":0},{"startOffset":8308,"endOffset":8344,"count":0},{"startOffset":8381,"endOffset":8508,"count":0},{"startOffset":8535,"endOffset":8649,"count":0}],"isBlockCoverage":true},{"functionName":"throwImportNotDefined","ranges":[{"startOffset":8673,"endOffset":8888,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":8890,"endOffset":9089,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":9091,"endOffset":9441,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidPackageTarget","ranges":[{"startOffset":9443,"endOffset":9825,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":9926,"endOffset":11589,"count":22},{"startOffset":10065,"endOffset":10076,"count":0},{"startOffset":10077,"endOffset":10113,"count":0},{"startOffset":10119,"endOffset":10192,"count":0},{"startOffset":10242,"endOffset":10782,"count":0},{"startOffset":10869,"endOffset":10942,"count":0},{"startOffset":11165,"endOffset":11238,"count":0},{"startOffset":11278,"endOffset":11588,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":11644,"endOffset":11784,"count":36},{"startOffset":11736,"endOffset":11781,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":11786,"endOffset":13918,"count":35},{"startOffset":11968,"endOffset":12111,"count":22},{"startOffset":12111,"endOffset":13803,"count":13},{"startOffset":12143,"endOffset":12915,"count":1},{"startOffset":12180,"endOffset":12192,"count":0},{"startOffset":12491,"endOffset":12627,"count":0},{"startOffset":12670,"endOffset":12679,"count":0},{"startOffset":12709,"endOffset":12766,"count":0},{"startOffset":12795,"endOffset":12857,"count":0},{"startOffset":12865,"endOffset":12915,"count":0},{"startOffset":12915,"endOffset":13803,"count":12},{"startOffset":13068,"endOffset":13296,"count":36},{"startOffset":13126,"endOffset":13290,"count":0},{"startOffset":13339,"endOffset":13728,"count":35},{"startOffset":13396,"endOffset":13418,"count":24},{"startOffset":13420,"endOffset":13722,"count":12},{"startOffset":13680,"endOffset":13689,"count":0},{"startOffset":13728,"endOffset":13803,"count":0},{"startOffset":13803,"endOffset":13917,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":13920,"endOffset":14855,"count":22},{"startOffset":14026,"endOffset":14050,"count":17},{"startOffset":14052,"endOffset":14064,"count":5},{"startOffset":14064,"endOffset":14118,"count":17},{"startOffset":14120,"endOffset":14133,"count":0},{"startOffset":14133,"endOffset":14273,"count":17},{"startOffset":14273,"endOffset":14824,"count":44},{"startOffset":14383,"endOffset":14440,"count":17},{"startOffset":14440,"endOffset":14820,"count":27},{"startOffset":14496,"endOffset":14820,"count":0},{"startOffset":14824,"endOffset":14854,"count":17}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":15040,"endOffset":16923,"count":22},{"startOffset":15252,"endOffset":15279,"count":5},{"startOffset":15579,"endOffset":15638,"count":0},{"startOffset":15680,"endOffset":16922,"count":0}],"isBlockCoverage":true},{"functionName":"packageImportsResolve","ranges":[{"startOffset":16925,"endOffset":18921,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":18923,"endOffset":19036,"count":3}],"isBlockCoverage":true},{"functionName":"packageResolve","ranges":[{"startOffset":19149,"endOffset":21981,"count":2},{"startOffset":19350,"endOffset":19578,"count":1},{"startOffset":19430,"endOffset":19469,"count":0},{"startOffset":19640,"endOffset":19692,"count":0},{"startOffset":19835,"endOffset":19952,"count":14},{"startOffset":19896,"endOffset":19948,"count":0},{"startOffset":19979,"endOffset":20098,"count":0},{"startOffset":20159,"endOffset":20212,"count":0},{"startOffset":20426,"endOffset":20472,"count":0},{"startOffset":20473,"endOffset":20506,"count":0},{"startOffset":20508,"endOffset":20641,"count":0},{"startOffset":20816,"endOffset":21772,"count":8},{"startOffset":20998,"endOffset":21275,"count":6},{"startOffset":21075,"endOffset":21112,"count":3},{"startOffset":21113,"endOffset":21139,"count":3},{"startOffset":21275,"endOffset":21421,"count":2},{"startOffset":21421,"endOffset":21454,"count":0},{"startOffset":21462,"endOffset":21581,"count":0},{"startOffset":21581,"endOffset":21682,"count":2},{"startOffset":21682,"endOffset":21772,"count":0},{"startOffset":21772,"endOffset":21980,"count":0}],"isBlockCoverage":true},{"functionName":"isBareSpecifier","ranges":[{"startOffset":21983,"endOffset":22093,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":22095,"endOffset":22366,"count":3},{"startOffset":22165,"endOffset":22348,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":22368,"endOffset":22551,"count":3},{"startOffset":22454,"endOffset":22467,"count":0},{"startOffset":22496,"endOffset":22508,"count":0}],"isBlockCoverage":true},{"functionName":"moduleResolve","ranges":[{"startOffset":22664,"endOffset":23235,"count":3},{"startOffset":22892,"endOffset":22938,"count":0},{"startOffset":22970,"endOffset":23048,"count":0},{"startOffset":23109,"endOffset":23184,"count":2}],"isBlockCoverage":true},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":23381,"endOffset":24789,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":24791,"endOffset":28097,"count":5},{"startOffset":24944,"endOffset":25547,"count":0},{"startOffset":25640,"endOffset":25694,"count":1},{"startOffset":25699,"endOffset":25707,"count":3},{"startOffset":25707,"endOffset":25721,"count":4},{"startOffset":25721,"endOffset":25751,"count":1},{"startOffset":25757,"endOffset":25783,"count":0},{"startOffset":25783,"endOffset":25797,"count":4},{"startOffset":25797,"endOffset":25827,"count":1},{"startOffset":25828,"endOffset":25858,"count":0},{"startOffset":25864,"endOffset":25913,"count":0},{"startOffset":25913,"endOffset":25966,"count":4},{"startOffset":25966,"endOffset":26022,"count":1},{"startOffset":26022,"endOffset":26087,"count":3},{"startOffset":26089,"endOffset":26177,"count":0},{"startOffset":26177,"endOffset":26235,"count":3},{"startOffset":26235,"endOffset":26762,"count":0},{"startOffset":26762,"endOffset":26891,"count":3},{"startOffset":26891,"endOffset":27695,"count":0},{"startOffset":27695,"endOffset":27710,"count":3},{"startOffset":27710,"endOffset":27733,"count":0},{"startOffset":27734,"endOffset":27753,"count":3},{"startOffset":27755,"endOffset":28066,"count":3},{"startOffset":27995,"endOffset":28000,"count":0},{"startOffset":28066,"endOffset":28096,"count":3}],"isBlockCoverage":true}]},{"scriptId":"89","url":"internal/modules/esm/get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2496,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":1131,"endOffset":2450,"count":5},{"startOffset":1244,"endOffset":1283,"count":1},{"startOffset":1283,"endOffset":1350,"count":4},{"startOffset":1350,"endOffset":1760,"count":1},{"startOffset":1472,"endOffset":1495,"count":0},{"startOffset":1629,"endOffset":1637,"count":0},{"startOffset":1696,"endOffset":1704,"count":0},{"startOffset":1725,"endOffset":1732,"count":0},{"startOffset":1760,"endOffset":2421,"count":3},{"startOffset":1940,"endOffset":1950,"count":1},{"startOffset":1951,"endOffset":1963,"count":2},{"startOffset":1970,"endOffset":2023,"count":0},{"startOffset":2041,"endOffset":2378,"count":0},{"startOffset":2407,"endOffset":2414,"count":0},{"startOffset":2421,"endOffset":2449,"count":0}],"isBlockCoverage":true}]},{"scriptId":"90","url":"internal/modules/esm/get_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1307,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetSource","ranges":[{"startOffset":609,"endOffset":1261,"count":2},{"startOffset":763,"endOffset":1155,"count":1},{"startOffset":941,"endOffset":986,"count":0},{"startOffset":1063,"endOffset":1073,"count":0},{"startOffset":1088,"endOffset":1155,"count":0},{"startOffset":1180,"endOffset":1238,"count":0}],"isBlockCoverage":true}]},{"scriptId":"91","url":"internal/fs/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18758,"count":1}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":2166,"endOffset":2343,"count":1},{"startOffset":2280,"endOffset":2284,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":2347,"endOffset":2404,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":2408,"endOffset":2444,"count":3}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":2448,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":2534,"endOffset":2590,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":2594,"endOffset":2658,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":2662,"endOffset":2714,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":2718,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2766,"endOffset":2875,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":2879,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2964,"endOffset":3031,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":3035,"endOffset":3095,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":3099,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":3167,"endOffset":3241,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":3245,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":3360,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":3447,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3532,"endOffset":4224,"count":1}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3540,"endOffset":4224,"count":1},{"startOffset":3574,"endOffset":3612,"count":0},{"startOffset":3643,"endOffset":3684,"count":0},{"startOffset":3878,"endOffset":4187,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3814,"endOffset":3870,"count":1}],"isBlockCoverage":true},{"functionName":"<computed>.Promise.finally.<computed>","ranges":[{"startOffset":3926,"endOffset":4032,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4042,"endOffset":4179,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4228,"endOffset":4697,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4701,"endOffset":4754,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4758,"endOffset":4845,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":4849,"endOffset":5467,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":5469,"endOffset":6027,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":6029,"endOffset":6892,"count":1},{"startOffset":6268,"endOffset":6293,"count":0},{"startOffset":6326,"endOffset":6364,"count":0},{"startOffset":6418,"endOffset":6445,"count":0},{"startOffset":6520,"endOffset":6756,"count":2},{"startOffset":6712,"endOffset":6752,"count":1},{"startOffset":6845,"endOffset":6880,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":7045,"endOffset":7266,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":7268,"endOffset":7626,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":7746,"endOffset":8071,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":8073,"endOffset":9127,"count":2},{"startOffset":8212,"endOffset":8494,"count":0},{"startOffset":8518,"endOffset":8539,"count":0},{"startOffset":8631,"endOffset":8668,"count":0},{"startOffset":8697,"endOffset":8827,"count":0},{"startOffset":8931,"endOffset":8945,"count":0},{"startOffset":9087,"endOffset":9091,"count":1}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":9129,"endOffset":9449,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":9451,"endOffset":10372,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":10374,"endOffset":10706,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":10708,"endOffset":11014,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":11016,"endOffset":11159,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":11161,"endOffset":11320,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":11322,"endOffset":11519,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":11521,"endOffset":11784,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":11786,"endOffset":11875,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":11877,"endOffset":11958,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":11960,"endOffset":12492,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":12494,"endOffset":12946,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":12948,"endOffset":13191,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":13193,"endOffset":13606,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":13608,"endOffset":13786,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":13788,"endOffset":14058,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":14060,"endOffset":14327,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":14329,"endOffset":14652,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":14654,"endOffset":14792,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":14794,"endOffset":14927,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":14929,"endOffset":15115,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":15117,"endOffset":15355,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":15357,"endOffset":15599,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":15601,"endOffset":15764,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":15766,"endOffset":16005,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":16007,"endOffset":16279,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":16281,"endOffset":16480,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":16482,"endOffset":16759,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":16761,"endOffset":16938,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":16940,"endOffset":17270,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":17272,"endOffset":17785,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":17787,"endOffset":18028,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":18030,"endOffset":18351,"count":1},{"startOffset":18147,"endOffset":18153,"count":0},{"startOffset":18194,"endOffset":18231,"count":0}],"isBlockCoverage":true}]},{"scriptId":"92","url":"internal/fs/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7039,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1137,"endOffset":1597,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1600,"endOffset":2458,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2461,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2899,"endOffset":3197,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3200,"endOffset":3872,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3875,"endOffset":4073,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4076,"endOffset":4781,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4784,"endOffset":5267,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5270,"endOffset":6540,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6543,"endOffset":6979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"internal/modules/esm/transform_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":false},{"functionName":"defaultTransformSource","ranges":[{"startOffset":15,"endOffset":157,"count":2}],"isBlockCoverage":true}]},{"scriptId":"94","url":"internal/modules/esm/translators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12048,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":416,"endOffset":528,"count":4},{"startOffset":462,"endOffset":476,"count":3},{"startOffset":476,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1202,"endOffset":1227,"count":1}],"isBlockCoverage":true},{"functionName":"initCJSParse","ranges":[{"startOffset":1860,"endOffset":2152,"count":2},{"startOffset":1934,"endOffset":2009,"count":0}],"isBlockCoverage":true},{"functionName":"assertBufferSource","ranges":[{"startOffset":2286,"endOffset":2706,"count":4},{"startOffset":2363,"endOffset":2390,"count":2},{"startOffset":2392,"endOffset":2409,"count":0},{"startOffset":2503,"endOffset":2528,"count":0},{"startOffset":2547,"endOffset":2626,"count":0},{"startOffset":2627,"endOffset":2631,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":2708,"endOffset":2926,"count":2},{"startOffset":2767,"endOffset":2779,"count":0},{"startOffset":2863,"endOffset":2882,"count":1},{"startOffset":2883,"endOffset":2892,"count":1}],"isBlockCoverage":true},{"functionName":"errPath","ranges":[{"startOffset":2928,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":3075,"endOffset":3189,"count":0}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":3191,"endOffset":3539,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":3541,"endOffset":3711,"count":1},{"startOffset":3647,"endOffset":3691,"count":0}],"isBlockCoverage":true},{"functionName":"moduleStrategy","ranges":[{"startOffset":3793,"endOffset":4374,"count":2}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":4378,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":5435,"endOffset":6741,"count":2},{"startOffset":5609,"endOffset":5672,"count":0},{"startOffset":5837,"endOffset":5859,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5950,"endOffset":6737,"count":2},{"startOffset":6069,"endOffset":6183,"count":0},{"startOffset":6275,"endOffset":6344,"count":0},{"startOffset":6394,"endOffset":6693,"count":31},{"startOffset":6505,"endOffset":6514,"count":0},{"startOffset":6638,"endOffset":6646,"count":0}],"isBlockCoverage":true},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":6745,"endOffset":8189,"count":3},{"startOffset":6848,"endOffset":6973,"count":0},{"startOffset":7272,"endOffset":7280,"count":0},{"startOffset":7362,"endOffset":7367,"count":0},{"startOffset":7375,"endOffset":7424,"count":0},{"startOffset":7585,"endOffset":7682,"count":1},{"startOffset":7719,"endOffset":8152,"count":1},{"startOffset":7818,"endOffset":7847,"count":0},{"startOffset":7906,"endOffset":7923,"count":0},{"startOffset":7924,"endOffset":7954,"count":0},{"startOffset":8120,"endOffset":8142,"count":0}],"isBlockCoverage":true},{"functionName":"builtinStrategy","ranges":[{"startOffset":8313,"endOffset":8701,"count":1},{"startOffset":8574,"endOffset":8626,"count":0}],"isBlockCoverage":true},{"functionName":"jsonStrategy","ranges":[{"startOffset":8765,"endOffset":10884,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10950,"endOffset":12045,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"internal/modules/esm/create_dynamic_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":190,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":219,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":411,"endOffset":612,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":642,"endOffset":1715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"96","url":"internal/vm/module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12770,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1618,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3808,"endOffset":3945,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3949,"endOffset":4082,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":4086,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4367,"endOffset":4520,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4524,"endOffset":4774,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4778,"endOffset":5257,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5261,"endOffset":6213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6217,"endOffset":6945,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":7092,"endOffset":7128,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":7133,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9456,"endOffset":9755,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9759,"endOffset":10028,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":10032,"endOffset":10228,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":10232,"endOffset":10494,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10539,"endOffset":11836,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11840,"endOffset":12142,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":12146,"endOffset":12608,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12730,"endOffset":12765,"count":3}],"isBlockCoverage":true}]},{"scriptId":"97","url":"internal/modules/run_main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2582,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":220,"endOffset":658,"count":1},{"startOffset":487,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":660,"endOffset":1215,"count":1},{"startOffset":784,"endOffset":796,"count":0},{"startOffset":944,"endOffset":956,"count":0},{"startOffset":1051,"endOffset":1063,"count":0},{"startOffset":1114,"endOffset":1127,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1217,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"handleMainPromise","ranges":[{"startOffset":1554,"endOffset":1991,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2177,"endOffset":2512,"count":1},{"startOffset":2357,"endOffset":2400,"count":0}],"isBlockCoverage":true}]},{"scriptId":"98","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/subprocess.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8134,"count":1}],"isBlockCoverage":true},{"functionName":"supportsESM","ranges":[{"startOffset":247,"endOffset":415,"count":1},{"startOffset":389,"endOffset":414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":474,"endOffset":7905,"count":1},{"startOffset":1609,"endOffset":1802,"count":0},{"startOffset":6499,"endOffset":6504,"count":0},{"startOffset":6604,"endOffset":6641,"count":0},{"startOffset":6647,"endOffset":6655,"count":0},{"startOffset":6876,"endOffset":6911,"count":0},{"startOffset":6912,"endOffset":6947,"count":0},{"startOffset":6949,"endOffset":7423,"count":0},{"startOffset":7693,"endOffset":7759,"count":0},{"startOffset":7763,"endOffset":7903,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":1120,"endOffset":1326,"count":1}],"isBlockCoverage":true},{"functionName":"checkSelectedByLineNumbers","ranges":[{"startOffset":1787,"endOffset":1798,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2293,"endOffset":2377,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2456,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2650,"endOffset":2674,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2698,"endOffset":2833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2858,"endOffset":3817,"count":1},{"startOffset":2965,"endOffset":3011,"count":0},{"startOffset":3035,"endOffset":3101,"count":0},{"startOffset":3106,"endOffset":3260,"count":0},{"startOffset":3335,"endOffset":3500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3317,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3530,"endOffset":3812,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3574,"endOffset":3631,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3646,"endOffset":3793,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3854,"endOffset":4049,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getRunner","ranges":[{"startOffset":4103,"endOffset":4155,"count":1}],"isBlockCoverage":true},{"functionName":"exports.registerSharedWorker","ranges":[{"startOffset":4190,"endOffset":4490,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4856,"endOffset":4887,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4896,"endOffset":4922,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5158,"endOffset":5520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5529,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5623,"endOffset":6446,"count":2},{"startOffset":5691,"endOffset":6293,"count":4},{"startOffset":5731,"endOffset":6289,"count":1},{"startOffset":6089,"endOffset":6289,"count":0},{"startOffset":6293,"endOffset":6331,"count":1},{"startOffset":6331,"endOffset":6417,"count":0},{"startOffset":6417,"endOffset":6445,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7913,"endOffset":8131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"99","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/currently-unhandled/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":62,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"100","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/currently-unhandled/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":82,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"onUnhandledRejection","ranges":[{"startOffset":129,"endOffset":244,"count":0}],"isBlockCoverage":false},{"functionName":"onRejectionHandled","ranges":[{"startOffset":247,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"currentlyUnhandled","ranges":[{"startOffset":436,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":501,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/array-find-index/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/ensure-forked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":596,"count":1},{"startOffset":226,"endOffset":595,"count":0}],"isBlockCoverage":true}]},{"scriptId":"103","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5948,"endOffset":5967,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":4},{"startOffset":477,"endOffset":558,"count":2},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":709,"endOffset":728,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":3}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":2}],"isBlockCoverage":true},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":4}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":33}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":33},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":33},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/chalk/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":30}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":5},{"startOffset":2869,"endOffset":3201,"count":15},{"startOffset":2929,"endOffset":3108,"count":220}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":719,"endOffset":805,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1125,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"106","url":"os.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7520,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":1911,"endOffset":2152,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":1970,"endOffset":2148,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2430,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2463,"endOffset":2473,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2496,"endOffset":2509,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2544,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":2597,"endOffset":2616,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":2652,"endOffset":2672,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":2705,"endOffset":2722,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":2758,"endOffset":2778,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":2818,"endOffset":2842,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":2877,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":2929,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3037,"endOffset":3137,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3139,"endOffset":3551,"count":1},{"startOffset":3241,"endOffset":3246,"count":0},{"startOffset":3308,"endOffset":3532,"count":8}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":3553,"endOffset":3595,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":3622,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":3643,"endOffset":3693,"count":1}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":3724,"endOffset":3746,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":3749,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":4295,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":4312,"endOffset":4359,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":4392,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":4497,"endOffset":4750,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":4752,"endOffset":5472,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":5474,"endOffset":6151,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":6153,"endOffset":6442,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":6444,"endOffset":6699,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":6701,"endOffset":6927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5028,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1611,"count":7}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1613,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2246,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2465,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3722,"endOffset":4150,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4206,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4383,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4565,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4746,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4921,"endOffset":4971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"108","url":"internal/tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6292,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2451,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3061,"endOffset":5813,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":5815,"endOffset":6239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"109","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"110","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"111","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/ipc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4440,"count":1}],"isBlockCoverage":true},{"functionName":"selectAvaMessage","ranges":[{"startOffset":211,"endOffset":270,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":219,"endOffset":270,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":352,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":511,"endOffset":560,"count":32}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":598,"endOffset":665,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":667,"endOffset":750,"count":2}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":814,"endOffset":1131,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":882,"endOffset":1086,"count":1}],"isBlockCoverage":true},{"functionName":"createChannelEmitter","ranges":[{"startOffset":1241,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"registerSharedWorker","ranges":[{"startOffset":1868,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"112","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-event/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6049,"count":1},{"startOffset":103,"endOffset":123,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEmitter","ranges":[{"startOffset":151,"endOffset":543,"count":3},{"startOffset":196,"endOffset":218,"count":0},{"startOffset":219,"endOffset":246,"count":0},{"startOffset":284,"endOffset":309,"count":0},{"startOffset":310,"endOffset":340,"count":0},{"startOffset":381,"endOffset":437,"count":0}],"isBlockCoverage":true},{"functionName":"toArray","ranges":[{"startOffset":562,"endOffset":609,"count":3},{"startOffset":592,"endOffset":599,"count":0}],"isBlockCoverage":true},{"functionName":"multiple","ranges":[{"startOffset":629,"endOffset":2137,"count":3},{"startOffset":2022,"endOffset":2121,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":698,"endOffset":1953,"count":3},{"startOffset":933,"endOffset":1013,"count":0},{"startOffset":1926,"endOffset":1950,"count":0}],"isBlockCoverage":true},{"functionName":"onItem","ranges":[{"startOffset":1181,"endOffset":1425,"count":4},{"startOffset":1231,"endOffset":1237,"count":0},{"startOffset":1299,"endOffset":1421,"count":2}],"isBlockCoverage":true},{"functionName":"rejectHandler","ranges":[{"startOffset":1452,"endOffset":1497,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":1511,"endOffset":1711,"count":2}],"isBlockCoverage":true},{"functionName":"pEvent","ranges":[{"startOffset":2155,"endOffset":2553,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2423,"endOffset":2440,"count":2}],"isBlockCoverage":true},{"functionName":"module.exports.iterator","ranges":[{"startOffset":2726,"endOffset":5993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-timeout/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1326,"count":1}],"isBlockCoverage":true},{"functionName":"TimeoutError","ranges":[{"startOffset":91,"endOffset":164,"count":0}],"isBlockCoverage":false},{"functionName":"pTimeout","ranges":[{"startOffset":185,"endOffset":1168,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-finally/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/ipc-flow-control.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":851,"count":1}],"isBlockCoverage":true},{"functionName":"controlFlow","ranges":[{"startOffset":0,"endOffset":814,"count":1}],"isBlockCoverage":true},{"functionName":"deliverNext","ranges":[{"startOffset":129,"endOffset":601,"count":32},{"startOffset":162,"endOffset":186,"count":0},{"startOffset":225,"endOffset":298,"count":0},{"startOffset":352,"endOffset":445,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":612,"endOffset":811,"count":32},{"startOffset":662,"endOffset":678,"count":0},{"startOffset":771,"endOffset":808,"count":0}],"isBlockCoverage":true}]},{"scriptId":"116","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":48,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"exports.set","ranges":[{"startOffset":164,"endOffset":276,"count":1},{"startOffset":194,"endOffset":250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"117","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/chalk.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":77,"endOffset":172,"count":1},{"startOffset":96,"endOffset":156,"count":0}],"isBlockCoverage":true},{"functionName":"exports.set","ranges":[{"startOffset":189,"endOffset":324,"count":1},{"startOffset":212,"endOffset":272,"count":0}],"isBlockCoverage":true}]},{"scriptId":"118","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/now-and-timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true}]},{"scriptId":"119","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/provider-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1237,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":235,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"exports.babel","ranges":[{"startOffset":1119,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"exports.typescript","ranges":[{"startOffset":1186,"endOffset":1235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/globs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":526,"endOffset":554,"count":8}],"isBlockCoverage":true},{"functionName":"buildExtensionPattern","ranges":[{"startOffset":956,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePattern","ranges":[{"startOffset":1042,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePatterns","ranges":[{"startOffset":1419,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeGlobs","ranges":[{"startOffset":1569,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":3442,"endOffset":3512,"count":0}],"isBlockCoverage":false},{"functionName":"globFiles","ranges":[{"startOffset":3571,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"findFiles","ranges":[{"startOffset":4221,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"findTests","ranges":[{"startOffset":4409,"endOffset":4583,"count":0}],"isBlockCoverage":false},{"functionName":"getChokidarIgnorePatterns","ranges":[{"startOffset":4617,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"processMatchingPatterns","ranges":[{"startOffset":4968,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":5521,"endOffset":5630,"count":0}],"isBlockCoverage":false},{"functionName":"matchesIgnorePatterns","ranges":[{"startOffset":5690,"endOffset":5832,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFileForMatching","ranges":[{"startOffset":5835,"endOffset":6350,"count":0}],"isBlockCoverage":false},{"functionName":"isHelperish","ranges":[{"startOffset":6414,"endOffset":7035,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":7073,"endOffset":7416,"count":0}],"isBlockCoverage":false},{"functionName":"applyTestFileFilter","ranges":[{"startOffset":7448,"endOffset":7594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4473,"count":1}],"isBlockCoverage":true},{"functionName":"DEFAULT_FILTER","ranges":[{"startOffset":323,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":356,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":416,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"checkCwdOption","ranges":[{"startOffset":599,"endOffset":833,"count":0}],"isBlockCoverage":false},{"functionName":"getPathString","ranges":[{"startOffset":858,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"generateGlobTasks","ranges":[{"startOffset":932,"endOffset":1551,"count":0}],"isBlockCoverage":false},{"functionName":"globDirs","ranges":[{"startOffset":1571,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"getPattern","ranges":[{"startOffset":1997,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterSync","ranges":[{"startOffset":2104,"endOffset":2238,"count":0}],"isBlockCoverage":false},{"functionName":"globToTask","ranges":[{"startOffset":2260,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2503,"endOffset":3231,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":3256,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.stream","ranges":[{"startOffset":3739,"endOffset":4241,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.hasMagic","ranges":[{"startOffset":4325,"endOffset":4432,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"internal/fs/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12971,"count":1}],"isBlockCoverage":false},{"functionName":"allocNewPool","ranges":[{"startOffset":1090,"endOffset":1254,"count":0}],"isBlockCoverage":false},{"functionName":"roundUpToMultipleOf8","ranges":[{"startOffset":1256,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1347,"endOffset":3434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3573,"endOffset":3608,"count":0}],"isBlockCoverage":false},{"functionName":"_openReadFs","ranges":[{"startOffset":3708,"endOffset":4189,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":4220,"endOffset":6712,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":6747,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"closeFsStream","ranges":[{"startOffset":7037,"endOffset":7193,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":7224,"endOffset":7310,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7371,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":7433,"endOffset":9683,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._final","ranges":[{"startOffset":9826,"endOffset":9983,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10016,"endOffset":10052,"count":0}],"isBlockCoverage":false},{"functionName":"_openWriteFs","ranges":[{"startOffset":10155,"endOffset":10588,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":10622,"endOffset":11290,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11326,"endOffset":12216,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12314,"endOffset":12696,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12859,"endOffset":12893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"123","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/array-union/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/merge2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3241,"count":1}],"isBlockCoverage":true},{"functionName":"merge2","ranges":[{"startOffset":280,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":2702,"endOffset":3240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2824,"count":1},{"startOffset":2151,"endOffset":2169,"count":0}],"isBlockCoverage":true},{"functionName":"FastGlob","ranges":[{"startOffset":284,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":627,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":654,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":874,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":1411,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1710,"endOffset":1924,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":1981,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":2173,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":2477,"endOffset":2794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/managers/tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3216,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":359,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":1071,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":1668,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":1822,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":2137,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":2607,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":2890,"endOffset":3150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1}],"isBlockCoverage":true}]},{"scriptId":"128","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":630,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":126,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"splitWhen","ranges":[{"startOffset":265,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/errno.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":241,"count":1}],"isBlockCoverage":true},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":116,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"130","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":149,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":623,"endOffset":717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"131","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1321,"count":1}],"isBlockCoverage":true},{"functionName":"unixify","ranges":[{"startOffset":415,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":518,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":640,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":761,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5511,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":1089,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1236,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":2383,"endOffset":2499,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":2563,"endOffset":2637,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":2701,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"isPositivePattern","ranges":[{"startOffset":2850,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatterns","ranges":[{"startOffset":2981,"endOffset":3072,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":3126,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectory","ranges":[{"startOffset":3271,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobStar","ranges":[{"startOffset":3419,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":3531,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":3679,"endOffset":3850,"count":0}],"isBlockCoverage":false},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":3924,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":4194,"endOffset":4333,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternParts","ranges":[{"startOffset":4389,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":5085,"endOffset":5172,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":5200,"endOffset":5317,"count":0}],"isBlockCoverage":false},{"functionName":"matchAny","ranges":[{"startOffset":5371,"endOffset":5479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1120,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":461,"endOffset":1118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1153,"count":1}],"isBlockCoverage":true},{"functionName":"isGlob","ranges":[{"startOffset":405,"endOffset":1151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13731,"count":1}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":187,"endOffset":220,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":784,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":2781,"endOffset":2830,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":3440,"endOffset":3501,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":4203,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":5363,"endOffset":5924,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":6702,"endOffset":6976,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":7761,"endOffset":8015,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":8886,"endOffset":9142,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":9943,"endOffset":10151,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":10865,"endOffset":11161,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":11613,"endOffset":11651,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.scan","ranges":[{"startOffset":12000,"endOffset":12036,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.parse","ranges":[{"startOffset":12422,"endOffset":12642,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":13209,"endOffset":13446,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":13500,"endOffset":13669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8104,"count":1}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":2076,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":2140,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2189,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":2270,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2332,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2394,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":2456,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2515,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":2593,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":2698,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":2764,"endOffset":2883,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":2885,"endOffset":2944,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":3083,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3399,"endOffset":3552,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":4288,"endOffset":4904,"count":0}],"isBlockCoverage":false},{"functionName":"_extend","ranges":[{"startOffset":4906,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5242,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":5671,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7054,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":7650,"endOffset":7855,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"143","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"144","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"145","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"147","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9377,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":16},{"startOffset":242,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":17},{"startOffset":1087,"endOffset":1365,"count":1},{"startOffset":1365,"endOffset":1400,"count":16},{"startOffset":1400,"endOffset":1414,"count":0},{"startOffset":1415,"endOffset":1428,"count":0},{"startOffset":1449,"endOffset":1490,"count":16},{"startOffset":1478,"endOffset":1489,"count":0},{"startOffset":1492,"endOffset":1567,"count":0},{"startOffset":1567,"endOffset":1597,"count":16},{"startOffset":1669,"endOffset":1705,"count":0},{"startOffset":1710,"endOffset":1756,"count":16},{"startOffset":1861,"endOffset":2015,"count":0},{"startOffset":2015,"endOffset":2783,"count":16},{"startOffset":2783,"endOffset":2815,"count":0},{"startOffset":2815,"endOffset":2835,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1114,"endOffset":1161,"count":16}],"isBlockCoverage":true},{"functionName":"arrayMatcher","ranges":[{"startOffset":1189,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":1829,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":2035,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7249,"endOffset":7765,"count":16},{"startOffset":7344,"endOffset":7375,"count":0},{"startOffset":7439,"endOffset":7443,"count":0},{"startOffset":7482,"endOffset":7486,"count":0},{"startOffset":7594,"endOffset":7633,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":7787,"endOffset":8538,"count":16},{"startOffset":7895,"endOffset":7956,"count":0},{"startOffset":8104,"endOffset":8172,"count":0},{"startOffset":8226,"endOffset":8245,"count":8},{"startOffset":8248,"endOffset":8299,"count":10},{"startOffset":8422,"endOffset":8461,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9000,"endOffset":9228,"count":16},{"startOffset":9120,"endOffset":9125,"count":0},{"startOffset":9138,"endOffset":9226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"150","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8957,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1438,"endOffset":8931,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":42},{"startOffset":1010,"endOffset":1049,"count":0},{"startOffset":1051,"endOffset":1084,"count":0}],"isBlockCoverage":true},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":26},{"startOffset":1505,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":7},{"startOffset":1682,"endOffset":1686,"count":0},{"startOffset":1728,"endOffset":1732,"count":0},{"startOffset":1821,"endOffset":1864,"count":0}],"isBlockCoverage":true}]},{"scriptId":"152","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":16}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":26},{"startOffset":4410,"endOffset":4425,"count":0}],"isBlockCoverage":true}]},{"scriptId":"153","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27089,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":24540,"count":16},{"startOffset":1005,"endOffset":1056,"count":0},{"startOffset":1179,"endOffset":1217,"count":0},{"startOffset":1276,"endOffset":1372,"count":0},{"startOffset":1500,"endOffset":1504,"count":0},{"startOffset":2111,"endOffset":2115,"count":0},{"startOffset":2156,"endOffset":2163,"count":0},{"startOffset":2212,"endOffset":2228,"count":0},{"startOffset":2258,"endOffset":2287,"count":0},{"startOffset":2359,"endOffset":2397,"count":0},{"startOffset":6219,"endOffset":7442,"count":7},{"startOffset":7016,"endOffset":7249,"count":0},{"startOffset":7276,"endOffset":7301,"count":3},{"startOffset":7303,"endOffset":7358,"count":0},{"startOffset":7442,"endOffset":7523,"count":9},{"startOffset":7523,"endOffset":23417,"count":49},{"startOffset":7577,"endOffset":7600,"count":0},{"startOffset":7669,"endOffset":8497,"count":0},{"startOffset":8643,"endOffset":8706,"count":0},{"startOffset":8708,"endOffset":9840,"count":0},{"startOffset":9983,"endOffset":9999,"count":0},{"startOffset":10001,"endOffset":10116,"count":0},{"startOffset":10179,"endOffset":10336,"count":0},{"startOffset":10397,"endOffset":10485,"count":0},{"startOffset":10510,"endOffset":10945,"count":0},{"startOffset":11010,"endOffset":11369,"count":0},{"startOffset":11394,"endOffset":12849,"count":0},{"startOffset":12904,"endOffset":12928,"count":0},{"startOffset":12930,"endOffset":13197,"count":0},{"startOffset":13222,"endOffset":14352,"count":0},{"startOffset":14407,"endOffset":14560,"count":0},{"startOffset":14616,"endOffset":14877,"count":0},{"startOffset":14934,"endOffset":15544,"count":8},{"startOffset":15225,"endOffset":15259,"count":0},{"startOffset":15261,"endOffset":15460,"count":0},{"startOffset":15544,"endOffset":15598,"count":41},{"startOffset":15598,"endOffset":16164,"count":4},{"startOffset":15627,"endOffset":15649,"count":0},{"startOffset":15651,"endOffset":15900,"count":0},{"startOffset":15971,"endOffset":15995,"count":0},{"startOffset":15997,"endOffset":16084,"count":0},{"startOffset":16164,"endOffset":16228,"count":37},{"startOffset":16228,"endOffset":17165,"count":0},{"startOffset":17165,"endOffset":17226,"count":37},{"startOffset":17226,"endOffset":17526,"count":0},{"startOffset":17526,"endOffset":17580,"count":37},{"startOffset":17580,"endOffset":18130,"count":0},{"startOffset":18130,"endOffset":18190,"count":37},{"startOffset":18190,"endOffset":18415,"count":0},{"startOffset":18415,"endOffset":18475,"count":37},{"startOffset":18475,"endOffset":18776,"count":9},{"startOffset":18519,"endOffset":18558,"count":0},{"startOffset":18776,"endOffset":18872,"count":28},{"startOffset":18874,"endOffset":19081,"count":0},{"startOffset":19081,"endOffset":19166,"count":28},{"startOffset":19168,"endOffset":19225,"count":0},{"startOffset":19225,"endOffset":19257,"count":28},{"startOffset":19257,"endOffset":22456,"count":10},{"startOffset":19295,"endOffset":19346,"count":0},{"startOffset":19457,"endOffset":19480,"count":2},{"startOffset":19513,"endOffset":19570,"count":8},{"startOffset":19602,"endOffset":19647,"count":0},{"startOffset":19649,"endOffset":19727,"count":0},{"startOffset":19768,"endOffset":19821,"count":0},{"startOffset":19863,"endOffset":19915,"count":0},{"startOffset":19936,"endOffset":19961,"count":0},{"startOffset":19962,"endOffset":19973,"count":0},{"startOffset":19974,"endOffset":19987,"count":0},{"startOffset":19989,"endOffset":20067,"count":0},{"startOffset":20144,"endOffset":20321,"count":0},{"startOffset":20354,"endOffset":20362,"count":2},{"startOffset":20364,"endOffset":20581,"count":0},{"startOffset":20616,"endOffset":20644,"count":8},{"startOffset":20645,"endOffset":20658,"count":8},{"startOffset":20659,"endOffset":20667,"count":8},{"startOffset":20669,"endOffset":21069,"count":0},{"startOffset":21104,"endOffset":21132,"count":8},{"startOffset":21133,"endOffset":21151,"count":8},{"startOffset":21153,"endOffset":21686,"count":8},{"startOffset":21201,"endOffset":21205,"count":0},{"startOffset":21686,"endOffset":21737,"count":2},{"startOffset":21739,"endOffset":22069,"count":2},{"startOffset":22069,"endOffset":22456,"count":0},{"startOffset":22456,"endOffset":22544,"count":18},{"startOffset":22544,"endOffset":22725,"count":0},{"startOffset":22725,"endOffset":22793,"count":18},{"startOffset":22794,"endOffset":22816,"count":0},{"startOffset":22818,"endOffset":22888,"count":0},{"startOffset":22888,"endOffset":22926,"count":18},{"startOffset":22926,"endOffset":22950,"count":16},{"startOffset":22951,"endOffset":22973,"count":0},{"startOffset":22975,"endOffset":23395,"count":18},{"startOffset":23008,"endOffset":23093,"count":0},{"startOffset":23122,"endOffset":23209,"count":0},{"startOffset":23313,"endOffset":23389,"count":8},{"startOffset":23395,"endOffset":23417,"count":18},{"startOffset":23417,"endOffset":23448,"count":9},{"startOffset":23448,"endOffset":23626,"count":0},{"startOffset":23626,"endOffset":23655,"count":9},{"startOffset":23655,"endOffset":23831,"count":0},{"startOffset":23831,"endOffset":23860,"count":9},{"startOffset":23860,"endOffset":24036,"count":0},{"startOffset":24036,"endOffset":24124,"count":9},{"startOffset":24097,"endOffset":24123,"count":1},{"startOffset":24126,"endOffset":24206,"count":8},{"startOffset":24206,"endOffset":24300,"count":9},{"startOffset":24300,"endOffset":24521,"count":0},{"startOffset":24521,"endOffset":24539,"count":9}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":1977,"endOffset":2083,"count":10},{"startOffset":2044,"endOffset":2056,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":2891,"endOffset":2920,"count":68}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":2950,"endOffset":2983,"count":18}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":3019,"endOffset":3045,"count":59}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":3067,"endOffset":3101,"count":37}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":3121,"endOffset":3204,"count":67}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":3223,"endOffset":3334,"count":57},{"startOffset":3275,"endOffset":3289,"count":48},{"startOffset":3290,"endOffset":3303,"count":9}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":3354,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":3653,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":3730,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":4104,"endOffset":5060,"count":57},{"startOffset":4147,"endOffset":4639,"count":10},{"startOffset":4188,"endOffset":4237,"count":0},{"startOffset":4304,"endOffset":4352,"count":0},{"startOffset":4387,"endOffset":4410,"count":0},{"startOffset":4411,"endOffset":4422,"count":0},{"startOffset":4423,"endOffset":4436,"count":0},{"startOffset":4438,"endOffset":4633,"count":0},{"startOffset":4665,"endOffset":4688,"count":0},{"startOffset":4689,"endOffset":4717,"count":0},{"startOffset":4719,"endOffset":4782,"count":0},{"startOffset":4802,"endOffset":4815,"count":8},{"startOffset":4867,"endOffset":4889,"count":8},{"startOffset":4891,"endOffset":4996,"count":0}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":5085,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":5542,"endOffset":6117,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6311,"endOffset":6982,"count":5},{"startOffset":6378,"endOffset":6433,"count":0},{"startOffset":6460,"endOffset":6721,"count":0},{"startOffset":6748,"endOffset":6806,"count":4},{"startOffset":6806,"endOffset":6833,"count":1},{"startOffset":6833,"endOffset":6943,"count":0},{"startOffset":6943,"endOffset":6961,"count":1},{"startOffset":6961,"endOffset":6964,"count":0},{"startOffset":6965,"endOffset":6975,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7153,"endOffset":7233,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":24763,"endOffset":27062,"count":10},{"startOffset":24865,"endOffset":24903,"count":0},{"startOffset":24963,"endOffset":25059,"count":0},{"startOffset":25413,"endOffset":25422,"count":0},{"startOffset":25461,"endOffset":25476,"count":0},{"startOffset":25518,"endOffset":25522,"count":0},{"startOffset":25611,"endOffset":25618,"count":0},{"startOffset":25648,"endOffset":25677,"count":0},{"startOffset":26970,"endOffset":27000,"count":0},{"startOffset":27002,"endOffset":27042,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":25698,"endOffset":25851,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":25871,"endOffset":26871,"count":13},{"startOffset":25905,"endOffset":25959,"count":0},{"startOffset":25967,"endOffset":26028,"count":0},{"startOffset":26036,"endOffset":26113,"count":0},{"startOffset":26121,"endOffset":26211,"count":0},{"startOffset":26219,"endOffset":26268,"count":0},{"startOffset":26276,"endOffset":26382,"count":0},{"startOffset":26390,"endOffset":26519,"count":0},{"startOffset":26527,"endOffset":26637,"count":0},{"startOffset":26726,"endOffset":26733,"count":10},{"startOffset":26733,"endOffset":26804,"count":3},{"startOffset":26804,"endOffset":26861,"count":0}],"isBlockCoverage":true}]},{"scriptId":"154","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":139,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":537,"endOffset":644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/utils/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":309,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":125,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":225,"endOffset":279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1041,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderAsync","ranges":[{"startOffset":224,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":344,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":811,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/readers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1925,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderStream","ranges":[{"startOffset":296,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":436,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":528,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":1311,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1630,"endOffset":1887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":312,"endOffset":597,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":621,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":793,"endOffset":999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1140,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":103,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":984,"endOffset":1056,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":1058,"endOffset":1138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":103,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":139,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":574,"endOffset":678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":315,"endOffset":537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1414,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":386,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":738,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":968,"endOffset":1170,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":1206,"endOffset":1412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":152,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":371,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":778,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":852,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"165","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3203,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":326,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":843,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"get isDestroyed","ranges":[{"startOffset":1080,"endOffset":1141,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1147,"endOffset":1347,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":1353,"endOffset":1425,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1431,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":1511,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":1587,"endOffset":1829,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":1835,"endOffset":2218,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":2224,"endOffset":2481,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":2487,"endOffset":3089,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":3095,"endOffset":3166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"166","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1025,"count":1}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":318,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":636,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":817,"endOffset":1023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3617,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":354,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":633,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":1618,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":2214,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":3461,"endOffset":3533,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":3535,"endOffset":3615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/run-parallel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1034,"count":1}],"isBlockCoverage":true},{"functionName":"runParallel","ranges":[{"startOffset":167,"endOffset":1033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/queue-microtask/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":402,"count":1},{"startOffset":210,"endOffset":218,"count":0},{"startOffset":283,"endOffset":401,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":285,"endOffset":401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":764,"count":1},{"startOffset":563,"endOffset":606,"count":0},{"startOffset":729,"endOffset":761,"count":0}],"isBlockCoverage":true}]},{"scriptId":"171","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":148,"count":1}],"isBlockCoverage":true}]},{"scriptId":"172","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":149,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":623,"endOffset":717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/providers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":432,"count":1}],"isBlockCoverage":true},{"functionName":"joinPathSegments","ranges":[{"startOffset":115,"endOffset":384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2044,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":316,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":565,"endOffset":1392,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":1448,"endOffset":2014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1100,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":215,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":962,"endOffset":1066,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.scandir/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":375,"endOffset":597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fastq/queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4920,"count":1}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":48,"endOffset":3362,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3364,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":3385,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"queueAsPromised","ranges":[{"startOffset":3890,"endOffset":4850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/reusify/reusify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"reusify","ranges":[{"startOffset":14,"endOffset":427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1083,"count":1}],"isBlockCoverage":true},{"functionName":"isFatalError","ranges":[{"startOffset":202,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":398,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":534,"endOffset":649,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":719,"endOffset":1035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":369,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":136,"endOffset":337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1055,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":190,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":654,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true},{"functionName":"SyncProvider","ranges":[{"startOffset":149,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":331,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"SyncReader","ranges":[{"startOffset":255,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":431,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":583,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":674,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":829,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1175,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":1323,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":1847,"endOffset":1912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@nodelib/fs.walk/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1260,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":183,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":1122,"endOffset":1226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":211,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":537,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":639,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":946,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":true},{"functionName":"Provider","ranges":[{"startOffset":315,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"_getRootDirectory","ranges":[{"startOffset":712,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"_getReaderOptions","ranges":[{"startOffset":811,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":1593,"endOffset":2014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/filters/deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2528,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter","ranges":[{"startOffset":193,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":342,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"_getMatcher","ranges":[{"startOffset":595,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":721,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":982,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":1483,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryLevel","ranges":[{"startOffset":1802,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":2099,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":2229,"endOffset":2362,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":2368,"endOffset":2492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/matchers/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1459,"count":1}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":174,"endOffset":1419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/matchers/matcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1930,"count":1}],"isBlockCoverage":true},{"functionName":"Matcher","ranges":[{"startOffset":139,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_fillStorage","ranges":[{"startOffset":395,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"_getPatternSegments","ranges":[{"startOffset":1118,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":1727,"endOffset":1897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/filters/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2295,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":143,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":325,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":637,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":1379,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"_createIndexRecord","ranges":[{"startOffset":1462,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":1550,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":1655,"endOffset":1770,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":1776,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":2073,"endOffset":2258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/filters/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"ErrorFilter","ranges":[{"startOffset":143,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":217,"endOffset":294,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":300,"endOffset":419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/transformers/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"EntryTransformer","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformer","ranges":[{"startOffset":222,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":304,"endOffset":829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderStream","ranges":[{"startOffset":262,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":382,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":998,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderSync","ranges":[{"startOffset":219,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":337,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":573,"endOffset":764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync","ranges":[{"startOffset":257,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":401,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":491,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":909,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1246,"endOffset":1337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-glob/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2794,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":664,"endOffset":2520,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":2526,"endOffset":2614,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":2620,"endOffset":2760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"197","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/dir-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2304,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":106,"endOffset":187,"count":0}],"isBlockCoverage":false},{"functionName":"getPath","ranges":[{"startOffset":206,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"addExtensions","ranges":[{"startOffset":376,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"getGlob","ranges":[{"startOffset":525,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1344,"endOffset":1852,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1877,"endOffset":2302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1176,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":78,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeSync","ranges":[{"startOffset":446,"endOffset":770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/gitignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2608,"count":1}],"isBlockCoverage":true},{"functionName":"mapGitIgnorePatternTo","ranges":[{"startOffset":392,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"parseGitIgnore","ranges":[{"startOffset":568,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"reduceIgnore","ranges":[{"startOffset":830,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ensureAbsolutePathForCwd","ranges":[{"startOffset":1055,"endOffset":1252,"count":0}],"isBlockCoverage":false},{"functionName":"getIsIgnoredPredecate","ranges":[{"startOffset":1285,"endOffset":1407,"count":0}],"isBlockCoverage":false},{"functionName":"getFile","ranges":[{"startOffset":1426,"endOffset":1586,"count":0}],"isBlockCoverage":false},{"functionName":"getFileSync","ranges":[{"startOffset":1609,"endOffset":1763,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":1791,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1893,"endOffset":2248,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2273,"endOffset":2606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ignore/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15352,"count":1},{"startOffset":591,"endOffset":606,"count":0},{"startOffset":14909,"endOffset":15351,"count":0}],"isBlockCoverage":true},{"functionName":"makeArray","ranges":[{"startOffset":41,"endOffset":135,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":623,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeRange","ranges":[{"startOffset":866,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRangeBackSlash","ranges":[{"startOffset":1188,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2097,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2214,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2880,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2989,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3253,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3353,"endOffset":3364,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3785,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"startingReplacer","ranges":[{"startOffset":4026,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5218,"endOffset":5688,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5961,"endOffset":5986,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6180,"endOffset":6192,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6242,"endOffset":6254,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6447,"endOffset":6932,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":7495,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"REPLACERS","ranges":[{"startOffset":7704,"endOffset":8038,"count":0}],"isBlockCoverage":false},{"functionName":"makeRegex","ranges":[{"startOffset":8201,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":8632,"endOffset":8670,"count":0}],"isBlockCoverage":false},{"functionName":"checkPattern","ranges":[{"startOffset":8777,"endOffset":8944,"count":0}],"isBlockCoverage":false},{"functionName":"splitPattern","ranges":[{"startOffset":8967,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"IgnoreRule","ranges":[{"startOffset":9035,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"createRule","ranges":[{"startOffset":9234,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":9995,"endOffset":10043,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":10063,"endOffset":10599,"count":0}],"isBlockCoverage":false},{"functionName":"isNotRelative","ranges":[{"startOffset":10623,"endOffset":10665,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.convert","ranges":[{"startOffset":10727,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"Ignore","ranges":[{"startOffset":10752,"endOffset":10916,"count":0}],"isBlockCoverage":false},{"functionName":"_initCache","ranges":[{"startOffset":10920,"endOffset":11025,"count":0}],"isBlockCoverage":false},{"functionName":"_addPattern","ranges":[{"startOffset":11029,"endOffset":11359,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11417,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"addPattern","ranges":[{"startOffset":11760,"endOffset":11815,"count":0}],"isBlockCoverage":false},{"functionName":"_testOne","ranges":[{"startOffset":12409,"endOffset":12916,"count":0}],"isBlockCoverage":false},{"functionName":"_test","ranges":[{"startOffset":12947,"endOffset":13211,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":13215,"endOffset":14001,"count":0}],"isBlockCoverage":false},{"functionName":"ignores","ranges":[{"startOffset":14005,"endOffset":14087,"count":0}],"isBlockCoverage":false},{"functionName":"createFilter","ranges":[{"startOffset":14091,"endOffset":14151,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":14155,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":14262,"endOffset":14330,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":14350,"endOffset":14380,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":14402,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"isPathValid","ranges":[{"startOffset":14435,"endOffset":14506,"count":0}],"isBlockCoverage":false},{"functionName":"makePosix","ranges":[{"startOffset":14970,"endOffset":15077,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.isNotRelative","ranges":[{"startOffset":15269,"endOffset":15349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/globby/stream-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectTransform","ranges":[{"startOffset":97,"endOffset":151,"count":0}],"isBlockCoverage":false},{"functionName":"FilterStream","ranges":[{"startOffset":201,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":264,"endOffset":372,"count":0}],"isBlockCoverage":false},{"functionName":"UniqueStream","ranges":[{"startOffset":422,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":482,"endOffset":622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"203","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ignore-by-default/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":725,"count":1}],"isBlockCoverage":true},{"functionName":"exports.directories","ranges":[{"startOffset":36,"endOffset":724,"count":1}],"isBlockCoverage":true}]},{"scriptId":"204","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"205","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15374,"count":1}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":410,"endOffset":5410,"count":1},{"startOffset":491,"endOffset":496,"count":0},{"startOffset":744,"endOffset":749,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.registerUniqueTitle","ranges":[{"startOffset":1680,"endOffset":1804,"count":7},{"startOffset":1727,"endOffset":1751,"count":0}],"isBlockCoverage":true},{"functionName":"get snapshotDirectory","ranges":[{"startOffset":1920,"endOffset":2102,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.chain.createChain.serial","ranges":[{"startOffset":2136,"endOffset":5195,"count":8},{"startOffset":2215,"endOffset":2365,"count":0},{"startOffset":2391,"endOffset":2504,"count":1},{"startOffset":2676,"endOffset":2741,"count":0},{"startOffset":2765,"endOffset":3580,"count":0},{"startOffset":3626,"endOffset":3745,"count":0},{"startOffset":3887,"endOffset":3898,"count":7},{"startOffset":3900,"endOffset":3973,"count":0},{"startOffset":3993,"endOffset":4240,"count":1},{"startOffset":4031,"endOffset":4095,"count":0},{"startOffset":4122,"endOffset":4178,"count":0},{"startOffset":4276,"endOffset":4311,"count":7},{"startOffset":4313,"endOffset":4378,"count":0},{"startOffset":4521,"endOffset":5063,"count":7},{"startOffset":4556,"endOffset":4677,"count":0},{"startOffset":4712,"endOffset":4755,"count":0},{"startOffset":4792,"endOffset":4838,"count":0},{"startOffset":4873,"endOffset":4883,"count":0},{"startOffset":5063,"endOffset":5180,"count":1},{"startOffset":5144,"endOffset":5154,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2441,"endOffset":2497,"count":1}],"isBlockCoverage":true},{"functionName":"compareTestSnapshot","ranges":[{"startOffset":5413,"endOffset":5845,"count":0}],"isBlockCoverage":false},{"functionName":"skipSnapshot","ranges":[{"startOffset":5848,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"saveSnapshotState","ranges":[{"startOffset":5902,"endOffset":6374,"count":1},{"startOffset":5955,"endOffset":6048,"count":0},{"startOffset":6053,"endOffset":6088,"count":0},{"startOffset":6112,"endOffset":6166,"count":0},{"startOffset":6196,"endOffset":6357,"count":0}],"isBlockCoverage":true},{"functionName":"onRun","ranges":[{"startOffset":6377,"endOffset":6435,"count":14}],"isBlockCoverage":true},{"functionName":"onRunComplete","ranges":[{"startOffset":6438,"endOffset":6507,"count":14}],"isBlockCoverage":true},{"functionName":"attributeLeakedError","ranges":[{"startOffset":6510,"endOffset":6677,"count":0}],"isBlockCoverage":false},{"functionName":"beforeExitHandler","ranges":[{"startOffset":6680,"endOffset":6794,"count":0}],"isBlockCoverage":false},{"functionName":"runMultiple","ranges":[{"startOffset":6797,"endOffset":8054,"count":24}],"isBlockCoverage":true},{"functionName":"runAndStoreResult","ranges":[{"startOffset":6908,"endOffset":7066,"count":7},{"startOffset":7001,"endOffset":7030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7135,"endOffset":7996,"count":7},{"startOffset":7250,"endOffset":7537,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7286,"endOffset":7504,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7600,"endOffset":7984,"count":7},{"startOffset":7918,"endOffset":7945,"count":0}],"isBlockCoverage":true},{"functionName":"runSingle","ranges":[{"startOffset":8057,"endOffset":8328,"count":14}],"isBlockCoverage":true},{"functionName":"runHooks","ranges":[{"startOffset":8331,"endOffset":9527,"count":24},{"startOffset":9093,"endOffset":9495,"count":7},{"startOffset":9271,"endOffset":9491,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8446,"endOffset":8982,"count":7},{"startOffset":8607,"endOffset":8672,"count":0},{"startOffset":8938,"endOffset":8943,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":8613,"endOffset":8672,"count":0}],"isBlockCoverage":false},{"functionName":"runTest","ranges":[{"startOffset":9530,"endOffset":11492,"count":7},{"startOffset":10071,"endOffset":10137,"count":0},{"startOffset":10914,"endOffset":11244,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":10078,"endOffset":10137,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":11495,"endOffset":15299,"count":1},{"startOffset":11607,"endOffset":12025,"count":0},{"startOffset":12071,"endOffset":12565,"count":7},{"startOffset":12102,"endOffset":12129,"count":0},{"startOffset":12131,"endOffset":12151,"count":0},{"startOffset":12192,"endOffset":12218,"count":0},{"startOffset":12220,"endOffset":12240,"count":0},{"startOffset":12474,"endOffset":12510,"count":0},{"startOffset":12605,"endOffset":12923,"count":0},{"startOffset":13001,"endOffset":13028,"count":0},{"startOffset":13030,"endOffset":13126,"count":0},{"startOffset":15241,"endOffset":15296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13353,"endOffset":14002,"count":1},{"startOffset":13496,"endOffset":13520,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13551,"endOffset":13990,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14082,"endOffset":14752,"count":1},{"startOffset":14327,"endOffset":14343,"count":0},{"startOffset":14346,"endOffset":14370,"count":0},{"startOffset":14441,"endOffset":14464,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14645,"endOffset":14709,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14738,"endOffset":14746,"count":7}],"isBlockCoverage":true},{"functionName":"interrupt","ranges":[{"startOffset":15302,"endOffset":15345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"206","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/emittery/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9508,"count":1}],"isBlockCoverage":true},{"functionName":"assertEventName","ranges":[{"startOffset":300,"endOffset":478,"count":37},{"startOffset":373,"endOffset":405,"count":4},{"startOffset":407,"endOffset":476,"count":0}],"isBlockCoverage":true},{"functionName":"assertListener","ranges":[{"startOffset":480,"endOffset":613,"count":4},{"startOffset":553,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"getListeners","ranges":[{"startOffset":615,"endOffset":804,"count":37},{"startOffset":730,"endOffset":770,"count":5}],"isBlockCoverage":true},{"functionName":"getEventProducers","ranges":[{"startOffset":806,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueProducers","ranges":[{"startOffset":1102,"endOffset":1512,"count":33},{"startOffset":1240,"endOffset":1333,"count":0},{"startOffset":1368,"endOffset":1510,"count":0}],"isBlockCoverage":true},{"functionName":"iterator","ranges":[{"startOffset":1514,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMethodNamesOrAssert","ranges":[{"startOffset":2593,"endOffset":3114,"count":0}],"isBlockCoverage":false},{"functionName":"isListenerSymbol","ranges":[{"startOffset":3141,"endOffset":3205,"count":37},{"startOffset":3176,"endOffset":3205,"count":33}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3233,"endOffset":4313,"count":0}],"isBlockCoverage":false},{"functionName":"Emittery","ranges":[{"startOffset":4316,"endOffset":4436,"count":1}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":4439,"endOffset":4841,"count":4},{"startOffset":4536,"endOffset":4548,"count":0}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":4844,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":5202,"endOffset":5345,"count":0}],"isBlockCoverage":false},{"functionName":"events","ranges":[{"startOffset":5348,"endOffset":5554,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5557,"endOffset":6215,"count":33},{"startOffset":5863,"endOffset":5867,"count":4},{"startOffset":5868,"endOffset":5887,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5963,"endOffset":6061,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6093,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"emitSerial","ranges":[{"startOffset":6218,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"onAny","ranges":[{"startOffset":6836,"endOffset":7001,"count":0}],"isBlockCoverage":false},{"functionName":"anyEvent","ranges":[{"startOffset":7004,"endOffset":7044,"count":0}],"isBlockCoverage":false},{"functionName":"offAny","ranges":[{"startOffset":7047,"endOffset":7175,"count":0}],"isBlockCoverage":false},{"functionName":"clearListeners","ranges":[{"startOffset":7178,"endOffset":7900,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":7903,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"bindMethods","ranges":[{"startOffset":8587,"endOffset":9091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9176,"endOffset":9200,"count":13}],"isBlockCoverage":true}]},{"scriptId":"207","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/matcher/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1785,"count":1}],"isBlockCoverage":true},{"functionName":"makeRegexp","ranges":[{"startOffset":107,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":667,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.isMatch","ranges":[{"startOffset":1401,"endOffset":1783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/matcher/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"209","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/context-ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"ContextRef","ranges":[{"startOffset":74,"endOffset":111,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":114,"endOffset":145,"count":21}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":148,"endOffset":191,"count":7}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":194,"endOffset":237,"count":7}],"isBlockCoverage":true},{"functionName":"LateBinding","ranges":[{"startOffset":310,"endOffset":382,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":385,"endOffset":479,"count":14},{"startOffset":412,"endOffset":453,"count":7}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":482,"endOffset":544,"count":7}],"isBlockCoverage":true}]},{"scriptId":"210","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":967,"endOffset":1039,"count":7}],"isBlockCoverage":true}]},{"scriptId":"211","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseClone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5609,"count":1}],"isBlockCoverage":true},{"functionName":"baseClone","ranges":[{"startOffset":3399,"endOffset":5579,"count":119},{"startOffset":3630,"endOffset":3716,"count":112},{"startOffset":3652,"endOffset":3691,"count":111},{"startOffset":3692,"endOffset":3711,"count":1},{"startOffset":3745,"endOffset":3769,"count":62},{"startOffset":3769,"endOffset":3794,"count":57},{"startOffset":3794,"endOffset":3817,"count":0},{"startOffset":3817,"endOffset":3861,"count":57},{"startOffset":3861,"endOffset":3966,"count":0},{"startOffset":3966,"endOffset":4584,"count":57},{"startOffset":4079,"endOffset":4127,"count":0},{"startOffset":4153,"endOffset":4170,"count":0},{"startOffset":4171,"endOffset":4193,"count":0},{"startOffset":4231,"endOffset":4235,"count":0},{"startOffset":4281,"endOffset":4433,"count":7},{"startOffset":4315,"endOffset":4366,"count":0},{"startOffset":4439,"endOffset":4580,"count":0},{"startOffset":4584,"endOffset":4664,"count":50},{"startOffset":4664,"endOffset":4686,"count":1},{"startOffset":4737,"endOffset":4762,"count":12},{"startOffset":4762,"endOffset":4812,"count":38},{"startOffset":4812,"endOffset":4948,"count":0},{"startOffset":4948,"endOffset":5113,"count":38},{"startOffset":4972,"endOffset":5113,"count":0},{"startOffset":5113,"endOffset":5181,"count":38},{"startOffset":5153,"endOffset":5167,"count":0},{"startOffset":5186,"endOffset":5212,"count":0},{"startOffset":5235,"endOffset":5246,"count":0},{"startOffset":5247,"endOffset":5264,"count":38},{"startOffset":5284,"endOffset":5292,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4832,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4992,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5294,"endOffset":5558,"count":111}],"isBlockCoverage":true}]},{"scriptId":"212","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":402,"endOffset":507,"count":1}],"isBlockCoverage":true}]},{"scriptId":"213","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_ListCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":376,"endOffset":594,"count":1},{"startOffset":459,"endOffset":475,"count":0},{"startOffset":521,"endOffset":592,"count":0}],"isBlockCoverage":true}]},{"scriptId":"214","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":115,"endOffset":183,"count":1}],"isBlockCoverage":true}]},{"scriptId":"215","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":440,"endOffset":739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"216","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_assocIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":286,"endOffset":454,"count":50},{"startOffset":370,"endOffset":439,"count":922},{"startOffset":407,"endOffset":435,"count":12},{"startOffset":439,"endOffset":453,"count":38}],"isBlockCoverage":true}]},{"scriptId":"217","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":681,"endOffset":776,"count":922},{"startOffset":734,"endOffset":773,"count":910},{"startOffset":754,"endOffset":772,"count":0}],"isBlockCoverage":true}]},{"scriptId":"218","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":240,"endOffset":387,"count":50},{"startOffset":356,"endOffset":367,"count":38},{"startOffset":368,"endOffset":384,"count":12}],"isBlockCoverage":true}]},{"scriptId":"219","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":292,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"220","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_listCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheSet","ranges":[{"startOffset":292,"endOffset":520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"221","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":148,"endOffset":223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"222","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"stackDelete","ranges":[{"startOffset":237,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"223","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":271,"count":1}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":183,"endOffset":242,"count":50}],"isBlockCoverage":true}]},{"scriptId":"224","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":235,"endOffset":294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"225","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_stackSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"stackSet","ranges":[{"startOffset":436,"endOffset":824,"count":38},{"startOffset":706,"endOffset":823,"count":0}],"isBlockCoverage":true}]},{"scriptId":"226","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"227","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":483,"count":1}],"isBlockCoverage":true},{"functionName":"getNative","ranges":[{"startOffset":331,"endOffset":453,"count":7},{"startOffset":439,"endOffset":450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":7},{"startOffset":1256,"endOffset":1279,"count":0},{"startOffset":1327,"endOffset":1341,"count":0}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":7},{"startOffset":670,"endOffset":693,"count":0},{"startOffset":905,"endOffset":921,"count":0},{"startOffset":922,"endOffset":940,"count":0},{"startOffset":941,"endOffset":959,"count":0}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":70},{"startOffset":584,"endOffset":646,"count":0},{"startOffset":712,"endOffset":730,"count":5},{"startOffset":735,"endOffset":758,"count":65}],"isBlockCoverage":true}]},{"scriptId":"231","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"232","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"233","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"234","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":5},{"startOffset":899,"endOffset":911,"count":0},{"startOffset":995,"endOffset":1037,"count":0}],"isBlockCoverage":true}]},{"scriptId":"235","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":65}],"isBlockCoverage":true}]},{"scriptId":"236","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":128},{"startOffset":679,"endOffset":700,"count":14}],"isBlockCoverage":true}]},{"scriptId":"237","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":7},{"startOffset":509,"endOffset":532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"238","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"239","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":12},{"startOffset":441,"endOffset":508,"count":0},{"startOffset":512,"endOffset":526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"240","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":211,"endOffset":296,"count":7},{"startOffset":268,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"241","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_MapCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"MapCache","ranges":[{"startOffset":389,"endOffset":606,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":209,"endOffset":359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":319,"endOffset":532,"count":0}],"isBlockCoverage":false}]},{"scriptId":"244","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":152,"endOffset":251,"count":0}],"isBlockCoverage":false}]},{"scriptId":"245","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nativeCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true}]},{"scriptId":"246","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":445,"count":1}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":279,"endOffset":414,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"hashGet","ranges":[{"startOffset":513,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"248","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":461,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"249","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_hashSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":379,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"250","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":282,"endOffset":415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"251","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getMapData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":214,"endOffset":369,"count":0}],"isBlockCoverage":false}]},{"scriptId":"252","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isKeyable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":430,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":201,"endOffset":400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"253","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheGet","ranges":[{"startOffset":228,"endOffset":298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"254","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":280,"endOffset":350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"255","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_mapCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":279,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEach","ranges":[{"startOffset":274,"endOffset":507,"count":38},{"startOffset":359,"endOffset":362,"count":0},{"startOffset":407,"endOffset":489,"count":111},{"startOffset":465,"endOffset":485,"count":0}],"isBlockCoverage":true}]},{"scriptId":"257","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_assignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":629,"endOffset":867,"count":111},{"startOffset":743,"endOffset":765,"count":0},{"startOffset":767,"endOffset":817,"count":0}],"isBlockCoverage":true}]},{"scriptId":"258","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseAssignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignValue","ranges":[{"startOffset":314,"endOffset":589,"count":111},{"startOffset":386,"endOffset":403,"count":0},{"startOffset":405,"endOffset":551,"count":0}],"isBlockCoverage":true}]},{"scriptId":"259","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_defineProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64,"endOffset":194,"count":1},{"startOffset":180,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseAssign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssign","ranges":[{"startOffset":339,"endOffset":439,"count":7}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copyObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1044,"count":1}],"isBlockCoverage":true},{"functionName":"copyObject","ranges":[{"startOffset":467,"endOffset":1013,"count":14},{"startOffset":556,"endOffset":572,"count":0},{"startOffset":650,"endOffset":994,"count":0}],"isBlockCoverage":true}]},{"scriptId":"262","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":884,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":761,"endOffset":859,"count":45},{"startOffset":814,"endOffset":837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"263","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayLikeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1778,"count":1}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":697,"endOffset":1744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseTimes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"baseTimes","ranges":[{"startOffset":313,"endOffset":474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"265","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1026,"count":1},{"startOffset":851,"endOffset":993,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":797,"endOffset":829,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":853,"endOffset":993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":355,"endOffset":452,"count":1}],"isBlockCoverage":true}]},{"scriptId":"267","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isObjectLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":497,"endOffset":581,"count":1}],"isBlockCoverage":true}]},{"scriptId":"268","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true}]},{"scriptId":"269","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1114,"count":1},{"startOffset":548,"endOffset":559,"count":0},{"startOffset":697,"endOffset":708,"count":0},{"startOffset":1072,"endOffset":1084,"count":0}],"isBlockCoverage":true}]},{"scriptId":"270","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/stubFalse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1}],"isBlockCoverage":true},{"functionName":"stubFalse","ranges":[{"startOffset":210,"endOffset":250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"271","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":456,"endOffset":731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"272","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":695,"count":1},{"startOffset":643,"endOffset":661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"273","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2222,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":2050,"endOffset":2185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"274","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":645,"endOffset":773,"count":45},{"startOffset":706,"endOffset":723,"count":0},{"startOffset":724,"endOffset":741,"count":0},{"startOffset":742,"endOffset":770,"count":0}],"isBlockCoverage":true}]},{"scriptId":"275","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseUnary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":332,"count":1}],"isBlockCoverage":true},{"functionName":"baseUnary","ranges":[{"startOffset":218,"endOffset":302,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254,"endOffset":299,"count":76}],"isBlockCoverage":true}]},{"scriptId":"276","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nodeUtil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":615,"endOffset":962,"count":1},{"startOffset":806,"endOffset":911,"count":0},{"startOffset":912,"endOffset":942,"count":0},{"startOffset":948,"endOffset":960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"277","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":479,"endOffset":747,"count":45},{"startOffset":571,"endOffset":746,"count":0}],"isBlockCoverage":true}]},{"scriptId":"278","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":273,"endOffset":448,"count":102},{"startOffset":404,"endOffset":418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"279","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nativeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true}]},{"scriptId":"280","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_overArg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":254,"endOffset":354,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":351,"count":102}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArrayLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLike","ranges":[{"startOffset":695,"endOffset":798,"count":45},{"startOffset":774,"endOffset":795,"count":0}],"isBlockCoverage":true}]},{"scriptId":"282","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseAssignIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":482,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignIn","ranges":[{"startOffset":345,"endOffset":449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"283","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/keysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":778,"count":1}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":643,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":870,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":523,"endOffset":839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_nativeKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":490,"count":1}],"isBlockCoverage":true},{"functionName":"nativeKeysIn","ranges":[{"startOffset":292,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1056,"count":1},{"startOffset":508,"endOffset":519,"count":0},{"startOffset":567,"endOffset":578,"count":0}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":783,"endOffset":1024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"287","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copyArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"copyArray","ranges":[{"startOffset":219,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"288","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copySymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbols","ranges":[{"startOffset":317,"endOffset":414,"count":7}],"isBlockCoverage":true}]},{"scriptId":"289","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getSymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":886,"count":1},{"startOffset":624,"endOffset":635,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":638,"endOffset":854,"count":45},{"startOffset":679,"endOffset":699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":774,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"290","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayFilter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"arrayFilter","ranges":[{"startOffset":289,"endOffset":600,"count":45},{"startOffset":377,"endOffset":380,"count":0},{"startOffset":464,"endOffset":581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"291","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/stubArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"stubArray","ranges":[{"startOffset":323,"endOffset":360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_copySymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbolsIn","ranges":[{"startOffset":335,"endOffset":436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"293","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getSymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":754,"count":1},{"startOffset":549,"endOffset":560,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbolsIn","ranges":[{"startOffset":563,"endOffset":720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"294","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_arrayPush.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":437,"count":1}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":200,"endOffset":407,"count":38},{"startOffset":341,"endOffset":389,"count":0}],"isBlockCoverage":true}]},{"scriptId":"295","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":342,"endOffset":424,"count":38}],"isBlockCoverage":true}]},{"scriptId":"297","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseGetAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":537,"endOffset":704,"count":38},{"startOffset":652,"endOffset":660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"298","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getAllKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":367,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_getTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1},{"startOffset":1296,"endOffset":1811,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":1309,"endOffset":1808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"300","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_DataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true}]},{"scriptId":"301","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"302","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"303","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_WeakMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"304","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_initCloneArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":329,"endOffset":657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"305","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_initCloneByTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2261,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":1454,"endOffset":2226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"306","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneArrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":449,"count":1}],"isBlockCoverage":true},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"307","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_Uint8Array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true}]},{"scriptId":"308","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneDataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":507,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDataView","ranges":[{"startOffset":267,"endOffset":473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"309","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":439,"count":1}],"isBlockCoverage":true},{"functionName":"cloneRegExp","ranges":[{"startOffset":243,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneSymbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1},{"startOffset":138,"endOffset":149,"count":0},{"startOffset":205,"endOffset":216,"count":0}],"isBlockCoverage":true},{"functionName":"cloneSymbol","ranges":[{"startOffset":394,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"311","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_cloneTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"cloneTypedArray","ranges":[{"startOffset":275,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"312","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_initCloneObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":290,"endOffset":450,"count":57},{"startOffset":443,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"313","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":686,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":651,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":370,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":400,"endOffset":648,"count":57},{"startOffset":444,"endOffset":468,"count":0},{"startOffset":532,"endOffset":647,"count":0}],"isBlockCoverage":true}]},{"scriptId":"314","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"315","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsMap","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"317","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseIsSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsSet","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/create-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4201,"count":1}],"isBlockCoverage":true},{"functionName":"startChain","ranges":[{"startOffset":52,"endOffset":279,"count":11}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":108,"endOffset":154,"count":8}],"isBlockCoverage":true},{"functionName":"extendChain","ranges":[{"startOffset":281,"endOffset":647,"count":63},{"startOffset":338,"endOffset":357,"count":9}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":371,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"callWithFlag","ranges":[{"startOffset":649,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"createHookChain","ranges":[{"startOffset":981,"endOffset":1506,"count":8},{"startOffset":1311,"endOffset":1489,"count":4}],"isBlockCoverage":true},{"functionName":"createChain","ranges":[{"startOffset":1508,"endOffset":4169,"count":1}],"isBlockCoverage":true}]},{"scriptId":"319","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/parse-test-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"parseTestArgs","ranges":[{"startOffset":14,"endOffset":599,"count":8},{"startOffset":91,"endOffset":105,"count":7},{"startOffset":106,"endOffset":117,"count":1},{"startOffset":233,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"buildTitle","ranges":[{"startOffset":290,"endOffset":511,"count":8},{"startOffset":347,"endOffset":388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"320","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/snapshot-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15149,"count":1}],"isBlockCoverage":true},{"functionName":"SnapshotError","ranges":[{"startOffset":1226,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"ChecksumError","ranges":[{"startOffset":1426,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"VersionMismatchError","ranges":[{"startOffset":1618,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"isLegacySnapshot","ranges":[{"startOffset":1929,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"LegacyError","ranges":[{"startOffset":2102,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"tryRead","ranges":[{"startOffset":2239,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"withoutLineEndings","ranges":[{"startOffset":2397,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"formatEntry","ranges":[{"startOffset":2625,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"combineEntries","ranges":[{"startOffset":2862,"endOffset":3991,"count":0}],"isBlockCoverage":false},{"functionName":"generateReport","ranges":[{"startOffset":3993,"endOffset":4521,"count":0}],"isBlockCoverage":false},{"functionName":"appendReportEntries","ranges":[{"startOffset":4523,"endOffset":4934,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSnapshots","ranges":[{"startOffset":4936,"endOffset":7199,"count":0}],"isBlockCoverage":false},{"functionName":"decodeSnapshots","ranges":[{"startOffset":7201,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"Manager","ranges":[{"startOffset":9217,"endOffset":9622,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":9625,"endOffset":10328,"count":0}],"isBlockCoverage":false},{"functionName":"deferRecord","ranges":[{"startOffset":10331,"endOffset":11497,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":11500,"endOffset":11588,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":11591,"endOffset":12320,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12354,"endOffset":12846,"count":0}],"isBlockCoverage":false},{"functionName":"mem.cacheKey.file.file","ranges":[{"startOffset":12883,"endOffset":13466,"count":0}],"isBlockCoverage":false},{"functionName":"cacheKey","ranges":[{"startOffset":13479,"endOffset":13497,"count":0}],"isBlockCoverage":false},{"functionName":"determineSnapshotPaths","ranges":[{"startOffset":13556,"endOffset":13929,"count":0}],"isBlockCoverage":false},{"functionName":"cleanFile","ranges":[{"startOffset":13931,"endOffset":14095,"count":0}],"isBlockCoverage":false},{"functionName":"cleanSnapshots","ranges":[{"startOffset":14205,"endOffset":14463,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":14507,"endOffset":15126,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"crypto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7318,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3123,"endOffset":3205,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3207,"endOffset":3307,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3309,"endOffset":3411,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3413,"endOffset":3517,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3519,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3627,"endOffset":3783,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3785,"endOffset":3867,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":3869,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":3927,"endOffset":4009,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":4011,"endOffset":4093,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4095,"endOffset":4181,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsDisabled","ranges":[{"startOffset":5187,"endOffset":5260,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5262,"endOffset":5350,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsDisabled","ranges":[{"startOffset":5352,"endOffset":5394,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5396,"endOffset":5436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"internal/crypto/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5722,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":639,"endOffset":1005,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":1007,"endOffset":1468,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":1470,"endOffset":2024,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":2026,"endOffset":2501,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":2503,"endOffset":3480,"count":0}],"isBlockCoverage":false},{"functionName":"randomInt","ranges":[{"startOffset":3718,"endOffset":5570,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":5572,"endOffset":5639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"internal/crypto/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":471,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1344,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1757,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2162,"endOffset":2326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"internal/crypto/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2336,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":704,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":767,"endOffset":826,"count":0}],"isBlockCoverage":false},{"functionName":"toBuf","ranges":[{"startOffset":1001,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1214,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1291,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1367,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1413,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1824,"endOffset":2172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"internal/crypto/scrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3695,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":587,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1426,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1853,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2097,"endOffset":3652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"internal/crypto/keygen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":954,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1084,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":1865,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1981,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2326,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3452,"endOffset":10021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"internal/crypto/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11147,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1513,"endOffset":3483,"count":1}],"isBlockCoverage":true},{"functionName":"KeyObject","ranges":[{"startOffset":1623,"endOffset":2139,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":2145,"endOffset":2192,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":2246,"endOffset":2304,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":2310,"endOffset":2390,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2396,"endOffset":2449,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":2567,"endOffset":2719,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":2783,"endOffset":2841,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2847,"endOffset":3031,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":3096,"endOffset":3155,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":3161,"endOffset":3402,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":3487,"endOffset":3814,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":3816,"endOffset":4668,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":4670,"endOffset":4766,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":4768,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":5364,"endOffset":5458,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":5460,"endOffset":6760,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":6959,"endOffset":7095,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":7295,"endOffset":7411,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":7413,"endOffset":7975,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":7977,"endOffset":9223,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":9225,"endOffset":9313,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":9315,"endOffset":9410,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":9412,"endOffset":9903,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":9905,"endOffset":10190,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":10192,"endOffset":10429,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":10431,"endOffset":10700,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":10702,"endOffset":10766,"count":0}],"isBlockCoverage":false}]},{"scriptId":"328","url":"internal/crypto/diffiehellman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8131,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":970,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":2539,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":2954,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3230,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":3653,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":3920,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4203,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4477,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4681,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":4879,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5039,"endOffset":5193,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5504,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5659,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":5878,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6399,"endOffset":6534,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6536,"endOffset":6859,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6929,"endOffset":8044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"internal/crypto/cipher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8473,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1054,"endOffset":1914,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2415,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2734,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":2957,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3368,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3592,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":3853,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4186,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4331,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4498,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5177,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5518,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5698,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":5862,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6233,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6663,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":6864,"endOffset":7455,"count":3},{"startOffset":7260,"endOffset":7333,"count":1},{"startOffset":7333,"endOffset":7395,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":7611,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":7965,"endOffset":8171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"internal/streams/lazy_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1669,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":468,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"makeGetter","ranges":[{"startOffset":662,"endOffset":970,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":699,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":972,"endOffset":1167,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"331","url":"internal/crypto/sig.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5946,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":729,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1100,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1219,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1583,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1660,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1743,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2089,"endOffset":2321,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2345,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3011,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":3811,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4295,"endOffset":4929,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":4932,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"internal/crypto/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":764,"endOffset":1272,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":1403,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1602,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1734,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1841,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":2381,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"Hmac","ranges":[{"startOffset":2730,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3239,"endOffset":3658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"internal/crypto/certificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1119,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":247,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":347,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":478,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":695,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"zlib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28445,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3237,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":3962,"endOffset":4278,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4280,"endOffset":4365,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4367,"endOffset":4697,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4699,"endOffset":5239,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5241,"endOffset":5582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5807,"endOffset":6234,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6538,"endOffset":6829,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6880,"endOffset":8650,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8856,"endOffset":8893,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9316,"endOffset":9362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9509,"endOffset":9561,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9701,"endOffset":9809,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9955,"endOffset":10027,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10625,"endOffset":10700,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":11141,"endOffset":11543,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11573,"endOffset":11655,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11688,"endOffset":11748,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11783,"endOffset":12317,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12355,"endOffset":12584,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12587,"endOffset":14857,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14859,"endOffset":15449,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15451,"endOffset":17753,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":17755,"endOffset":17945,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":18141,"endOffset":20447,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":20797,"endOffset":21063,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21089,"endOffset":21501,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":21545,"endOffset":21669,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":21765,"endOffset":21889,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":21985,"endOffset":22097,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":22187,"endOffset":22307,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":22401,"endOffset":22595,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":22697,"endOffset":22833,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":22935,"endOffset":23051,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":23143,"endOffset":23532,"count":18},{"startOffset":23202,"endOffset":23531,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":23215,"endOffset":23316,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":23331,"endOffset":23529,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23595,"endOffset":23670,"count":107},{"startOffset":23647,"endOffset":23663,"count":9},{"startOffset":23664,"endOffset":23667,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":23886,"endOffset":25184,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25278,"endOffset":25431,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":25545,"endOffset":25704,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":25823,"endOffset":25987,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":25923,"endOffset":25980,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26197,"endOffset":26233,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26237,"endOffset":26278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true}]},{"scriptId":"336","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3379,"count":1}],"isBlockCoverage":true},{"functionName":"shortcircuitPrimitive","ranges":[{"startOffset":408,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"compareDescriptors","ranges":[{"startOffset":730,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2864,"endOffset":3352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/Circular.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":785,"count":1}],"isBlockCoverage":true},{"functionName":"Circular","ranges":[{"startOffset":33,"endOffset":80,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":84,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":365,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":587,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":651,"endOffset":756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":249,"count":1}],"isBlockCoverage":true}]},{"scriptId":"339","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/describe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5965,"count":1}],"isBlockCoverage":true},{"functionName":"describePrimitive","ranges":[{"startOffset":2448,"endOffset":2957,"count":0}],"isBlockCoverage":false},{"functionName":"unboxComplex","ranges":[{"startOffset":2959,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"registerPlugins","ranges":[{"startOffset":3326,"endOffset":3726,"count":0}],"isBlockCoverage":false},{"functionName":"describeComplex","ranges":[{"startOffset":3728,"endOffset":4699,"count":0}],"isBlockCoverage":false},{"functionName":"describeItem","ranges":[{"startOffset":4722,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"describeMapEntry","ranges":[{"startOffset":4950,"endOffset":5058,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5060,"endOffset":5938,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/Registry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"Registry","ranges":[{"startOffset":33,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":107,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":222,"endOffset":374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/arguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1385,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":409,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":652,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1160,"endOffset":1382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7185,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":436,"endOffset":713,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":743,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectValue","ranges":[{"startOffset":950,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1207,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":1403,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1474,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1565,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":2001,"endOffset":6371,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2068,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2439,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2569,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":3036,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":3478,"endOffset":4494,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":4500,"endOffset":6365,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":6413,"endOffset":7138,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6483,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":6786,"endOffset":7055,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":7061,"endOffset":7132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/formatUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3260,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":60,"endOffset":146,"count":0}],"isBlockCoverage":false},{"functionName":"formatCtorAndStringTag","ranges":[{"startOffset":168,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFormatter","ranges":[{"startOffset":621,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":844,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":1193,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":1877,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"shouldFormat","ranges":[{"startOffset":2165,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"customize","ranges":[{"startOffset":2206,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"SingleValueFormatter","ranges":[{"startOffset":2579,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2790,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":2965,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":3120,"endOffset":3205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/lineBuilder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7155,"count":1}],"isBlockCoverage":true},{"functionName":"translateGutter","ranges":[{"startOffset":123,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Line","ranges":[{"startOffset":502,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":674,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":721,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":762,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":820,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":884,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":938,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1031,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":1206,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":1483,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":1634,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":1787,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":1875,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":2050,"endOffset":2091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2095,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":2221,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":2281,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":2399,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2530,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":2636,"endOffset":2725,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2729,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":3540,"endOffset":4287,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":4291,"endOffset":4423,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":4427,"endOffset":4561,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":4565,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":4675,"endOffset":5381,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":5462,"endOffset":5708,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":5731,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":5779,"endOffset":5856,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":5861,"endOffset":5937,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":5942,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6024,"endOffset":6101,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6106,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6194,"endOffset":6277,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6284,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6373,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6463,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6553,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6678,"endOffset":6763,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6770,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6861,"endOffset":6946,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6953,"endOffset":7038,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":7045,"endOffset":7146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/getObjectKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":964,"count":1}],"isBlockCoverage":true},{"functionName":"getObjectKeys","ranges":[{"startOffset":14,"endOffset":932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"346","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/hasLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"hasLength","ranges":[{"startOffset":104,"endOffset":275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/stats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3836,"count":1}],"isBlockCoverage":true},{"functionName":"describeIterableRecursor","ranges":[{"startOffset":228,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"describeListRecursor","ranges":[{"startOffset":380,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"describePropertyRecursor","ranges":[{"startOffset":516,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeIterableStats","ranges":[{"startOffset":668,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeListStats","ranges":[{"startOffset":807,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePropertyStats","ranges":[{"startOffset":930,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":1306,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1355,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1436,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2993,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3141,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3387,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3625,"endOffset":3755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/recursorUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2251,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":51,"endOffset":74,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":117,"endOffset":396,"count":0}],"isBlockCoverage":false},{"functionName":"consumeDeep","ranges":[{"startOffset":418,"endOffset":732,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":768,"endOffset":910,"count":0}],"isBlockCoverage":false},{"functionName":"replay","ranges":[{"startOffset":930,"endOffset":1606,"count":0}],"isBlockCoverage":false},{"functionName":"sequence","ranges":[{"startOffset":1632,"endOffset":1850,"count":0}],"isBlockCoverage":false},{"functionName":"singleValue","ranges":[{"startOffset":1880,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":2048,"endOffset":2224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/arrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":343,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/typedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4439,"count":1}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":382,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":628,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":910,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeBytes","ranges":[{"startOffset":1046,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"Bytes","ranges":[{"startOffset":1292,"endOffset":1343,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1347,"endOffset":1482,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1486,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2301,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"TypedArrayValue","ranges":[{"startOffset":2466,"endOffset":2539,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":2543,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":3049,"endOffset":3869,"count":3}],"isBlockCoverage":true},{"functionName":"createListRecursor","ranges":[{"startOffset":3237,"endOffset":3307,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":3313,"endOffset":3749,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":3755,"endOffset":3863,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":3977,"endOffset":4320,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4073,"endOffset":4314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/boxed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1292,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":264,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedBoxedValue","ranges":[{"startOffset":634,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":713,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":783,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1126,"endOffset":1220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11430,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":306,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"basicEscape","ranges":[{"startOffset":707,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLinebreak","ranges":[{"startOffset":1015,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"themeControlPictures","ranges":[{"startOffset":1221,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuotes","ranges":[{"startOffset":1537,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"includesLinebreaks","ranges":[{"startOffset":1836,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"diffLine","ranges":[{"startOffset":1934,"endOffset":3826,"count":0}],"isBlockCoverage":false},{"functionName":"gatherLines","ranges":[{"startOffset":3862,"endOffset":4170,"count":0}],"isBlockCoverage":false},{"functionName":"StringValue","ranges":[{"startOffset":4194,"endOffset":4242,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4246,"endOffset":4370,"count":0}],"isBlockCoverage":false},{"functionName":"get includesLinebreaks","ranges":[{"startOffset":4374,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4451,"endOffset":5422,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":5426,"endOffset":5800,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5804,"endOffset":11238,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":11242,"endOffset":11282,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"354","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":1370,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":2127,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":2450,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":3268,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"trailingStatement","ranges":[{"startOffset":3399,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isProblematicIfStatement","ranges":[{"startOffset":3849,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":29569,"count":1},{"startOffset":27989,"endOffset":28199,"count":128},{"startOffset":28045,"endOffset":28058,"count":31},{"startOffset":28059,"endOffset":28107,"count":102},{"startOffset":28094,"endOffset":28107,"count":37},{"startOffset":28108,"endOffset":28143,"count":76},{"startOffset":28144,"endOffset":28158,"count":75},{"startOffset":28273,"endOffset":28531,"count":128},{"startOffset":28328,"endOffset":28341,"count":31},{"startOffset":28342,"endOffset":28390,"count":102},{"startOffset":28377,"endOffset":28390,"count":37},{"startOffset":28391,"endOffset":28439,"count":76},{"startOffset":28426,"endOffset":28439,"count":28},{"startOffset":28440,"endOffset":28475,"count":66},{"startOffset":28476,"endOffset":28490,"count":65}],"isBlockCoverage":true},{"functionName":"isDecimalDigit","ranges":[{"startOffset":26641,"endOffset":26726,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":26732,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":26925,"endOffset":27008,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpace","ranges":[{"startOffset":27243,"endOffset":27434,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":27469,"endOffset":27583,"count":0}],"isBlockCoverage":false},{"functionName":"fromCodePoint","ranges":[{"startOffset":27634,"endOffset":27914,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES5","ranges":[{"startOffset":28537,"endOffset":28686,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES5","ranges":[{"startOffset":28692,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES6","ranges":[{"startOffset":28844,"endOffset":28993,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES6","ranges":[{"startOffset":28999,"endOffset":29145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/esutils/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictModeReservedWordES6","ranges":[{"startOffset":1405,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES5","ranges":[{"startOffset":1752,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES6","ranges":[{"startOffset":1990,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES5","ranges":[{"startOffset":3224,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES6","ranges":[{"startOffset":3369,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"isRestrictedWord","ranges":[{"startOffset":3514,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES5","ranges":[{"startOffset":3609,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUtf16","ranges":[{"startOffset":4051,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES6","ranges":[{"startOffset":4167,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES5","ranges":[{"startOffset":4909,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES6","ranges":[{"startOffset":5033,"endOffset":5151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/fast-diff/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27285,"count":1}],"isBlockCoverage":true},{"functionName":"diff_main","ranges":[{"startOffset":1553,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"diff_compute_","ranges":[{"startOffset":2987,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisect_","ranges":[{"startOffset":4922,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisectSplit_","ranges":[{"startOffset":8763,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":9335,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":10396,"endOffset":11301,"count":0}],"isBlockCoverage":false},{"functionName":"diff_halfMatch_","ranges":[{"startOffset":11745,"endOffset":14805,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":15072,"endOffset":22357,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_start","ranges":[{"startOffset":22360,"endOffset":22457,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_end","ranges":[{"startOffset":22459,"endOffset":22554,"count":0}],"isBlockCoverage":false},{"functionName":"starts_with_pair_end","ranges":[{"startOffset":22556,"endOffset":22645,"count":0}],"isBlockCoverage":false},{"functionName":"ends_with_pair_start","ranges":[{"startOffset":22647,"endOffset":22751,"count":0}],"isBlockCoverage":false},{"functionName":"remove_empty_tuples","ranges":[{"startOffset":22753,"endOffset":22939,"count":0}],"isBlockCoverage":false},{"functionName":"make_edit_splice","ranges":[{"startOffset":22941,"endOffset":23244,"count":0}],"isBlockCoverage":false},{"functionName":"find_cursor_edit_diff","ranges":[{"startOffset":23246,"endOffset":26986,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":26988,"endOffset":27180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/dataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":349,"endOffset":447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2613,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":304,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":501,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"formatDate","ranges":[{"startOffset":682,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"DateValue","ranges":[{"startOffset":993,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1072,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1337,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2122,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedDateValue","ranges":[{"startOffset":2460,"endOffset":2610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/date-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":831,"count":1}],"isBlockCoverage":true},{"functionName":"dateTime","ranges":[{"startOffset":71,"endOffset":718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/time-zone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":331,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":638,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorValue","ranges":[{"startOffset":869,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":942,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1086,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2197,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedErrorValue","ranges":[{"startOffset":2400,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2587,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedErrorValue","ranges":[{"startOffset":3512,"endOffset":3602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/isEnumerable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":171,"count":1}],"isBlockCoverage":true},{"functionName":"isEnumerable","ranges":[{"startOffset":14,"endOffset":140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":377,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":630,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionValue","ranges":[{"startOffset":870,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":943,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedFunctionValue","ranges":[{"startOffset":1858,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1955,"endOffset":2203,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2207,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2749,"endOffset":2809,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedFunctionValue","ranges":[{"startOffset":2897,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2991,"endOffset":3205,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3209,"endOffset":3269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":275,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":412,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":512,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1845,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":370,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"MapValue","ranges":[{"startOffset":595,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":668,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":865,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1032,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1229,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMapValue","ranges":[{"startOffset":1752,"endOffset":1842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1054,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":167,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":268,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":630,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":916,"endOffset":1051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"368","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/regexp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2733,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":219,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":432,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"getSortedFlags","ranges":[{"startOffset":617,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"RegexpValue","ranges":[{"startOffset":824,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":930,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1111,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2321,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedRegexpValue","ranges":[{"startOffset":2612,"endOffset":2730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/complexValues/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1815,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":370,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"SetValue","ranges":[{"startOffset":595,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":668,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":865,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1030,"endOffset":1090,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1227,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSetValue","ranges":[{"startOffset":1722,"endOffset":1812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/getCtor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"getCtor","ranges":[{"startOffset":59,"endOffset":1249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/getStringTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":721,"count":1},{"startOffset":467,"endOffset":720,"count":0}],"isBlockCoverage":true},{"functionName":"getStringTag","ranges":[{"startOffset":51,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":225,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"getStringTagWithPromiseWorkaround","ranges":[{"startOffset":519,"endOffset":665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"372","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7816,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":228,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":354,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":519,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":653,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexItem","ranges":[{"startOffset":1017,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1099,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1175,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1334,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1723,"endOffset":4317,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":4321,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveItem","ranges":[{"startOffset":4536,"endOffset":4614,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4618,"endOffset":4775,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4779,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":5338,"endOffset":6853,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":6857,"endOffset":7602,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7606,"endOffset":7660,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/mapEntry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7305,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":318,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":615,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithKey","ranges":[{"startOffset":974,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"MapEntry","ranges":[{"startOffset":1443,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1639,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1920,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":2403,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3008,"endOffset":3349,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":3353,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":4204,"endOffset":7086,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7090,"endOffset":7164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/themeUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5251,"count":1}],"isBlockCoverage":true},{"functionName":"freezeTheme","ranges":[{"startOffset":151,"endOffset":490,"count":1},{"startOffset":233,"endOffset":472,"count":42},{"startOffset":338,"endOffset":468,"count":120},{"startOffset":397,"endOffset":425,"count":118},{"startOffset":427,"endOffset":462,"count":41}],"isBlockCoverage":true},{"functionName":"normalizePlugins","ranges":[{"startOffset":2413,"endOffset":3165,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3205,"endOffset":4082,"count":0}],"isBlockCoverage":false},{"functionName":"addModifier","ranges":[{"startOffset":4146,"endOffset":4338,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiers","ranges":[{"startOffset":4446,"endOffset":5020,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiersToOriginal","ranges":[{"startOffset":5062,"endOffset":5190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":679,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":555,"endOffset":649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1220,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1115,"endOffset":1192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseMerge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1328,"count":1}],"isBlockCoverage":true},{"functionName":"baseMerge","ranges":[{"startOffset":699,"endOffset":1298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_assignMergeValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":582,"count":1}],"isBlockCoverage":true},{"functionName":"assignMergeValue","ranges":[{"startOffset":342,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseFor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_createBaseFor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":648,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":217,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":262,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"381","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseMergeDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3069,"count":1}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":1316,"endOffset":3035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"382","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isArrayLikeObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":742,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":615,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"383","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1229,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"384","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_safeGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"safeGet","ranges":[{"startOffset":243,"endOffset":428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"385","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/toPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"toPlainObject","ranges":[{"startOffset":634,"endOffset":710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_createAssigner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1042,"count":1}],"isBlockCoverage":true},{"functionName":"createAssigner","ranges":[{"startOffset":272,"endOffset":1007,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326,"endOffset":1003,"count":0}],"isBlockCoverage":false}]},{"scriptId":"387","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseRest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":559,"count":1}],"isBlockCoverage":true},{"functionName":"baseRest","ranges":[{"startOffset":430,"endOffset":530,"count":1}],"isBlockCoverage":true}]},{"scriptId":"388","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/identity.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":370,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":297,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_overRest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":503,"endOffset":1067,"count":1},{"startOffset":607,"endOffset":614,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":629,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"390","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":714,"count":1}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":374,"endOffset":688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"391","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_setToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseSetToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":641,"count":1},{"startOffset":412,"endOffset":422,"count":0}],"isBlockCoverage":true},{"functionName":"baseSetToString","ranges":[{"startOffset":425,"endOffset":604,"count":1}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/constant.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":528,"count":1}],"isBlockCoverage":true},{"functionName":"constant","ranges":[{"startOffset":426,"endOffset":499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":462,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_shortOut.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":941,"count":1}],"isBlockCoverage":true},{"functionName":"shortOut","ranges":[{"startOffset":534,"endOffset":912,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":609,"endOffset":909,"count":1},{"startOffset":752,"endOffset":830,"count":0}],"isBlockCoverage":true}]},{"scriptId":"395","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isIterateeCall.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"isIterateeCall","ranges":[{"startOffset":514,"endOffset":842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/pluginRegistry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6139,"count":1}],"isBlockCoverage":true},{"functionName":"PluginError","ranges":[{"startOffset":707,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"PluginTypeError","ranges":[{"startOffset":864,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedApiError","ranges":[{"startOffset":1031,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedError","ranges":[{"startOffset":1210,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorTagError","ranges":[{"startOffset":1406,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorIdError","ranges":[{"startOffset":1657,"endOffset":1945,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1949,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"modifyTheme","ranges":[{"startOffset":3525,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3641,"endOffset":5084,"count":0}],"isBlockCoverage":false},{"functionName":"getDeserializers","ranges":[{"startOffset":5104,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"getThemes","ranges":[{"startOffset":5414,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"getTryDescribeValues","ranges":[{"startOffset":5630,"endOffset":5734,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDescriptorRef","ranges":[{"startOffset":5788,"endOffset":6086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true}]},{"scriptId":"398","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6662,"count":1}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":276,"endOffset":447,"count":40},{"startOffset":427,"endOffset":432,"count":4},{"startOffset":433,"endOffset":444,"count":36}],"isBlockCoverage":true}]},{"scriptId":"399","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1},{"startOffset":233,"endOffset":281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"400","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":40}],"isBlockCoverage":true}]},{"scriptId":"401","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7985,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":303,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2197,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2397,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2442,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2836,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3131,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":3986,"endOffset":4528,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4681,"endOffset":7957,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/parse-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"parseOptions","ranges":[{"startOffset":186,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":660,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":215,"endOffset":635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":74,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":907,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1497,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":135,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3606,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":134,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":639,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1139,"endOffset":1178,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1182,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1566,"endOffset":3322,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13989,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":1826,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1830,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2000,"endOffset":2039,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":2043,"endOffset":4217,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":4221,"endOffset":4851,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":4919,"endOffset":5301,"count":0}],"isBlockCoverage":false},{"functionName":"isNullSet","ranges":[{"startOffset":5710,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"isAny","ranges":[{"startOffset":5752,"endOffset":5771,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":5893,"endOffset":6299,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":6469,"endOffset":6782,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":6796,"endOffset":6847,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":7152,"endOffset":7267,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":7290,"endOffset":7964,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":8195,"endOffset":8310,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":8333,"endOffset":9635,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":9660,"endOffset":9821,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":9845,"endOffset":11535,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":11681,"endOffset":11856,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGTE0","ranges":[{"startOffset":11878,"endOffset":12028,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":12270,"endOffset":12946,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":12964,"endOffset":13988,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/lru-cache/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8186,"count":1}],"isBlockCoverage":true},{"functionName":"naiveLength","ranges":[{"startOffset":510,"endOffset":517,"count":0}],"isBlockCoverage":false},{"functionName":"LRUCache","ranges":[{"startOffset":853,"endOffset":1751,"count":1},{"startOffset":920,"endOffset":946,"count":0},{"startOffset":972,"endOffset":984,"count":0},{"startOffset":1069,"endOffset":1125,"count":0},{"startOffset":1235,"endOffset":1246,"count":0},{"startOffset":1350,"endOffset":1363,"count":0},{"startOffset":1439,"endOffset":1476,"count":0},{"startOffset":1484,"endOffset":1530,"count":0}],"isBlockCoverage":true},{"functionName":"set max","ranges":[{"startOffset":1799,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"get max","ranges":[{"startOffset":1972,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"set allowStale","ranges":[{"startOffset":2013,"endOffset":2083,"count":0}],"isBlockCoverage":false},{"functionName":"get allowStale","ranges":[{"startOffset":2086,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"set maxAge","ranges":[{"startOffset":2142,"endOffset":2300,"count":0}],"isBlockCoverage":false},{"functionName":"get maxAge","ranges":[{"startOffset":2303,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"set lengthCalculator","ranges":[{"startOffset":2408,"endOffset":2765,"count":0}],"isBlockCoverage":false},{"functionName":"get lengthCalculator","ranges":[{"startOffset":2768,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"get length","ranges":[{"startOffset":2830,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"get itemCount","ranges":[{"startOffset":2870,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"rforEach","ranges":[{"startOffset":2923,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":3142,"endOffset":3356,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":3360,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":3429,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3502,"endOffset":3858,"count":1},{"startOffset":3535,"endOffset":3560,"count":0},{"startOffset":3561,"endOffset":3593,"count":0},{"startOffset":3595,"endOffset":3673,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3626,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":3862,"endOffset":4064,"count":0}],"isBlockCoverage":false},{"functionName":"dumpLru","ranges":[{"startOffset":4068,"endOffset":4110,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4114,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5380,"endOffset":5513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5517,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":5568,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":5621,"endOffset":5746,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":5750,"endOffset":5801,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":5805,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"prune","ranges":[{"startOffset":6382,"endOffset":6459,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6475,"endOffset":6871,"count":0}],"isBlockCoverage":false},{"functionName":"isStale","ranges":[{"startOffset":6889,"endOffset":7094,"count":0}],"isBlockCoverage":false},{"functionName":"trim","ranges":[{"startOffset":7109,"endOffset":7497,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":7511,"endOffset":7738,"count":0}],"isBlockCoverage":false},{"functionName":"Entry","ranges":[{"startOffset":7756,"endOffset":7923,"count":0}],"isBlockCoverage":false},{"functionName":"forEachStep","ranges":[{"startOffset":7947,"endOffset":8158,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/yallist/yallist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8411,"count":1},{"startOffset":8397,"endOffset":8410,"count":0}],"isBlockCoverage":true},{"functionName":"Yallist","ranges":[{"startOffset":85,"endOffset":517,"count":1},{"startOffset":163,"endOffset":193,"count":0},{"startOffset":263,"endOffset":300,"count":0},{"startOffset":302,"endOffset":371,"count":0},{"startOffset":403,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":321,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.removeNode","ranges":[{"startOffset":550,"endOffset":1001,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshiftNode","ranges":[{"startOffset":1035,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pushNode","ranges":[{"startOffset":1365,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.push","ranges":[{"startOffset":1691,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.unshift","ranges":[{"startOffset":1844,"endOffset":1970,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.pop","ranges":[{"startOffset":1996,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.shift","ranges":[{"startOffset":2252,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEach","ranges":[{"startOffset":2510,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.forEachReverse","ranges":[{"startOffset":2728,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.get","ranges":[{"startOffset":2949,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.getReverse","ranges":[{"startOffset":3215,"endOffset":3448,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.map","ranges":[{"startOffset":3474,"endOffset":3690,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.mapReverse","ranges":[{"startOffset":3723,"endOffset":3939,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduce","ranges":[{"startOffset":3968,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reduceReverse","ranges":[{"startOffset":4399,"endOffset":4808,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArray","ranges":[{"startOffset":4838,"endOffset":5018,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.toArrayReverse","ranges":[{"startOffset":5055,"endOffset":5235,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.slice","ranges":[{"startOffset":5263,"endOffset":5790,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.sliceReverse","ranges":[{"startOffset":5825,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.splice","ranges":[{"startOffset":6391,"endOffset":7034,"count":0}],"isBlockCoverage":false},{"functionName":"Yallist.reverse","ranges":[{"startOffset":7064,"endOffset":7322,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7324,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":7645,"endOffset":7793,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":7795,"endOffset":7946,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":7948,"endOffset":8300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/yallist/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":30,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"Yallist.<computed>","ranges":[{"startOffset":90,"endOffset":204,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1492,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2188,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":388,"endOffset":2161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1287,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7224,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1996,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2726,"endOffset":6700,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":6751,"endOffset":6949,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":7000,"endOffset":7198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6165,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":331,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":457,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":622,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":756,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":1125,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"compareKeys","ranges":[{"startOffset":1171,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1696,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexProperty","ranges":[{"startOffset":2881,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2953,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3029,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3308,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3815,"endOffset":3853,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveProperty","ranges":[{"startOffset":3981,"endOffset":4049,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4053,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4332,"endOffset":5014,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5018,"endOffset":6023,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6027,"endOffset":6079,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2777,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":329,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":705,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolValue","ranges":[{"startOffset":1012,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1115,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":1409,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1544,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":1655,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1792,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSymbolValue","ranges":[{"startOffset":2159,"endOffset":2232,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2236,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":2730,"endOffset":2774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/js-string-escape/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/well-known-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":800,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":672,"endOffset":689,"count":12}],"isBlockCoverage":true},{"functionName":"exports.isWellKnown","ranges":[{"startOffset":715,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getLabel","ranges":[{"startOffset":767,"endOffset":799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/bigInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":718,"endOffset":758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":931,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanValue","ranges":[{"startOffset":425,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":477,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":741,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/null.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":406,"endOffset":497,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":501,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"NumberValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":781,"endOffset":821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/primitiveValues/undefined.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":421,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":516,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/shouldCompareDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"shouldCompareDeep","ranges":[{"startOffset":206,"endOffset":537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/symbolProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2759,"count":1}],"isBlockCoverage":true},{"functionName":"Comparable","ranges":[{"startOffset":247,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":352,"endOffset":533,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":537,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1297,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"Collector","ranges":[{"startOffset":2152,"endOffset":2288,"count":0}],"isBlockCoverage":false},{"functionName":"collectAll","ranges":[{"startOffset":2292,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2542,"endOffset":2635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13805,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":630,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"compareComplexShape","ranges":[{"startOffset":642,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"diffDescriptors","ranges":[{"startOffset":1888,"endOffset":13605,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":13649,"endOffset":13784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/Indenter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"Indenter","ranges":[{"startOffset":33,"endOffset":144,"count":1}],"isBlockCoverage":true},{"functionName":"increase","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"decrease","ranges":[{"startOffset":220,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":292,"endOffset":331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3075,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":241,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptor","ranges":[{"startOffset":295,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2953,"endOffset":3050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/serialize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12422,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4159,"endOffset":4194,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4241,"endOffset":4276,"count":31}],"isBlockCoverage":true},{"functionName":"DescriptorSerializationError","ranges":[{"startOffset":4333,"endOffset":4487,"count":0}],"isBlockCoverage":false},{"functionName":"MissingPluginError","ranges":[{"startOffset":4534,"endOffset":4722,"count":0}],"isBlockCoverage":false},{"functionName":"PointerLookupError","ranges":[{"startOffset":4769,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedPluginError","ranges":[{"startOffset":4987,"endOffset":5271,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedVersion","ranges":[{"startOffset":5373,"endOffset":5576,"count":0}],"isBlockCoverage":false},{"functionName":"shallowSerializeDescriptor","ranges":[{"startOffset":5580,"endOffset":5763,"count":0}],"isBlockCoverage":false},{"functionName":"serializeState","ranges":[{"startOffset":5765,"endOffset":6401,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6403,"endOffset":8213,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeState","ranges":[{"startOffset":8245,"endOffset":8564,"count":0}],"isBlockCoverage":false},{"functionName":"shallowDeserializeDescriptor","ranges":[{"startOffset":8566,"endOffset":8761,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeRecord","ranges":[{"startOffset":8763,"endOffset":9449,"count":0}],"isBlockCoverage":false},{"functionName":"buildPluginMap","ranges":[{"startOffset":9451,"endOffset":10790,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":10792,"endOffset":12387,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/md5-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":66,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/encoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9570,"count":1}],"isBlockCoverage":true},{"functionName":"encodeInteger","ranges":[{"startOffset":689,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"encodeValue","ranges":[{"startOffset":830,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeValue","ranges":[{"startOffset":3047,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"buildBuffer","ranges":[{"startOffset":5536,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6160,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"decodePlugins","ranges":[{"startOffset":7915,"endOffset":8425,"count":0}],"isBlockCoverage":false},{"functionName":"decodeRecord","ranges":[{"startOffset":8465,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"extractVersion","ranges":[{"startOffset":9220,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":9330,"endOffset":9545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/flattenDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"flattenDeep","ranges":[{"startOffset":412,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_baseFlatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"baseFlatten","ranges":[{"startOffset":568,"endOffset":1169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/_isFlattenable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1},{"startOffset":208,"endOffset":219,"count":0}],"isBlockCoverage":true},{"functionName":"isFlattenable","ranges":[{"startOffset":430,"endOffset":574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/concordance/lib/metaDescriptors/pointer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":63,"endOffset":120,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer","ranges":[{"startOffset":249,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":392,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":439,"endOffset":479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/indent-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":741,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/convert-source-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4113,"count":1}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":164,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":389,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64","ranges":[{"startOffset":643,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":740,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":801,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":1292,"endOffset":1593,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":1624,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toBase64","ranges":[{"startOffset":1732,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":1876,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":2165,"endOffset":2216,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":2253,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":2497,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":2605,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":2677,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":2746,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":2837,"endOffset":2911,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":2936,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":3140,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":3358,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":3582,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeComments","ranges":[{"startOffset":3753,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":3854,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":3963,"endOffset":4111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1529,"count":1},{"startOffset":353,"endOffset":465,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":156,"endOffset":242,"count":1},{"startOffset":211,"endOffset":240,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":467,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":655,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":861,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1222,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1385,"endOffset":1528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/write-file-atomic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6812,"count":1}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":593,"endOffset":850,"count":1},{"startOffset":765,"endOffset":848,"count":0}],"isBlockCoverage":true},{"functionName":"getTmpname","ranges":[{"startOffset":875,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupOnExit","ranges":[{"startOffset":1079,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"serializeActiveFile","ranges":[{"startOffset":1240,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"isChownErrOk","ranges":[{"startOffset":1682,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileAsync","ranges":[{"startOffset":1945,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4412,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":4689,"endOffset":6811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/imurmurhash/imurmurhash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4412,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":443,"endOffset":4407,"count":1},{"startOffset":4352,"endOffset":4405,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3","ranges":[{"startOffset":811,"endOffset":1083,"count":1},{"startOffset":896,"endOffset":903,"count":0},{"startOffset":963,"endOffset":980,"count":0},{"startOffset":982,"endOffset":1018,"count":0},{"startOffset":1044,"endOffset":1077,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3.hash","ranges":[{"startOffset":1254,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.result","ranges":[{"startOffset":3193,"endOffset":3797,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.reset","ranges":[{"startOffset":3937,"endOffset":4078,"count":1},{"startOffset":3997,"endOffset":4003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"470","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4124,"count":1},{"startOffset":379,"endOffset":405,"count":0},{"startOffset":456,"endOffset":503,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":1479,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2013,"endOffset":2731,"count":13}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":2052,"endOffset":2729,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":2759,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2841,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":3433,"endOffset":3702,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":3743,"endOffset":4123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28198,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2200,"endOffset":2384,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":2964,"endOffset":2996,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":3550,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3668,"endOffset":4647,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":4763,"endOffset":5703,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":5705,"endOffset":7349,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":7351,"endOffset":8953,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":8955,"endOffset":11751,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":11753,"endOffset":12360,"count":0}],"isBlockCoverage":false},{"functionName":"ok","ranges":[{"startOffset":12442,"endOffset":12503,"count":0}],"isBlockCoverage":false},{"functionName":"equal","ranges":[{"startOffset":12650,"endOffset":13021,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":13128,"endOffset":13503,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":13586,"endOffset":13950,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":14039,"endOffset":14411,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":14459,"endOffset":14847,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":14898,"endOffset":15294,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":15317,"endOffset":15629,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":15656,"endOffset":15976,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":16000,"endOffset":16373,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":16377,"endOffset":17094,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":17096,"endOffset":20454,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":20456,"endOffset":20662,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":20664,"endOffset":21028,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":21030,"endOffset":21744,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":21746,"endOffset":23360,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":23362,"endOffset":23959,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":23961,"endOffset":24611,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":24629,"endOffset":24723,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":24743,"endOffset":24855,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":24880,"endOffset":24974,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":25000,"endOffset":25112,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":25132,"endOffset":26501,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":26504,"endOffset":27576,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27593,"endOffset":27685,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":27710,"endOffset":27816,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":27896,"endOffset":27965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"internal/assert/assertion_error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17019,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1418,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1696,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2305,"endOffset":10859,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":10900,"endOffset":15822,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":15826,"endOffset":15901,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15905,"endOffset":16982,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"internal/assert/calltracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2344,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":395,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"calls","ranges":[{"startOffset":426,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1447,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":2082,"endOffset":2310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-typedarray/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1016,"count":1}],"isBlockCoverage":true},{"functionName":"isTypedArray","ranges":[{"startOffset":475,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictTypedArray","ranges":[{"startOffset":583,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"isLooseTypedArray","ranges":[{"startOffset":945,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/typedarray-to-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"typedarrayToBuffer","ranges":[{"startOffset":245,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"477","url":"worker_threads.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":558,"count":1}],"isBlockCoverage":false}]},{"scriptId":"478","url":"internal/worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12656,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1865,"endOffset":1890,"count":0}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":2046,"endOffset":2126,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":2169,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7095,"endOffset":7585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7589,"endOffset":7685,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7689,"endOffset":7858,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7862,"endOffset":8696,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8700,"endOffset":9168,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":9172,"endOffset":9287,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":9291,"endOffset":10125,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":10129,"endOffset":10235,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":10239,"endOffset":10351,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":10355,"endOffset":10454,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":10458,"endOffset":10516,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":10520,"endOffset":10580,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":10584,"endOffset":10644,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":10648,"endOffset":10784,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":10788,"endOffset":11197,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":11201,"endOffset":11523,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":11597,"endOffset":12191,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":12193,"endOffset":12479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"internal/worker/io.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8142,"count":1}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":2394,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":2552,"endOffset":2629,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":2768,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePortCloseEvent","ranges":[{"startOffset":3231,"endOffset":3270,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":3343,"endOffset":3416,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":3577,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":3808,"endOffset":4416,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":4422,"endOffset":5739,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":5789,"endOffset":6138,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":6142,"endOffset":6447,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":6498,"endOffset":6647,"count":0}],"isBlockCoverage":false},{"functionName":"_writev","ranges":[{"startOffset":6651,"endOffset":6964,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":6968,"endOffset":7147,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7151,"endOffset":7390,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":7394,"endOffset":7663,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":7665,"endOffset":7826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"internal/event_target.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15974,"count":1}],"isBlockCoverage":false},{"functionName":"lazyNow","ranges":[{"startOffset":1135,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"isTrusted","ranges":[{"startOffset":1736,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"Event","ranges":[{"startOffset":1766,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2448,"endOffset":2899,"count":0}],"isBlockCoverage":false},{"functionName":"stopImmediatePropagation","ranges":[{"startOffset":2903,"endOffset":2959,"count":0}],"isBlockCoverage":false},{"functionName":"preventDefault","ranges":[{"startOffset":2963,"endOffset":3021,"count":0}],"isBlockCoverage":false},{"functionName":"get target","ranges":[{"startOffset":3025,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"get currentTarget","ranges":[{"startOffset":3066,"endOffset":3111,"count":0}],"isBlockCoverage":false},{"functionName":"get srcElement","ranges":[{"startOffset":3114,"endOffset":3156,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":3160,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelable","ranges":[{"startOffset":3198,"endOffset":3244,"count":0}],"isBlockCoverage":false},{"functionName":"get defaultPrevented","ranges":[{"startOffset":3248,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"get timeStamp","ranges":[{"startOffset":3337,"endOffset":3381,"count":0}],"isBlockCoverage":false},{"functionName":"composedPath","ranges":[{"startOffset":3558,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"get returnValue","ranges":[{"startOffset":3624,"endOffset":3676,"count":0}],"isBlockCoverage":false},{"functionName":"get bubbles","ranges":[{"startOffset":3679,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"get composed","ranges":[{"startOffset":3722,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"get eventPhase","ranges":[{"startOffset":3767,"endOffset":3846,"count":0}],"isBlockCoverage":false},{"functionName":"get cancelBubble","ranges":[{"startOffset":3849,"endOffset":3905,"count":0}],"isBlockCoverage":false},{"functionName":"set cancelBubble","ranges":[{"startOffset":3908,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"stopPropagation","ranges":[{"startOffset":3993,"endOffset":4054,"count":0}],"isBlockCoverage":false},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":4058,"endOffset":4156,"count":1}],"isBlockCoverage":false},{"functionName":"Listener","ranges":[{"startOffset":4770,"endOffset":5253,"count":0}],"isBlockCoverage":false},{"functionName":"same","ranges":[{"startOffset":5257,"endOffset":5353,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":5357,"endOffset":5521,"count":0}],"isBlockCoverage":false},{"functionName":"initEventTarget","ranges":[{"startOffset":5525,"endOffset":5588,"count":0}],"isBlockCoverage":false},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5796,"endOffset":5826,"count":1}],"isBlockCoverage":false},{"functionName":"EventTarget","ranges":[{"startOffset":5831,"endOffset":5877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5881,"endOffset":5944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5947,"endOffset":5998,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":6002,"endOffset":7806,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":7810,"endOffset":8639,"count":0}],"isBlockCoverage":false},{"functionName":"dispatchEvent","ranges":[{"startOffset":8643,"endOffset":9029,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9033,"endOffset":10382,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10386,"endOffset":10686,"count":0}],"isBlockCoverage":false},{"functionName":"initNodeEventTarget","ranges":[{"startOffset":11025,"endOffset":11237,"count":0}],"isBlockCoverage":false},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":11285,"endOffset":11316,"count":1}],"isBlockCoverage":false},{"functionName":"NodeEventTarget","ranges":[{"startOffset":11321,"endOffset":11384,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11388,"endOffset":12136,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":12140,"endOffset":12242,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxListeners","ranges":[{"startOffset":12246,"endOffset":12301,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":12305,"endOffset":12367,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":12371,"endOffset":12493,"count":0}],"isBlockCoverage":false},{"functionName":"off","ranges":[{"startOffset":12497,"endOffset":12603,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":12607,"endOffset":12724,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":12728,"endOffset":12846,"count":0}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":12850,"endOffset":12977,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":12981,"endOffset":13139,"count":0}],"isBlockCoverage":false},{"functionName":"removeAllListeners","ranges":[{"startOffset":13143,"endOffset":13311,"count":0}],"isBlockCoverage":false},{"functionName":"shouldAddListener","ranges":[{"startOffset":13758,"endOffset":14096,"count":0}],"isBlockCoverage":false},{"functionName":"validateEventListenerOptions","ranges":[{"startOffset":14098,"endOffset":14446,"count":0}],"isBlockCoverage":false},{"functionName":"isEventTarget","ranges":[{"startOffset":14751,"endOffset":14850,"count":0}],"isBlockCoverage":false},{"functionName":"addCatch","ranges":[{"startOffset":14852,"endOffset":15198,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":15200,"endOffset":15295,"count":0}],"isBlockCoverage":false},{"functionName":"defineEventHandler","ranges":[{"startOffset":15297,"endOffset":15793,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"internal/error_serdes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4030,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":692,"endOffset":1491,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":1493,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":1912,"endOffset":2032,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":2059,"endOffset":2229,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2246,"endOffset":3150,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":3169,"endOffset":3973,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/mem/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2539,"count":1}],"isBlockCoverage":true},{"functionName":"mem","ranges":[{"startOffset":671,"endOffset":1496,"count":2},{"startOffset":763,"endOffset":915,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":937,"endOffset":1363,"count":0}],"isBlockCoverage":false},{"functionName":"mem.decorator","ranges":[{"startOffset":1872,"endOffset":2129,"count":0}],"isBlockCoverage":false},{"functionName":"mem.clear","ranges":[{"startOffset":2228,"endOffset":2515,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/mem/node_modules/mimic-fn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2930,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":36,"endOffset":902,"count":4},{"startOffset":295,"endOffset":322,"count":2},{"startOffset":324,"endOffset":592,"count":2},{"startOffset":594,"endOffset":608,"count":0},{"startOffset":608,"endOffset":805,"count":2},{"startOffset":805,"endOffset":829,"count":0},{"startOffset":831,"endOffset":845,"count":0},{"startOffset":845,"endOffset":901,"count":2}],"isBlockCoverage":true},{"functionName":"canCopyProperty","ranges":[{"startOffset":1108,"endOffset":1474,"count":2},{"startOffset":1214,"endOffset":1471,"count":0}],"isBlockCoverage":true},{"functionName":"changePrototype","ranges":[{"startOffset":1501,"endOffset":1679,"count":2},{"startOffset":1633,"endOffset":1678,"count":0}],"isBlockCoverage":true},{"functionName":"wrappedToString","ranges":[{"startOffset":1706,"endOffset":1769,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":2238,"endOffset":2620,"count":2},{"startOffset":2290,"endOffset":2294,"count":0}],"isBlockCoverage":true},{"functionName":"mimicFn","ranges":[{"startOffset":2639,"endOffset":2901,"count":2},{"startOffset":2761,"endOffset":2824,"count":4}],"isBlockCoverage":true}]},{"scriptId":"484","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/map-age-cleaner/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3903,"count":1}],"isBlockCoverage":true},{"functionName":"__awaiter","ranges":[{"startOffset":58,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":671,"endOffset":752,"count":1},{"startOffset":723,"endOffset":728,"count":0}],"isBlockCoverage":true},{"functionName":"mapAgeCleaner","ranges":[{"startOffset":872,"endOffset":3774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/p-defer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/concordance-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3937,"count":1},{"startOffset":3680,"endOffset":3692,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3557,"endOffset":3633,"count":112},{"startOffset":3600,"endOffset":3631,"count":62}],"isBlockCoverage":true},{"functionName":"get maxDepth","ranges":[{"startOffset":3782,"endOffset":3858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3899,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi256","ranges":[{"startOffset":71,"endOffset":129,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":87,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":152,"endOffset":240,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":168,"endOffset":240,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":243,"endOffset":3781,"count":5},{"startOffset":1732,"endOffset":2064,"count":15},{"startOffset":1792,"endOffset":1971,"count":225}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2601,"endOffset":3097,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3149,"endOffset":3624,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3680,"endOffset":3731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":62},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"489","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":315,"count":62},{"startOffset":294,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"490","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lodash/cloneDeepWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1046,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":817,"endOffset":1012,"count":1},{"startOffset":921,"endOffset":932,"count":0}],"isBlockCoverage":true}]},{"scriptId":"491","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1956,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":1437,"endOffset":1927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"492","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/elementFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10519,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":188,"endOffset":10493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/node_modules/arrify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":152,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"494","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/diffShallow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12237,"count":1}],"isBlockCoverage":true},{"functionName":"diffShallow","ranges":[{"startOffset":14,"endOffset":12207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/escapeText.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"escapeText","ranges":[{"startOffset":14,"endOffset":210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@concordance/react/lib/testJsonFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1551,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":48,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/serialize-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4606,"count":1}],"isBlockCoverage":true},{"functionName":"isAvaAssertionError","ranges":[{"startOffset":360,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":451,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"extractSource","ranges":[{"startOffset":635,"endOffset":1252,"count":0}],"isBlockCoverage":false},{"functionName":"buildSource","ranges":[{"startOffset":1254,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"trySerializeError","ranges":[{"startOffset":1981,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3944,"endOffset":4571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/clean-yaml-object/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2176,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"cleanYamlObj","ranges":[{"startOffset":132,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"setProp","ranges":[{"startOffset":1903,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"defaultFilter","ranges":[{"startOffset":2133,"endOffset":2175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"isError","ranges":[{"startOffset":160,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/stack-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7698,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":175,"endOffset":283,"count":57}],"isBlockCoverage":true},{"functionName":"StackUtils","ranges":[{"startOffset":466,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"nodeInternals","ranges":[{"startOffset":947,"endOffset":994,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":998,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"captureString","ranges":[{"startOffset":2098,"endOffset":2496,"count":0}],"isBlockCoverage":false},{"functionName":"capture","ranges":[{"startOffset":2500,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":3077,"endOffset":4052,"count":0}],"isBlockCoverage":false},{"functionName":"parseLine","ranges":[{"startOffset":4056,"endOffset":6125,"count":0}],"isBlockCoverage":false},{"functionName":"setFile","ranges":[{"startOffset":6129,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPackagesRegExp","ranges":[{"startOffset":6368,"endOffset":6650,"count":1},{"startOffset":6474,"endOffset":6649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6515,"endOffset":6545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/stack-utils/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":85,"endOffset":234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":false}]},{"scriptId":"503","url":"internal/source_map/source_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10490,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":3884,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3998,"endOffset":4060,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4098,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4197,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4506,"endOffset":8432,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":8490,"endOffset":8559,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":8649,"endOffset":9582,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":9649,"endOffset":9996,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":10191,"endOffset":10454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25292,"count":1}],"isBlockCoverage":true},{"functionName":"formatDescriptorDiff","ranges":[{"startOffset":351,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptorWithLabel","ranges":[{"startOffset":607,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithLabel","ranges":[{"startOffset":763,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"formatPowerAssertValue","ranges":[{"startOffset":898,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":1020,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1103,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":1136,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":1223,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"checkAssertionMessage","ranges":[{"startOffset":2019,"endOffset":2338,"count":7},{"startOffset":2108,"endOffset":2138,"count":0},{"startOffset":2159,"endOffset":2337,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithLongStackTrace","ranges":[{"startOffset":2396,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"validateExpectations","ranges":[{"startOffset":2595,"endOffset":5393,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpectations","ranges":[{"startOffset":5512,"endOffset":7824,"count":0}],"isBlockCoverage":false},{"functionName":"Assertions","ranges":[{"startOffset":7846,"endOffset":25256,"count":14},{"startOffset":24880,"endOffset":25253,"count":0}],"isBlockCoverage":true},{"functionName":"withSkip","ranges":[{"startOffset":8095,"endOffset":8166,"count":266}],"isBlockCoverage":true},{"functionName":"withPowerAssert","ranges":[{"startOffset":8346,"endOffset":8693,"count":0}],"isBlockCoverage":false},{"functionName":"checkMessage","ranges":[{"startOffset":8719,"endOffset":8964,"count":7},{"startOffset":8879,"endOffset":8963,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8990,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9039,"endOffset":9227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9252,"endOffset":10155,"count":7},{"startOffset":9322,"endOffset":9340,"count":0},{"startOffset":9396,"endOffset":10151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10181,"endOffset":10512,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10544,"endOffset":11156,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11191,"endOffset":11718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11745,"endOffset":12999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13028,"endOffset":14606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14640,"endOffset":17003,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17035,"endOffset":17622,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17659,"endOffset":19535,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19566,"endOffset":21366,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21395,"endOffset":21691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21719,"endOffset":22011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22038,"endOffset":22318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22346,"endOffset":22630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22658,"endOffset":23552,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23583,"endOffset":24498,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24563,"endOffset":24874,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24967,"endOffset":25242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/is-promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":65,"endOffset":200,"count":14},{"startOffset":106,"endOffset":163,"count":7},{"startOffset":134,"endOffset":162,"count":0},{"startOffset":164,"endOffset":197,"count":7}],"isBlockCoverage":true}]},{"scriptId":"506","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/like-selector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"isLikeSelector","ranges":[{"startOffset":14,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"selectComparable","ranges":[{"startOffset":377,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19599,"count":1}],"isBlockCoverage":true},{"functionName":"formatErrorValue","ranges":[{"startOffset":337,"endOffset":474,"count":0}],"isBlockCoverage":false},{"functionName":"captureSavedError","ranges":[{"startOffset":502,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext","ranges":[{"startOffset":746,"endOffset":4284,"count":14}],"isBlockCoverage":true},{"functionName":"pass","ranges":[{"startOffset":785,"endOffset":830,"count":7}],"isBlockCoverage":true},{"functionName":"pending","ranges":[{"startOffset":844,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":911,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":969,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"compareWithSnapshot","ranges":[{"startOffset":1040,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.snapshot.skip","ranges":[{"startOffset":1272,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.log","ranges":[{"startOffset":1323,"endOffset":1562,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan","ranges":[{"startOffset":1579,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan.skip","ranges":[{"startOffset":1657,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.timeout","ranges":[{"startOffset":1685,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.teardown","ranges":[{"startOffset":1758,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.try","ranges":[{"startOffset":1822,"endOffset":4280,"count":0}],"isBlockCoverage":false},{"functionName":"get end","ranges":[{"startOffset":4287,"endOffset":4426,"count":0}],"isBlockCoverage":false},{"functionName":"get title","ranges":[{"startOffset":4429,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":4482,"endOffset":4545,"count":14}],"isBlockCoverage":true},{"functionName":"set context","ranges":[{"startOffset":4548,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"get passed","ranges":[{"startOffset":4621,"endOffset":4732,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgStart","ranges":[{"startOffset":4735,"endOffset":4836,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgEnd","ranges":[{"startOffset":4839,"endOffset":4898,"count":0}],"isBlockCoverage":false},{"functionName":"Test","ranges":[{"startOffset":4916,"endOffset":8138,"count":14},{"startOffset":5020,"endOffset":5025,"count":0}],"isBlockCoverage":true},{"functionName":"Test.compareWithSnapshot","ranges":[{"startOffset":5712,"endOffset":6423,"count":0}],"isBlockCoverage":false},{"functionName":"Test.skipSnapshot","ranges":[{"startOffset":6448,"endOffset":6791,"count":0}],"isBlockCoverage":false},{"functionName":"Test.runAttempt","ranges":[{"startOffset":6814,"endOffset":7627,"count":0}],"isBlockCoverage":false},{"functionName":"bindEndCallback","ranges":[{"startOffset":8141,"endOffset":8544,"count":0}],"isBlockCoverage":false},{"functionName":"endCallback","ranges":[{"startOffset":8547,"endOffset":9019,"count":0}],"isBlockCoverage":false},{"functionName":"createExecutionContext","ranges":[{"startOffset":9022,"endOffset":9088,"count":14}],"isBlockCoverage":true},{"functionName":"countPassedAssertion","ranges":[{"startOffset":9091,"endOffset":9443,"count":7},{"startOffset":9138,"endOffset":9229,"count":0},{"startOffset":9267,"endOffset":9392,"count":0}],"isBlockCoverage":true},{"functionName":"addLog","ranges":[{"startOffset":9446,"endOffset":9487,"count":0}],"isBlockCoverage":false},{"functionName":"addPendingAssertion","ranges":[{"startOffset":9490,"endOffset":10077,"count":0}],"isBlockCoverage":false},{"functionName":"addFailedAssertion","ranges":[{"startOffset":10080,"endOffset":10465,"count":0}],"isBlockCoverage":false},{"functionName":"finishAttempt","ranges":[{"startOffset":10468,"endOffset":11486,"count":0}],"isBlockCoverage":false},{"functionName":"saveFirstError","ranges":[{"startOffset":11489,"endOffset":11575,"count":0}],"isBlockCoverage":false},{"functionName":"plan","ranges":[{"startOffset":11578,"endOffset":11874,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":11877,"endOffset":12408,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":12411,"endOffset":12591,"count":7},{"startOffset":12472,"endOffset":12588,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":12594,"endOffset":12689,"count":14}],"isBlockCoverage":true},{"functionName":"addTeardown","ranges":[{"startOffset":12692,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"runTeardowns","ranges":[{"startOffset":13084,"endOffset":13394,"count":14},{"startOffset":13190,"endOffset":13219,"count":0},{"startOffset":13257,"endOffset":13391,"count":0}],"isBlockCoverage":true},{"functionName":"verifyPlan","ranges":[{"startOffset":13397,"endOffset":13758,"count":14},{"startOffset":13463,"endOffset":13501,"count":0},{"startOffset":13503,"endOffset":13755,"count":0}],"isBlockCoverage":true},{"functionName":"verifyAssertions","ranges":[{"startOffset":13761,"endOffset":14406,"count":14},{"startOffset":13806,"endOffset":13822,"count":0},{"startOffset":13860,"endOffset":13978,"count":0},{"startOffset":14018,"endOffset":14121,"count":0},{"startOffset":14157,"endOffset":14403,"count":7},{"startOffset":14191,"endOffset":14257,"count":0},{"startOffset":14289,"endOffset":14307,"count":0},{"startOffset":14309,"endOffset":14399,"count":0}],"isBlockCoverage":true},{"functionName":"trackThrows","ranges":[{"startOffset":14409,"endOffset":14475,"count":0}],"isBlockCoverage":false},{"functionName":"detectImproperThrows","ranges":[{"startOffset":14478,"endOffset":15151,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPendingThrowsAssertion","ranges":[{"startOffset":15154,"endOffset":15591,"count":0}],"isBlockCoverage":false},{"functionName":"attributeLeakedError","ranges":[{"startOffset":15594,"endOffset":15743,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":15746,"endOffset":15928,"count":14},{"startOffset":15863,"endOffset":15925,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":15931,"endOffset":18745,"count":14},{"startOffset":16029,"endOffset":16350,"count":0},{"startOffset":16441,"endOffset":16489,"count":7},{"startOffset":16585,"endOffset":16734,"count":0},{"startOffset":16761,"endOffset":16879,"count":7},{"startOffset":16911,"endOffset":17765,"count":0},{"startOffset":17782,"endOffset":18744,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16612,"endOffset":16728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17364,"endOffset":17759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17806,"endOffset":18711,"count":7}],"isBlockCoverage":true},{"functionName":"finishDueToAttributedError","ranges":[{"startOffset":17857,"endOffset":17899,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToTimeout","ranges":[{"startOffset":17932,"endOffset":17974,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToInactivity","ranges":[{"startOffset":18010,"endOffset":18250,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18277,"endOffset":18611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18624,"endOffset":18652,"count":7}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":18748,"endOffset":19572,"count":14},{"startOffset":18847,"endOffset":18900,"count":0},{"startOffset":19144,"endOffset":19298,"count":0}],"isBlockCoverage":true}]},{"scriptId":"508","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/plur/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":87,"endOffset":987,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/irregular-plurals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":165,"endOffset":227,"count":5}],"isBlockCoverage":true}]},{"scriptId":"510","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/dependency-tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":151,"endOffset":311,"count":3},{"startOffset":205,"endOffset":219,"count":1},{"startOffset":219,"endOffset":310,"count":2}],"isBlockCoverage":true},{"functionName":"track","ranges":[{"startOffset":337,"endOffset":552,"count":283},{"startOffset":401,"endOffset":415,"count":0},{"startOffset":452,"endOffset":483,"count":2}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":578,"endOffset":869,"count":1},{"startOffset":659,"endOffset":867,"count":3}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":740,"endOffset":863,"count":283}],"isBlockCoverage":true}]},{"scriptId":"511","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/line-numbers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2440,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":0,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"findTest","ranges":[{"startOffset":579,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":1169,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1284,"endOffset":2438,"count":1},{"startOffset":1371,"endOffset":2437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1632,"endOffset":2435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"512","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/source-map-support.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19729,"count":1},{"startOffset":172,"endOffset":235,"count":0},{"startOffset":238,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"dynamicRequire","ranges":[{"startOffset":444,"endOffset":516,"count":2}],"isBlockCoverage":true},{"functionName":"isInBrowser","ranges":[{"startOffset":1174,"endOffset":1478,"count":12},{"startOffset":1236,"endOffset":1248,"count":0},{"startOffset":1296,"endOffset":1380,"count":0},{"startOffset":1381,"endOffset":1474,"count":0}],"isBlockCoverage":true},{"functionName":"hasGlobalProcessEventEmitter","ranges":[{"startOffset":1480,"endOffset":1625,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":1627,"endOffset":1829,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1665,"endOffset":1826,"count":24},{"startOffset":1723,"endOffset":1805,"count":32},{"startOffset":1770,"endOffset":1799,"count":3},{"startOffset":1805,"endOffset":1825,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1912,"endOffset":2942,"count":12},{"startOffset":2040,"endOffset":2341,"count":0},{"startOffset":2375,"endOffset":2416,"count":0},{"startOffset":2460,"endOffset":2720,"count":0},{"startOffset":2751,"endOffset":2845,"count":3},{"startOffset":2850,"endOffset":2894,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2174,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":3117,"endOffset":3605,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":3607,"endOffset":4650,"count":12},{"startOffset":3685,"endOffset":4173,"count":0},{"startOffset":4576,"endOffset":4594,"count":0},{"startOffset":4625,"endOffset":4649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5057,"endOffset":5798,"count":12},{"startOffset":5168,"endOffset":5797,"count":0}],"isBlockCoverage":true},{"functionName":"mapSourcePosition","ranges":[{"startOffset":5802,"endOffset":7614,"count":298},{"startOffset":5910,"endOffset":6822,"count":12},{"startOffset":6068,"endOffset":6705,"count":0},{"startOffset":6923,"endOffset":6981,"count":0},{"startOffset":6983,"endOffset":7592,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6450,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":7754,"endOffset":8450,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":8846,"endOffset":10836,"count":298},{"startOffset":8940,"endOffset":8974,"count":0},{"startOffset":9048,"endOffset":9064,"count":0},{"startOffset":9066,"endOffset":9185,"count":0},{"startOffset":9244,"endOffset":9474,"count":0},{"startOffset":9897,"endOffset":9913,"count":179},{"startOffset":9936,"endOffset":10558,"count":150},{"startOffset":10080,"endOffset":10112,"count":0},{"startOffset":10178,"endOffset":10479,"count":143},{"startOffset":10239,"endOffset":10280,"count":67},{"startOffset":10330,"endOffset":10418,"count":140},{"startOffset":10420,"endOffset":10473,"count":28},{"startOffset":10479,"endOffset":10554,"count":7},{"startOffset":10558,"endOffset":10757,"count":148},{"startOffset":10583,"endOffset":10642,"count":29},{"startOffset":10620,"endOffset":10636,"count":0},{"startOffset":10642,"endOffset":10757,"count":119},{"startOffset":10666,"endOffset":10697,"count":117},{"startOffset":10697,"endOffset":10757,"count":2},{"startOffset":10775,"endOffset":10819,"count":296}],"isBlockCoverage":true},{"functionName":"cloneCallSite","ranges":[{"startOffset":10838,"endOffset":11143,"count":298}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10956,"endOffset":11084,"count":5960},{"startOffset":11017,"endOffset":11065,"count":5364},{"startOffset":11066,"endOffset":11079,"count":596}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":11019,"endOffset":11065,"count":1492}],"isBlockCoverage":true},{"functionName":"wrapCallSite","ranges":[{"startOffset":11145,"endOffset":13493,"count":298},{"startOffset":11257,"endOffset":11316,"count":0},{"startOffset":11340,"endOffset":11393,"count":0},{"startOffset":11633,"endOffset":11668,"count":0},{"startOffset":12275,"endOffset":12279,"count":0},{"startOffset":12300,"endOffset":12324,"count":0},{"startOffset":12325,"endOffset":12342,"count":0},{"startOffset":12343,"endOffset":12361,"count":0},{"startOffset":12363,"endOffset":12400,"count":0},{"startOffset":13129,"endOffset":13238,"count":0},{"startOffset":13254,"endOffset":13492,"count":0}],"isBlockCoverage":true},{"functionName":"frame.getFunctionName","ranges":[{"startOffset":12660,"endOffset":12829,"count":298},{"startOffset":12711,"endOffset":12759,"count":32},{"startOffset":12759,"endOffset":12822,"count":266}],"isBlockCoverage":true},{"functionName":"frame.getFileName","ranges":[{"startOffset":12855,"endOffset":12893,"count":0}],"isBlockCoverage":false},{"functionName":"frame.getLineNumber","ranges":[{"startOffset":12921,"endOffset":12957,"count":298}],"isBlockCoverage":true},{"functionName":"frame.getColumnNumber","ranges":[{"startOffset":12987,"endOffset":13029,"count":298}],"isBlockCoverage":true},{"functionName":"frame.getScriptNameOrSourceURL","ranges":[{"startOffset":13068,"endOffset":13106,"count":298}],"isBlockCoverage":true},{"functionName":"frame.getEvalOrigin","ranges":[{"startOffset":13352,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":13605,"endOffset":14218,"count":32},{"startOffset":13683,"endOffset":13741,"count":0},{"startOffset":13767,"endOffset":13777,"count":0},{"startOffset":13809,"endOffset":13814,"count":2},{"startOffset":13990,"endOffset":14109,"count":298}],"isBlockCoverage":true},{"functionName":"getErrorSource","ranges":[{"startOffset":14285,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"printErrorAndExit","ranges":[{"startOffset":15106,"endOffset":15483,"count":0}],"isBlockCoverage":false},{"functionName":"shimEmitUncaughtException","ranges":[{"startOffset":15485,"endOffset":15904,"count":0}],"isBlockCoverage":false},{"functionName":"exports.install","ranges":[{"startOffset":16228,"endOffset":19374,"count":2},{"startOffset":16268,"endOffset":16273,"count":0},{"startOffset":16303,"endOffset":16534,"count":1},{"startOffset":16409,"endOffset":16530,"count":0},{"startOffset":16660,"endOffset":16807,"count":0},{"startOffset":16942,"endOffset":17097,"count":1},{"startOffset":16987,"endOffset":17032,"count":0},{"startOffset":17190,"endOffset":17207,"count":0},{"startOffset":17209,"endOffset":17703,"count":0},{"startOffset":17841,"endOffset":17884,"count":0},{"startOffset":17966,"endOffset":18056,"count":1},{"startOffset":18194,"endOffset":18200,"count":0},{"startOffset":18657,"endOffset":18698,"count":0},{"startOffset":18705,"endOffset":18716,"count":0},{"startOffset":19255,"endOffset":19288,"count":0},{"startOffset":19290,"endOffset":19368,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":17447,"endOffset":17632,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resetRetrieveHandlers","ranges":[{"startOffset":19409,"endOffset":19728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"513","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"514","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14356,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":3228,"endOffset":4140,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":4246,"endOffset":5137,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":6124,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9271,"endOffset":10865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":11038,"endOffset":12997,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":13057,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13608,"endOffset":14111,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":14218,"endOffset":14304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"515","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"516","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"517","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1},{"startOffset":6427,"endOffset":6440,"count":0},{"startOffset":6604,"endOffset":6619,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4734,"endOffset":5803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5859,"endOffset":5939,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5945,"endOffset":5982,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6273,"endOffset":6375,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6443,"endOffset":6550,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6622,"endOffset":7404,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7741,"endOffset":8377,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8830,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9562,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9947,"endOffset":10548,"count":0}],"isBlockCoverage":false},{"functionName":"parseSourceMapInput","ranges":[{"startOffset":10788,"endOffset":10881,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceURL","ranges":[{"startOffset":11047,"endOffset":12892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40562,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":805,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2628,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2970,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3188,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3567,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4634,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6792,"endOffset":9416,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10950,"endOffset":13394,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer._findSourceIndex","ranges":[{"startOffset":13679,"endOffset":14207,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":14544,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16796,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":16922,"endOffset":17098,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":17346,"endOffset":20551,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":20750,"endOffset":21569,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":21724,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":23769,"endOffset":25022,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":25195,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":25678,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":28401,"endOffset":29507,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":31455,"endOffset":32949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33343,"endOffset":33607,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":34426,"endOffset":35605,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":35780,"endOffset":35951,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":36179,"endOffset":36618,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":37381,"endOffset":38292,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":38543,"endOffset":40498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map-support/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13808,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6757,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7448,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8168,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8763,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9399,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10120,"endOffset":10264,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10508,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11111,"endOffset":11230,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11371,"endOffset":13772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/buffer-from/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1595,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayBuffer","ranges":[{"startOffset":184,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":281,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":824,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"bufferFrom","ranges":[{"startOffset":1154,"endOffset":1565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/install.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":105,"endOffset":200,"count":1},{"startOffset":173,"endOffset":178,"count":0}],"isBlockCoverage":true},{"functionName":"retrieveSourceMap","ranges":[{"startOffset":296,"endOffset":482,"count":8},{"startOffset":347,"endOffset":446,"count":0}],"isBlockCoverage":true}]},{"scriptId":"526","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":431,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":215,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":301,"endOffset":396,"count":1},{"startOffset":369,"endOffset":374,"count":0}],"isBlockCoverage":true}]},{"scriptId":"528","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/test/library/visitor.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2504,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":180,"endOffset":407,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":426,"endOffset":690,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":714,"endOffset":992,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1017,"endOffset":1283,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1299,"endOffset":1543,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1563,"endOffset":1822,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1851,"endOffset":2162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2196,"endOffset":2461,"count":1}],"isBlockCoverage":true}]},{"scriptId":"529","url":"internal/deps/cjs-module-lexer/dist/lexer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31679,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":231,"endOffset":903,"count":3},{"startOffset":261,"endOffset":296,"count":0},{"startOffset":337,"endOffset":352,"count":0},{"startOffset":388,"endOffset":423,"count":0},{"startOffset":447,"endOffset":449,"count":0},{"startOffset":521,"endOffset":668,"count":0},{"startOffset":716,"endOffset":748,"count":1},{"startOffset":761,"endOffset":791,"count":4},{"startOffset":804,"endOffset":863,"count":35},{"startOffset":852,"endOffset":862,"count":34}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":903,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":1004,"endOffset":1078,"count":3},{"startOffset":1055,"endOffset":1077,"count":7796}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1084,"endOffset":31679,"count":2},{"startOffset":1108,"endOffset":31678,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1114,"endOffset":31674,"count":1},{"startOffset":31543,"endOffset":31587,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31568,"endOffset":31586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6849,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":173,"endOffset":216,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":305,"endOffset":364,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":446,"endOffset":496,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":578,"endOffset":628,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":703,"endOffset":752,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":829,"endOffset":877,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":954,"endOffset":1003,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1080,"endOffset":1129,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1214,"endOffset":1268,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1357,"endOffset":1415,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1505,"endOffset":1564,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1650,"endOffset":1705,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1795,"endOffset":1854,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1945,"endOffset":2005,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2085,"endOffset":2134,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2218,"endOffset":2271,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2356,"endOffset":2410,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2488,"endOffset":2538,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2620,"endOffset":2674,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2757,"endOffset":2812,"count":15}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2894,"endOffset":2952,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3038,"endOffset":3100,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3187,"endOffset":3250,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3335,"endOffset":3395,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3484,"endOffset":3548,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3638,"endOffset":3703,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3777,"endOffset":3819,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3897,"endOffset":3943,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4022,"endOffset":4069,"count":8}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":4444,"endOffset":4594,"count":1}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":4541,"endOffset":4575,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4665,"endOffset":4703,"count":7}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":4709,"endOffset":4837,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":4784,"endOffset":4818,"count":6}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":4839,"endOffset":4997,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":4944,"endOffset":4978,"count":6}],"isBlockCoverage":true},{"functionName":"_template","ranges":[{"startOffset":4999,"endOffset":5157,"count":1}],"isBlockCoverage":true},{"functionName":"_template","ranges":[{"startOffset":5104,"endOffset":5138,"count":6}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":5371,"endOffset":5557,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":5559,"endOffset":6302,"count":1},{"startOffset":5641,"endOffset":5714,"count":0},{"startOffset":5716,"endOffset":5812,"count":0},{"startOffset":5814,"endOffset":5942,"count":0},{"startOffset":5965,"endOffset":6301,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":6304,"endOffset":6399,"count":4},{"startOffset":6378,"endOffset":6396,"count":0}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":6619,"endOffset":6678,"count":0}],"isBlockCoverage":false},{"functionName":"Plugin","ranges":[{"startOffset":6723,"endOffset":6849,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/file/file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6726,"count":1}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":107,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":263,"endOffset":422,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":369,"endOffset":403,"count":6}],"isBlockCoverage":true},{"functionName":"_codeFrame","ranges":[{"startOffset":424,"endOffset":562,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":564,"endOffset":704,"count":0}],"isBlockCoverage":false},{"functionName":"_helperModuleTransforms","ranges":[{"startOffset":706,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":886,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1074,"endOffset":1817,"count":1},{"startOffset":1156,"endOffset":1229,"count":0},{"startOffset":1231,"endOffset":1327,"count":0},{"startOffset":1329,"endOffset":1457,"count":0},{"startOffset":1480,"endOffset":1816,"count":0}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":1879,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"File","ranges":[{"startOffset":2019,"endOffset":2817,"count":7}],"isBlockCoverage":true},{"functionName":"getCode","ranges":[{"startOffset":2346,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"getScope","ranges":[{"startOffset":2379,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"get shebang","ranges":[{"startOffset":2821,"endOffset":2943,"count":0}],"isBlockCoverage":false},{"functionName":"set shebang","ranges":[{"startOffset":2947,"endOffset":3133,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3137,"endOffset":3599,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3603,"endOffset":3648,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":3652,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":3701,"endOffset":3801,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":3805,"endOffset":4086,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":4090,"endOffset":4550,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":4554,"endOffset":5649,"count":0}],"isBlockCoverage":false},{"functionName":"addTemplateObject","ranges":[{"startOffset":5653,"endOffset":5775,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":5779,"endOffset":6698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42130,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":8258,"endOffset":8331,"count":38},{"startOffset":8293,"endOffset":8329,"count":34}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":38}],"isBlockCoverage":true},{"functionName":"tok","ranges":[{"startOffset":879,"endOffset":912,"count":38}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8355,"endOffset":8881,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":8905,"endOffset":9006,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":9030,"endOffset":9160,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":9187,"endOffset":10883,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":10911,"endOffset":11102,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.toString","ranges":[{"startOffset":11132,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":11198,"endOffset":11423,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11456,"endOffset":11726,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11758,"endOffset":12545,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareBuild","ranges":[{"startOffset":12579,"endOffset":13071,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":13241,"endOffset":16302,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":16322,"endOffset":16579,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":16601,"endOffset":17129,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":17205,"endOffset":17450,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":17502,"endOffset":17575,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":17599,"endOffset":17664,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":17688,"endOffset":17753,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":17777,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17870,"endOffset":17964,"count":0}],"isBlockCoverage":false},{"functionName":"compareLoose","ranges":[{"startOffset":18002,"endOffset":18063,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":18101,"endOffset":18287,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":18317,"endOffset":18382,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":18404,"endOffset":18522,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":18546,"endOffset":18665,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":18683,"endOffset":18746,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":18764,"endOffset":18827,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":18845,"endOffset":18910,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":18930,"endOffset":18996,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":19016,"endOffset":19081,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":19101,"endOffset":19166,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":19186,"endOffset":19900,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator","ranges":[{"startOffset":19934,"endOffset":20586,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.parse","ranges":[{"startOffset":20630,"endOffset":21093,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.toString","ranges":[{"startOffset":21127,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.test","ranges":[{"startOffset":21192,"endOffset":21550,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.intersects","ranges":[{"startOffset":21586,"endOffset":23312,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":23336,"endOffset":24393,"count":0}],"isBlockCoverage":false},{"functionName":"Range.format","ranges":[{"startOffset":24420,"endOffset":24559,"count":0}],"isBlockCoverage":false},{"functionName":"Range.toString","ranges":[{"startOffset":24588,"endOffset":24623,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":24654,"endOffset":25892,"count":0}],"isBlockCoverage":false},{"functionName":"Range.intersects","ranges":[{"startOffset":25923,"endOffset":26537,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":26637,"endOffset":27067,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":27157,"endOffset":27357,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":27503,"endOffset":27838,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":27840,"endOffset":27916,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":28189,"endOffset":28341,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":28343,"endOffset":29131,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":29330,"endOffset":29482,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":29484,"endOffset":30969,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":30971,"endOffset":31159,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":31161,"endOffset":32910,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":33035,"endOffset":33229,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":33445,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":34102,"endOffset":34454,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":34456,"endOffset":35477,"count":0}],"isBlockCoverage":false},{"functionName":"satisfies","ranges":[{"startOffset":35509,"endOffset":35670,"count":0}],"isBlockCoverage":false},{"functionName":"maxSatisfying","ranges":[{"startOffset":35710,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":36196,"endOffset":36641,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":36675,"endOffset":37918,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":37952,"endOffset":38191,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":38287,"endOffset":38376,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":38476,"endOffset":38565,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":38593,"endOffset":40384,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":40418,"endOffset":40572,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":40606,"endOffset":40734,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":40760,"endOffset":42129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/tools/build-external-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5277,"count":1}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":109,"endOffset":263,"count":0}],"isBlockCoverage":false},{"functionName":"_generator","ranges":[{"startOffset":265,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"_template","ranges":[{"startOffset":428,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":588,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":807,"endOffset":902,"count":1},{"startOffset":881,"endOffset":899,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":904,"endOffset":1090,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1092,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmdWrapper","ranges":[{"startOffset":1861,"endOffset":2266,"count":0}],"isBlockCoverage":false},{"functionName":"buildGlobal","ranges":[{"startOffset":2269,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"buildModule","ranges":[{"startOffset":3021,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmd","ranges":[{"startOffset":3340,"endOffset":4012,"count":0}],"isBlockCoverage":false},{"functionName":"buildVar","ranges":[{"startOffset":4014,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"buildHelpers","ranges":[{"startOffset":4369,"endOffset":4916,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":4918,"endOffset":5277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1760,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":299,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":448,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":594,"endOffset":653,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":732,"endOffset":787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":877,"endOffset":943,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1033,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1181,"endOffset":1233,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1315,"endOffset":1367,"count":8}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1446,"endOffset":1495,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1574,"endOffset":1623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/package.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1406,"count":1}],"isBlockCoverage":true},{"functionName":"findPackageData","ranges":[{"startOffset":231,"endOffset":764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":824,"endOffset":1404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"537","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":241,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":429,"endOffset":1172,"count":1},{"startOffset":511,"endOffset":584,"count":0},{"startOffset":586,"endOffset":682,"count":0},{"startOffset":684,"endOffset":812,"count":0},{"startOffset":835,"endOffset":1171,"count":0}],"isBlockCoverage":true},{"functionName":"makeStaticFileCache","ranges":[{"startOffset":1205,"endOffset":1497,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1279,"endOffset":1493,"count":1},{"startOffset":1425,"endOffset":1492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1345,"endOffset":1370,"count":7}],"isBlockCoverage":true},{"functionName":"fileMtime","ranges":[{"startOffset":1499,"endOffset":1682,"count":7},{"startOffset":1627,"endOffset":1650,"count":0},{"startOffset":1652,"endOffset":1660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/caching.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7235,"count":1}],"isBlockCoverage":true},{"functionName":"synchronize","ranges":[{"startOffset":444,"endOffset":482,"count":15}],"isBlockCoverage":true},{"functionName":"genTrue","ranges":[{"startOffset":485,"endOffset":523,"count":0}],"isBlockCoverage":false},{"functionName":"makeWeakCache","ranges":[{"startOffset":525,"endOffset":607,"count":18}],"isBlockCoverage":true},{"functionName":"makeWeakCacheSync","ranges":[{"startOffset":609,"endOffset":694,"count":15}],"isBlockCoverage":true},{"functionName":"makeStrongCache","ranges":[{"startOffset":696,"endOffset":776,"count":12}],"isBlockCoverage":true},{"functionName":"makeStrongCacheSync","ranges":[{"startOffset":778,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"makeCachedFunction","ranges":[{"startOffset":869,"endOffset":1925,"count":30}],"isBlockCoverage":true},{"functionName":"cachedFunction","ranges":[{"startOffset":1050,"endOffset":1922,"count":60},{"startOffset":1178,"endOffset":1194,"count":49},{"startOffset":1195,"endOffset":1210,"count":11},{"startOffset":1331,"endOffset":1351,"count":6},{"startOffset":1351,"endOffset":1536,"count":54},{"startOffset":1536,"endOffset":1708,"count":46},{"startOffset":1708,"endOffset":1750,"count":8},{"startOffset":1750,"endOffset":1828,"count":54},{"startOffset":1828,"endOffset":1899,"count":7},{"startOffset":1899,"endOffset":1921,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1622,"endOffset":1700,"count":7}],"isBlockCoverage":true},{"functionName":"getCachedValue","ranges":[{"startOffset":1927,"endOffset":2243,"count":103},{"startOffset":2030,"endOffset":2190,"count":6},{"startOffset":2186,"endOffset":2190,"count":0},{"startOffset":2190,"endOffset":2242,"count":97}],"isBlockCoverage":true},{"functionName":"getCachedValueOrWait","ranges":[{"startOffset":2245,"endOffset":2740,"count":60},{"startOffset":2410,"endOffset":2434,"count":6},{"startOffset":2434,"endOffset":2456,"count":54},{"startOffset":2456,"endOffset":2687,"count":43},{"startOffset":2547,"endOffset":2683,"count":0},{"startOffset":2687,"endOffset":2739,"count":54}],"isBlockCoverage":true},{"functionName":"setupAsyncLocks","ranges":[{"startOffset":2742,"endOffset":2911,"count":7}],"isBlockCoverage":true},{"functionName":"updateFunctionCache","ranges":[{"startOffset":2913,"endOffset":3689,"count":61},{"startOffset":2999,"endOffset":3016,"count":24},{"startOffset":3108,"endOffset":3242,"count":31},{"startOffset":3248,"endOffset":3396,"count":1},{"startOffset":3402,"endOffset":3682,"count":8},{"startOffset":3439,"endOffset":3540,"count":0}],"isBlockCoverage":true},{"functionName":"CacheConfigurator","ranges":[{"startOffset":3719,"endOffset":3949,"count":54}],"isBlockCoverage":true},{"functionName":"simple","ranges":[{"startOffset":3953,"endOffset":4008,"count":7}],"isBlockCoverage":true},{"functionName":"mode","ranges":[{"startOffset":4012,"endOffset":4169,"count":61},{"startOffset":4042,"endOffset":4057,"count":21},{"startOffset":4057,"endOffset":4081,"count":40},{"startOffset":4081,"endOffset":4098,"count":31},{"startOffset":4098,"endOffset":4125,"count":9},{"startOffset":4125,"endOffset":4145,"count":1},{"startOffset":4145,"endOffset":4168,"count":8}],"isBlockCoverage":true},{"functionName":"forever","ranges":[{"startOffset":4173,"endOffset":4461,"count":24},{"startOffset":4208,"endOffset":4295,"count":0},{"startOffset":4318,"endOffset":4401,"count":0}],"isBlockCoverage":true},{"functionName":"never","ranges":[{"startOffset":4465,"endOffset":4753,"count":21},{"startOffset":4498,"endOffset":4585,"count":0},{"startOffset":4610,"endOffset":4695,"count":0}],"isBlockCoverage":true},{"functionName":"using","ranges":[{"startOffset":4757,"endOffset":5424,"count":9},{"startOffset":4797,"endOffset":4884,"count":0},{"startOffset":4924,"endOffset":5019,"count":0},{"startOffset":5263,"endOffset":5369,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5287,"endOffset":5361,"count":0}],"isBlockCoverage":false},{"functionName":"invalidate","ranges":[{"startOffset":5428,"endOffset":5514,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":5518,"endOffset":5723,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5574,"endOffset":5718,"count":6},{"startOffset":5671,"endOffset":5684,"count":0}],"isBlockCoverage":true},{"functionName":"deactivate","ranges":[{"startOffset":5727,"endOffset":5771,"count":61}],"isBlockCoverage":true},{"functionName":"configured","ranges":[{"startOffset":5775,"endOffset":5822,"count":61}],"isBlockCoverage":true},{"functionName":"makeSimpleConfigurator","ranges":[{"startOffset":5827,"endOffset":6311,"count":7}],"isBlockCoverage":true},{"functionName":"cacheFn","ranges":[{"startOffset":5870,"endOffset":6060,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.forever","ranges":[{"startOffset":6082,"endOffset":6103,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.never","ranges":[{"startOffset":6124,"endOffset":6143,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.using","ranges":[{"startOffset":6164,"endOffset":6211,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.invalidate","ranges":[{"startOffset":6237,"endOffset":6289,"count":0}],"isBlockCoverage":false},{"functionName":"assertSimpleType","ranges":[{"startOffset":6313,"endOffset":6954,"count":0}],"isBlockCoverage":false},{"functionName":"Lock","ranges":[{"startOffset":6971,"endOffset":7155,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7100,"endOffset":7149,"count":7}],"isBlockCoverage":true},{"functionName":"release","ranges":[{"startOffset":7159,"endOffset":7232,"count":7}],"isBlockCoverage":true}]},{"scriptId":"539","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/gensync-utils/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1659,"count":1}],"isBlockCoverage":true},{"functionName":"id","ranges":[{"startOffset":299,"endOffset":305,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":337,"endOffset":379,"count":46}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":416,"endOffset":427,"count":11}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":440,"endOffset":460,"count":49}],"isBlockCoverage":true},{"functionName":"maybeAsync","ranges":[{"startOffset":493,"endOffset":782,"count":16}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":551,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":699,"endOffset":773,"count":13}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":819,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":846,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"forwardAsync","ranges":[{"startOffset":869,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1099,"endOffset":1156,"count":3}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":1169,"endOffset":1385,"count":43},{"startOffset":1354,"endOffset":1381,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1261,"endOffset":1330,"count":43}],"isBlockCoverage":true},{"functionName":"isThenable","ranges":[{"startOffset":1509,"endOffset":1659,"count":17},{"startOffset":1551,"endOffset":1608,"count":16},{"startOffset":1579,"endOffset":1607,"count":8},{"startOffset":1609,"endOffset":1622,"count":8},{"startOffset":1623,"endOffset":1656,"count":0}],"isBlockCoverage":true}]},{"scriptId":"540","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/gensync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9627,"count":1}],"isBlockCoverage":true},{"functionName":"gensync","ranges":[{"startOffset":589,"endOffset":843,"count":47},{"startOffset":684,"endOffset":729,"count":23},{"startOffset":729,"endOffset":781,"count":24}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":922,"endOffset":1043,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1007,"endOffset":1033,"count":1}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":1058,"endOffset":1615,"count":14},{"startOffset":1168,"endOffset":1250,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1203,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1309,"endOffset":1324,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1349,"endOffset":1605,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1419,"endOffset":1562,"count":35},{"startOffset":1531,"endOffset":1548,"count":14}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":1700,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1945,"endOffset":2247,"count":0}],"isBlockCoverage":false},{"functionName":"makeFunctionAPI","ranges":[{"startOffset":2391,"endOffset":3159,"count":47}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":2451,"endOffset":2528,"count":33}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":2541,"endOffset":2689,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2586,"endOffset":2681,"count":7}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":2704,"endOffset":3137,"count":43},{"startOffset":2789,"endOffset":2931,"count":0},{"startOffset":3007,"endOffset":3061,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3088,"endOffset":3113,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3115,"endOffset":3129,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeof","ranges":[{"startOffset":3161,"endOffset":3556,"count":115},{"startOffset":3253,"endOffset":3308,"count":67},{"startOffset":3330,"endOffset":3555,"count":0}],"isBlockCoverage":true},{"functionName":"makeError","ranges":[{"startOffset":3557,"endOffset":3640,"count":0}],"isBlockCoverage":false},{"functionName":"newGenerator","ranges":[{"startOffset":3774,"endOffset":5308,"count":23},{"startOffset":4173,"endOffset":4183,"count":18},{"startOffset":4185,"endOffset":4322,"count":0},{"startOffset":4356,"endOffset":4761,"count":22},{"startOffset":4390,"endOffset":4405,"count":4},{"startOffset":4406,"endOffset":4435,"count":4},{"startOffset":4437,"endOffset":4473,"count":2},{"startOffset":4488,"endOffset":4501,"count":18},{"startOffset":4502,"endOffset":4527,"count":18},{"startOffset":4529,"endOffset":4585,"count":1},{"startOffset":4637,"endOffset":4691,"count":3},{"startOffset":4729,"endOffset":4757,"count":3},{"startOffset":4796,"endOffset":4826,"count":22}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":4885,"endOffset":4944,"count":35}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":4957,"endOffset":5299,"count":105},{"startOffset":5008,"endOffset":5072,"count":13},{"startOffset":5072,"endOffset":5293,"count":92},{"startOffset":5237,"endOffset":5293,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5129,"endOffset":5227,"count":92},{"startOffset":5189,"endOffset":5217,"count":0}],"isBlockCoverage":true},{"functionName":"wrapGenerator","ranges":[{"startOffset":5310,"endOffset":5460,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5397,"endOffset":5456,"count":69}],"isBlockCoverage":true},{"functionName":"buildOperation","ranges":[{"startOffset":5462,"endOffset":6390,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5560,"endOffset":6386,"count":155},{"startOffset":5638,"endOffset":5783,"count":36},{"startOffset":5783,"endOffset":6089,"count":119},{"startOffset":6089,"endOffset":6148,"count":0},{"startOffset":6148,"endOffset":6325,"count":119},{"startOffset":6325,"endOffset":6356,"count":0},{"startOffset":6356,"endOffset":6385,"count":119}],"isBlockCoverage":true},{"functionName":"async.call.result.err.err","ranges":[{"startOffset":5865,"endOffset":5966,"count":119},{"startOffset":5898,"endOffset":5905,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5976,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateSync","ranges":[{"startOffset":6392,"endOffset":6527,"count":34},{"startOffset":6475,"endOffset":6509,"count":36}],"isBlockCoverage":true},{"functionName":"evaluateAsync","ranges":[{"startOffset":6529,"endOffset":7460,"count":85}],"isBlockCoverage":true},{"functionName":"step","ranges":[{"startOffset":6579,"endOffset":7454,"count":111},{"startOffset":6669,"endOffset":7368,"count":119},{"startOffset":7212,"endOffset":7360,"count":26},{"startOffset":7368,"endOffset":7405,"count":85},{"startOffset":7405,"endOffset":7450,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7000,"endOffset":7124,"count":119},{"startOffset":7028,"endOffset":7075,"count":93},{"startOffset":7075,"endOffset":7114,"count":26}],"isBlockCoverage":true},{"functionName":"assertStart","ranges":[{"startOffset":7462,"endOffset":7775,"count":155},{"startOffset":7535,"endOffset":7774,"count":0}],"isBlockCoverage":true},{"functionName":"assertSuspend","ranges":[{"startOffset":7776,"endOffset":8198,"count":119},{"startOffset":7872,"endOffset":8014,"count":0},{"startOffset":8023,"endOffset":8153,"count":0}],"isBlockCoverage":true},{"functionName":"throwError","ranges":[{"startOffset":8200,"endOffset":8548,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":8550,"endOffset":8705,"count":0}],"isBlockCoverage":false},{"functionName":"setFunctionMetadata","ranges":[{"startOffset":8707,"endOffset":9626,"count":49},{"startOffset":8787,"endOffset":9269,"count":30},{"startOffset":9178,"endOffset":9183,"count":0},{"startOffset":9518,"endOffset":9523,"count":0}],"isBlockCoverage":true}]},{"scriptId":"541","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":887,"count":1}],"isBlockCoverage":true},{"functionName":"mergeOptions","ranges":[{"startOffset":167,"endOffset":580,"count":16},{"startOffset":246,"endOffset":578,"count":114},{"startOffset":325,"endOffset":337,"count":8},{"startOffset":339,"endOffset":486,"count":8},{"startOffset":486,"endOffset":574,"count":106},{"startOffset":552,"endOffset":568,"count":98}],"isBlockCoverage":true},{"functionName":"mergeDefaultFields","ranges":[{"startOffset":582,"endOffset":745,"count":8},{"startOffset":667,"endOffset":743,"count":0}],"isBlockCoverage":true},{"functionName":"isIterableIterator","ranges":[{"startOffset":747,"endOffset":887,"count":54},{"startOffset":837,"endOffset":884,"count":46}],"isBlockCoverage":true}]},{"scriptId":"542","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/gensync-utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":655,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":339,"endOffset":461,"count":21}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":475,"endOffset":538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"543","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/configuration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10579,"count":1}],"isBlockCoverage":true},{"functionName":"_module","ranges":[{"startOffset":691,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":814,"endOffset":1000,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1002,"endOffset":1745,"count":1},{"startOffset":1084,"endOffset":1157,"count":0},{"startOffset":1159,"endOffset":1255,"count":0},{"startOffset":1257,"endOffset":1385,"count":0},{"startOffset":1408,"endOffset":1744,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1747,"endOffset":1842,"count":2},{"startOffset":1821,"endOffset":1839,"count":0}],"isBlockCoverage":true},{"functionName":"findConfigUpwards","ranges":[{"startOffset":2378,"endOffset":2734,"count":0}],"isBlockCoverage":false},{"functionName":"findRelativeConfig","ranges":[{"startOffset":2736,"endOffset":3502,"count":0}],"isBlockCoverage":false},{"functionName":"findRootConfig","ranges":[{"startOffset":3504,"endOffset":3630,"count":7}],"isBlockCoverage":true},{"functionName":"loadOneConfig","ranges":[{"startOffset":3632,"endOffset":4292,"count":7},{"startOffset":4195,"endOffset":4272,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3761,"endOffset":3830,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3866,"endOffset":4161,"count":28},{"startOffset":3911,"endOffset":3928,"count":0},{"startOffset":3930,"endOffset":4119,"count":0}],"isBlockCoverage":true},{"functionName":"loadConfig","ranges":[{"startOffset":4294,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"readConfig","ranges":[{"startOffset":5023,"endOffset":5255,"count":28},{"startOffset":5133,"endOffset":5150,"count":21},{"startOffset":5151,"endOffset":5168,"count":14},{"startOffset":5169,"endOffset":5224,"count":21},{"startOffset":5225,"endOffset":5252,"count":7}],"isBlockCoverage":true},{"functionName":"readConfigJS","ranges":[{"startOffset":5343,"endOffset":6959,"count":21},{"startOffset":5459,"endOffset":6314,"count":0},{"startOffset":6315,"endOffset":6340,"count":0},{"startOffset":6342,"endOffset":6857,"count":0},{"startOffset":6859,"endOffset":6958,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7023,"endOffset":7372,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7431,"endOffset":8014,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8074,"endOffset":8571,"count":0}],"isBlockCoverage":false},{"functionName":"resolveShowConfigPath","ranges":[{"startOffset":8575,"endOffset":9018,"count":8},{"startOffset":8701,"endOffset":9000,"count":0}],"isBlockCoverage":true},{"functionName":"throwConfigError","ranges":[{"startOffset":9020,"endOffset":10579,"count":0}],"isBlockCoverage":false}]},{"scriptId":"544","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/helpers/config-api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3460,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":335,"endOffset":521,"count":1},{"startOffset":408,"endOffset":420,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":475,"endOffset":504,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":523,"endOffset":1266,"count":1},{"startOffset":590,"endOffset":605,"count":0},{"startOffset":650,"endOffset":678,"count":0},{"startOffset":680,"endOffset":708,"count":0},{"startOffset":778,"endOffset":804,"count":0},{"startOffset":929,"endOffset":1188,"count":0}],"isBlockCoverage":true},{"functionName":"makeConfigAPI","ranges":[{"startOffset":1303,"endOffset":2014,"count":7}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":1349,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"caller","ranges":[{"startOffset":1806,"endOffset":1880,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1965,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"makePresetAPI","ranges":[{"startOffset":2016,"endOffset":2206,"count":7}],"isBlockCoverage":true},{"functionName":"targets","ranges":[{"startOffset":2066,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"makePluginAPI","ranges":[{"startOffset":2208,"endOffset":2388,"count":7}],"isBlockCoverage":true},{"functionName":"assumption","ranges":[{"startOffset":2261,"endOffset":2312,"count":0}],"isBlockCoverage":false},{"functionName":"assertVersion","ranges":[{"startOffset":2390,"endOffset":3460,"count":0}],"isBlockCoverage":false}]},{"scriptId":"546","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/module-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2642,"count":1},{"startOffset":1161,"endOffset":1179,"count":0}],"isBlockCoverage":true},{"functionName":"_url","ranges":[{"startOffset":172,"endOffset":284,"count":0}],"isBlockCoverage":false},{"functionName":"_module","ranges":[{"startOffset":286,"endOffset":407,"count":0}],"isBlockCoverage":false},{"functionName":"asyncGeneratorStep","ranges":[{"startOffset":409,"endOffset":674,"count":0}],"isBlockCoverage":false},{"functionName":"_asyncToGenerator","ranges":[{"startOffset":676,"endOffset":1065,"count":0}],"isBlockCoverage":false},{"functionName":"loadCjsOrMjsDefault","ranges":[{"startOffset":1181,"endOffset":1753,"count":7},{"startOffset":1400,"endOffset":1575,"count":0},{"startOffset":1581,"endOffset":1747,"count":0}],"isBlockCoverage":true},{"functionName":"guessJSModuleType","ranges":[{"startOffset":1755,"endOffset":1948,"count":7},{"startOffset":1872,"endOffset":1904,"count":0},{"startOffset":1910,"endOffset":1942,"count":0}],"isBlockCoverage":true},{"functionName":"loadCjsDefault","ranges":[{"startOffset":1950,"endOffset":2177,"count":7},{"startOffset":2113,"endOffset":2165,"count":0},{"startOffset":2166,"endOffset":2174,"count":0}],"isBlockCoverage":true},{"functionName":"loadMjsDefault","ranges":[{"startOffset":2179,"endOffset":2259,"count":0}],"isBlockCoverage":false},{"functionName":"_loadMjsDefault","ranges":[{"startOffset":2261,"endOffset":2642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":165,"count":1}],"isBlockCoverage":true},{"functionName":"import_","ranges":[{"startOffset":108,"endOffset":165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/pattern-to-regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1047,"count":1}],"isBlockCoverage":true},{"functionName":"escapeRegExp","ranges":[{"startOffset":429,"endOffset":518,"count":0}],"isBlockCoverage":false},{"functionName":"pathToPattern","ranges":[{"startOffset":520,"endOffset":1047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"550","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":846,"endOffset":1451,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":232}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":4},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":4},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2771,"count":1},{"startOffset":197,"endOffset":221,"count":0},{"startOffset":325,"endOffset":348,"count":0},{"startOffset":375,"endOffset":461,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":463,"endOffset":621,"count":2},{"startOffset":534,"endOffset":620,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":623,"endOffset":2524,"count":2},{"startOffset":683,"endOffset":699,"count":0},{"startOffset":787,"endOffset":803,"count":0},{"startOffset":832,"endOffset":848,"count":0},{"startOffset":919,"endOffset":948,"count":0},{"startOffset":949,"endOffset":952,"count":0},{"startOffset":990,"endOffset":2523,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1745,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2526,"endOffset":2631,"count":2}],"isBlockCoverage":true}]},{"scriptId":"552","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":318,"count":15},{"startOffset":116,"endOffset":120,"count":0},{"startOffset":142,"endOffset":147,"count":0},{"startOffset":261,"endOffset":315,"count":0}],"isBlockCoverage":true}]},{"scriptId":"553","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6029,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6003,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1020,"endOffset":1298,"count":4},{"startOffset":1116,"endOffset":1221,"count":119}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1468,"endOffset":3404,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1550,"endOffset":2761,"count":7},{"startOffset":1633,"endOffset":1760,"count":0},{"startOffset":1928,"endOffset":2728,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2112,"endOffset":2584,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3114,"endOffset":3193,"count":7},{"startOffset":3177,"endOffset":3193,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3203,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3407,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3771,"endOffset":4349,"count":1},{"startOffset":3944,"endOffset":3956,"count":0},{"startOffset":4105,"endOffset":4342,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4435,"endOffset":4660,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":4803,"endOffset":5190,"count":7},{"startOffset":4865,"endOffset":4886,"count":0},{"startOffset":4969,"endOffset":5039,"count":0},{"startOffset":5101,"endOffset":5170,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespace","ranges":[{"startOffset":5308,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5533,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5761,"endOffset":5937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"554","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/json5/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"556","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/json5/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21393,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":141,"endOffset":698,"count":0}],"isBlockCoverage":false},{"functionName":"internalize","ranges":[{"startOffset":700,"endOffset":1150,"count":0}],"isBlockCoverage":false},{"functionName":"lex","ranges":[{"startOffset":1208,"endOffset":1584,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":1586,"endOffset":1696,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1698,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":1963,"endOffset":2694,"count":0}],"isBlockCoverage":false},{"functionName":"comment","ranges":[{"startOffset":2701,"endOffset":2983,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineComment","ranges":[{"startOffset":2990,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineCommentAsterisk","ranges":[{"startOffset":3240,"endOffset":3569,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineComment","ranges":[{"startOffset":3576,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":3892,"endOffset":5388,"count":0}],"isBlockCoverage":false},{"functionName":"identifierNameStartEscape","ranges":[{"startOffset":5395,"endOffset":5831,"count":0}],"isBlockCoverage":false},{"functionName":"identifierName","ranges":[{"startOffset":5838,"endOffset":6274,"count":0}],"isBlockCoverage":false},{"functionName":"identifierNameEscape","ranges":[{"startOffset":6281,"endOffset":6761,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":6768,"endOffset":7538,"count":0}],"isBlockCoverage":false},{"functionName":"zero","ranges":[{"startOffset":7545,"endOffset":7989,"count":0}],"isBlockCoverage":false},{"functionName":"decimalInteger","ranges":[{"startOffset":7996,"endOffset":8431,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPointLeading","ranges":[{"startOffset":8438,"endOffset":8633,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPoint","ranges":[{"startOffset":8640,"endOffset":9009,"count":0}],"isBlockCoverage":false},{"functionName":"decimalFraction","ranges":[{"startOffset":9016,"endOffset":9347,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponent","ranges":[{"startOffset":9354,"endOffset":9713,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentSign","ranges":[{"startOffset":9720,"endOffset":9922,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentInteger","ranges":[{"startOffset":9929,"endOffset":10110,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimal","ranges":[{"startOffset":10117,"endOffset":10310,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimalInteger","ranges":[{"startOffset":10317,"endOffset":10497,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":10504,"endOffset":11273,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":11280,"endOffset":11583,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyName","ranges":[{"startOffset":11590,"endOffset":12253,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyName","ranges":[{"startOffset":12260,"endOffset":12408,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyValue","ranges":[{"startOffset":12415,"endOffset":12472,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyValue","ranges":[{"startOffset":12479,"endOffset":12660,"count":0}],"isBlockCoverage":false},{"functionName":"beforeArrayValue","ranges":[{"startOffset":12667,"endOffset":12807,"count":0}],"isBlockCoverage":false},{"functionName":"afterArrayValue","ranges":[{"startOffset":12814,"endOffset":12992,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":12999,"endOffset":13235,"count":0}],"isBlockCoverage":false},{"functionName":"newToken","ranges":[{"startOffset":13240,"endOffset":13353,"count":0}],"isBlockCoverage":false},{"functionName":"literal","ranges":[{"startOffset":13355,"endOffset":13523,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":13525,"endOffset":14575,"count":0}],"isBlockCoverage":false},{"functionName":"hexEscape","ranges":[{"startOffset":14577,"endOffset":14899,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeEscape","ranges":[{"startOffset":14901,"endOffset":15190,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":15218,"endOffset":15327,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyName","ranges":[{"startOffset":15334,"endOffset":15945,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyName","ranges":[{"startOffset":15952,"endOffset":16292,"count":0}],"isBlockCoverage":false},{"functionName":"beforePropertyValue","ranges":[{"startOffset":16299,"endOffset":16422,"count":0}],"isBlockCoverage":false},{"functionName":"beforeArrayValue","ranges":[{"startOffset":16429,"endOffset":16663,"count":0}],"isBlockCoverage":false},{"functionName":"afterPropertyValue","ranges":[{"startOffset":16670,"endOffset":17211,"count":0}],"isBlockCoverage":false},{"functionName":"afterArrayValue","ranges":[{"startOffset":17218,"endOffset":17754,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":17761,"endOffset":17935,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":17940,"endOffset":19177,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":19179,"endOffset":19454,"count":0}],"isBlockCoverage":false},{"functionName":"invalidChar","ranges":[{"startOffset":19732,"endOffset":19964,"count":0}],"isBlockCoverage":false},{"functionName":"invalidEOF","ranges":[{"startOffset":19966,"endOffset":20067,"count":0}],"isBlockCoverage":false},{"functionName":"invalidIdentifier","ranges":[{"startOffset":20421,"endOffset":20553,"count":0}],"isBlockCoverage":false},{"functionName":"separatorChar","ranges":[{"startOffset":20555,"endOffset":20685,"count":0}],"isBlockCoverage":false},{"functionName":"formatChar","ranges":[{"startOffset":20687,"endOffset":21244,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":21246,"endOffset":21392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/json5/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"isSpaceSeparator","ranges":[{"startOffset":66,"endOffset":166,"count":0}],"isBlockCoverage":false},{"functionName":"isIdStartChar","ranges":[{"startOffset":173,"endOffset":393,"count":0}],"isBlockCoverage":false},{"functionName":"isIdContinueChar","ranges":[{"startOffset":400,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":715,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":797,"endOffset":881,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/json5/lib/unicode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15815,"count":1}],"isBlockCoverage":true}]},{"scriptId":"559","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/json5/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6983,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":49,"endOffset":6982,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/files/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6238,"count":1}],"isBlockCoverage":true},{"functionName":"_module","ranges":[{"startOffset":296,"endOffset":417,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":419,"endOffset":514,"count":1},{"startOffset":493,"endOffset":511,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePlugin","ranges":[{"startOffset":1184,"endOffset":1284,"count":7}],"isBlockCoverage":true},{"functionName":"resolvePreset","ranges":[{"startOffset":1286,"endOffset":1386,"count":0}],"isBlockCoverage":false},{"functionName":"loadPlugin","ranges":[{"startOffset":1388,"endOffset":1724,"count":7},{"startOffset":1493,"endOffset":1570,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreset","ranges":[{"startOffset":1726,"endOffset":2062,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeName","ranges":[{"startOffset":2064,"endOffset":2515,"count":7},{"startOffset":2144,"endOffset":2238,"count":0},{"startOffset":2239,"endOffset":2263,"count":0},{"startOffset":2300,"endOffset":2321,"count":0},{"startOffset":2322,"endOffset":2343,"count":0},{"startOffset":2376,"endOffset":2397,"count":0},{"startOffset":2398,"endOffset":2419,"count":0}],"isBlockCoverage":true},{"functionName":"resolveStandardizedName","ranges":[{"startOffset":2517,"endOffset":5459,"count":7},{"startOffset":2812,"endOffset":3067,"count":0},{"startOffset":3124,"endOffset":5457,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2667,"endOffset":2762,"count":7},{"startOffset":2728,"endOffset":2761,"count":0}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":2814,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3281,"endOffset":3376,"count":0}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":3428,"endOffset":3713,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4001,"endOffset":4096,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4148,"endOffset":4417,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4764,"endOffset":4859,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4911,"endOffset":5180,"count":0}],"isBlockCoverage":false},{"functionName":"requireModule","ranges":[{"startOffset":5497,"endOffset":6238,"count":7},{"startOffset":5568,"endOffset":5855,"count":0},{"startOffset":6083,"endOffset":6189,"count":0}],"isBlockCoverage":true}]},{"scriptId":"561","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/helpers/environment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":106,"endOffset":227,"count":8},{"startOffset":209,"endOffset":224,"count":0}],"isBlockCoverage":true}]},{"scriptId":"562","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2487,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":196,"endOffset":239,"count":8}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":610,"endOffset":705,"count":1},{"startOffset":684,"endOffset":702,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":778,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"maybeErrback","ranges":[{"startOffset":1065,"endOffset":1280,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1075,"endOffset":1280,"count":0}],"isBlockCoverage":false},{"functionName":"createConfigItem","ranges":[{"startOffset":2139,"endOffset":2487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/full.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10219,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":388,"endOffset":546,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":493,"endOffset":527,"count":7}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":866,"endOffset":961,"count":3},{"startOffset":940,"endOffset":958,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":963,"endOffset":1149,"count":1},{"startOffset":1036,"endOffset":1048,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1103,"endOffset":1132,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1151,"endOffset":1894,"count":2},{"startOffset":1218,"endOffset":1306,"count":1},{"startOffset":1278,"endOffset":1306,"count":0},{"startOffset":1308,"endOffset":1336,"count":0},{"startOffset":1336,"endOffset":1404,"count":1},{"startOffset":1406,"endOffset":1432,"count":0},{"startOffset":1432,"endOffset":1534,"count":1},{"startOffset":1557,"endOffset":1816,"count":0},{"startOffset":1816,"endOffset":1893,"count":1}],"isBlockCoverage":true},{"functionName":"loadFullConfig","ranges":[{"startOffset":1956,"endOffset":5515,"count":8},{"startOffset":2097,"endOffset":2119,"count":0},{"startOffset":2223,"endOffset":2245,"count":0},{"startOffset":2355,"endOffset":2430,"count":0},{"startOffset":2608,"endOffset":2612,"count":0},{"startOffset":4478,"endOffset":4490,"count":0}],"isBlockCoverage":true},{"functionName":"toDescriptor","ranges":[{"startOffset":2643,"endOffset":2817,"count":8},{"startOffset":2722,"endOffset":2795,"count":0}],"isBlockCoverage":true},{"functionName":"recursePresetDescriptors","ranges":[{"startOffset":3047,"endOffset":4412,"count":8},{"startOffset":3192,"endOffset":3883,"count":0},{"startOffset":3913,"endOffset":4408,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3973,"endOffset":3984,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3993,"endOffset":4025,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4316,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"loadPluginDescriptors","ranges":[{"startOffset":4595,"endOffset":5271,"count":8},{"startOffset":5038,"endOffset":5243,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5344,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5379,"endOffset":5409,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceError","ranges":[{"startOffset":5548,"endOffset":5840,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5594,"endOffset":5837,"count":16},{"startOffset":5671,"endOffset":5833,"count":0}],"isBlockCoverage":true},{"functionName":"makeDescriptorLoader","ranges":[{"startOffset":5871,"endOffset":7115,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5913,"endOffset":7114,"count":8},{"startOffset":6002,"endOffset":6039,"count":0},{"startOffset":6060,"endOffset":6065,"count":1},{"startOffset":6123,"endOffset":6532,"count":7},{"startOffset":6398,"endOffset":6528,"count":0},{"startOffset":6575,"endOffset":6644,"count":0},{"startOffset":6682,"endOffset":7042,"count":0}],"isBlockCoverage":true},{"functionName":"loadPluginDescriptor","ranges":[{"startOffset":7277,"endOffset":7639,"count":8},{"startOffset":7382,"endOffset":7540,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7695,"endOffset":8687,"count":8},{"startOffset":8007,"endOffset":8630,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8240,"endOffset":8324,"count":0}],"isBlockCoverage":false},{"functionName":"validateIfOptionNeedsFilename","ranges":[{"startOffset":8729,"endOffset":9224,"count":0}],"isBlockCoverage":false},{"functionName":"validatePreset","ranges":[{"startOffset":9250,"endOffset":9563,"count":0}],"isBlockCoverage":false},{"functionName":"loadPresetDescriptor","ranges":[{"startOffset":9566,"endOffset":9825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9885,"endOffset":10018,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":10022,"endOffset":10219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"Plugin","ranges":[{"startOffset":124,"endOffset":714,"count":8},{"startOffset":419,"endOffset":425,"count":7},{"startOffset":572,"endOffset":577,"count":0}],"isBlockCoverage":true}]},{"scriptId":"565","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1713,"count":1}],"isBlockCoverage":true},{"functionName":"createItemFromDescriptor","ranges":[{"startOffset":324,"endOffset":398,"count":8}],"isBlockCoverage":true},{"functionName":"createConfigItem","ranges":[{"startOffset":400,"endOffset":666,"count":0}],"isBlockCoverage":false},{"functionName":"getItemDescriptor","ranges":[{"startOffset":668,"endOffset":807,"count":16},{"startOffset":750,"endOffset":806,"count":8}],"isBlockCoverage":true},{"functionName":"ConfigItem","ranges":[{"startOffset":899,"endOffset":1672,"count":8},{"startOffset":1528,"endOffset":1630,"count":7},{"startOffset":1631,"endOffset":1642,"count":1}],"isBlockCoverage":true}]},{"scriptId":"566","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/config-descriptors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6664,"count":1}],"isBlockCoverage":true},{"functionName":"isEqualDescriptor","ranges":[{"startOffset":442,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"handlerOf","ranges":[{"startOffset":759,"endOffset":805,"count":8}],"isBlockCoverage":true},{"functionName":"optionsWithResolvedBrowserslistConfigFile","ranges":[{"startOffset":807,"endOffset":1092,"count":8},{"startOffset":936,"endOffset":1071,"count":0}],"isBlockCoverage":true},{"functionName":"createCachedDescriptors","ranges":[{"startOffset":1094,"endOffset":1544,"count":8},{"startOffset":1392,"endOffset":1413,"count":0},{"startOffset":1436,"endOffset":1515,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1331,"endOffset":1391,"count":8}],"isBlockCoverage":true},{"functionName":"plugins","ranges":[{"startOffset":1394,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1438,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"presets","ranges":[{"startOffset":1518,"endOffset":1537,"count":8}],"isBlockCoverage":true},{"functionName":"createUncachedDescriptors","ranges":[{"startOffset":1546,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2207,"endOffset":2571,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2691,"endOffset":2988,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2741,"endOffset":2751,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2793,"endOffset":2984,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2919,"endOffset":2978,"count":8}],"isBlockCoverage":true},{"functionName":"loadCachedDescriptor","ranges":[{"startOffset":3020,"endOffset":3718,"count":8},{"startOffset":3153,"endOffset":3165,"count":0},{"startOffset":3231,"endOffset":3310,"count":2},{"startOffset":3633,"endOffset":3665,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3550,"endOffset":3601,"count":0}],"isBlockCoverage":false},{"functionName":"createPresetDescriptors","ranges":[{"startOffset":3720,"endOffset":3878,"count":0}],"isBlockCoverage":false},{"functionName":"createPluginDescriptors","ranges":[{"startOffset":3880,"endOffset":4008,"count":8}],"isBlockCoverage":true},{"functionName":"createDescriptors","ranges":[{"startOffset":4010,"endOffset":4311,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4129,"endOffset":4249,"count":8}],"isBlockCoverage":true},{"functionName":"createDescriptor","ranges":[{"startOffset":4313,"endOffset":5903,"count":8},{"startOffset":4453,"endOffset":4475,"count":0},{"startOffset":4553,"endOffset":4677,"count":7},{"startOffset":4583,"endOffset":4628,"count":0},{"startOffset":4760,"endOffset":5141,"count":7},{"startOffset":4796,"endOffset":4892,"count":0},{"startOffset":4953,"endOffset":4972,"count":0},{"startOffset":5157,"endOffset":5227,"count":0},{"startOffset":5261,"endOffset":5280,"count":1},{"startOffset":5282,"endOffset":5439,"count":0},{"startOffset":5473,"endOffset":5503,"count":7},{"startOffset":5505,"endOffset":5605,"count":0},{"startOffset":5631,"endOffset":5659,"count":7},{"startOffset":5660,"endOffset":5668,"count":0},{"startOffset":5670,"endOffset":5785,"count":0},{"startOffset":5828,"endOffset":5836,"count":1}],"isBlockCoverage":true},{"functionName":"assertNoDuplicates","ranges":[{"startOffset":5905,"endOffset":6664,"count":8},{"startOffset":6040,"endOffset":6049,"count":1},{"startOffset":6049,"endOffset":6212,"count":7},{"startOffset":6212,"endOffset":6629,"count":0},{"startOffset":6629,"endOffset":6662,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6251,"endOffset":6278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/resolve-targets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1462,"count":1}],"isBlockCoverage":true},{"functionName":"_helperCompilationTargets","ranges":[{"startOffset":193,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"_helperCompilationTargets","ranges":[{"startOffset":348,"endOffset":382,"count":7}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":403,"endOffset":498,"count":1},{"startOffset":477,"endOffset":495,"count":0}],"isBlockCoverage":true},{"functionName":"resolveBrowserslistConfigFile","ranges":[{"startOffset":538,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"resolveTargets","ranges":[{"startOffset":683,"endOffset":1462,"count":8},{"startOffset":819,"endOffset":871,"count":0},{"startOffset":887,"endOffset":907,"count":0},{"startOffset":909,"endOffset":994,"count":0},{"startOffset":1157,"endOffset":1203,"count":0}],"isBlockCoverage":true}]},{"scriptId":"568","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/config-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17823,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":504,"endOffset":599,"count":1},{"startOffset":578,"endOffset":596,"count":0}],"isBlockCoverage":true},{"functionName":"buildPresetChain","ranges":[{"startOffset":726,"endOffset":1045,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":1104,"endOffset":1143,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":1152,"endOffset":1214,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":1229,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":1311,"endOffset":1396,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":1414,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1552,"endOffset":1650,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1718,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1944,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2174,"endOffset":2385,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootChain","ranges":[{"startOffset":2389,"endOffset":5865,"count":8},{"startOffset":2700,"endOffset":2712,"count":0},{"startOffset":2840,"endOffset":2956,"count":0},{"startOffset":2993,"endOffset":3097,"count":7},{"startOffset":3308,"endOffset":3832,"count":0},{"startOffset":3975,"endOffset":4014,"count":7},{"startOffset":4016,"endOffset":5109,"count":0},{"startOffset":5137,"endOffset":5341,"count":0},{"startOffset":5490,"endOffset":5494,"count":0},{"startOffset":5553,"endOffset":5557,"count":0},{"startOffset":5616,"endOffset":5620,"count":0},{"startOffset":5696,"endOffset":5707,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5279,"endOffset":5287,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5641,"endOffset":5665,"count":8}],"isBlockCoverage":true},{"functionName":"babelrcLoadEnabled","ranges":[{"startOffset":5867,"endOffset":6856,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6917,"endOffset":7044,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7107,"endOffset":7235,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7297,"endOffset":7425,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":7484,"endOffset":7572,"count":8}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":7581,"endOffset":7688,"count":8}],"isBlockCoverage":true},{"functionName":"overrides","ranges":[{"startOffset":7703,"endOffset":7811,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":7829,"endOffset":7958,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":7976,"endOffset":8059,"count":8}],"isBlockCoverage":true},{"functionName":"root","ranges":[{"startOffset":8118,"endOffset":8151,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":8160,"endOffset":8216,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":8231,"endOffset":8289,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":8307,"endOffset":8386,"count":0}],"isBlockCoverage":false},{"functionName":"createLogger","ranges":[{"startOffset":8404,"endOffset":8486,"count":0}],"isBlockCoverage":false},{"functionName":"loadFileChain","ranges":[{"startOffset":8492,"endOffset":8707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8769,"endOffset":8864,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8930,"endOffset":9079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9151,"endOffset":9301,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9376,"endOffset":9584,"count":0}],"isBlockCoverage":false},{"functionName":"buildFileLogger","ranges":[{"startOffset":9588,"endOffset":9797,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootDescriptors","ranges":[{"startOffset":9799,"endOffset":9925,"count":8}],"isBlockCoverage":true},{"functionName":"buildProgrammaticLogger","ranges":[{"startOffset":9927,"endOffset":10245,"count":8},{"startOffset":10029,"endOffset":10055,"count":0},{"startOffset":10215,"endOffset":10237,"count":0}],"isBlockCoverage":true},{"functionName":"baseLogger.configure.callerName._context$caller","ranges":[{"startOffset":10042,"endOffset":10050,"count":0}],"isBlockCoverage":false},{"functionName":"buildEnvDescriptors","ranges":[{"startOffset":10247,"endOffset":10467,"count":8},{"startOffset":10360,"endOffset":10383,"count":0},{"startOffset":10399,"endOffset":10457,"count":0}],"isBlockCoverage":true},{"functionName":"buildOverrideDescriptors","ranges":[{"startOffset":10469,"endOffset":10760,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverrideEnvDescriptors","ranges":[{"startOffset":10762,"endOffset":11159,"count":0}],"isBlockCoverage":false},{"functionName":"makeChainWalker","ranges":[{"startOffset":11161,"endOffset":13176,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11261,"endOffset":13173,"count":8},{"startOffset":11677,"endOffset":11725,"count":0},{"startOffset":11727,"endOffset":11870,"count":0},{"startOffset":12723,"endOffset":12749,"count":0},{"startOffset":13031,"endOffset":13061,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11921,"endOffset":12537,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12577,"endOffset":12720,"count":8}],"isBlockCoverage":true},{"functionName":"mergeExtendsChain","ranges":[{"startOffset":13178,"endOffset":13852,"count":8},{"startOffset":13304,"endOffset":13851,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13586,"endOffset":13615,"count":0}],"isBlockCoverage":false},{"functionName":"mergeChain","ranges":[{"startOffset":13854,"endOffset":14107,"count":24},{"startOffset":14054,"endOffset":14087,"count":0}],"isBlockCoverage":true},{"functionName":"mergeChainOpts","ranges":[{"startOffset":14109,"endOffset":14323,"count":8}],"isBlockCoverage":true},{"functionName":"emptyChain","ranges":[{"startOffset":14325,"endOffset":14438,"count":32}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":14440,"endOffset":14967,"count":8},{"startOffset":14867,"endOffset":14946,"count":0}],"isBlockCoverage":true},{"functionName":"dedupDescriptors","ranges":[{"startOffset":14969,"endOffset":15719,"count":16},{"startOffset":15084,"endOffset":15619,"count":8},{"startOffset":15128,"endOffset":15547,"count":7},{"startOffset":15499,"endOffset":15541,"count":0},{"startOffset":15547,"endOffset":15615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15649,"endOffset":15711,"count":8}],"isBlockCoverage":true},{"functionName":"configIsApplicable","ranges":[{"startOffset":15721,"endOffset":16078,"count":8},{"startOffset":15821,"endOffset":15879,"count":0},{"startOffset":15915,"endOffset":15976,"count":0},{"startOffset":16012,"endOffset":16074,"count":0}],"isBlockCoverage":true},{"functionName":"configFieldIsApplicable","ranges":[{"startOffset":16080,"endOffset":16250,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnore","ranges":[{"startOffset":16252,"endOffset":17152,"count":8},{"startOffset":16321,"endOffset":16365,"count":0},{"startOffset":16367,"endOffset":16718,"count":0},{"startOffset":16731,"endOffset":16774,"count":0},{"startOffset":16776,"endOffset":17133,"count":0}],"isBlockCoverage":true},{"functionName":"matchesPatterns","ranges":[{"startOffset":17154,"endOffset":17304,"count":0}],"isBlockCoverage":false},{"functionName":"matchPattern","ranges":[{"startOffset":17306,"endOffset":17823,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7860,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":400,"endOffset":495,"count":2},{"startOffset":474,"endOffset":492,"count":0}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":3559,"endOffset":3653,"count":8},{"startOffset":3627,"endOffset":3650,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3655,"endOffset":3761,"count":8}],"isBlockCoverage":true},{"functionName":"validateNested","ranges":[{"startOffset":3763,"endOffset":5032,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3895,"endOffset":5013,"count":10},{"startOffset":4016,"endOffset":4044,"count":0},{"startOffset":4046,"endOffset":4150,"count":0},{"startOffset":4181,"endOffset":4204,"count":0},{"startOffset":4206,"endOffset":4322,"count":0},{"startOffset":4353,"endOffset":4377,"count":0},{"startOffset":4378,"endOffset":4404,"count":0},{"startOffset":4406,"endOffset":4827,"count":0},{"startOffset":4874,"endOffset":4902,"count":2},{"startOffset":4903,"endOffset":4929,"count":2},{"startOffset":4930,"endOffset":4953,"count":1},{"startOffset":4954,"endOffset":4974,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownError","ranges":[{"startOffset":5034,"endOffset":5586,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":5588,"endOffset":5671,"count":8}],"isBlockCoverage":true},{"functionName":"assertNoDuplicateSourcemap","ranges":[{"startOffset":5673,"endOffset":5861,"count":8},{"startOffset":5746,"endOffset":5772,"count":0},{"startOffset":5774,"endOffset":5859,"count":0}],"isBlockCoverage":true},{"functionName":"assertEnvSet","ranges":[{"startOffset":5863,"endOffset":6486,"count":0}],"isBlockCoverage":false},{"functionName":"assertOverridesList","ranges":[{"startOffset":6488,"endOffset":7354,"count":0}],"isBlockCoverage":false},{"functionName":"checkNoUnwrappedItemOptionPairs","ranges":[{"startOffset":7356,"endOffset":7860,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/removed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2374,"count":1}],"isBlockCoverage":true}]},{"scriptId":"571","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/option-assertions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9985,"count":1}],"isBlockCoverage":true},{"functionName":"_helperCompilationTargets","ranges":[{"startOffset":939,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"msg","ranges":[{"startOffset":1163,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":1634,"endOffset":1726,"count":15}],"isBlockCoverage":true},{"functionName":"assertRootMode","ranges":[{"startOffset":1728,"endOffset":1985,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceMaps","ranges":[{"startOffset":1987,"endOffset":2236,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompact","ranges":[{"startOffset":2238,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceType","ranges":[{"startOffset":2454,"endOffset":2708,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallerMetadata","ranges":[{"startOffset":2710,"endOffset":3311,"count":0}],"isBlockCoverage":false},{"functionName":"assertInputSourceMap","ranges":[{"startOffset":3313,"endOffset":3555,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":3557,"endOffset":3740,"count":1},{"startOffset":3649,"endOffset":3721,"count":0}],"isBlockCoverage":true},{"functionName":"assertFunction","ranges":[{"startOffset":3742,"endOffset":3931,"count":14},{"startOffset":3838,"endOffset":3912,"count":0}],"isBlockCoverage":true},{"functionName":"assertBoolean","ranges":[{"startOffset":3933,"endOffset":4119,"count":1},{"startOffset":4027,"endOffset":4100,"count":0}],"isBlockCoverage":true},{"functionName":"assertObject","ranges":[{"startOffset":4121,"endOffset":4341,"count":8},{"startOffset":4249,"endOffset":4322,"count":0}],"isBlockCoverage":true},{"functionName":"assertArray","ranges":[{"startOffset":4343,"endOffset":4515,"count":8},{"startOffset":4424,"endOffset":4496,"count":0}],"isBlockCoverage":true},{"functionName":"assertIgnoreList","ranges":[{"startOffset":4517,"endOffset":4700,"count":0}],"isBlockCoverage":false},{"functionName":"assertIgnoreItem","ranges":[{"startOffset":4702,"endOffset":4960,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigApplicableTest","ranges":[{"startOffset":4962,"endOffset":5405,"count":0}],"isBlockCoverage":false},{"functionName":"checkValidTest","ranges":[{"startOffset":5407,"endOffset":5535,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigFileSearch","ranges":[{"startOffset":5537,"endOffset":5805,"count":1},{"startOffset":5639,"endOffset":5667,"count":0},{"startOffset":5669,"endOffset":5786,"count":0}],"isBlockCoverage":true},{"functionName":"assertBabelrcSearch","ranges":[{"startOffset":5807,"endOffset":6331,"count":0}],"isBlockCoverage":false},{"functionName":"assertPluginList","ranges":[{"startOffset":6333,"endOffset":6516,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6442,"endOffset":6493,"count":8}],"isBlockCoverage":true},{"functionName":"assertPluginItem","ranges":[{"startOffset":6518,"endOffset":7417,"count":8},{"startOffset":6586,"endOffset":7351,"count":7},{"startOffset":6616,"endOffset":6684,"count":0},{"startOffset":6712,"endOffset":6796,"count":0},{"startOffset":7025,"endOffset":7124,"count":0},{"startOffset":7160,"endOffset":7347,"count":0},{"startOffset":7351,"endOffset":7398,"count":1}],"isBlockCoverage":true},{"functionName":"assertPluginTarget","ranges":[{"startOffset":7419,"endOffset":7661,"count":8},{"startOffset":7494,"endOffset":7503,"count":1},{"startOffset":7505,"endOffset":7533,"count":7},{"startOffset":7534,"endOffset":7564,"count":0},{"startOffset":7566,"endOffset":7642,"count":0}],"isBlockCoverage":true},{"functionName":"assertTargets","ranges":[{"startOffset":7663,"endOffset":8712,"count":0}],"isBlockCoverage":false},{"functionName":"assertBrowsersList","ranges":[{"startOffset":8714,"endOffset":8942,"count":0}],"isBlockCoverage":false},{"functionName":"assertBrowserVersion","ranges":[{"startOffset":8944,"endOffset":9174,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssumptions","ranges":[{"startOffset":9176,"endOffset":9985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2801,"count":1}],"isBlockCoverage":true},{"functionName":"title","ranges":[{"startOffset":297,"endOffset":590,"count":0}],"isBlockCoverage":false},{"functionName":"loc","ranges":[{"startOffset":595,"endOffset":793,"count":0}],"isBlockCoverage":false},{"functionName":"optionsAndDescriptors","ranges":[{"startOffset":798,"endOffset":1348,"count":0}],"isBlockCoverage":false},{"functionName":"descriptorToConfig","ranges":[{"startOffset":1354,"endOffset":1899,"count":0}],"isBlockCoverage":false},{"functionName":"ConfigPrinter","ranges":[{"startOffset":1925,"endOffset":1966,"count":16}],"isBlockCoverage":true},{"functionName":"configure","ranges":[{"startOffset":1970,"endOffset":2255,"count":8},{"startOffset":2067,"endOffset":2254,"count":0}],"isBlockCoverage":true},{"functionName":"_stack.push.type.type","ranges":[{"startOffset":2058,"endOffset":2066,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2079,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2266,"endOffset":2574,"count":0}],"isBlockCoverage":false},{"functionName":"output","ranges":[{"startOffset":2578,"endOffset":2758,"count":8},{"startOffset":2634,"endOffset":2757,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2690,"endOffset":2718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/validation/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true},{"functionName":"assertVisitorMap","ranges":[{"startOffset":575,"endOffset":975,"count":8},{"startOffset":801,"endOffset":954,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":721,"endOffset":766,"count":8}],"isBlockCoverage":true},{"functionName":"assertVisitorHandler","ranges":[{"startOffset":977,"endOffset":1399,"count":8},{"startOffset":1063,"endOffset":1274,"count":1},{"startOffset":1274,"endOffset":1380,"count":7},{"startOffset":1313,"endOffset":1380,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1096,"endOffset":1268,"count":1},{"startOffset":1162,"endOffset":1262,"count":0}],"isBlockCoverage":true},{"functionName":"validatePluginObject","ranges":[{"startOffset":1401,"endOffset":1982,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1530,"endOffset":1964,"count":23},{"startOffset":1740,"endOffset":1960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"574","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/config/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5570,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":522,"endOffset":617,"count":1},{"startOffset":596,"endOffset":614,"count":0}],"isBlockCoverage":true},{"functionName":"_objectWithoutPropertiesLoose","ranges":[{"startOffset":619,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"resolveRootMode","ranges":[{"startOffset":996,"endOffset":1909,"count":8},{"startOffset":1109,"endOffset":1290,"count":0},{"startOffset":1296,"endOffset":1819,"count":0},{"startOffset":1825,"endOffset":1903,"count":0}],"isBlockCoverage":true},{"functionName":"loadPrivatePartialConfig","ranges":[{"startOffset":1911,"endOffset":3939,"count":8},{"startOffset":2047,"endOffset":2128,"count":0},{"startOffset":2204,"endOffset":2208,"count":0},{"startOffset":2564,"endOffset":2598,"count":0},{"startOffset":2947,"endOffset":2959,"count":0},{"startOffset":3486,"endOffset":3504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3034,"endOffset":3090,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3555,"endOffset":3616,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3656,"endOffset":3717,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3975,"endOffset":4912,"count":0}],"isBlockCoverage":false},{"functionName":"PartialConfig","ranges":[{"startOffset":4987,"endOffset":5427,"count":0}],"isBlockCoverage":false},{"functionName":"hasFilesystemConfig","ranges":[{"startOffset":5431,"endOffset":5526,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1088,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":270,"endOffset":365,"count":1},{"startOffset":344,"endOffset":362,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":436,"endOffset":615,"count":7},{"startOffset":545,"endOffset":557,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":637,"endOffset":885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3537,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":100,"endOffset":258,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":205,"endOffset":239,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":630,"endOffset":725,"count":6},{"startOffset":704,"endOffset":722,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":727,"endOffset":1866,"count":7},{"startOffset":962,"endOffset":1188,"count":0},{"startOffset":1372,"endOffset":1600,"count":0},{"startOffset":1688,"endOffset":1698,"count":0},{"startOffset":1742,"endOffset":1748,"count":0},{"startOffset":1796,"endOffset":1802,"count":0}],"isBlockCoverage":true},{"functionName":"transformFile","ranges":[{"startOffset":1868,"endOffset":3385,"count":7},{"startOffset":2114,"endOffset":2299,"count":14},{"startOffset":2345,"endOffset":2752,"count":14},{"startOffset":2391,"endOffset":2746,"count":7},{"startOffset":2489,"endOffset":2738,"count":0},{"startOffset":2970,"endOffset":3379,"count":14},{"startOffset":3017,"endOffset":3373,"count":7},{"startOffset":3115,"endOffset":3365,"count":0}],"isBlockCoverage":true},{"functionName":"isThenable","ranges":[{"startOffset":3387,"endOffset":3537,"count":14},{"startOffset":3429,"endOffset":3486,"count":0},{"startOffset":3487,"endOffset":3500,"count":0},{"startOffset":3501,"endOffset":3534,"count":0}],"isBlockCoverage":true}]},{"scriptId":"577","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/plugin-pass.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"PluginPass","ranges":[{"startOffset":128,"endOffset":457,"count":14},{"startOffset":377,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":461,"endOffset":509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":513,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":562,"endOffset":661,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":665,"endOffset":724,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":728,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":783,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":964,"endOffset":1032,"count":0}],"isBlockCoverage":false}]},{"scriptId":"578","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/block-hoist-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1876,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":256,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"loadBlockHoistPlugin","ranges":[{"startOffset":299,"endOffset":643,"count":7},{"startOffset":355,"endOffset":616,"count":1},{"startOffset":538,"endOffset":549,"count":0},{"startOffset":575,"endOffset":612,"count":0}],"isBlockCoverage":true},{"functionName":"priority","ranges":[{"startOffset":645,"endOffset":833,"count":7},{"startOffset":711,"endOffset":719,"count":0},{"startOffset":777,"endOffset":832,"count":0}],"isBlockCoverage":true},{"functionName":"stableSort","ranges":[{"startOffset":835,"endOffset":1306,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":1398,"endOffset":1862,"count":7},{"startOffset":1683,"endOffset":1745,"count":0},{"startOffset":1808,"endOffset":1861,"count":0}],"isBlockCoverage":true}]},{"scriptId":"579","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/normalize-opts.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":148,"endOffset":1448,"count":7},{"startOffset":269,"endOffset":299,"count":0},{"startOffset":724,"endOffset":734,"count":0},{"startOffset":1345,"endOffset":1417,"count":0}],"isBlockCoverage":true}]},{"scriptId":"580","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/normalize-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4519,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":114,"endOffset":254,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":201,"endOffset":235,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":450,"endOffset":545,"count":3},{"startOffset":524,"endOffset":542,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":547,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":735,"endOffset":1478,"count":1},{"startOffset":817,"endOffset":890,"count":0},{"startOffset":892,"endOffset":988,"count":0},{"startOffset":990,"endOffset":1118,"count":0},{"startOffset":1141,"endOffset":1477,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFile","ranges":[{"startOffset":1733,"endOffset":3552,"count":7},{"startOffset":1810,"endOffset":1815,"count":0},{"startOffset":1831,"endOffset":2097,"count":0},{"startOffset":2296,"endOffset":2373,"count":0},{"startOffset":2492,"endOffset":2680,"count":0},{"startOffset":2831,"endOffset":2845,"count":0},{"startOffset":2847,"endOffset":3369,"count":0},{"startOffset":3392,"endOffset":3463,"count":0}],"isBlockCoverage":true},{"functionName":"extractCommentsFromList","ranges":[{"startOffset":3765,"endOffset":4064,"count":318},{"startOffset":3846,"endOffset":4027,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3879,"endOffset":4021,"count":0}],"isBlockCoverage":false},{"functionName":"extractComments","ranges":[{"startOffset":4066,"endOffset":4519,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4155,"endOffset":4493,"count":106}],"isBlockCoverage":true}]},{"scriptId":"581","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2381,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":107,"endOffset":235,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":182,"endOffset":216,"count":6}],"isBlockCoverage":true},{"functionName":"_codeFrame","ranges":[{"startOffset":237,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":470,"endOffset":565,"count":1},{"startOffset":544,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"parser","ranges":[{"startOffset":567,"endOffset":2381,"count":7},{"startOffset":875,"endOffset":1011,"count":0},{"startOffset":1117,"endOffset":2379,"count":0}],"isBlockCoverage":true}]},{"scriptId":"582","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7845,"count":1}],"isBlockCoverage":true},{"functionName":"getNameURLCombination","ranges":[{"startOffset":6680,"endOffset":6721,"count":0}],"isBlockCoverage":false},{"functionName":"generateMissingPluginMessage","ranges":[{"startOffset":6724,"endOffset":7845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/util/clone-deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":484,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":191,"endOffset":286,"count":1},{"startOffset":265,"endOffset":283,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":315,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/util/clone-deep-browser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"serialize","ranges":[{"startOffset":181,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"revive","ranges":[{"startOffset":336,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":508,"endOffset":599,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/file/generate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1947,"count":1}],"isBlockCoverage":true},{"functionName":"_generator","ranges":[{"startOffset":113,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"_generator","ranges":[{"startOffset":221,"endOffset":255,"count":6}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":341,"endOffset":436,"count":2},{"startOffset":415,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"generateCode","ranges":[{"startOffset":495,"endOffset":1947,"count":7},{"startOffset":790,"endOffset":950,"count":0},{"startOffset":1081,"endOffset":1511,"count":0},{"startOffset":1593,"endOffset":1604,"count":0},{"startOffset":1606,"endOffset":1683,"count":0},{"startOffset":1751,"endOffset":1833,"count":0},{"startOffset":1871,"endOffset":1898,"count":0}],"isBlockCoverage":true}]},{"scriptId":"586","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transformation/file/merge-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5308,"count":1}],"isBlockCoverage":true},{"functionName":"mergeSourceMap","ranges":[{"startOffset":157,"endOffset":1903,"count":0}],"isBlockCoverage":false},{"functionName":"makeMappingKey","ranges":[{"startOffset":1905,"endOffset":1983,"count":0}],"isBlockCoverage":false},{"functionName":"eachOverlappingGeneratedOutputRange","ranges":[{"startOffset":1985,"endOffset":2299,"count":0}],"isBlockCoverage":false},{"functionName":"filterApplicableOriginalRanges","ranges":[{"startOffset":2301,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"eachInputGeneratedRange","ranges":[{"startOffset":2698,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"buildMappingData","ranges":[{"startOffset":2981,"endOffset":4524,"count":0}],"isBlockCoverage":false},{"functionName":"findInsertionLocation","ranges":[{"startOffset":4526,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"filterSortedArray","ranges":[{"startOffset":5056,"endOffset":5308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"588","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14101,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":2973,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":3991,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":5869,"endOffset":8581,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9016,"endOffset":10610,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":10783,"endOffset":12742,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":12802,"endOffset":13271,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13353,"endOffset":13856,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":13963,"endOffset":14049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10484,"count":1},{"startOffset":6430,"endOffset":6443,"count":0},{"startOffset":6607,"endOffset":6622,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4737,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5862,"endOffset":5942,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5948,"endOffset":5985,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6276,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6446,"endOffset":6553,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6625,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7744,"endOffset":8366,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8819,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9537,"endOffset":9669,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9799,"endOffset":10400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"592","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"594","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38390,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":770,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2521,"endOffset":2679,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2821,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3039,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3418,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4485,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6535,"endOffset":9285,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10656,"endOffset":12847,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":13229,"endOffset":15039,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15280,"endOffset":15439,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":15506,"endOffset":15682,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":15930,"endOffset":19135,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":19334,"endOffset":20153,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":20308,"endOffset":21187,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":22205,"endOffset":23481,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":23654,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":24137,"endOffset":25665,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":26630,"endOffset":27848,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":29633,"endOffset":31107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31501,"endOffset":31765,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":32436,"endOffset":33615,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":33790,"endOffset":33961,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":34189,"endOffset":34628,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":35243,"endOffset":36153,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":36404,"endOffset":38326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"595","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"597","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13796,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6745,"endOffset":7170,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7436,"endOffset":7853,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8156,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8751,"endOffset":9090,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9387,"endOffset":9820,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10108,"endOffset":10252,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10496,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11099,"endOffset":11218,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11359,"endOffset":13760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transform-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2044,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":348,"endOffset":534,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":536,"endOffset":1279,"count":1},{"startOffset":618,"endOffset":691,"count":0},{"startOffset":693,"endOffset":789,"count":0},{"startOffset":791,"endOffset":919,"count":0},{"startOffset":942,"endOffset":1278,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1281,"endOffset":1376,"count":1},{"startOffset":1355,"endOffset":1373,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1457,"endOffset":1750,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/transform-ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1286,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":291,"endOffset":386,"count":1},{"startOffset":365,"endOffset":383,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":464,"endOffset":689,"count":0}],"isBlockCoverage":false},{"functionName":"transformFromAst","ranges":[{"startOffset":718,"endOffset":1013,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/core/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1162,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":356,"endOffset":451,"count":3},{"startOffset":430,"endOffset":448,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":518,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":763,"endOffset":999,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":269,"count":1},{"startOffset":159,"endOffset":211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"602","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ava/lib/worker/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":678,"count":1}],"isBlockCoverage":true},{"functionName":"makeCjsExport","ranges":[{"startOffset":89,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":98,"endOffset":157,"count":7}],"isBlockCoverage":true}]},{"scriptId":"603","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":151,"endOffset":195,"count":7}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":271,"endOffset":366,"count":1},{"startOffset":345,"endOffset":363,"count":0}],"isBlockCoverage":true}]},{"scriptId":"604","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/library/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":346,"count":1}],"isBlockCoverage":true}]},{"scriptId":"605","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/plugin.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2952,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":173,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":361,"endOffset":1104,"count":1},{"startOffset":443,"endOffset":516,"count":0},{"startOffset":518,"endOffset":614,"count":0},{"startOffset":616,"endOffset":744,"count":0},{"startOffset":767,"endOffset":1103,"count":0}],"isBlockCoverage":true},{"functionName":"createPlugin","ranges":[{"startOffset":1180,"endOffset":2887,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1284,"endOffset":2882,"count":7}],"isBlockCoverage":true},{"functionName":"pluginObject.pre","ranges":[{"startOffset":1601,"endOffset":1672,"count":7}],"isBlockCoverage":true},{"functionName":"pluginObject.post","ranges":[{"startOffset":1701,"endOffset":1771,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1874,"endOffset":2803,"count":7},{"startOffset":2357,"endOffset":2795,"count":0}],"isBlockCoverage":true},{"functionName":"visitorObject.<computed>","ranges":[{"startOffset":2028,"endOffset":2124,"count":8}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":2409,"endOffset":2584,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":2599,"endOffset":2771,"count":0}],"isBlockCoverage":false}]},{"scriptId":"606","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/change-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1}],"isBlockCoverage":true}]},{"scriptId":"607","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/tslib/tslib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1335,"endOffset":2307,"count":1},{"startOffset":1408,"endOffset":1480,"count":0},{"startOffset":1520,"endOffset":1533,"count":0},{"startOffset":1535,"endOffset":1662,"count":0},{"startOffset":1823,"endOffset":1882,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1575,"endOffset":1653,"count":0}],"isBlockCoverage":false},{"functionName":"createExporter","ranges":[{"startOffset":1888,"endOffset":2304,"count":2},{"startOffset":1964,"endOffset":2206,"count":1},{"startOffset":2116,"endOffset":2195,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2223,"endOffset":2296,"count":48},{"startOffset":2272,"endOffset":2289,"count":24},{"startOffset":2290,"endOffset":2293,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2311,"endOffset":14643,"count":1},{"startOffset":2380,"endOffset":2468,"count":0},{"startOffset":2469,"endOffset":2578,"count":0},{"startOffset":2987,"endOffset":3227,"count":0},{"startOffset":7628,"endOffset":7724,"count":0},{"startOffset":12003,"endOffset":12055,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":2431,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":2481,"endOffset":2578,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":2599,"endOffset":2953,"count":0}],"isBlockCoverage":false},{"functionName":"__assign","ranges":[{"startOffset":2990,"endOffset":3227,"count":0}],"isBlockCoverage":false},{"functionName":"__rest","ranges":[{"startOffset":3245,"endOffset":3746,"count":0}],"isBlockCoverage":false},{"functionName":"__decorate","ranges":[{"startOffset":3768,"endOffset":4317,"count":0}],"isBlockCoverage":false},{"functionName":"__param","ranges":[{"startOffset":4336,"endOffset":4456,"count":0}],"isBlockCoverage":false},{"functionName":"__metadata","ranges":[{"startOffset":4478,"endOffset":4661,"count":0}],"isBlockCoverage":false},{"functionName":"__awaiter","ranges":[{"startOffset":4682,"endOffset":5357,"count":0}],"isBlockCoverage":false},{"functionName":"__generator","ranges":[{"startOffset":5380,"endOffset":7251,"count":0}],"isBlockCoverage":false},{"functionName":"__exportStar","ranges":[{"startOffset":7275,"endOffset":7418,"count":11},{"startOffset":7318,"endOffset":7411,"count":17}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7462,"endOffset":7626,"count":17}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7588,"endOffset":7615,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7631,"endOffset":7723,"count":0}],"isBlockCoverage":true},{"functionName":"__values","ranges":[{"startOffset":7744,"endOffset":8212,"count":0}],"isBlockCoverage":false},{"functionName":"__read","ranges":[{"startOffset":8230,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"__spread","ranges":[{"startOffset":8799,"endOffset":8951,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadArrays","ranges":[{"startOffset":9001,"endOffset":9303,"count":0}],"isBlockCoverage":false},{"functionName":"__spreadArray","ranges":[{"startOffset":9328,"endOffset":9482,"count":0}],"isBlockCoverage":false},{"functionName":"__await","ranges":[{"startOffset":9501,"endOffset":9601,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncGenerator","ranges":[{"startOffset":9629,"endOffset":10559,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncDelegator","ranges":[{"startOffset":10587,"endOffset":10930,"count":0}],"isBlockCoverage":false},{"functionName":"__asyncValues","ranges":[{"startOffset":10955,"endOffset":11641,"count":0}],"isBlockCoverage":false},{"functionName":"__makeTemplateObject","ranges":[{"startOffset":11673,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11900,"endOffset":12001,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":12005,"endOffset":12055,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":12079,"endOffset":12389,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":12416,"endOffset":12507,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldGet","ranges":[{"startOffset":12541,"endOffset":12981,"count":0}],"isBlockCoverage":false},{"functionName":"__classPrivateFieldSet","ranges":[{"startOffset":13015,"endOffset":13555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/camel-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"camelCaseTransform","ranges":[{"startOffset":244,"endOffset":406,"count":0}],"isBlockCoverage":false},{"functionName":"camelCaseTransformMerge","ranges":[{"startOffset":456,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"camelCase","ranges":[{"startOffset":681,"endOffset":871,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/pascal-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1037,"count":1}],"isBlockCoverage":true},{"functionName":"pascalCaseTransform","ranges":[{"startOffset":239,"endOffset":540,"count":42},{"startOffset":391,"endOffset":410,"count":21},{"startOffset":411,"endOffset":430,"count":21},{"startOffset":432,"endOffset":484,"count":0}],"isBlockCoverage":true},{"functionName":"pascalCaseTransformMerge","ranges":[{"startOffset":592,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"pascalCase","ranges":[{"startOffset":771,"endOffset":970,"count":21}],"isBlockCoverage":true}]},{"scriptId":"610","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/no-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1625,"count":1}],"isBlockCoverage":true},{"functionName":"noCase","ranges":[{"startOffset":468,"endOffset":1296,"count":21},{"startOffset":530,"endOffset":547,"count":0},{"startOffset":633,"endOffset":637,"count":0},{"startOffset":716,"endOffset":720,"count":0},{"startOffset":772,"endOffset":796,"count":0},{"startOffset":853,"endOffset":858,"count":0},{"startOffset":1104,"endOffset":1112,"count":0},{"startOffset":1165,"endOffset":1171,"count":0}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":1394,"endOffset":1591,"count":42},{"startOffset":1469,"endOffset":1590,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1523,"endOffset":1580,"count":42}],"isBlockCoverage":true}]},{"scriptId":"611","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lower-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1324,"count":1}],"isBlockCoverage":true},{"functionName":"localeLowerCase","ranges":[{"startOffset":894,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"lowerCase","ranges":[{"startOffset":1202,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/capital-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"capitalCaseTransform","ranges":[{"startOffset":260,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"capitalCase","ranges":[{"startOffset":421,"endOffset":623,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case-first/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"upperCaseFirst","ranges":[{"startOffset":172,"endOffset":266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/constant-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":494,"count":1}],"isBlockCoverage":true},{"functionName":"constantCase","ranges":[{"startOffset":218,"endOffset":423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1179,"count":1}],"isBlockCoverage":true},{"functionName":"localeUpperCase","ranges":[{"startOffset":749,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"upperCase","ranges":[{"startOffset":1057,"endOffset":1114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/dot-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":397,"count":1}],"isBlockCoverage":true},{"functionName":"dotCase","ranges":[{"startOffset":171,"endOffset":336,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/header-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":429,"count":1}],"isBlockCoverage":true},{"functionName":"headerCase","ranges":[{"startOffset":184,"endOffset":362,"count":0}],"isBlockCoverage":false}]},{"scriptId":"618","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/param-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"paramCase","ranges":[{"startOffset":175,"endOffset":344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"619","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"pathCase","ranges":[{"startOffset":174,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"620","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/sentence-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":777,"count":1}],"isBlockCoverage":true},{"functionName":"sentenceCaseTransform","ranges":[{"startOffset":262,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"sentenceCase","ranges":[{"startOffset":502,"endOffset":706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/snake-case/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"snakeCase","ranges":[{"startOffset":175,"endOffset":344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/library/visitor.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1147,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":236,"endOffset":331,"count":1},{"startOffset":304,"endOffset":309,"count":0}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":376,"endOffset":418,"count":7}],"isBlockCoverage":true},{"functionName":"get nodeType","ranges":[{"startOffset":422,"endOffset":472,"count":7}],"isBlockCoverage":true},{"functionName":"onStringLiteralNode","ranges":[{"startOffset":476,"endOffset":940,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":663,"endOffset":934,"count":8},{"startOffset":725,"endOffset":748,"count":1},{"startOffset":749,"endOffset":837,"count":7},{"startOffset":803,"endOffset":837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"623","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@pwn/is/lib/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21014,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93,"endOffset":543,"count":1},{"startOffset":160,"endOffset":173,"count":0},{"startOffset":176,"endOffset":250,"count":0},{"startOffset":480,"endOffset":540,"count":0}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":554,"endOffset":21011,"count":1},{"startOffset":1693,"endOffset":2831,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":821,"endOffset":1587,"count":1}],"isBlockCoverage":true},{"functionName":"tagOf","ranges":[{"startOffset":989,"endOffset":1582,"count":7},{"startOffset":1092,"endOffset":1123,"count":0},{"startOffset":1153,"endOffset":1189,"count":0},{"startOffset":1364,"endOffset":1415,"count":0},{"startOffset":1536,"endOffset":1551,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1698,"endOffset":2513,"count":0}],"isBlockCoverage":true},{"functionName":"addPredicate","ranges":[{"startOffset":2999,"endOffset":3543,"count":37},{"startOffset":3084,"endOffset":3156,"count":0},{"startOffset":3204,"endOffset":3283,"count":0},{"startOffset":3330,"endOffset":3401,"count":0}],"isBlockCoverage":true},{"functionName":"delegate","ranges":[{"startOffset":3455,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":3667,"endOffset":4664,"count":8}],"isBlockCoverage":true},{"functionName":"nilBundle","ranges":[{"startOffset":4807,"endOffset":5747,"count":1}],"isBlockCoverage":true},{"functionName":"isNull","ranges":[{"startOffset":4964,"endOffset":5024,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":5171,"endOffset":5238,"count":0}],"isBlockCoverage":false},{"functionName":"isExist","ranges":[{"startOffset":5402,"endOffset":5496,"count":0}],"isBlockCoverage":false},{"functionName":"isNil","ranges":[{"startOffset":5648,"endOffset":5740,"count":0}],"isBlockCoverage":false},{"functionName":"numberBundle","ranges":[{"startOffset":5796,"endOffset":8829,"count":1},{"startOffset":7506,"endOffset":7658,"count":0},{"startOffset":8112,"endOffset":8273,"count":0},{"startOffset":8490,"endOffset":8824,"count":0}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":5962,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"isNumeral","ranges":[{"startOffset":6274,"endOffset":6626,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":6755,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"isOdd","ranges":[{"startOffset":6992,"endOffset":7078,"count":0}],"isBlockCoverage":false},{"functionName":"isEven","ranges":[{"startOffset":7219,"endOffset":7306,"count":0}],"isBlockCoverage":false},{"functionName":"isFiniteNumber","ranges":[{"startOffset":7550,"endOffset":7650,"count":0}],"isBlockCoverage":false},{"functionName":"isInfinite","ranges":[{"startOffset":7824,"endOffset":7913,"count":0}],"isBlockCoverage":false},{"functionName":"isInteger","ranges":[{"startOffset":8157,"endOffset":8265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8506,"endOffset":8814,"count":0}],"isBlockCoverage":true},{"functionName":"stringBundle","ranges":[{"startOffset":8878,"endOffset":11697,"count":1},{"startOffset":10730,"endOffset":11692,"count":0}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":9044,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":9320,"endOffset":9419,"count":0}],"isBlockCoverage":false},{"functionName":"isSubstring","ranges":[{"startOffset":9611,"endOffset":10078,"count":0}],"isBlockCoverage":false},{"functionName":"isPrefix","ranges":[{"startOffset":10315,"endOffset":10437,"count":0}],"isBlockCoverage":false},{"functionName":"isSuffix","ranges":[{"startOffset":10601,"endOffset":10721,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10747,"endOffset":10903,"count":0}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":10907,"endOffset":11683,"count":0}],"isBlockCoverage":false},{"functionName":"booleanBundle","ranges":[{"startOffset":11747,"endOffset":12006,"count":1}],"isBlockCoverage":true},{"functionName":"isBoolean","ranges":[{"startOffset":11917,"endOffset":11999,"count":0}],"isBlockCoverage":false},{"functionName":"objectBundle","ranges":[{"startOffset":12055,"endOffset":14957,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":12222,"endOffset":12295,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyObject","ranges":[{"startOffset":12527,"endOffset":12634,"count":0}],"isBlockCoverage":false},{"functionName":"isPropertyDefined","ranges":[{"startOffset":12827,"endOffset":13245,"count":0}],"isBlockCoverage":false},{"functionName":"isConforms","ranges":[{"startOffset":14191,"endOffset":14950,"count":0}],"isBlockCoverage":false},{"functionName":"arrayBundle","ranges":[{"startOffset":15005,"endOffset":17495,"count":1},{"startOffset":15218,"endOffset":15347,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":15261,"endOffset":15339,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":15717,"endOffset":16026,"count":0}],"isBlockCoverage":false},{"functionName":"isInArray","ranges":[{"startOffset":16497,"endOffset":17488,"count":0}],"isBlockCoverage":false},{"functionName":"typeBundle","ranges":[{"startOffset":17542,"endOffset":18821,"count":1}],"isBlockCoverage":true},{"functionName":"isSameType","ranges":[{"startOffset":17728,"endOffset":17854,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":18001,"endOffset":18208,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":18304,"endOffset":18607,"count":1},{"startOffset":18493,"endOffset":18600,"count":7}],"isBlockCoverage":true},{"functionName":"makePredicate","ranges":[{"startOffset":18611,"endOffset":18740,"count":7}],"isBlockCoverage":true},{"functionName":"predicate","ranges":[{"startOffset":18657,"endOffset":18733,"count":7}],"isBlockCoverage":true},{"functionName":"equalityBundle","ranges":[{"startOffset":18872,"endOffset":20992,"count":1}],"isBlockCoverage":true},{"functionName":"isEqual","ranges":[{"startOffset":19078,"endOffset":19229,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepEqual","ranges":[{"startOffset":19787,"endOffset":20985,"count":0}],"isBlockCoverage":false}]},{"scriptId":"624","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/visitor.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":513,"count":1}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":125,"endOffset":174,"count":7}],"isBlockCoverage":true},{"functionName":"get nodeType","ranges":[{"startOffset":178,"endOffset":243,"count":0}],"isBlockCoverage":false},{"functionName":"onBeforeNode","ranges":[{"startOffset":247,"endOffset":280,"count":7}],"isBlockCoverage":true},{"functionName":"onAfterNode","ranges":[{"startOffset":413,"endOffset":445,"count":7}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8145,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":243,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":378,"endOffset":428,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":512,"endOffset":565,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":653,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":789,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":918,"endOffset":971,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1394,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1582,"endOffset":2325,"count":1},{"startOffset":1664,"endOffset":1737,"count":0},{"startOffset":1739,"endOffset":1835,"count":0},{"startOffset":1837,"endOffset":1965,"count":0},{"startOffset":1988,"endOffset":2324,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2327,"endOffset":2422,"count":1},{"startOffset":2395,"endOffset":2400,"count":0}],"isBlockCoverage":true},{"functionName":"validateTargetNames","ranges":[{"startOffset":2621,"endOffset":3005,"count":8},{"startOffset":2765,"endOffset":2984,"count":0}],"isBlockCoverage":true},{"functionName":"isBrowsersQueryValid","ranges":[{"startOffset":3007,"endOffset":3162,"count":0}],"isBlockCoverage":false},{"functionName":"validateBrowsers","ranges":[{"startOffset":3164,"endOffset":3354,"count":8},{"startOffset":3239,"endOffset":3272,"count":0}],"isBlockCoverage":true},{"functionName":"getLowestVersions","ranges":[{"startOffset":3356,"endOffset":4656,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3420,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"outputDecimalWarning","ranges":[{"startOffset":4658,"endOffset":5098,"count":8},{"startOffset":4753,"endOffset":5097,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4861,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"semverifyTarget","ranges":[{"startOffset":5100,"endOffset":5314,"count":0}],"isBlockCoverage":false},{"functionName":"__default","ranges":[{"startOffset":5344,"endOffset":5527,"count":0}],"isBlockCoverage":false},{"functionName":"node","ranges":[{"startOffset":5532,"endOffset":5701,"count":0}],"isBlockCoverage":false},{"functionName":"generateTargets","ranges":[{"startOffset":5707,"endOffset":5865,"count":8}],"isBlockCoverage":true},{"functionName":"resolveTargets","ranges":[{"startOffset":5867,"endOffset":6016,"count":8}],"isBlockCoverage":true},{"functionName":"getTargets","ranges":[{"startOffset":6018,"endOffset":8145,"count":8},{"startOffset":6759,"endOffset":6846,"count":0},{"startOffset":6848,"endOffset":6984,"count":0},{"startOffset":7092,"endOffset":7450,"count":0},{"startOffset":7614,"endOffset":8084,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6894,"endOffset":6944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"626","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-option/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":215,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":298,"endOffset":358,"count":0}],"isBlockCoverage":false}]},{"scriptId":"627","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-option/lib/validator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1397,"count":1}],"isBlockCoverage":true},{"functionName":"OptionValidator","ranges":[{"startOffset":194,"endOffset":257,"count":2}],"isBlockCoverage":true},{"functionName":"validateTopLevelOptions","ranges":[{"startOffset":261,"endOffset":671,"count":0}],"isBlockCoverage":false},{"functionName":"validateBooleanOption","ranges":[{"startOffset":675,"endOffset":914,"count":0}],"isBlockCoverage":false},{"functionName":"validateStringOption","ranges":[{"startOffset":918,"endOffset":1154,"count":0}],"isBlockCoverage":false},{"functionName":"invariant","ranges":[{"startOffset":1158,"endOffset":1273,"count":8},{"startOffset":1210,"endOffset":1269,"count":0}],"isBlockCoverage":true},{"functionName":"formatMessage","ranges":[{"startOffset":1277,"endOffset":1350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"628","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-option/lib/find-suggestion.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":715,"count":1}],"isBlockCoverage":true},{"functionName":"levenshtein","ranges":[{"startOffset":146,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"findSuggestion","ranges":[{"startOffset":569,"endOffset":715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"629","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/compat-data/native-modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56,"count":1}],"isBlockCoverage":true}]},{"scriptId":"630","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1897,"count":1}],"isBlockCoverage":true},{"functionName":"semverMin","ranges":[{"startOffset":644,"endOffset":742,"count":0}],"isBlockCoverage":false},{"functionName":"semverify","ranges":[{"startOffset":744,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"isUnreleasedVersion","ranges":[{"startOffset":1138,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"getLowestUnreleased","ranges":[{"startOffset":1328,"endOffset":1600,"count":0}],"isBlockCoverage":false},{"functionName":"getHighestUnreleased","ranges":[{"startOffset":1602,"endOffset":1701,"count":0}],"isBlockCoverage":false},{"functionName":"getLowestImplementedVersion","ranges":[{"startOffset":1703,"endOffset":1897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"631","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/lib/targets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":560,"count":1}],"isBlockCoverage":true}]},{"scriptId":"632","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42130,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":8258,"endOffset":8331,"count":38},{"startOffset":8293,"endOffset":8329,"count":34}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":38}],"isBlockCoverage":true},{"functionName":"tok","ranges":[{"startOffset":879,"endOffset":912,"count":38}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8355,"endOffset":8881,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":8905,"endOffset":9006,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":9030,"endOffset":9160,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":9187,"endOffset":10883,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":10911,"endOffset":11102,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.toString","ranges":[{"startOffset":11132,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":11198,"endOffset":11423,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11456,"endOffset":11726,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11758,"endOffset":12545,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareBuild","ranges":[{"startOffset":12579,"endOffset":13071,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":13241,"endOffset":16302,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":16322,"endOffset":16579,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":16601,"endOffset":17129,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":17205,"endOffset":17450,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":17502,"endOffset":17575,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":17599,"endOffset":17664,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":17688,"endOffset":17753,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":17777,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17870,"endOffset":17964,"count":0}],"isBlockCoverage":false},{"functionName":"compareLoose","ranges":[{"startOffset":18002,"endOffset":18063,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":18101,"endOffset":18287,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":18317,"endOffset":18382,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":18404,"endOffset":18522,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":18546,"endOffset":18665,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":18683,"endOffset":18746,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":18764,"endOffset":18827,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":18845,"endOffset":18910,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":18930,"endOffset":18996,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":19016,"endOffset":19081,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":19101,"endOffset":19166,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":19186,"endOffset":19900,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator","ranges":[{"startOffset":19934,"endOffset":20586,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.parse","ranges":[{"startOffset":20630,"endOffset":21093,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.toString","ranges":[{"startOffset":21127,"endOffset":21162,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.test","ranges":[{"startOffset":21192,"endOffset":21550,"count":0}],"isBlockCoverage":false},{"functionName":"Comparator.intersects","ranges":[{"startOffset":21586,"endOffset":23312,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":23336,"endOffset":24393,"count":0}],"isBlockCoverage":false},{"functionName":"Range.format","ranges":[{"startOffset":24420,"endOffset":24559,"count":0}],"isBlockCoverage":false},{"functionName":"Range.toString","ranges":[{"startOffset":24588,"endOffset":24623,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":24654,"endOffset":25892,"count":0}],"isBlockCoverage":false},{"functionName":"Range.intersects","ranges":[{"startOffset":25923,"endOffset":26537,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":26637,"endOffset":27067,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":27157,"endOffset":27357,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":27503,"endOffset":27838,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":27840,"endOffset":27916,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":28189,"endOffset":28341,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":28343,"endOffset":29131,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":29330,"endOffset":29482,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":29484,"endOffset":30969,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":30971,"endOffset":31159,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":31161,"endOffset":32910,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":33035,"endOffset":33229,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":33445,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":34102,"endOffset":34454,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":34456,"endOffset":35477,"count":0}],"isBlockCoverage":false},{"functionName":"satisfies","ranges":[{"startOffset":35509,"endOffset":35670,"count":0}],"isBlockCoverage":false},{"functionName":"maxSatisfying","ranges":[{"startOffset":35710,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":36196,"endOffset":36641,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":36675,"endOffset":37918,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":37952,"endOffset":38191,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":38287,"endOffset":38376,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":38476,"endOffset":38565,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":38593,"endOffset":40384,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":40418,"endOffset":40572,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":40606,"endOffset":40734,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":40760,"endOffset":42129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"633","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":374,"count":1}],"isBlockCoverage":true}]},{"scriptId":"634","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/lib/pretty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true},{"functionName":"prettifyVersion","ranges":[{"startOffset":240,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"prettifyTargets","ranges":[{"startOffset":582,"endOffset":946,"count":0}],"isBlockCoverage":false}]},{"scriptId":"635","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/lib/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1037,"count":1}],"isBlockCoverage":true},{"functionName":"getInclusionReasons","ranges":[{"startOffset":237,"endOffset":1037,"count":0}],"isBlockCoverage":false}]},{"scriptId":"636","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-compilation-targets/lib/filter-items.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2524,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":303,"endOffset":398,"count":1},{"startOffset":371,"endOffset":376,"count":0}],"isBlockCoverage":true},{"functionName":"targetsSupported","ranges":[{"startOffset":435,"endOffset":1496,"count":0}],"isBlockCoverage":false},{"functionName":"isRequired","ranges":[{"startOffset":1498,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"filterItems","ranges":[{"startOffset":1778,"endOffset":2524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"637","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/compat-data/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49,"count":1}],"isBlockCoverage":true}]},{"scriptId":"638","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/browserslist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33686,"count":1}],"isBlockCoverage":true},{"functionName":"isVersionsMatch","ranges":[{"startOffset":513,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"isEolReleased","ranges":[{"startOffset":620,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":777,"endOffset":900,"count":38}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":834,"endOffset":897,"count":3401}],"isBlockCoverage":true},{"functionName":"normalizeElectron","ranges":[{"startOffset":902,"endOffset":1120,"count":0}],"isBlockCoverage":false},{"functionName":"nameMapper","ranges":[{"startOffset":1122,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"getMajor","ranges":[{"startOffset":1228,"endOffset":1300,"count":0}],"isBlockCoverage":false},{"functionName":"getMajorVersions","ranges":[{"startOffset":1302,"endOffset":1717,"count":0}],"isBlockCoverage":false},{"functionName":"uniq","ranges":[{"startOffset":1719,"endOffset":1896,"count":1},{"startOffset":1804,"endOffset":1876,"count":0}],"isBlockCoverage":true},{"functionName":"fillUsage","ranges":[{"startOffset":1910,"endOffset":2018,"count":19},{"startOffset":1974,"endOffset":2016,"count":351}],"isBlockCoverage":true},{"functionName":"generateFilter","ranges":[{"startOffset":2020,"endOffset":2469,"count":0}],"isBlockCoverage":false},{"functionName":"generateSemverFilter","ranges":[{"startOffset":2471,"endOffset":3203,"count":0}],"isBlockCoverage":false},{"functionName":"parseSimpleInt","ranges":[{"startOffset":3205,"endOffset":3257,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3259,"endOffset":3343,"count":0}],"isBlockCoverage":false},{"functionName":"compareSemver","ranges":[{"startOffset":3345,"endOffset":3559,"count":0}],"isBlockCoverage":false},{"functionName":"semverFilterLoose","ranges":[{"startOffset":3606,"endOffset":4230,"count":0}],"isBlockCoverage":false},{"functionName":"compareSemverLoose","ranges":[{"startOffset":4277,"endOffset":4539,"count":0}],"isBlockCoverage":false},{"functionName":"resolveVersion","ranges":[{"startOffset":4541,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeVersion","ranges":[{"startOffset":4807,"endOffset":5040,"count":0}],"isBlockCoverage":false},{"functionName":"filterByYear","ranges":[{"startOffset":5042,"endOffset":5432,"count":0}],"isBlockCoverage":false},{"functionName":"cloneData","ranges":[{"startOffset":5434,"endOffset":5591,"count":0}],"isBlockCoverage":false},{"functionName":"mapVersions","ranges":[{"startOffset":5593,"endOffset":5943,"count":0}],"isBlockCoverage":false},{"functionName":"byName","ranges":[{"startOffset":5945,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAndroidVersions","ranges":[{"startOffset":6538,"endOffset":6875,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAndroidData","ranges":[{"startOffset":6877,"endOffset":7107,"count":0}],"isBlockCoverage":false},{"functionName":"checkName","ranges":[{"startOffset":7109,"endOffset":7264,"count":0}],"isBlockCoverage":false},{"functionName":"unknownQuery","ranges":[{"startOffset":7266,"endOffset":7449,"count":0}],"isBlockCoverage":false},{"functionName":"filterAndroid","ranges":[{"startOffset":7451,"endOffset":7787,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8083,"endOffset":9877,"count":1},{"startOffset":8198,"endOffset":8238,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8264,"endOffset":9870,"count":0}],"isBlockCoverage":false},{"functionName":"browserslist","ranges":[{"startOffset":11271,"endOffset":13029,"count":8},{"startOffset":11346,"endOffset":11356,"count":0},{"startOffset":11449,"endOffset":11454,"count":0},{"startOffset":11518,"endOffset":11668,"count":0},{"startOffset":11734,"endOffset":11853,"count":0},{"startOffset":12162,"endOffset":12298,"count":0},{"startOffset":12375,"endOffset":12397,"count":7},{"startOffset":12397,"endOffset":13028,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12451,"endOffset":12928,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":13031,"endOffset":13147,"count":0}],"isBlockCoverage":false},{"functionName":"doMatch","ranges":[{"startOffset":13149,"endOffset":13681,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":13683,"endOffset":13906,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":13908,"endOffset":14061,"count":1},{"startOffset":13964,"endOffset":13978,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14001,"endOffset":14054,"count":0}],"isBlockCoverage":false},{"functionName":"browserslist.coverage","ranges":[{"startOffset":15835,"endOffset":17020,"count":0}],"isBlockCoverage":false},{"functionName":"nodeQuery","ranges":[{"startOffset":17022,"endOffset":17503,"count":0}],"isBlockCoverage":false},{"functionName":"sinceQuery","ranges":[{"startOffset":17505,"endOffset":17720,"count":0}],"isBlockCoverage":false},{"functionName":"coverQuery","ranges":[{"startOffset":17722,"endOffset":18738,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":18823,"endOffset":19266,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":19331,"endOffset":19763,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":19847,"endOffset":20043,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":20124,"endOffset":20451,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":20527,"endOffset":20694,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":20767,"endOffset":21043,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":21105,"endOffset":21487,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":21561,"endOffset":21596,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":21667,"endOffset":21895,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":21962,"endOffset":22057,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":22325,"endOffset":23020,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":23102,"endOffset":23913,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":23998,"endOffset":25054,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":25139,"endOffset":26036,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":26267,"endOffset":26653,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":26728,"endOffset":27370,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":27441,"endOffset":27844,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":27916,"endOffset":28304,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":28376,"endOffset":28626,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":28694,"endOffset":29063,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":29131,"endOffset":29487,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":29549,"endOffset":29596,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":29660,"endOffset":29708,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":29768,"endOffset":30058,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30314,"endOffset":30389,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30458,"endOffset":30874,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30930,"endOffset":30975,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":31031,"endOffset":31076,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":31136,"endOffset":31873,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":31933,"endOffset":32005,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":32058,"endOffset":32152,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":32201,"endOffset":32280,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":32325,"endOffset":32524,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":32570,"endOffset":32811,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32856,"endOffset":33651,"count":1},{"startOffset":32897,"endOffset":33598,"count":19},{"startOffset":33312,"endOffset":33594,"count":1729},{"startOffset":33368,"endOffset":33376,"count":1378},{"startOffset":33376,"endOffset":33414,"count":351},{"startOffset":33414,"endOffset":33588,"count":23},{"startOffset":33505,"endOffset":33580,"count":46}],"isBlockCoverage":true}]},{"scriptId":"639","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/dist/unpacker/agents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1793,"count":1}],"isBlockCoverage":true},{"functionName":"unpackBrowserVersions","ranges":[{"startOffset":253,"endOffset":489,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":344,"endOffset":481,"count":371}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":552,"endOffset":1787,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":682,"endOffset":1763,"count":99},{"startOffset":734,"endOffset":821,"count":19},{"startOffset":821,"endOffset":1736,"count":80},{"startOffset":846,"endOffset":1180,"count":19},{"startOffset":1180,"endOffset":1736,"count":61},{"startOffset":1205,"endOffset":1297,"count":4},{"startOffset":1297,"endOffset":1736,"count":57},{"startOffset":1322,"endOffset":1381,"count":19},{"startOffset":1381,"endOffset":1736,"count":38},{"startOffset":1406,"endOffset":1736,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":903,"endOffset":1164,"count":1729},{"startOffset":966,"endOffset":1022,"count":1378},{"startOffset":1022,"endOffset":1121,"count":351}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1480,"endOffset":1630,"count":351}],"isBlockCoverage":true}]},{"scriptId":"640","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/dist/unpacker/browsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":145,"count":1}],"isBlockCoverage":true}]},{"scriptId":"641","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/data/browsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true}]},{"scriptId":"642","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/dist/unpacker/browserVersions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":166,"count":1}],"isBlockCoverage":true}]},{"scriptId":"643","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/data/browserVersions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1366,"count":1}],"isBlockCoverage":true}]},{"scriptId":"644","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/data/agents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15284,"count":1}],"isBlockCoverage":true}]},{"scriptId":"645","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/electron-to-chromium/versions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true}]},{"scriptId":"646","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/browserslist/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1}],"isBlockCoverage":true},{"functionName":"BrowserslistError","ranges":[{"startOffset":0,"endOffset":216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/browserslist/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11104,"count":1}],"isBlockCoverage":true},{"functionName":"checkExtend","ranges":[{"startOffset":625,"endOffset":1201,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1203,"endOffset":1462,"count":114},{"startOffset":1257,"endOffset":1293,"count":85},{"startOffset":1293,"endOffset":1329,"count":29},{"startOffset":1329,"endOffset":1358,"count":2},{"startOffset":1406,"endOffset":1461,"count":29}],"isBlockCoverage":true},{"functionName":"eachParent","ranges":[{"startOffset":1464,"endOffset":1743,"count":16},{"startOffset":1528,"endOffset":1548,"count":0},{"startOffset":1591,"endOffset":1680,"count":112},{"startOffset":1663,"endOffset":1676,"count":0}],"isBlockCoverage":true},{"functionName":"check","ranges":[{"startOffset":1745,"endOffset":2042,"count":0}],"isBlockCoverage":false},{"functionName":"pickEnv","ranges":[{"startOffset":2044,"endOffset":2432,"count":8},{"startOffset":2125,"endOffset":2430,"count":0}],"isBlockCoverage":true},{"functionName":"parsePackage","ranges":[{"startOffset":2434,"endOffset":2859,"count":1},{"startOffset":2539,"endOffset":2562,"count":0},{"startOffset":2564,"endOffset":2671,"count":0},{"startOffset":2760,"endOffset":2795,"count":0},{"startOffset":2818,"endOffset":2858,"count":0}],"isBlockCoverage":true},{"functionName":"latestReleaseTime","ranges":[{"startOffset":2861,"endOffset":3125,"count":1},{"startOffset":2943,"endOffset":3100,"count":19},{"startOffset":2986,"endOffset":2992,"count":0},{"startOffset":3020,"endOffset":3096,"count":351},{"startOffset":3053,"endOffset":3090,"count":24}],"isBlockCoverage":true},{"functionName":"normalizeStats","ranges":[{"startOffset":3127,"endOffset":3681,"count":8},{"startOffset":3179,"endOffset":3206,"count":0},{"startOffset":3208,"endOffset":3245,"count":0},{"startOffset":3296,"endOffset":3680,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeUsageData","ranges":[{"startOffset":3683,"endOffset":4190,"count":0}],"isBlockCoverage":false},{"functionName":"loadQueries","ranges":[{"startOffset":4226,"endOffset":4876,"count":0}],"isBlockCoverage":false},{"functionName":"loadStat","ranges":[{"startOffset":4891,"endOffset":5286,"count":0}],"isBlockCoverage":false},{"functionName":"getStat","ranges":[{"startOffset":5300,"endOffset":5960,"count":8},{"startOffset":5366,"endOffset":5398,"count":0},{"startOffset":5440,"endOffset":5492,"count":0},{"startOffset":5759,"endOffset":5917,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5584,"endOffset":5716,"count":56},{"startOffset":5690,"endOffset":5696,"count":0}],"isBlockCoverage":true},{"functionName":"loadConfig","ranges":[{"startOffset":5977,"endOffset":6533,"count":8},{"startOffset":6040,"endOffset":6085,"count":0},{"startOffset":6143,"endOffset":6400,"count":0},{"startOffset":6493,"endOffset":6529,"count":0}],"isBlockCoverage":true},{"functionName":"loadCountry","ranges":[{"startOffset":6551,"endOffset":7077,"count":0}],"isBlockCoverage":false},{"functionName":"loadFeature","ranges":[{"startOffset":7095,"endOffset":7542,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfig","ranges":[{"startOffset":7560,"endOffset":8436,"count":0}],"isBlockCoverage":false},{"functionName":"readConfig","ranges":[{"startOffset":8453,"endOffset":8646,"count":0}],"isBlockCoverage":false},{"functionName":"findConfig","ranges":[{"startOffset":8663,"endOffset":10247,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8779,"endOffset":10082,"count":56},{"startOffset":8826,"endOffset":8867,"count":49},{"startOffset":8867,"endOffset":9089,"count":7},{"startOffset":9089,"endOffset":9351,"count":1},{"startOffset":9161,"endOffset":9343,"count":0},{"startOffset":9351,"endOffset":9378,"count":7},{"startOffset":9378,"endOffset":9396,"count":0},{"startOffset":9398,"endOffset":9531,"count":0},{"startOffset":9531,"endOffset":10076,"count":7},{"startOffset":9552,"endOffset":9570,"count":0},{"startOffset":9572,"endOffset":9708,"count":0},{"startOffset":9733,"endOffset":9746,"count":0},{"startOffset":9748,"endOffset":9870,"count":0},{"startOffset":9896,"endOffset":9954,"count":0},{"startOffset":9976,"endOffset":10030,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10156,"endOffset":10216,"count":7}],"isBlockCoverage":true},{"functionName":"clearCaches","ranges":[{"startOffset":10265,"endOffset":10390,"count":0}],"isBlockCoverage":false},{"functionName":"oldDataWarning","ranges":[{"startOffset":10411,"endOffset":11011,"count":8},{"startOffset":10474,"endOffset":10480,"count":7},{"startOffset":10480,"endOffset":10558,"count":1},{"startOffset":10558,"endOffset":10564,"count":0},{"startOffset":10564,"endOffset":10715,"count":1},{"startOffset":10717,"endOffset":11007,"count":0}],"isBlockCoverage":true},{"functionName":"currentNode","ranges":[{"startOffset":11029,"endOffset":11101,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/dist/unpacker/feature.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":410,"endOffset":505,"count":2},{"startOffset":484,"endOffset":502,"count":0}],"isBlockCoverage":true},{"functionName":"unpackSupport","ranges":[{"startOffset":536,"endOffset":1059,"count":0}],"isBlockCoverage":false},{"functionName":"unpackFeature","ranges":[{"startOffset":1061,"endOffset":1756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/dist/lib/statuses.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":404,"count":1}],"isBlockCoverage":true}]},{"scriptId":"650","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/dist/lib/supported.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":209,"count":1}],"isBlockCoverage":true}]},{"scriptId":"651","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/caniuse-lite/dist/unpacker/region.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":722,"count":1}],"isBlockCoverage":true},{"functionName":"unpackRegion","ranges":[{"startOffset":155,"endOffset":722,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":425257,"count":1}],"isBlockCoverage":true},{"functionName":"TokenType","ranges":[{"startOffset":236,"endOffset":1002,"count":94},{"startOffset":947,"endOffset":959,"count":17},{"startOffset":960,"endOffset":966,"count":77}],"isBlockCoverage":true},{"functionName":"createKeyword","ranges":[{"startOffset":1035,"endOffset":1198,"count":35}],"isBlockCoverage":true},{"functionName":"createBinop","ranges":[{"startOffset":1200,"endOffset":1300,"count":11}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":6138,"endOffset":6297,"count":88},{"startOffset":6187,"endOffset":6195,"count":0},{"startOffset":6200,"endOffset":6208,"count":0},{"startOffset":6213,"endOffset":6223,"count":0},{"startOffset":6228,"endOffset":6257,"count":0}],"isBlockCoverage":true},{"functionName":"isWhitespace","ranges":[{"startOffset":6354,"endOffset":6808,"count":42},{"startOffset":6406,"endOffset":6418,"count":0},{"startOffset":6423,"endOffset":6435,"count":0},{"startOffset":6440,"endOffset":6452,"count":0},{"startOffset":6457,"endOffset":6465,"count":0},{"startOffset":6470,"endOffset":6479,"count":0},{"startOffset":6484,"endOffset":6494,"count":0},{"startOffset":6499,"endOffset":6511,"count":0},{"startOffset":6516,"endOffset":6528,"count":0},{"startOffset":6533,"endOffset":6545,"count":0},{"startOffset":6550,"endOffset":6562,"count":0},{"startOffset":6567,"endOffset":6579,"count":0},{"startOffset":6584,"endOffset":6596,"count":0},{"startOffset":6601,"endOffset":6613,"count":0},{"startOffset":6618,"endOffset":6630,"count":0},{"startOffset":6635,"endOffset":6647,"count":0},{"startOffset":6652,"endOffset":6664,"count":0},{"startOffset":6669,"endOffset":6681,"count":0},{"startOffset":6686,"endOffset":6698,"count":0},{"startOffset":6703,"endOffset":6715,"count":0},{"startOffset":6720,"endOffset":6732,"count":0},{"startOffset":6737,"endOffset":6768,"count":0}],"isBlockCoverage":true},{"functionName":"Position","ranges":[{"startOffset":6829,"endOffset":6952,"count":119}],"isBlockCoverage":true},{"functionName":"SourceLocation","ranges":[{"startOffset":6981,"endOffset":7164,"count":64}],"isBlockCoverage":true},{"functionName":"getLineInfo","ranges":[{"startOffset":7168,"endOffset":7459,"count":0}],"isBlockCoverage":false},{"functionName":"BaseParser","ranges":[{"startOffset":7482,"endOffset":7583,"count":7}],"isBlockCoverage":true},{"functionName":"hasPlugin","ranges":[{"startOffset":7587,"endOffset":7643,"count":14}],"isBlockCoverage":true},{"functionName":"getPluginOption","ranges":[{"startOffset":7647,"endOffset":7753,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":7758,"endOffset":7816,"count":103}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":7862,"endOffset":8041,"count":0}],"isBlockCoverage":false},{"functionName":"adjustCommentsAfterTrailingComma","ranges":[{"startOffset":8045,"endOffset":9427,"count":5},{"startOffset":8183,"endOffset":8283,"count":0},{"startOffset":8285,"endOffset":9423,"count":0}],"isBlockCoverage":true},{"functionName":"processComment","ranges":[{"startOffset":9431,"endOffset":13874,"count":52},{"startOffset":9486,"endOffset":9509,"count":7},{"startOffset":9511,"endOffset":9518,"count":7},{"startOffset":9518,"endOffset":9666,"count":45},{"startOffset":9666,"endOffset":9904,"count":0},{"startOffset":9904,"endOffset":10184,"count":45},{"startOffset":9932,"endOffset":10184,"count":38},{"startOffset":10013,"endOffset":10065,"count":0},{"startOffset":10067,"endOffset":10178,"count":0},{"startOffset":10184,"endOffset":10211,"count":45},{"startOffset":10211,"endOffset":10245,"count":38},{"startOffset":10247,"endOffset":10286,"count":26},{"startOffset":10286,"endOffset":10316,"count":45},{"startOffset":10316,"endOffset":10350,"count":27},{"startOffset":10352,"endOffset":10390,"count":12},{"startOffset":10390,"endOffset":10411,"count":45},{"startOffset":10411,"endOffset":10424,"count":33},{"startOffset":10426,"endOffset":10449,"count":14},{"startOffset":10449,"endOffset":10471,"count":45},{"startOffset":10471,"endOffset":11124,"count":26},{"startOffset":10508,"endOffset":10621,"count":0},{"startOffset":10631,"endOffset":10747,"count":0},{"startOffset":10757,"endOffset":10867,"count":4},{"startOffset":10877,"endOffset":10987,"count":0},{"startOffset":10997,"endOffset":11110,"count":0},{"startOffset":11124,"endOffset":11452,"count":19},{"startOffset":11165,"endOffset":11358,"count":12},{"startOffset":11227,"endOffset":11261,"count":1},{"startOffset":11262,"endOffset":11357,"count":11},{"startOffset":11323,"endOffset":11357,"count":0},{"startOffset":11360,"endOffset":11452,"count":1},{"startOffset":11452,"endOffset":11473,"count":45},{"startOffset":11473,"endOffset":12051,"count":26},{"startOffset":11512,"endOffset":12045,"count":0},{"startOffset":12051,"endOffset":13175,"count":19},{"startOffset":12100,"endOffset":13175,"count":0},{"startOffset":13175,"endOffset":13247,"count":45},{"startOffset":13247,"endOffset":13847,"count":0},{"startOffset":13847,"endOffset":13873,"count":45}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13502,"endOffset":13536,"count":0}],"isBlockCoverage":false},{"functionName":"getLocationForPosition","ranges":[{"startOffset":26336,"endOffset":26702,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":26706,"endOffset":26821,"count":0}],"isBlockCoverage":false},{"functionName":"raiseOverwrite","ranges":[{"startOffset":26825,"endOffset":27451,"count":0}],"isBlockCoverage":false},{"functionName":"raiseWithData","ranges":[{"startOffset":27455,"endOffset":27753,"count":0}],"isBlockCoverage":false},{"functionName":"_raise","ranges":[{"startOffset":27757,"endOffset":28023,"count":0}],"isBlockCoverage":false},{"functionName":"estree","ranges":[{"startOffset":28042,"endOffset":37237,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":37262,"endOffset":37555,"count":12}],"isBlockCoverage":true},{"functionName":"types$1.template","ranges":[{"startOffset":37899,"endOffset":37921,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenR.updateContext.types.braceR.updateContext","ranges":[{"startOffset":38097,"endOffset":38407,"count":5},{"startOffset":38150,"endOffset":38202,"count":0},{"startOffset":38280,"endOffset":38321,"count":1},{"startOffset":38323,"endOffset":38364,"count":0}],"isBlockCoverage":true},{"functionName":"types.name.updateContext","ranges":[{"startOffset":38437,"endOffset":38781,"count":13},{"startOffset":38513,"endOffset":38671,"count":11},{"startOffset":38549,"endOffset":38575,"count":0},{"startOffset":38576,"endOffset":38607,"count":0},{"startOffset":38608,"endOffset":38636,"count":0},{"startOffset":38638,"endOffset":38667,"count":0},{"startOffset":38739,"endOffset":38779,"count":0}],"isBlockCoverage":true},{"functionName":"types.braceL.updateContext","ranges":[{"startOffset":38813,"endOffset":38976,"count":1},{"startOffset":38914,"endOffset":38939,"count":0}],"isBlockCoverage":true},{"functionName":"types.dollarBraceL.updateContext","ranges":[{"startOffset":39014,"endOffset":39112,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenL.updateContext","ranges":[{"startOffset":39144,"endOffset":39429,"count":4},{"startOffset":39342,"endOffset":39366,"count":0}],"isBlockCoverage":true},{"functionName":"types.incDec.updateContext","ranges":[{"startOffset":39461,"endOffset":39475,"count":0}],"isBlockCoverage":false},{"functionName":"types._function.updateContext.types._class.updateContext","ranges":[{"startOffset":39539,"endOffset":39976,"count":0}],"isBlockCoverage":false},{"functionName":"types.backQuote.updateContext","ranges":[{"startOffset":40011,"endOffset":40201,"count":0}],"isBlockCoverage":false},{"functionName":"types.braceHashL.updateContext","ranges":[{"startOffset":40237,"endOffset":40338,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":50306,"endOffset":50557,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":50559,"endOffset":50904,"count":19},{"startOffset":50611,"endOffset":50630,"count":0},{"startOffset":50649,"endOffset":50661,"count":0},{"startOffset":50679,"endOffset":50698,"count":0},{"startOffset":50730,"endOffset":50903,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":50905,"endOffset":51351,"count":109},{"startOffset":50956,"endOffset":50975,"count":19},{"startOffset":50975,"endOffset":50993,"count":90},{"startOffset":50993,"endOffset":51005,"count":0},{"startOffset":51005,"endOffset":51023,"count":90},{"startOffset":51023,"endOffset":51036,"count":0},{"startOffset":51036,"endOffset":51055,"count":90},{"startOffset":51055,"endOffset":51067,"count":3},{"startOffset":51067,"endOffset":51085,"count":87},{"startOffset":51085,"endOffset":51104,"count":0},{"startOffset":51104,"endOffset":51136,"count":87},{"startOffset":51136,"endOffset":51348,"count":0}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":52039,"endOffset":52140,"count":8}],"isBlockCoverage":true},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":52141,"endOffset":52267,"count":8}],"isBlockCoverage":true},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":52268,"endOffset":52362,"count":6}],"isBlockCoverage":true},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":52363,"endOffset":52501,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyword","ranges":[{"startOffset":52502,"endOffset":52561,"count":1}],"isBlockCoverage":true},{"functionName":"isIteratorStart","ranges":[{"startOffset":52616,"endOffset":52699,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":55049,"endOffset":55189,"count":7}],"isBlockCoverage":true},{"functionName":"ScopeHandler","ranges":[{"startOffset":55216,"endOffset":55413,"count":7}],"isBlockCoverage":true},{"functionName":"get inFunction","ranges":[{"startOffset":55417,"endOffset":55503,"count":0}],"isBlockCoverage":false},{"functionName":"get allowSuper","ranges":[{"startOffset":55507,"endOffset":55591,"count":0}],"isBlockCoverage":false},{"functionName":"get allowDirectSuper","ranges":[{"startOffset":55595,"endOffset":55692,"count":0}],"isBlockCoverage":false},{"functionName":"get inClass","ranges":[{"startOffset":55696,"endOffset":55777,"count":8}],"isBlockCoverage":true},{"functionName":"get inStaticBlock","ranges":[{"startOffset":55781,"endOffset":55875,"count":0}],"isBlockCoverage":false},{"functionName":"get inNonArrowFunction","ranges":[{"startOffset":55879,"endOffset":55974,"count":0}],"isBlockCoverage":false},{"functionName":"get treatFunctionsAsVar","ranges":[{"startOffset":55978,"endOffset":56074,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":56078,"endOffset":56131,"count":7}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":56135,"endOffset":56204,"count":7}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":56208,"endOffset":56247,"count":0}],"isBlockCoverage":false},{"functionName":"treatFunctionsAsVarInScope","ranges":[{"startOffset":56251,"endOffset":56384,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":56388,"endOffset":57314,"count":5},{"startOffset":56505,"endOffset":56541,"count":0},{"startOffset":56660,"endOffset":56705,"count":0},{"startOffset":56861,"endOffset":57205,"count":0}],"isBlockCoverage":true},{"functionName":"maybeExportDefined","ranges":[{"startOffset":57318,"endOffset":57459,"count":5}],"isBlockCoverage":true},{"functionName":"checkRedeclarationInScope","ranges":[{"startOffset":57463,"endOffset":57654,"count":5},{"startOffset":57582,"endOffset":57650,"count":0}],"isBlockCoverage":true},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":57658,"endOffset":58302,"count":5},{"startOffset":57748,"endOffset":57761,"count":0},{"startOffset":57929,"endOffset":58216,"count":0},{"startOffset":58217,"endOffset":58297,"count":0}],"isBlockCoverage":true},{"functionName":"checkLocalExport","ranges":[{"startOffset":58306,"endOffset":58558,"count":0}],"isBlockCoverage":false},{"functionName":"currentScope","ranges":[{"startOffset":58562,"endOffset":58638,"count":5}],"isBlockCoverage":true},{"functionName":"currentVarScope","ranges":[{"startOffset":58642,"endOffset":58832,"count":0}],"isBlockCoverage":false},{"functionName":"currentThisScope","ranges":[{"startOffset":58836,"endOffset":59090,"count":8},{"startOffset":58986,"endOffset":59014,"count":0},{"startOffset":59086,"endOffset":59089,"count":0}],"isBlockCoverage":true},{"functionName":"FlowScope","ranges":[{"startOffset":59129,"endOffset":59207,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":59260,"endOffset":59317,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":59321,"endOffset":59666,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":59670,"endOffset":59982,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":59986,"endOffset":60123,"count":0}],"isBlockCoverage":false},{"functionName":"isEsModuleType","ranges":[{"startOffset":65496,"endOffset":65785,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeImportKind","ranges":[{"startOffset":65787,"endOffset":65892,"count":0}],"isBlockCoverage":false},{"functionName":"isMaybeDefaultImport","ranges":[{"startOffset":65894,"endOffset":66022,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":66171,"endOffset":66378,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":66444,"endOffset":153860,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagStart.updateContext","ranges":[{"startOffset":159764,"endOffset":159899,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagEnd.updateContext","ranges":[{"startOffset":159934,"endOffset":160231,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":160234,"endOffset":160369,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedJSXName","ranges":[{"startOffset":160371,"endOffset":160797,"count":0}],"isBlockCoverage":false},{"functionName":"jsx","ranges":[{"startOffset":160810,"endOffset":173149,"count":0}],"isBlockCoverage":false},{"functionName":"TypeScriptScope","ranges":[{"startOffset":173193,"endOffset":173364,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":173423,"endOffset":173486,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":173490,"endOffset":174226,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":174230,"endOffset":174949,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":174953,"endOffset":175144,"count":0}],"isBlockCoverage":false},{"functionName":"ProductionParameterHandler","ranges":[{"startOffset":175318,"endOffset":175359,"count":7}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":175363,"endOffset":175410,"count":13}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":175414,"endOffset":175449,"count":6}],"isBlockCoverage":true},{"functionName":"currentFlags","ranges":[{"startOffset":175453,"endOffset":175521,"count":19}],"isBlockCoverage":true},{"functionName":"get hasAwait","ranges":[{"startOffset":175525,"endOffset":175597,"count":0}],"isBlockCoverage":false},{"functionName":"get hasYield","ranges":[{"startOffset":175601,"endOffset":175673,"count":8}],"isBlockCoverage":true},{"functionName":"get hasReturn","ranges":[{"startOffset":175677,"endOffset":175751,"count":0}],"isBlockCoverage":false},{"functionName":"get hasIn","ranges":[{"startOffset":175755,"endOffset":175821,"count":1}],"isBlockCoverage":true},{"functionName":"functionFlags","ranges":[{"startOffset":175825,"endOffset":175945,"count":0}],"isBlockCoverage":false},{"functionName":"nonNull","ranges":[{"startOffset":175947,"endOffset":176053,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":176055,"endOffset":176129,"count":0}],"isBlockCoverage":false},{"functionName":"keywordTypeFromName","ranges":[{"startOffset":179342,"endOffset":179963,"count":0}],"isBlockCoverage":false},{"functionName":"tsIsAccessModifier","ranges":[{"startOffset":179965,"endOffset":180092,"count":0}],"isBlockCoverage":false},{"functionName":"typescript","ranges":[{"startOffset":180112,"endOffset":245044,"count":0}],"isBlockCoverage":false},{"functionName":"placeholders","ranges":[{"startOffset":245133,"endOffset":251489,"count":0}],"isBlockCoverage":false},{"functionName":"v8intrinsic","ranges":[{"startOffset":251512,"endOffset":252183,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":252187,"endOffset":252379,"count":84}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":252245,"endOffset":252375,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginOption","ranges":[{"startOffset":252380,"endOffset":252686,"count":0}],"isBlockCoverage":false},{"functionName":"validatePlugins","ranges":[{"startOffset":252801,"endOffset":255084,"count":7},{"startOffset":252877,"endOffset":253609,"count":0},{"startOffset":253644,"endOffset":253679,"count":0},{"startOffset":253681,"endOffset":253754,"count":0},{"startOffset":253797,"endOffset":253833,"count":0},{"startOffset":253835,"endOffset":253917,"count":0},{"startOffset":253964,"endOffset":254053,"count":0},{"startOffset":254055,"endOffset":254212,"count":0},{"startOffset":254260,"endOffset":254767,"count":0},{"startOffset":254812,"endOffset":254912,"count":0},{"startOffset":254914,"endOffset":255082,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254181,"endOffset":254194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":255051,"endOffset":255064,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":255641,"endOffset":255847,"count":7},{"startOffset":255741,"endOffset":255826,"count":98},{"startOffset":255788,"endOffset":255799,"count":14},{"startOffset":255800,"endOffset":255821,"count":84}],"isBlockCoverage":true},{"functionName":"State","ranges":[{"startOffset":255865,"endOffset":257227,"count":7}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":257231,"endOffset":257432,"count":7},{"startOffset":257294,"endOffset":257301,"count":0}],"isBlockCoverage":true},{"functionName":"curPosition","ranges":[{"startOffset":257436,"endOffset":257521,"count":119}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":257525,"endOffset":257864,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":257884,"endOffset":257945,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":258566,"endOffset":258769,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":258813,"endOffset":259058,"count":7}],"isBlockCoverage":true},{"functionName":"pushToken","ranges":[{"startOffset":259062,"endOffset":259194,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":259198,"endOffset":259587,"count":49},{"startOffset":259302,"endOffset":259358,"count":0}],"isBlockCoverage":true},{"functionName":"eat","ranges":[{"startOffset":259591,"endOffset":259711,"count":69},{"startOffset":259629,"endOffset":259674,"count":13},{"startOffset":259674,"endOffset":259707,"count":56}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":259715,"endOffset":259769,"count":270}],"isBlockCoverage":true},{"functionName":"lookahead","ranges":[{"startOffset":259773,"endOffset":259996,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenStart","ranges":[{"startOffset":260000,"endOffset":260075,"count":3}],"isBlockCoverage":true},{"functionName":"nextTokenStartSince","ranges":[{"startOffset":260079,"endOffset":260228,"count":3}],"isBlockCoverage":true},{"functionName":"lookaheadCharCode","ranges":[{"startOffset":260232,"endOffset":260314,"count":1}],"isBlockCoverage":true},{"functionName":"setStrict","ranges":[{"startOffset":260318,"endOffset":260520,"count":0}],"isBlockCoverage":false},{"functionName":"curContext","ranges":[{"startOffset":260524,"endOffset":260604,"count":58}],"isBlockCoverage":true},{"functionName":"nextToken","ranges":[{"startOffset":260608,"endOffset":261136,"count":56},{"startOffset":260872,"endOffset":260928,"count":14},{"startOffset":260928,"endOffset":260970,"count":42},{"startOffset":260970,"endOffset":260978,"count":0},{"startOffset":260979,"endOffset":261000,"count":42},{"startOffset":261021,"endOffset":261050,"count":0},{"startOffset":261050,"endOffset":261132,"count":42}],"isBlockCoverage":true},{"functionName":"pushComment","ranges":[{"startOffset":261140,"endOffset":261507,"count":0}],"isBlockCoverage":false},{"functionName":"skipBlockComment","ranges":[{"startOffset":261511,"endOffset":262172,"count":0}],"isBlockCoverage":false},{"functionName":"skipLineComment","ranges":[{"startOffset":262176,"endOffset":262702,"count":0}],"isBlockCoverage":false},{"functionName":"skipSpace","ranges":[{"startOffset":262706,"endOffset":263727,"count":56},{"startOffset":262767,"endOffset":263723,"count":61},{"startOffset":262854,"endOffset":262862,"count":19},{"startOffset":262871,"endOffset":262880,"count":19},{"startOffset":262889,"endOffset":262941,"count":19},{"startOffset":262951,"endOffset":263067,"count":0},{"startOffset":263077,"endOffset":263085,"count":0},{"startOffset":263094,"endOffset":263104,"count":0},{"startOffset":263113,"endOffset":263249,"count":0},{"startOffset":263259,"endOffset":263571,"count":0},{"startOffset":263581,"endOffset":263708,"count":42},{"startOffset":263622,"endOffset":263665,"count":0}],"isBlockCoverage":true},{"functionName":"finishToken","ranges":[{"startOffset":263731,"endOffset":263997,"count":56}],"isBlockCoverage":true},{"functionName":"readToken_numberSign","ranges":[{"startOffset":264001,"endOffset":264931,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_dot","ranges":[{"startOffset":264935,"endOffset":265323,"count":2},{"startOffset":265048,"endOffset":265098,"count":0},{"startOffset":265120,"endOffset":265171,"count":0},{"startOffset":265173,"endOffset":265247,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_slash","ranges":[{"startOffset":265327,"endOffset":265654,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_interpreter","ranges":[{"startOffset":265658,"endOffset":266156,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_mult_modulo","ranges":[{"startOffset":266160,"endOffset":266640,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_pipe_amp","ranges":[{"startOffset":266644,"endOffset":267901,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_caret","ranges":[{"startOffset":267905,"endOffset":268111,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_plus_min","ranges":[{"startOffset":268115,"endOffset":268679,"count":1},{"startOffset":268226,"endOffset":268555,"count":0},{"startOffset":268578,"endOffset":268623,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_lt_gt","ranges":[{"startOffset":268683,"endOffset":269451,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_eq_excl","ranges":[{"startOffset":269455,"endOffset":269866,"count":4},{"startOffset":269563,"endOffset":269679,"count":0},{"startOffset":269717,"endOffset":269802,"count":0},{"startOffset":269845,"endOffset":269857,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_question","ranges":[{"startOffset":269870,"endOffset":270397,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFromCode","ranges":[{"startOffset":270401,"endOffset":274337,"count":42},{"startOffset":270452,"endOffset":270506,"count":2},{"startOffset":270514,"endOffset":270604,"count":4},{"startOffset":270612,"endOffset":270702,"count":4},{"startOffset":270710,"endOffset":270798,"count":0},{"startOffset":270806,"endOffset":270895,"count":0},{"startOffset":270903,"endOffset":271403,"count":0},{"startOffset":271411,"endOffset":271503,"count":0},{"startOffset":271511,"endOffset":272009,"count":1},{"startOffset":271566,"endOffset":271618,"count":0},{"startOffset":271620,"endOffset":271905,"count":0},{"startOffset":272017,"endOffset":272108,"count":1},{"startOffset":272116,"endOffset":272382,"count":0},{"startOffset":272390,"endOffset":272449,"count":0},{"startOffset":272457,"endOffset":272550,"count":0},{"startOffset":272558,"endOffset":272997,"count":0},{"startOffset":273005,"endOffset":273013,"count":0},{"startOffset":273020,"endOffset":273028,"count":0},{"startOffset":273035,"endOffset":273043,"count":0},{"startOffset":273050,"endOffset":273058,"count":0},{"startOffset":273065,"endOffset":273073,"count":0},{"startOffset":273080,"endOffset":273088,"count":0},{"startOffset":273095,"endOffset":273103,"count":0},{"startOffset":273110,"endOffset":273118,"count":0},{"startOffset":273125,"endOffset":273181,"count":0},{"startOffset":273189,"endOffset":273197,"count":0},{"startOffset":273204,"endOffset":273259,"count":8},{"startOffset":273267,"endOffset":273323,"count":0},{"startOffset":273331,"endOffset":273339,"count":0},{"startOffset":273346,"endOffset":273412,"count":0},{"startOffset":273420,"endOffset":273429,"count":0},{"startOffset":273436,"endOffset":273499,"count":0},{"startOffset":273507,"endOffset":273563,"count":0},{"startOffset":273571,"endOffset":273579,"count":1},{"startOffset":273586,"endOffset":273649,"count":1},{"startOffset":273657,"endOffset":273665,"count":0},{"startOffset":273672,"endOffset":273732,"count":0},{"startOffset":273740,"endOffset":273748,"count":4},{"startOffset":273755,"endOffset":273817,"count":4},{"startOffset":273825,"endOffset":273889,"count":0},{"startOffset":273897,"endOffset":273983,"count":0},{"startOffset":273991,"endOffset":274052,"count":0},{"startOffset":274060,"endOffset":274109,"count":0},{"startOffset":274117,"endOffset":274219,"count":17},{"startOffset":274226,"endOffset":274336,"count":0}],"isBlockCoverage":true},{"functionName":"finishOp","ranges":[{"startOffset":274341,"endOffset":274501,"count":5}],"isBlockCoverage":true},{"functionName":"readRegexp","ranges":[{"startOffset":274505,"endOffset":275951,"count":0}],"isBlockCoverage":false},{"functionName":"readInt","ranges":[{"startOffset":275955,"endOffset":278012,"count":0}],"isBlockCoverage":false},{"functionName":"readRadixNumber","ranges":[{"startOffset":278016,"endOffset":278849,"count":0}],"isBlockCoverage":false},{"functionName":"readNumber","ranges":[{"startOffset":278853,"endOffset":281268,"count":0}],"isBlockCoverage":false},{"functionName":"readCodePoint","ranges":[{"startOffset":281272,"endOffset":281865,"count":0}],"isBlockCoverage":false},{"functionName":"readString","ranges":[{"startOffset":281869,"endOffset":282766,"count":8},{"startOffset":281960,"endOffset":282661,"count":96},{"startOffset":282003,"endOffset":282090,"count":0},{"startOffset":282172,"endOffset":282178,"count":8},{"startOffset":282178,"endOffset":282201,"count":88},{"startOffset":282201,"endOffset":282352,"count":0},{"startOffset":282352,"endOffset":282655,"count":88},{"startOffset":282390,"endOffset":282502,"count":0},{"startOffset":282527,"endOffset":282614,"count":0}],"isBlockCoverage":true},{"functionName":"readTmplToken","ranges":[{"startOffset":282770,"endOffset":284575,"count":0}],"isBlockCoverage":false},{"functionName":"recordStrictModeErrors","ranges":[{"startOffset":284579,"endOffset":284787,"count":0}],"isBlockCoverage":false},{"functionName":"readEscapedChar","ranges":[{"startOffset":284791,"endOffset":286851,"count":0}],"isBlockCoverage":false},{"functionName":"readHexChar","ranges":[{"startOffset":286855,"endOffset":287192,"count":0}],"isBlockCoverage":false},{"functionName":"readWord1","ranges":[{"startOffset":287196,"endOffset":288473,"count":17},{"startOffset":287378,"endOffset":288404,"count":103},{"startOffset":287470,"endOffset":287527,"count":86},{"startOffset":287515,"endOffset":287518,"count":0},{"startOffset":287527,"endOffset":288398,"count":17},{"startOffset":287559,"endOffset":287571,"count":0},{"startOffset":287573,"endOffset":287608,"count":0},{"startOffset":287629,"endOffset":288368,"count":0}],"isBlockCoverage":true},{"functionName":"isIterator","ranges":[{"startOffset":288477,"endOffset":288563,"count":0}],"isBlockCoverage":false},{"functionName":"readWord","ranges":[{"startOffset":288567,"endOffset":288867,"count":17},{"startOffset":288651,"endOffset":288664,"count":13},{"startOffset":288697,"endOffset":288746,"count":0},{"startOffset":288748,"endOffset":288828,"count":0}],"isBlockCoverage":true},{"functionName":"checkKeywordEscapes","ranges":[{"startOffset":288871,"endOffset":289067,"count":49},{"startOffset":288947,"endOffset":288972,"count":4},{"startOffset":288974,"endOffset":289063,"count":0}],"isBlockCoverage":true},{"functionName":"braceIsBlock","ranges":[{"startOffset":289071,"endOffset":290028,"count":1},{"startOffset":289222,"endOffset":289248,"count":0},{"startOffset":289283,"endOffset":289359,"count":0},{"startOffset":289361,"endOffset":289397,"count":0},{"startOffset":289461,"endOffset":289486,"count":0},{"startOffset":289488,"endOffset":289538,"count":0},{"startOffset":289684,"endOffset":289710,"count":0},{"startOffset":289747,"endOffset":289802,"count":0},{"startOffset":289893,"endOffset":289920,"count":0},{"startOffset":289961,"endOffset":289987,"count":0}],"isBlockCoverage":true},{"functionName":"updateContext","ranges":[{"startOffset":290032,"endOffset":290384,"count":56},{"startOffset":290130,"endOffset":290191,"count":4},{"startOffset":290193,"endOffset":290238,"count":0},{"startOffset":290277,"endOffset":290319,"count":23},{"startOffset":290319,"endOffset":290380,"count":33}],"isBlockCoverage":true},{"functionName":"ClassScope","ranges":[{"startOffset":290410,"endOffset":290544,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScopeHandler","ranges":[{"startOffset":290576,"endOffset":290689,"count":7}],"isBlockCoverage":true},{"functionName":"current","ranges":[{"startOffset":290693,"endOffset":290754,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":290758,"endOffset":290810,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":290814,"endOffset":291236,"count":0}],"isBlockCoverage":false},{"functionName":"declarePrivateName","ranges":[{"startOffset":291240,"endOffset":292214,"count":0}],"isBlockCoverage":false},{"functionName":"usePrivateName","ranges":[{"startOffset":292218,"endOffset":292537,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionScope","ranges":[{"startOffset":292716,"endOffset":292799,"count":7}],"isBlockCoverage":true},{"functionName":"canBeArrowParameterDeclaration","ranges":[{"startOffset":292803,"endOffset":292953,"count":0}],"isBlockCoverage":false},{"functionName":"isCertainlyParameterDeclaration","ranges":[{"startOffset":292957,"endOffset":293044,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowHeadParsingScope","ranges":[{"startOffset":293105,"endOffset":293174,"count":0}],"isBlockCoverage":false},{"functionName":"recordDeclarationError","ranges":[{"startOffset":293178,"endOffset":293255,"count":0}],"isBlockCoverage":false},{"functionName":"clearDeclarationError","ranges":[{"startOffset":293259,"endOffset":293320,"count":0}],"isBlockCoverage":false},{"functionName":"iterateErrors","ranges":[{"startOffset":293324,"endOffset":293388,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionScopeHandler","ranges":[{"startOffset":293426,"endOffset":293516,"count":7}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":293520,"endOffset":293566,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":293570,"endOffset":293604,"count":0}],"isBlockCoverage":false},{"functionName":"recordParameterInitializerError","ranges":[{"startOffset":293608,"endOffset":294016,"count":0}],"isBlockCoverage":false},{"functionName":"recordParenthesizedIdentifierError","ranges":[{"startOffset":294020,"endOffset":294379,"count":0}],"isBlockCoverage":false},{"functionName":"recordAsyncArrowParametersError","ranges":[{"startOffset":294383,"endOffset":294740,"count":0}],"isBlockCoverage":false},{"functionName":"validateAsPattern","ranges":[{"startOffset":294744,"endOffset":295206,"count":0}],"isBlockCoverage":false},{"functionName":"newParameterDeclarationScope","ranges":[{"startOffset":295210,"endOffset":295306,"count":0}],"isBlockCoverage":false},{"functionName":"newArrowHeadScope","ranges":[{"startOffset":295307,"endOffset":295408,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncArrowScope","ranges":[{"startOffset":295409,"endOffset":295516,"count":0}],"isBlockCoverage":false},{"functionName":"newExpressionScope","ranges":[{"startOffset":295517,"endOffset":295582,"count":0}],"isBlockCoverage":false},{"functionName":"addExtra","ranges":[{"startOffset":295623,"endOffset":295747,"count":16},{"startOffset":295665,"endOffset":295672,"count":0},{"startOffset":295715,"endOffset":295720,"count":8}],"isBlockCoverage":true},{"functionName":"isRelational","ranges":[{"startOffset":295751,"endOffset":295841,"count":0}],"isBlockCoverage":false},{"functionName":"expectRelational","ranges":[{"startOffset":295845,"endOffset":295989,"count":0}],"isBlockCoverage":false},{"functionName":"isContextual","ranges":[{"startOffset":295993,"endOffset":296108,"count":44},{"startOffset":296048,"endOffset":296076,"count":16},{"startOffset":296077,"endOffset":296103,"count":3}],"isBlockCoverage":true},{"functionName":"isUnparsedContextual","ranges":[{"startOffset":296112,"endOffset":296346,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadContextual","ranges":[{"startOffset":296350,"endOffset":296473,"count":0}],"isBlockCoverage":false},{"functionName":"eatContextual","ranges":[{"startOffset":296477,"endOffset":296562,"count":2},{"startOffset":296534,"endOffset":296557,"count":1}],"isBlockCoverage":true},{"functionName":"expectContextual","ranges":[{"startOffset":296566,"endOffset":296670,"count":1},{"startOffset":296635,"endOffset":296666,"count":0}],"isBlockCoverage":true},{"functionName":"canInsertSemicolon","ranges":[{"startOffset":296674,"endOffset":296794,"count":7},{"startOffset":296730,"endOffset":296757,"count":0},{"startOffset":296758,"endOffset":296789,"count":0}],"isBlockCoverage":true},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":296798,"endOffset":296913,"count":0}],"isBlockCoverage":false},{"functionName":"hasFollowingLineBreak","ranges":[{"startOffset":296917,"endOffset":297030,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":297034,"endOffset":297120,"count":7}],"isBlockCoverage":true},{"functionName":"semicolon","ranges":[{"startOffset":297124,"endOffset":297302,"count":7},{"startOffset":297196,"endOffset":297218,"count":0},{"startOffset":297227,"endOffset":297301,"count":0}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":297306,"endOffset":297379,"count":1},{"startOffset":297345,"endOffset":297374,"count":0}],"isBlockCoverage":true},{"functionName":"assertNoSpace","ranges":[{"startOffset":297383,"endOffset":297541,"count":0}],"isBlockCoverage":false},{"functionName":"unexpected","ranges":[{"startOffset":297545,"endOffset":297806,"count":0}],"isBlockCoverage":false},{"functionName":"expectPlugin","ranges":[{"startOffset":297810,"endOffset":298082,"count":0}],"isBlockCoverage":false},{"functionName":"expectOnePlugin","ranges":[{"startOffset":298086,"endOffset":298389,"count":0}],"isBlockCoverage":false},{"functionName":"tryParse","ranges":[{"startOffset":298393,"endOffset":299560,"count":0}],"isBlockCoverage":false},{"functionName":"checkExpressionErrors","ranges":[{"startOffset":299564,"endOffset":299991,"count":21},{"startOffset":299649,"endOffset":299662,"count":1},{"startOffset":299662,"endOffset":299764,"count":20},{"startOffset":299764,"endOffset":299844,"count":10},{"startOffset":299844,"endOffset":299891,"count":0},{"startOffset":299891,"endOffset":299919,"count":10},{"startOffset":299919,"endOffset":299987,"count":0}],"isBlockCoverage":true},{"functionName":"isLiteralPropertyName","ranges":[{"startOffset":299995,"endOffset":300198,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":300202,"endOffset":300267,"count":2}],"isBlockCoverage":true},{"functionName":"getPrivateNameSV","ranges":[{"startOffset":300271,"endOffset":300324,"count":0}],"isBlockCoverage":false},{"functionName":"hasPropertyAsPrivateName","ranges":[{"startOffset":300328,"endOffset":300492,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalChain","ranges":[{"startOffset":300496,"endOffset":300618,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":300622,"endOffset":300693,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":300697,"endOffset":300764,"count":0}],"isBlockCoverage":false},{"functionName":"initializeScopes","ranges":[{"startOffset":300768,"endOffset":301893,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":301586,"endOffset":301888,"count":0}],"isBlockCoverage":false},{"functionName":"enterInitialScopes","ranges":[{"startOffset":301897,"endOffset":302127,"count":7},{"startOffset":301989,"endOffset":302005,"count":0},{"startOffset":302007,"endOffset":302047,"count":0}],"isBlockCoverage":true},{"functionName":"ExpressionErrors","ranges":[{"startOffset":302158,"endOffset":302235,"count":10}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":302255,"endOffset":302791,"count":64},{"startOffset":302659,"endOffset":302683,"count":63},{"startOffset":302685,"endOffset":302707,"count":0},{"startOffset":302731,"endOffset":302749,"count":63},{"startOffset":302751,"endOffset":302787,"count":0}],"isBlockCoverage":true},{"functionName":"__clone","ranges":[{"startOffset":302795,"endOffset":303133,"count":1},{"startOffset":302935,"endOffset":303108,"count":10},{"startOffset":303001,"endOffset":303030,"count":9},{"startOffset":303031,"endOffset":303057,"count":8},{"startOffset":303059,"endOffset":303102,"count":7}],"isBlockCoverage":true},{"functionName":"startNode","ranges":[{"startOffset":303177,"endOffset":303260,"count":48}],"isBlockCoverage":true},{"functionName":"startNodeAt","ranges":[{"startOffset":303264,"endOffset":303328,"count":15}],"isBlockCoverage":true},{"functionName":"startNodeAtNode","ranges":[{"startOffset":303332,"endOffset":303416,"count":0}],"isBlockCoverage":false},{"functionName":"finishNode","ranges":[{"startOffset":303420,"endOffset":303539,"count":52}],"isBlockCoverage":true},{"functionName":"finishNodeAt","ranges":[{"startOffset":303543,"endOffset":303748,"count":52},{"startOffset":303676,"endOffset":303696,"count":0}],"isBlockCoverage":true},{"functionName":"resetStartLocation","ranges":[{"startOffset":303752,"endOffset":303906,"count":0}],"isBlockCoverage":false},{"functionName":"resetEndLocation","ranges":[{"startOffset":303910,"endOffset":304099,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocationFromNode","ranges":[{"startOffset":304103,"endOffset":304234,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":304277,"endOffset":304394,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignable","ranges":[{"startOffset":304436,"endOffset":306844,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableObjectExpressionProp","ranges":[{"startOffset":306848,"endOffset":307277,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableList","ranges":[{"startOffset":307281,"endOffset":308320,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedList","ranges":[{"startOffset":308324,"endOffset":308398,"count":4}],"isBlockCoverage":true},{"functionName":"toReferencedListDeep","ranges":[{"startOffset":308402,"endOffset":308688,"count":4},{"startOffset":308574,"endOffset":308582,"count":0},{"startOffset":308619,"endOffset":308678,"count":0}],"isBlockCoverage":true},{"functionName":"parseSpread","ranges":[{"startOffset":308692,"endOffset":308951,"count":0}],"isBlockCoverage":false},{"functionName":"parseRestBinding","ranges":[{"startOffset":308955,"endOffset":309125,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingAtom","ranges":[{"startOffset":309129,"endOffset":309551,"count":4},{"startOffset":309187,"endOffset":309422,"count":0},{"startOffset":309430,"endOffset":309505,"count":0}],"isBlockCoverage":true},{"functionName":"parseBindingList","ranges":[{"startOffset":309555,"endOffset":310567,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItem","ranges":[{"startOffset":310571,"endOffset":310879,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignableListItemTypes","ranges":[{"startOffset":310883,"endOffset":310942,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDefault","ranges":[{"startOffset":310946,"endOffset":311484,"count":0}],"isBlockCoverage":false},{"functionName":"checkLVal","ranges":[{"startOffset":311488,"endOffset":313874,"count":5},{"startOffset":311782,"endOffset":311829,"count":0},{"startOffset":311869,"endOffset":312030,"count":0},{"startOffset":312060,"endOffset":312251,"count":0},{"startOffset":312286,"endOffset":312303,"count":4},{"startOffset":312305,"endOffset":312389,"count":0},{"startOffset":312549,"endOffset":312719,"count":0},{"startOffset":312727,"endOffset":313036,"count":0},{"startOffset":313044,"endOffset":313280,"count":0},{"startOffset":313288,"endOffset":313412,"count":0},{"startOffset":313420,"endOffset":313536,"count":0},{"startOffset":313544,"endOffset":313686,"count":0},{"startOffset":313694,"endOffset":313864,"count":0}],"isBlockCoverage":true},{"functionName":"checkToRestConversion","ranges":[{"startOffset":313878,"endOffset":314092,"count":0}],"isBlockCoverage":false},{"functionName":"checkCommaAfterRest","ranges":[{"startOffset":314096,"endOffset":314349,"count":0}],"isBlockCoverage":false},{"functionName":"raiseRestNotLast","ranges":[{"startOffset":314353,"endOffset":314439,"count":0}],"isBlockCoverage":false},{"functionName":"raiseTrailingCommaAfterRest","ranges":[{"startOffset":314443,"endOffset":314535,"count":0}],"isBlockCoverage":false},{"functionName":"checkProto","ranges":[{"startOffset":314586,"endOffset":315328,"count":0}],"isBlockCoverage":false},{"functionName":"shouldExitDescending","ranges":[{"startOffset":315332,"endOffset":315469,"count":31},{"startOffset":315430,"endOffset":315464,"count":0}],"isBlockCoverage":true},{"functionName":"getExpression","ranges":[{"startOffset":315473,"endOffset":315995,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpression","ranges":[{"startOffset":315999,"endOffset":316249,"count":2},{"startOffset":316070,"endOffset":316163,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":316104,"endOffset":316155,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":316192,"endOffset":316243,"count":2}],"isBlockCoverage":true},{"functionName":"parseExpressionBase","ranges":[{"startOffset":316253,"endOffset":316819,"count":2},{"startOffset":316472,"endOffset":316797,"count":0}],"isBlockCoverage":true},{"functionName":"parseMaybeAssignDisallowIn","ranges":[{"startOffset":316823,"endOffset":317025,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeAssignAllowIn","ranges":[{"startOffset":317029,"endOffset":317225,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":317137,"endOffset":317219,"count":8}],"isBlockCoverage":true},{"functionName":"parseMaybeAssign","ranges":[{"startOffset":317229,"endOffset":318969,"count":10},{"startOffset":317421,"endOffset":317683,"count":0},{"startOffset":317744,"endOffset":317786,"count":0},{"startOffset":317947,"endOffset":318008,"count":3},{"startOffset":318117,"endOffset":318190,"count":4},{"startOffset":318226,"endOffset":318848,"count":0}],"isBlockCoverage":true},{"functionName":"parseMaybeConditional","ranges":[{"startOffset":318973,"endOffset":319401,"count":10},{"startOffset":319292,"endOffset":319318,"count":0}],"isBlockCoverage":true},{"functionName":"parseConditional","ranges":[{"startOffset":319405,"endOffset":319809,"count":10},{"startOffset":319502,"endOffset":319787,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprOps","ranges":[{"startOffset":319813,"endOffset":320198,"count":10},{"startOffset":320108,"endOffset":320134,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprOp","ranges":[{"startOffset":320202,"endOffset":321965,"count":12},{"startOffset":320319,"endOffset":320370,"count":1},{"startOffset":320344,"endOffset":320369,"count":0},{"startOffset":320372,"endOffset":321943,"count":1},{"startOffset":320474,"endOffset":320733,"count":0},{"startOffset":321025,"endOffset":321077,"count":0},{"startOffset":321135,"endOffset":321204,"count":0},{"startOffset":321206,"endOffset":321424,"count":0},{"startOffset":321534,"endOffset":321555,"count":0},{"startOffset":321641,"endOffset":321703,"count":0},{"startOffset":321715,"endOffset":321752,"count":0},{"startOffset":321754,"endOffset":321852,"count":0},{"startOffset":321943,"endOffset":321964,"count":11}],"isBlockCoverage":true},{"functionName":"parseExprOpRightExpr","ranges":[{"startOffset":321969,"endOffset":322664,"count":1},{"startOffset":322108,"endOffset":322582,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":322276,"endOffset":322408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":322492,"endOffset":322570,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpBaseRightExpr","ranges":[{"startOffset":322668,"endOffset":322901,"count":1},{"startOffset":322878,"endOffset":322888,"count":0}],"isBlockCoverage":true},{"functionName":"checkExponentialAfterUnary","ranges":[{"startOffset":322905,"endOffset":323076,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeUnary","ranges":[{"startOffset":323080,"endOffset":325090,"count":11},{"startOffset":323275,"endOffset":323299,"count":0},{"startOffset":323301,"endOffset":323462,"count":0},{"startOffset":323500,"endOffset":323535,"count":0},{"startOffset":323536,"endOffset":323568,"count":0},{"startOffset":323570,"endOffset":323620,"count":0},{"startOffset":323735,"endOffset":324564,"count":0},{"startOffset":324654,"endOffset":325068,"count":0}],"isBlockCoverage":true},{"functionName":"parseUpdate","ranges":[{"startOffset":325094,"endOffset":325873,"count":11},{"startOffset":325159,"endOffset":325279,"count":0},{"startOffset":325488,"endOffset":325500,"count":0},{"startOffset":325537,"endOffset":325566,"count":0},{"startOffset":325568,"endOffset":325851,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprSubscripts","ranges":[{"startOffset":325877,"endOffset":326267,"count":11},{"startOffset":326177,"endOffset":326203,"count":0}],"isBlockCoverage":true},{"functionName":"parseSubscripts","ranges":[{"startOffset":326271,"endOffset":326630,"count":11},{"startOffset":326467,"endOffset":326587,"count":17}],"isBlockCoverage":true},{"functionName":"parseSubscript","ranges":[{"startOffset":326634,"endOffset":327570,"count":17},{"startOffset":326742,"endOffset":326820,"count":0},{"startOffset":326859,"endOffset":326948,"count":0},{"startOffset":327016,"endOffset":327206,"count":0},{"startOffset":327254,"endOffset":327355,"count":4},{"startOffset":327355,"endOffset":327566,"count":13},{"startOffset":327428,"endOffset":327509,"count":2},{"startOffset":327509,"endOffset":327566,"count":11}],"isBlockCoverage":true},{"functionName":"parseMember","ranges":[{"startOffset":327574,"endOffset":328431,"count":2},{"startOffset":327817,"endOffset":327841,"count":0},{"startOffset":327917,"endOffset":328125,"count":0},{"startOffset":328176,"endOffset":328218,"count":0},{"startOffset":328255,"endOffset":328358,"count":0}],"isBlockCoverage":true},{"functionName":"parseBind","ranges":[{"startOffset":328435,"endOffset":328739,"count":0}],"isBlockCoverage":false},{"functionName":"parseCoverCallAndAsyncArrowHead","ranges":[{"startOffset":328743,"endOffset":330049,"count":4},{"startOffset":329065,"endOffset":329128,"count":0},{"startOffset":329165,"endOffset":329204,"count":0},{"startOffset":329224,"endOffset":329310,"count":0},{"startOffset":329568,"endOffset":329599,"count":0},{"startOffset":329600,"endOffset":329612,"count":0},{"startOffset":329614,"endOffset":329826,"count":0},{"startOffset":329867,"endOffset":329913,"count":0}],"isBlockCoverage":true},{"functionName":"toReferencedArguments","ranges":[{"startOffset":330053,"endOffset":330175,"count":4}],"isBlockCoverage":true},{"functionName":"parseTaggedTemplateExpression","ranges":[{"startOffset":330179,"endOffset":330543,"count":0}],"isBlockCoverage":false},{"functionName":"atPossibleAsyncArrow","ranges":[{"startOffset":330547,"endOffset":330788,"count":11},{"startOffset":330614,"endOffset":330638,"count":3},{"startOffset":330639,"endOffset":330676,"count":0},{"startOffset":330677,"endOffset":330706,"count":0},{"startOffset":330707,"endOffset":330737,"count":0},{"startOffset":330738,"endOffset":330783,"count":0}],"isBlockCoverage":true},{"functionName":"finishCallExpression","ranges":[{"startOffset":330792,"endOffset":331591,"count":4},{"startOffset":330870,"endOffset":331496,"count":1},{"startOffset":330911,"endOffset":331030,"count":0},{"startOffset":331100,"endOffset":331288,"count":0},{"startOffset":331384,"endOffset":331472,"count":0},{"startOffset":331540,"endOffset":331566,"count":0}],"isBlockCoverage":true},{"functionName":"parseCallExpressionArguments","ranges":[{"startOffset":331595,"endOffset":332721,"count":4},{"startOffset":331956,"endOffset":332433,"count":0},{"startOffset":332500,"endOffset":332524,"count":0},{"startOffset":332557,"endOffset":332585,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseAsyncArrow","ranges":[{"startOffset":332725,"endOffset":332820,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncArrowFromCallExpression","ranges":[{"startOffset":332824,"endOffset":333076,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoCallExpr","ranges":[{"startOffset":333080,"endOffset":333265,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprAtom","ranges":[{"startOffset":333269,"endOffset":339355,"count":12},{"startOffset":333347,"endOffset":333365,"count":0},{"startOffset":333491,"endOffset":333543,"count":0},{"startOffset":333551,"endOffset":333906,"count":1},{"startOffset":333661,"endOffset":333725,"count":0},{"startOffset":333766,"endOffset":333857,"count":0},{"startOffset":333914,"endOffset":334041,"count":0},{"startOffset":334049,"endOffset":335063,"count":3},{"startOffset":334226,"endOffset":334255,"count":0},{"startOffset":334257,"endOffset":334823,"count":0},{"startOffset":334877,"endOffset":334906,"count":0},{"startOffset":334908,"endOffset":335031,"count":0},{"startOffset":335071,"endOffset":335139,"count":0},{"startOffset":335147,"endOffset":335392,"count":0},{"startOffset":335400,"endOffset":335485,"count":0},{"startOffset":335493,"endOffset":335580,"count":0},{"startOffset":335588,"endOffset":335677,"count":0},{"startOffset":335685,"endOffset":335772,"count":8},{"startOffset":335780,"endOffset":335904,"count":0},{"startOffset":335912,"endOffset":335929,"count":0},{"startOffset":335936,"endOffset":335997,"count":0},{"startOffset":336005,"endOffset":336091,"count":0},{"startOffset":336099,"endOffset":336122,"count":0},{"startOffset":336129,"endOffset":336321,"count":0},{"startOffset":336329,"endOffset":336457,"count":0},{"startOffset":336465,"endOffset":336486,"count":0},{"startOffset":336493,"endOffset":336678,"count":0},{"startOffset":336686,"endOffset":336812,"count":0},{"startOffset":336820,"endOffset":336892,"count":0},{"startOffset":336900,"endOffset":336946,"count":0},{"startOffset":336954,"endOffset":337085,"count":0},{"startOffset":337093,"endOffset":337152,"count":0},{"startOffset":337160,"endOffset":337223,"count":0},{"startOffset":337231,"endOffset":337644,"count":0},{"startOffset":337652,"endOffset":338955,"count":0},{"startOffset":338963,"endOffset":339296,"count":0},{"startOffset":339304,"endOffset":339345,"count":0}],"isBlockCoverage":true},{"functionName":"parseAsyncArrowUnaryFunction","ranges":[{"startOffset":339359,"endOffset":339805,"count":0}],"isBlockCoverage":false},{"functionName":"parseDo","ranges":[{"startOffset":339809,"endOffset":340105,"count":0}],"isBlockCoverage":false},{"functionName":"parseSuper","ranges":[{"startOffset":340109,"endOffset":340706,"count":0}],"isBlockCoverage":false},{"functionName":"parseBooleanLiteral","ranges":[{"startOffset":340710,"endOffset":340883,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybePrivateName","ranges":[{"startOffset":340887,"endOffset":341484,"count":2},{"startOffset":340999,"endOffset":341426,"count":0}],"isBlockCoverage":true},{"functionName":"parseFunctionOrFunctionSent","ranges":[{"startOffset":341488,"endOffset":341838,"count":0}],"isBlockCoverage":false},{"functionName":"parseMetaProperty","ranges":[{"startOffset":341842,"endOffset":342478,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportMetaProperty","ranges":[{"startOffset":342482,"endOffset":342930,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteral","ranges":[{"startOffset":342934,"endOffset":343334,"count":8}],"isBlockCoverage":true},{"functionName":"parseParenAndDistinguishExpression","ranges":[{"startOffset":343338,"endOffset":346520,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseArrow","ranges":[{"startOffset":346524,"endOffset":346587,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrow","ranges":[{"startOffset":346591,"endOffset":346671,"count":0}],"isBlockCoverage":false},{"functionName":"parseParenItem","ranges":[{"startOffset":346675,"endOffset":346738,"count":4}],"isBlockCoverage":true},{"functionName":"parseNewOrNewTarget","ranges":[{"startOffset":346742,"endOffset":347361,"count":0}],"isBlockCoverage":false},{"functionName":"parseNew","ranges":[{"startOffset":347365,"endOffset":347889,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewArguments","ranges":[{"startOffset":347893,"endOffset":348119,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateElement","ranges":[{"startOffset":348123,"endOffset":348616,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":348620,"endOffset":349120,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateSubstitution","ranges":[{"startOffset":349124,"endOffset":349192,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectLike","ranges":[{"startOffset":349196,"endOffset":350678,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAsyncOrAccessorProp","ranges":[{"startOffset":350682,"endOffset":350869,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyDefinition","ranges":[{"startOffset":350873,"endOffset":352921,"count":0}],"isBlockCoverage":false},{"functionName":"getGetterSetterExpectedParamCount","ranges":[{"startOffset":352925,"endOffset":353014,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectOrClassMethodParams","ranges":[{"startOffset":353018,"endOffset":353086,"count":0}],"isBlockCoverage":false},{"functionName":"checkGetterSetterParams","ranges":[{"startOffset":353090,"endOffset":353725,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMethod","ranges":[{"startOffset":353729,"endOffset":354224,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectProperty","ranges":[{"startOffset":354228,"endOffset":355261,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjPropValue","ranges":[{"startOffset":355265,"endOffset":355609,"count":0}],"isBlockCoverage":false},{"functionName":"parsePropertyName","ranges":[{"startOffset":355613,"endOffset":356288,"count":0}],"isBlockCoverage":false},{"functionName":"initFunction","ranges":[{"startOffset":356292,"endOffset":356401,"count":0}],"isBlockCoverage":false},{"functionName":"parseMethod","ranges":[{"startOffset":356405,"endOffset":357000,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrayLike","ranges":[{"startOffset":357004,"endOffset":357570,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowExpression","ranges":[{"startOffset":357574,"endOffset":358390,"count":0}],"isBlockCoverage":false},{"functionName":"setArrowFunctionParameters","ranges":[{"startOffset":358394,"endOffset":358532,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBodyAndFinish","ranges":[{"startOffset":358536,"endOffset":358682,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBody","ranges":[{"startOffset":358686,"endOffset":360092,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleParamList","ranges":[{"startOffset":360096,"endOffset":360265,"count":0}],"isBlockCoverage":false},{"functionName":"checkParams","ranges":[{"startOffset":360269,"endOffset":360569,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprList","ranges":[{"startOffset":360573,"endOffset":361129,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprListItem","ranges":[{"startOffset":361133,"endOffset":362146,"count":4},{"startOffset":361269,"endOffset":361400,"count":0},{"startOffset":361438,"endOffset":361680,"count":0},{"startOffset":361718,"endOffset":362010,"count":0}],"isBlockCoverage":true},{"functionName":"parseIdentifier","ranges":[{"startOffset":362150,"endOffset":362325,"count":10}],"isBlockCoverage":true},{"functionName":"createIdentifier","ranges":[{"startOffset":362329,"endOffset":362469,"count":10}],"isBlockCoverage":true},{"functionName":"parseIdentifierName","ranges":[{"startOffset":362473,"endOffset":363172,"count":10},{"startOffset":362647,"endOffset":362992,"count":0},{"startOffset":363011,"endOffset":363054,"count":3},{"startOffset":363054,"endOffset":363133,"count":7}],"isBlockCoverage":true},{"functionName":"checkReservedWord","ranges":[{"startOffset":363176,"endOffset":364397,"count":8},{"startOffset":363270,"endOffset":363289,"count":0},{"startOffset":363291,"endOffset":363378,"count":0},{"startOffset":363406,"endOffset":363843,"count":0},{"startOffset":363872,"endOffset":363905,"count":0},{"startOffset":363906,"endOffset":363929,"count":0},{"startOffset":363931,"endOffset":364012,"count":0},{"startOffset":364036,"endOffset":364054,"count":1},{"startOffset":364056,"endOffset":364144,"count":0},{"startOffset":364190,"endOffset":364206,"count":0},{"startOffset":364219,"endOffset":364245,"count":1},{"startOffset":364246,"endOffset":364268,"count":7},{"startOffset":364314,"endOffset":364393,"count":0}],"isBlockCoverage":true},{"functionName":"isAwaitAllowed","ranges":[{"startOffset":364401,"endOffset":364590,"count":0}],"isBlockCoverage":false},{"functionName":"parseAwait","ranges":[{"startOffset":364594,"endOffset":365285,"count":0}],"isBlockCoverage":false},{"functionName":"isAmbiguousAwait","ranges":[{"startOffset":365289,"endOffset":365588,"count":0}],"isBlockCoverage":false},{"functionName":"parseYield","ranges":[{"startOffset":365592,"endOffset":366110,"count":0}],"isBlockCoverage":false},{"functionName":"checkPipelineAtInfixOperator","ranges":[{"startOffset":366114,"endOffset":366386,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBody","ranges":[{"startOffset":366390,"endOffset":366610,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyEarlyErrors","ranges":[{"startOffset":366614,"endOffset":366936,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBodyInStyle","ranges":[{"startOffset":366940,"endOffset":367526,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleReference","ranges":[{"startOffset":367530,"endOffset":367800,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicPermittingContext","ranges":[{"startOffset":367804,"endOffset":368120,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicForbiddingContext","ranges":[{"startOffset":368124,"endOffset":368440,"count":0}],"isBlockCoverage":false},{"functionName":"withSoloAwaitPermittingContext","ranges":[{"startOffset":368444,"endOffset":368699,"count":0}],"isBlockCoverage":false},{"functionName":"allowInAnd","ranges":[{"startOffset":368703,"endOffset":369024,"count":10},{"startOffset":368846,"endOffset":368996,"count":6},{"startOffset":368996,"endOffset":369023,"count":4}],"isBlockCoverage":true},{"functionName":"disallowInAnd","ranges":[{"startOffset":369028,"endOffset":369356,"count":0}],"isBlockCoverage":false},{"functionName":"registerTopicReference","ranges":[{"startOffset":369360,"endOffset":369437,"count":0}],"isBlockCoverage":false},{"functionName":"primaryTopicReferenceIsAllowedInCurrentTopicContext","ranges":[{"startOffset":369441,"endOffset":369566,"count":0}],"isBlockCoverage":false},{"functionName":"topicReferenceWasUsedInCurrentTopicContext","ranges":[{"startOffset":369570,"endOffset":369724,"count":0}],"isBlockCoverage":false},{"functionName":"parseFSharpPipelineBody","ranges":[{"startOffset":369728,"endOffset":370202,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleExpression","ranges":[{"startOffset":370206,"endOffset":370685,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopLevel","ranges":[{"startOffset":370992,"endOffset":371212,"count":7},{"startOffset":371140,"endOffset":371166,"count":0}],"isBlockCoverage":true},{"functionName":"parseProgram","ranges":[{"startOffset":371216,"endOffset":371812,"count":7},{"startOffset":371547,"endOffset":371759,"count":0}],"isBlockCoverage":true},{"functionName":"stmtToDirective","ranges":[{"startOffset":371816,"endOffset":372419,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterpreterDirective","ranges":[{"startOffset":372423,"endOffset":372678,"count":7},{"startOffset":372528,"endOffset":372677,"count":0}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":372682,"endOffset":372805,"count":7},{"startOffset":372734,"endOffset":372761,"count":5},{"startOffset":372761,"endOffset":372804,"count":2}],"isBlockCoverage":true},{"functionName":"isLetKeyword","ranges":[{"startOffset":372809,"endOffset":373315,"count":2},{"startOffset":372944,"endOffset":372956,"count":0},{"startOffset":372974,"endOffset":372987,"count":0},{"startOffset":373012,"endOffset":373024,"count":0},{"startOffset":373149,"endOffset":373173,"count":4},{"startOffset":373292,"endOffset":373314,"count":0}],"isBlockCoverage":true},{"functionName":"parseStatement","ranges":[{"startOffset":373319,"endOffset":373489,"count":7},{"startOffset":373385,"endOffset":373426,"count":0}],"isBlockCoverage":true},{"functionName":"parseStatementContent","ranges":[{"startOffset":373493,"endOffset":377396,"count":7},{"startOffset":373652,"endOffset":373709,"count":2},{"startOffset":373742,"endOffset":373760,"count":0},{"startOffset":373767,"endOffset":373862,"count":0},{"startOffset":373870,"endOffset":373941,"count":0},{"startOffset":373949,"endOffset":374008,"count":0},{"startOffset":374016,"endOffset":374077,"count":0},{"startOffset":374085,"endOffset":374515,"count":0},{"startOffset":374523,"endOffset":374625,"count":0},{"startOffset":374633,"endOffset":374692,"count":0},{"startOffset":374700,"endOffset":374767,"count":0},{"startOffset":374775,"endOffset":374842,"count":0},{"startOffset":374850,"endOffset":374915,"count":0},{"startOffset":374923,"endOffset":374984,"count":0},{"startOffset":374992,"endOffset":375010,"count":2},{"startOffset":375017,"endOffset":375262,"count":4},{"startOffset":375054,"endOffset":375073,"count":2},{"startOffset":375096,"endOffset":375113,"count":0},{"startOffset":375115,"endOffset":375210,"count":0},{"startOffset":375270,"endOffset":375335,"count":0},{"startOffset":375343,"endOffset":375406,"count":0},{"startOffset":375414,"endOffset":375466,"count":0},{"startOffset":375474,"endOffset":375537,"count":0},{"startOffset":375545,"endOffset":375752,"count":1},{"startOffset":375706,"endOffset":375742,"count":0},{"startOffset":375760,"endOffset":376742,"count":1},{"startOffset":375860,"endOffset":375953,"count":0},{"startOffset":376167,"endOffset":376199,"count":0},{"startOffset":376274,"endOffset":376660,"count":0},{"startOffset":376750,"endOffset":377064,"count":2},{"startOffset":376807,"endOffset":377054,"count":0},{"startOffset":377070,"endOffset":377216,"count":2},{"startOffset":377217,"endOffset":377241,"count":0},{"startOffset":377243,"endOffset":377323,"count":0},{"startOffset":377323,"endOffset":377392,"count":2}],"isBlockCoverage":true},{"functionName":"assertModuleNodeAllowed","ranges":[{"startOffset":377400,"endOffset":377652,"count":1},{"startOffset":377501,"endOffset":377648,"count":0}],"isBlockCoverage":true},{"functionName":"takeDecorators","ranges":[{"startOffset":377656,"endOffset":377978,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLeadingDecorator","ranges":[{"startOffset":377982,"endOffset":378050,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorators","ranges":[{"startOffset":378054,"endOffset":378756,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorator","ranges":[{"startOffset":378760,"endOffset":379770,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDecoratorArguments","ranges":[{"startOffset":379774,"endOffset":380123,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakContinueStatement","ranges":[{"startOffset":380127,"endOffset":380510,"count":0}],"isBlockCoverage":false},{"functionName":"verifyBreakContinue","ranges":[{"startOffset":380514,"endOffset":381018,"count":0}],"isBlockCoverage":false},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":381022,"endOffset":381150,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaderExpression","ranges":[{"startOffset":381154,"endOffset":381301,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoStatement","ranges":[{"startOffset":381305,"endOffset":381657,"count":0}],"isBlockCoverage":false},{"functionName":"parseForStatement","ranges":[{"startOffset":381661,"endOffset":383458,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionStatement","ranges":[{"startOffset":383462,"endOffset":383658,"count":0}],"isBlockCoverage":false},{"functionName":"parseIfStatement","ranges":[{"startOffset":383662,"endOffset":383930,"count":0}],"isBlockCoverage":false},{"functionName":"parseReturnStatement","ranges":[{"startOffset":383934,"endOffset":384343,"count":0}],"isBlockCoverage":false},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":384347,"endOffset":385573,"count":0}],"isBlockCoverage":false},{"functionName":"parseThrowStatement","ranges":[{"startOffset":385577,"endOffset":385865,"count":0}],"isBlockCoverage":false},{"functionName":"parseCatchClauseParam","ranges":[{"startOffset":385869,"endOffset":386119,"count":0}],"isBlockCoverage":false},{"functionName":"parseTryStatement","ranges":[{"startOffset":386123,"endOffset":387000,"count":0}],"isBlockCoverage":false},{"functionName":"parseVarStatement","ranges":[{"startOffset":387004,"endOffset":387173,"count":4}],"isBlockCoverage":true},{"functionName":"parseWhileStatement","ranges":[{"startOffset":387177,"endOffset":387476,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":387480,"endOffset":387808,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":387812,"endOffset":387912,"count":0}],"isBlockCoverage":false},{"functionName":"parseLabeledStatement","ranges":[{"startOffset":387916,"endOffset":388865,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionStatement","ranges":[{"startOffset":388869,"endOffset":389018,"count":2}],"isBlockCoverage":true},{"functionName":"parseBlock","ranges":[{"startOffset":389022,"endOffset":389532,"count":0}],"isBlockCoverage":false},{"functionName":"isValidDirective","ranges":[{"startOffset":389536,"endOffset":389696,"count":7},{"startOffset":389608,"endOffset":389651,"count":2},{"startOffset":389652,"endOffset":389691,"count":0}],"isBlockCoverage":true},{"functionName":"parseBlockBody","ranges":[{"startOffset":389700,"endOffset":389971,"count":7},{"startOffset":389922,"endOffset":389933,"count":0}],"isBlockCoverage":true},{"functionName":"parseBlockOrModuleBlockBody","ranges":[{"startOffset":389975,"endOffset":390935,"count":7},{"startOffset":390349,"endOffset":390648,"count":0},{"startOffset":390790,"endOffset":390855,"count":0},{"startOffset":390877,"endOffset":390913,"count":0}],"isBlockCoverage":true},{"functionName":"parseFor","ranges":[{"startOffset":390939,"endOffset":391405,"count":0}],"isBlockCoverage":false},{"functionName":"parseForIn","ranges":[{"startOffset":391409,"endOffset":392399,"count":0}],"isBlockCoverage":false},{"functionName":"parseVar","ranges":[{"startOffset":392403,"endOffset":393455,"count":4},{"startOffset":392706,"endOffset":392741,"count":0},{"startOffset":392783,"endOffset":393315,"count":0}],"isBlockCoverage":true},{"functionName":"parseVarId","ranges":[{"startOffset":393459,"endOffset":393648,"count":4},{"startOffset":393590,"endOffset":393600,"count":0}],"isBlockCoverage":true},{"functionName":"parseFunction","ranges":[{"startOffset":393652,"endOffset":394952,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionId","ranges":[{"startOffset":394956,"endOffset":395068,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionParams","ranges":[{"startOffset":395072,"endOffset":395329,"count":0}],"isBlockCoverage":false},{"functionName":"registerFunctionStatementId","ranges":[{"startOffset":395333,"endOffset":395581,"count":0}],"isBlockCoverage":false},{"functionName":"parseClass","ranges":[{"startOffset":395585,"endOffset":395992,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":395996,"endOffset":396106,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":396110,"endOffset":396168,"count":0}],"isBlockCoverage":false},{"functionName":"isNonstaticConstructor","ranges":[{"startOffset":396172,"endOffset":396332,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassBody","ranges":[{"startOffset":396336,"endOffset":397754,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberFromModifier","ranges":[{"startOffset":397758,"endOffset":398373,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMember","ranges":[{"startOffset":398377,"endOffset":398784,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberWithIsStatic","ranges":[{"startOffset":398788,"endOffset":402472,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassElementName","ranges":[{"startOffset":402476,"endOffset":402916,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassStaticBlock","ranges":[{"startOffset":402920,"endOffset":403649,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassProperty","ranges":[{"startOffset":403653,"endOffset":403926,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateProperty","ranges":[{"startOffset":403930,"endOffset":404238,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassMethod","ranges":[{"startOffset":404242,"endOffset":404466,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateMethod","ranges":[{"startOffset":404470,"endOffset":405070,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostMemberNameModifiers","ranges":[{"startOffset":405074,"endOffset":405119,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPrivateProperty","ranges":[{"startOffset":405123,"endOffset":405273,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassProperty","ranges":[{"startOffset":405277,"endOffset":405520,"count":0}],"isBlockCoverage":false},{"functionName":"parseInitializer","ranges":[{"startOffset":405524,"endOffset":405848,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassId","ranges":[{"startOffset":405852,"endOffset":406264,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassSuper","ranges":[{"startOffset":406268,"endOffset":406379,"count":0}],"isBlockCoverage":false},{"functionName":"parseExport","ranges":[{"startOffset":406383,"endOffset":407956,"count":0}],"isBlockCoverage":false},{"functionName":"eatExportStar","ranges":[{"startOffset":407960,"endOffset":408018,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDefaultSpecifier","ranges":[{"startOffset":408022,"endOffset":408376,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamespaceSpecifier","ranges":[{"startOffset":408380,"endOffset":408810,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamedSpecifiers","ranges":[{"startOffset":408814,"endOffset":409105,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDeclaration","ranges":[{"startOffset":409109,"endOffset":409353,"count":0}],"isBlockCoverage":false},{"functionName":"isAsyncFunction","ranges":[{"startOffset":409357,"endOffset":409586,"count":2},{"startOffset":409427,"endOffset":409581,"count":0}],"isBlockCoverage":true},{"functionName":"parseExportDefaultExpression","ranges":[{"startOffset":409590,"endOffset":410591,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":410595,"endOffset":410667,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":410671,"endOffset":411693,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportFrom","ranges":[{"startOffset":411697,"endOffset":412117,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseExportDeclaration","ranges":[{"startOffset":412121,"endOffset":412728,"count":0}],"isBlockCoverage":false},{"functionName":"checkExport","ranges":[{"startOffset":412732,"endOffset":414894,"count":0}],"isBlockCoverage":false},{"functionName":"checkDeclaration","ranges":[{"startOffset":414898,"endOffset":415596,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicateExports","ranges":[{"startOffset":415600,"endOffset":415881,"count":0}],"isBlockCoverage":false},{"functionName":"parseExportSpecifiers","ranges":[{"startOffset":415885,"endOffset":416444,"count":0}],"isBlockCoverage":false},{"functionName":"parseModuleExportName","ranges":[{"startOffset":416448,"endOffset":416916,"count":1},{"startOffset":416508,"endOffset":416872,"count":0}],"isBlockCoverage":true},{"functionName":"parseImport","ranges":[{"startOffset":416920,"endOffset":417731,"count":1},{"startOffset":417110,"endOffset":417134,"count":0},{"startOffset":417452,"endOffset":417495,"count":0},{"startOffset":417590,"endOffset":417641,"count":0}],"isBlockCoverage":true},{"functionName":"parseImportSource","ranges":[{"startOffset":417735,"endOffset":417847,"count":1},{"startOffset":417792,"endOffset":417810,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseDefaultImport","ranges":[{"startOffset":417851,"endOffset":417922,"count":1}],"isBlockCoverage":true},{"functionName":"parseImportSpecifierLocal","ranges":[{"startOffset":417926,"endOffset":418177,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssertEntries","ranges":[{"startOffset":418181,"endOffset":419263,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseModuleAttributes","ranges":[{"startOffset":419267,"endOffset":420387,"count":1},{"startOffset":419330,"endOffset":419362,"count":0},{"startOffset":419364,"endOffset":419435,"count":0},{"startOffset":419489,"endOffset":419499,"count":0},{"startOffset":419524,"endOffset":420386,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseImportAssertions","ranges":[{"startOffset":420391,"endOffset":420776,"count":1},{"startOffset":420458,"endOffset":420490,"count":0},{"startOffset":420492,"endOffset":420563,"count":0},{"startOffset":420617,"endOffset":420627,"count":0},{"startOffset":420652,"endOffset":420775,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseDefaultImportSpecifier","ranges":[{"startOffset":420780,"endOffset":421031,"count":1},{"startOffset":420866,"endOffset":421008,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseStarImportSpecifier","ranges":[{"startOffset":421035,"endOffset":421363,"count":1},{"startOffset":421105,"endOffset":421340,"count":0}],"isBlockCoverage":true},{"functionName":"parseNamedImportSpecifiers","ranges":[{"startOffset":421367,"endOffset":421817,"count":1},{"startOffset":421543,"endOffset":421767,"count":0}],"isBlockCoverage":true},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":421821,"endOffset":422520,"count":1},{"startOffset":421980,"endOffset":422035,"count":0},{"startOffset":422141,"endOffset":422246,"count":0}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":422566,"endOffset":422815,"count":7}],"isBlockCoverage":true},{"functionName":"getScopeHandler","ranges":[{"startOffset":422819,"endOffset":422867,"count":7}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":422871,"endOffset":423127,"count":7}],"isBlockCoverage":true},{"functionName":"pluginsMap","ranges":[{"startOffset":423132,"endOffset":423396,"count":7},{"startOffset":423227,"endOffset":423373,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":423398,"endOffset":424297,"count":7},{"startOffset":423484,"endOffset":423492,"count":0},{"startOffset":423535,"endOffset":424238,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpression","ranges":[{"startOffset":424298,"endOffset":424492,"count":0}],"isBlockCoverage":false},{"functionName":"getParser","ranges":[{"startOffset":424494,"endOffset":424717,"count":7}],"isBlockCoverage":true},{"functionName":"getParserClass","ranges":[{"startOffset":424749,"endOffset":425129,"count":7},{"startOffset":424970,"endOffset":425112,"count":1},{"startOffset":425028,"endOffset":425074,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":424840,"endOffset":424883,"count":42}],"isBlockCoverage":true}]},{"scriptId":"653","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3817,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":152,"endOffset":195,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":269,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":385,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":919,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1107,"endOffset":1850,"count":3},{"startOffset":1189,"endOffset":1262,"count":0},{"startOffset":1264,"endOffset":1360,"count":0},{"startOffset":1362,"endOffset":1490,"count":0},{"startOffset":1513,"endOffset":1849,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1852,"endOffset":1947,"count":4},{"startOffset":1926,"endOffset":1944,"count":0}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":1949,"endOffset":2489,"count":14},{"startOffset":2029,"endOffset":2036,"count":0},{"startOffset":2069,"endOffset":2348,"count":0},{"startOffset":2386,"endOffset":2403,"count":0}],"isBlockCoverage":true},{"functionName":"traverse.cheap","ranges":[{"startOffset":2664,"endOffset":2728,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.node","ranges":[{"startOffset":2747,"endOffset":3063,"count":87},{"startOffset":2862,"endOffset":2869,"count":0},{"startOffset":2969,"endOffset":3061,"count":137},{"startOffset":2988,"endOffset":3004,"count":0},{"startOffset":3006,"endOffset":3015,"count":0},{"startOffset":3050,"endOffset":3057,"count":0}],"isBlockCoverage":true},{"functionName":"traverse.clearNode","ranges":[{"startOffset":3087,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.removeProperties","ranges":[{"startOffset":3204,"endOffset":3294,"count":0}],"isBlockCoverage":false},{"functionName":"hasDenylistedType","ranges":[{"startOffset":3297,"endOffset":3422,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.hasType","ranges":[{"startOffset":3443,"endOffset":3791,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4057,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":222,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":410,"endOffset":1153,"count":1},{"startOffset":492,"endOffset":565,"count":0},{"startOffset":567,"endOffset":663,"count":0},{"startOffset":665,"endOffset":793,"count":0},{"startOffset":816,"endOffset":1152,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1155,"endOffset":1250,"count":1},{"startOffset":1229,"endOffset":1247,"count":0}],"isBlockCoverage":true},{"functionName":"TraversalContext","ranges":[{"startOffset":1329,"endOffset":1536,"count":87}],"isBlockCoverage":true},{"functionName":"shouldVisit","ranges":[{"startOffset":1540,"endOffset":1863,"count":85},{"startOffset":1607,"endOffset":1619,"count":46},{"startOffset":1621,"endOffset":1633,"count":39},{"startOffset":1633,"endOffset":1659,"count":46},{"startOffset":1659,"endOffset":1671,"count":15},{"startOffset":1671,"endOffset":1753,"count":31},{"startOffset":1756,"endOffset":1769,"count":1},{"startOffset":1769,"endOffset":1799,"count":30},{"startOffset":1799,"endOffset":1840,"count":41},{"startOffset":1822,"endOffset":1834,"count":19},{"startOffset":1840,"endOffset":1862,"count":11}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1867,"endOffset":2050,"count":73}],"isBlockCoverage":true},{"functionName":"maybeQueue","ranges":[{"startOffset":2054,"endOffset":2313,"count":0}],"isBlockCoverage":false},{"functionName":"visitMultiple","ranges":[{"startOffset":2317,"endOffset":2684,"count":46},{"startOffset":2393,"endOffset":2406,"count":14},{"startOffset":2406,"endOffset":2683,"count":32}],"isBlockCoverage":true},{"functionName":"visitSingle","ranges":[{"startOffset":2688,"endOffset":2856,"count":53},{"startOffset":2750,"endOffset":2819,"count":41},{"startOffset":2819,"endOffset":2852,"count":12}],"isBlockCoverage":true},{"functionName":"visitQueue","ranges":[{"startOffset":2860,"endOffset":3787,"count":73},{"startOffset":3082,"endOffset":3133,"count":0},{"startOffset":3207,"endOffset":3216,"count":0},{"startOffset":3262,"endOffset":3297,"count":0},{"startOffset":3371,"endOffset":3380,"count":0},{"startOffset":3441,"endOffset":3486,"count":0},{"startOffset":3525,"endOffset":3672,"count":0}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":3791,"endOffset":4017,"count":137},{"startOffset":3855,"endOffset":3868,"count":38},{"startOffset":3868,"endOffset":3900,"count":99},{"startOffset":3900,"endOffset":3958,"count":46},{"startOffset":3958,"endOffset":4013,"count":53}],"isBlockCoverage":true}]},{"scriptId":"655","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6704,"count":1},{"startOffset":6051,"endOffset":6365,"count":292},{"startOffset":6413,"endOffset":6650,"count":18},{"startOffset":6438,"endOffset":6447,"count":0},{"startOffset":6481,"endOffset":6500,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1358,"endOffset":1453,"count":3},{"startOffset":1432,"endOffset":1450,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1455,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1643,"endOffset":2386,"count":13},{"startOffset":1725,"endOffset":1798,"count":0},{"startOffset":1800,"endOffset":1896,"count":0},{"startOffset":1898,"endOffset":2026,"count":0},{"startOffset":2049,"endOffset":2385,"count":0}],"isBlockCoverage":true},{"functionName":"NodePath","ranges":[{"startOffset":2658,"endOffset":3073,"count":46}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3084,"endOffset":3730,"count":85},{"startOffset":3183,"endOffset":3196,"count":78},{"startOffset":3198,"endOffset":3233,"count":71},{"startOffset":3252,"endOffset":3330,"count":0},{"startOffset":3430,"endOffset":3501,"count":33},{"startOffset":3557,"endOffset":3655,"count":46}],"isBlockCoverage":true},{"functionName":"getScope","ranges":[{"startOffset":3734,"endOffset":3817,"count":158},{"startOffset":3778,"endOffset":3804,"count":21},{"startOffset":3805,"endOffset":3812,"count":137}],"isBlockCoverage":true},{"functionName":"setData","ranges":[{"startOffset":3821,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":3956,"endOffset":4176,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":4180,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":4290,"endOffset":4390,"count":7}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4394,"endOffset":4479,"count":0}],"isBlockCoverage":false},{"functionName":"getPathLocation","ranges":[{"startOffset":4483,"endOffset":4734,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":4738,"endOffset":4855,"count":219},{"startOffset":4786,"endOffset":4854,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":4859,"endOffset":4927,"count":0}],"isBlockCoverage":false},{"functionName":"get inList","ranges":[{"startOffset":4931,"endOffset":4976,"count":73}],"isBlockCoverage":true},{"functionName":"set inList","ranges":[{"startOffset":4980,"endOffset":5056,"count":0}],"isBlockCoverage":false},{"functionName":"get parentKey","ranges":[{"startOffset":5060,"endOffset":5118,"count":0}],"isBlockCoverage":false},{"functionName":"get shouldSkip","ranges":[{"startOffset":5122,"endOffset":5194,"count":146}],"isBlockCoverage":true},{"functionName":"set shouldSkip","ranges":[{"startOffset":5198,"endOffset":5338,"count":0}],"isBlockCoverage":false},{"functionName":"get shouldStop","ranges":[{"startOffset":5342,"endOffset":5414,"count":73}],"isBlockCoverage":true},{"functionName":"set shouldStop","ranges":[{"startOffset":5418,"endOffset":5558,"count":0}],"isBlockCoverage":false},{"functionName":"get removed","ranges":[{"startOffset":5562,"endOffset":5627,"count":73}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":5631,"endOffset":5760,"count":0}],"isBlockCoverage":false},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6142,"endOffset":6195,"count":45}],"isBlockCoverage":true},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6238,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6580,"endOffset":6647,"count":163}],"isBlockCoverage":true}]},{"scriptId":"656","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/lib/virtual-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5492,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":569,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":757,"endOffset":1500,"count":1},{"startOffset":839,"endOffset":912,"count":0},{"startOffset":914,"endOffset":1010,"count":0},{"startOffset":1012,"endOffset":1140,"count":0},{"startOffset":1163,"endOffset":1499,"count":0}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":1578,"endOffset":1956,"count":11},{"startOffset":1690,"endOffset":1731,"count":0},{"startOffset":1733,"endOffset":1886,"count":0}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":2085,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":2325,"endOffset":2520,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":2619,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3061,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3307,"endOffset":3374,"count":158}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":3425,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3559,"endOffset":3619,"count":44}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":3710,"endOffset":3762,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3803,"endOffset":3865,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3913,"endOffset":3961,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4014,"endOffset":4088,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4212,"endOffset":4650,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4728,"endOffset":4814,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4910,"endOffset":4999,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":5378,"endOffset":5441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19257,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1564,"endOffset":1613,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1715,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1881,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2027,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2171,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2305,"endOffset":2353,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2427,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2549,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2685,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2827,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2960,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3089,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3228,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3378,"endOffset":3439,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3524,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3671,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3816,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3949,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4091,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4229,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4357,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4490,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4622,"endOffset":4673,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4752,"endOffset":4801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4890,"endOffset":4949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5029,"endOffset":5079,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5159,"endOffset":5209,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5302,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5442,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5583,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5732,"endOffset":5787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5876,"endOffset":5935,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6024,"endOffset":6083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6173,"endOffset":6233,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6328,"endOffset":6393,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6470,"endOffset":6517,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6598,"endOffset":6649,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6730,"endOffset":6781,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6852,"endOffset":6893,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6971,"endOffset":7019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7101,"endOffset":7153,"count":44}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7233,"endOffset":7283,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7357,"endOffset":7401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7476,"endOffset":7521,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7607,"endOffset":7663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7749,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7886,"endOffset":7937,"count":11}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8013,"endOffset":8059,"count":158}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8146,"endOffset":8203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8278,"endOffset":8323,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8412,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8557,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8687,"endOffset":8731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8814,"endOffset":8867,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8944,"endOffset":8991,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9086,"endOffset":9151,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9612,"endOffset":9951,"count":292},{"startOffset":9678,"endOffset":9685,"count":0},{"startOffset":9749,"endOffset":9756,"count":0},{"startOffset":9778,"endOffset":9813,"count":0},{"startOffset":9815,"endOffset":9822,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9894,"endOffset":9943,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10370,"endOffset":10711,"count":325},{"startOffset":10436,"endOffset":10443,"count":0},{"startOffset":10507,"endOffset":10514,"count":0},{"startOffset":10536,"endOffset":10572,"count":0},{"startOffset":10574,"endOffset":10581,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10653,"endOffset":10703,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10808,"endOffset":11147,"count":247},{"startOffset":10874,"endOffset":10881,"count":0},{"startOffset":10945,"endOffset":10952,"count":0},{"startOffset":10974,"endOffset":11009,"count":0},{"startOffset":11011,"endOffset":11018,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11090,"endOffset":11139,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12252,"endOffset":12593,"count":45},{"startOffset":12318,"endOffset":12325,"count":0},{"startOffset":12389,"endOffset":12396,"count":0},{"startOffset":12418,"endOffset":12454,"count":0},{"startOffset":12456,"endOffset":12463,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12535,"endOffset":12585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12671,"endOffset":13010,"count":20},{"startOffset":12737,"endOffset":12744,"count":0},{"startOffset":12808,"endOffset":12815,"count":0},{"startOffset":12837,"endOffset":12872,"count":0},{"startOffset":12874,"endOffset":12881,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12953,"endOffset":13002,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13944,"endOffset":14287,"count":11},{"startOffset":14010,"endOffset":14017,"count":0},{"startOffset":14081,"endOffset":14088,"count":0},{"startOffset":14110,"endOffset":14147,"count":0},{"startOffset":14149,"endOffset":14156,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14228,"endOffset":14279,"count":294}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15211,"endOffset":15548,"count":1},{"startOffset":15252,"endOffset":15275,"count":0},{"startOffset":15284,"endOffset":15411,"count":0},{"startOffset":15413,"endOffset":15547,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":15492,"endOffset":15540,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17286,"endOffset":17627,"count":292},{"startOffset":17352,"endOffset":17359,"count":0},{"startOffset":17423,"endOffset":17430,"count":1},{"startOffset":17430,"endOffset":17452,"count":291},{"startOffset":17452,"endOffset":17488,"count":0},{"startOffset":17490,"endOffset":17497,"count":0},{"startOffset":17497,"endOffset":17626,"count":291}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17569,"endOffset":17619,"count":602}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17717,"endOffset":18058,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":18062,"endOffset":18248,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":18250,"endOffset":18993,"count":1},{"startOffset":18332,"endOffset":18405,"count":0},{"startOffset":18407,"endOffset":18503,"count":0},{"startOffset":18505,"endOffset":18633,"count":0},{"startOffset":18656,"endOffset":18992,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":18995,"endOffset":19090,"count":57},{"startOffset":19069,"endOffset":19087,"count":0}],"isBlockCoverage":true}]},{"scriptId":"658","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/react/isReactComponent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":208,"endOffset":303,"count":1},{"startOffset":282,"endOffset":300,"count":0}],"isBlockCoverage":true}]},{"scriptId":"659","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"buildMatchMemberExpression","ranges":[{"startOffset":300,"endOffset":472,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/matchesPattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1002,"count":1}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":157,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116826,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":14177,"endOffset":14272,"count":1},{"startOffset":14251,"endOffset":14269,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayExpression","ranges":[{"startOffset":14274,"endOffset":14565,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":14567,"endOffset":14868,"count":12},{"startOffset":14626,"endOffset":14639,"count":1},{"startOffset":14639,"endOffset":14714,"count":11},{"startOffset":14714,"endOffset":14849,"count":0},{"startOffset":14849,"endOffset":14867,"count":11}],"isBlockCoverage":true},{"functionName":"isBinaryExpression","ranges":[{"startOffset":14870,"endOffset":15163,"count":0}],"isBlockCoverage":false},{"functionName":"isInterpreterDirective","ranges":[{"startOffset":15165,"endOffset":15466,"count":0}],"isBlockCoverage":false},{"functionName":"isDirective","ranges":[{"startOffset":15468,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectiveLiteral","ranges":[{"startOffset":15749,"endOffset":16042,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":16044,"endOffset":16333,"count":158},{"startOffset":16097,"endOffset":16110,"count":0},{"startOffset":16179,"endOffset":16314,"count":0}],"isBlockCoverage":true},{"functionName":"isBreakStatement","ranges":[{"startOffset":16335,"endOffset":16624,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":16626,"endOffset":16915,"count":19},{"startOffset":16679,"endOffset":16692,"count":1},{"startOffset":16692,"endOffset":16761,"count":18},{"startOffset":16761,"endOffset":16896,"count":7},{"startOffset":16826,"endOffset":16892,"count":0},{"startOffset":16896,"endOffset":16914,"count":11}],"isBlockCoverage":true},{"functionName":"isCatchClause","ranges":[{"startOffset":16917,"endOffset":17200,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExpression","ranges":[{"startOffset":17202,"endOffset":17505,"count":0}],"isBlockCoverage":false},{"functionName":"isContinueStatement","ranges":[{"startOffset":17507,"endOffset":17802,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":17804,"endOffset":18099,"count":0}],"isBlockCoverage":false},{"functionName":"isDoWhileStatement","ranges":[{"startOffset":18101,"endOffset":18394,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":18396,"endOffset":18685,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionStatement","ranges":[{"startOffset":18687,"endOffset":18986,"count":10},{"startOffset":18745,"endOffset":18758,"count":0},{"startOffset":18832,"endOffset":18967,"count":2},{"startOffset":18897,"endOffset":18963,"count":0},{"startOffset":18967,"endOffset":18985,"count":8}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":18988,"endOffset":19257,"count":45},{"startOffset":19031,"endOffset":19044,"count":0},{"startOffset":19103,"endOffset":19238,"count":7},{"startOffset":19168,"endOffset":19234,"count":0},{"startOffset":19238,"endOffset":19256,"count":38}],"isBlockCoverage":true},{"functionName":"isForInStatement","ranges":[{"startOffset":19259,"endOffset":19548,"count":0}],"isBlockCoverage":false},{"functionName":"isForStatement","ranges":[{"startOffset":19550,"endOffset":19835,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":19837,"endOffset":20136,"count":54},{"startOffset":19895,"endOffset":19908,"count":0},{"startOffset":19982,"endOffset":20117,"count":0}],"isBlockCoverage":true},{"functionName":"isFunctionExpression","ranges":[{"startOffset":20138,"endOffset":20435,"count":5},{"startOffset":20195,"endOffset":20208,"count":0},{"startOffset":20281,"endOffset":20416,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifier","ranges":[{"startOffset":20437,"endOffset":20718,"count":47},{"startOffset":20486,"endOffset":20499,"count":1},{"startOffset":20499,"endOffset":20564,"count":46},{"startOffset":20564,"endOffset":20699,"count":26},{"startOffset":20629,"endOffset":20695,"count":0},{"startOffset":20699,"endOffset":20717,"count":20}],"isBlockCoverage":true},{"functionName":"isIfStatement","ranges":[{"startOffset":20720,"endOffset":21003,"count":0}],"isBlockCoverage":false},{"functionName":"isLabeledStatement","ranges":[{"startOffset":21005,"endOffset":21298,"count":5},{"startOffset":21060,"endOffset":21073,"count":0},{"startOffset":21144,"endOffset":21279,"count":0}],"isBlockCoverage":true},{"functionName":"isStringLiteral","ranges":[{"startOffset":21300,"endOffset":21587,"count":1},{"startOffset":21352,"endOffset":21365,"count":0},{"startOffset":21498,"endOffset":21564,"count":0},{"startOffset":21568,"endOffset":21586,"count":0}],"isBlockCoverage":true},{"functionName":"isNumericLiteral","ranges":[{"startOffset":21589,"endOffset":21878,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteral","ranges":[{"startOffset":21880,"endOffset":22163,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":22165,"endOffset":22454,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpLiteral","ranges":[{"startOffset":22456,"endOffset":22743,"count":0}],"isBlockCoverage":false},{"functionName":"isLogicalExpression","ranges":[{"startOffset":22745,"endOffset":23040,"count":0}],"isBlockCoverage":false},{"functionName":"isMemberExpression","ranges":[{"startOffset":23042,"endOffset":23335,"count":33},{"startOffset":23097,"endOffset":23110,"count":1},{"startOffset":23110,"endOffset":23181,"count":32},{"startOffset":23181,"endOffset":23316,"count":2},{"startOffset":23246,"endOffset":23312,"count":0},{"startOffset":23316,"endOffset":23334,"count":30}],"isBlockCoverage":true},{"functionName":"isNewExpression","ranges":[{"startOffset":23337,"endOffset":23624,"count":46},{"startOffset":23389,"endOffset":23402,"count":0},{"startOffset":23470,"endOffset":23605,"count":0}],"isBlockCoverage":true},{"functionName":"isProgram","ranges":[{"startOffset":23626,"endOffset":23901,"count":65},{"startOffset":23672,"endOffset":23685,"count":0},{"startOffset":23747,"endOffset":23882,"count":20},{"startOffset":23812,"endOffset":23878,"count":0},{"startOffset":23882,"endOffset":23900,"count":45}],"isBlockCoverage":true},{"functionName":"isObjectExpression","ranges":[{"startOffset":23903,"endOffset":24196,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMethod","ranges":[{"startOffset":24198,"endOffset":24483,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":24485,"endOffset":24774,"count":0}],"isBlockCoverage":false},{"functionName":"isRestElement","ranges":[{"startOffset":24776,"endOffset":25059,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":25061,"endOffset":25352,"count":0}],"isBlockCoverage":false},{"functionName":"isSequenceExpression","ranges":[{"startOffset":25354,"endOffset":25651,"count":0}],"isBlockCoverage":false},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":25653,"endOffset":25960,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchCase","ranges":[{"startOffset":25962,"endOffset":26243,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":26245,"endOffset":26536,"count":0}],"isBlockCoverage":false},{"functionName":"isThisExpression","ranges":[{"startOffset":26538,"endOffset":26827,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":26829,"endOffset":27118,"count":0}],"isBlockCoverage":false},{"functionName":"isTryStatement","ranges":[{"startOffset":27120,"endOffset":27405,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryExpression","ranges":[{"startOffset":27407,"endOffset":27698,"count":0}],"isBlockCoverage":false},{"functionName":"isUpdateExpression","ranges":[{"startOffset":27700,"endOffset":27993,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":27995,"endOffset":28294,"count":54},{"startOffset":28053,"endOffset":28066,"count":0},{"startOffset":28140,"endOffset":28275,"count":12},{"startOffset":28205,"endOffset":28271,"count":0},{"startOffset":28275,"endOffset":28293,"count":42}],"isBlockCoverage":true},{"functionName":"isVariableDeclarator","ranges":[{"startOffset":28296,"endOffset":28593,"count":0}],"isBlockCoverage":false},{"functionName":"isWhileStatement","ranges":[{"startOffset":28595,"endOffset":28884,"count":0}],"isBlockCoverage":false},{"functionName":"isWithStatement","ranges":[{"startOffset":28886,"endOffset":29173,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":29175,"endOffset":29470,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayPattern","ranges":[{"startOffset":29472,"endOffset":29757,"count":0}],"isBlockCoverage":false},{"functionName":"isArrowFunctionExpression","ranges":[{"startOffset":29759,"endOffset":30066,"count":0}],"isBlockCoverage":false},{"functionName":"isClassBody","ranges":[{"startOffset":30068,"endOffset":30347,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":30349,"endOffset":30640,"count":1},{"startOffset":30403,"endOffset":30416,"count":0},{"startOffset":30486,"endOffset":30621,"count":0}],"isBlockCoverage":true},{"functionName":"isClassDeclaration","ranges":[{"startOffset":30642,"endOffset":30935,"count":50},{"startOffset":30697,"endOffset":30710,"count":0},{"startOffset":30781,"endOffset":30916,"count":0}],"isBlockCoverage":true},{"functionName":"isExportAllDeclaration","ranges":[{"startOffset":30937,"endOffset":31238,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultDeclaration","ranges":[{"startOffset":31240,"endOffset":31549,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamedDeclaration","ranges":[{"startOffset":31551,"endOffset":31856,"count":0}],"isBlockCoverage":false},{"functionName":"isExportSpecifier","ranges":[{"startOffset":31858,"endOffset":32149,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":32151,"endOffset":32440,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":32442,"endOffset":32737,"count":1},{"startOffset":32498,"endOffset":32511,"count":0},{"startOffset":32648,"endOffset":32714,"count":0},{"startOffset":32718,"endOffset":32736,"count":0}],"isBlockCoverage":true},{"functionName":"isImportDefaultSpecifier","ranges":[{"startOffset":32739,"endOffset":33044,"count":1},{"startOffset":32800,"endOffset":32813,"count":0},{"startOffset":32890,"endOffset":33025,"count":0}],"isBlockCoverage":true},{"functionName":"isImportNamespaceSpecifier","ranges":[{"startOffset":33046,"endOffset":33355,"count":1},{"startOffset":33109,"endOffset":33122,"count":0},{"startOffset":33201,"endOffset":33336,"count":0}],"isBlockCoverage":true},{"functionName":"isImportSpecifier","ranges":[{"startOffset":33357,"endOffset":33648,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":33650,"endOffset":33935,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":33937,"endOffset":34220,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectPattern","ranges":[{"startOffset":34222,"endOffset":34509,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadElement","ranges":[{"startOffset":34511,"endOffset":34798,"count":0}],"isBlockCoverage":false},{"functionName":"isSuper","ranges":[{"startOffset":34800,"endOffset":35071,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":35073,"endOffset":35382,"count":1},{"startOffset":35136,"endOffset":35149,"count":0},{"startOffset":35228,"endOffset":35363,"count":0}],"isBlockCoverage":true},{"functionName":"isTemplateElement","ranges":[{"startOffset":35384,"endOffset":35675,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":35677,"endOffset":35968,"count":0}],"isBlockCoverage":false},{"functionName":"isYieldExpression","ranges":[{"startOffset":35970,"endOffset":36261,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":36263,"endOffset":36554,"count":1},{"startOffset":36317,"endOffset":36330,"count":0},{"startOffset":36400,"endOffset":36535,"count":0}],"isBlockCoverage":true},{"functionName":"isImport","ranges":[{"startOffset":36556,"endOffset":36829,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":36831,"endOffset":37118,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceSpecifier","ranges":[{"startOffset":37120,"endOffset":37429,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalMemberExpression","ranges":[{"startOffset":37431,"endOffset":37740,"count":9},{"startOffset":37494,"endOffset":37507,"count":0},{"startOffset":37586,"endOffset":37721,"count":0}],"isBlockCoverage":true},{"functionName":"isOptionalCallExpression","ranges":[{"startOffset":37742,"endOffset":38047,"count":6},{"startOffset":37803,"endOffset":37816,"count":0},{"startOffset":37893,"endOffset":38028,"count":0}],"isBlockCoverage":true},{"functionName":"isAnyTypeAnnotation","ranges":[{"startOffset":38049,"endOffset":38344,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeAnnotation","ranges":[{"startOffset":38346,"endOffset":38645,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanTypeAnnotation","ranges":[{"startOffset":38647,"endOffset":38950,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteralTypeAnnotation","ranges":[{"startOffset":38952,"endOffset":39269,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteralTypeAnnotation","ranges":[{"startOffset":39271,"endOffset":39582,"count":0}],"isBlockCoverage":false},{"functionName":"isClassImplements","ranges":[{"startOffset":39584,"endOffset":39875,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareClass","ranges":[{"startOffset":39877,"endOffset":40162,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareFunction","ranges":[{"startOffset":40164,"endOffset":40455,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareInterface","ranges":[{"startOffset":40457,"endOffset":40750,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModule","ranges":[{"startOffset":40752,"endOffset":41039,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModuleExports","ranges":[{"startOffset":41041,"endOffset":41342,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareTypeAlias","ranges":[{"startOffset":41344,"endOffset":41637,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareOpaqueType","ranges":[{"startOffset":41639,"endOffset":41934,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareVariable","ranges":[{"startOffset":41936,"endOffset":42227,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportDeclaration","ranges":[{"startOffset":42229,"endOffset":42538,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportAllDeclaration","ranges":[{"startOffset":42540,"endOffset":42855,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaredPredicate","ranges":[{"startOffset":42857,"endOffset":43152,"count":0}],"isBlockCoverage":false},{"functionName":"isExistsTypeAnnotation","ranges":[{"startOffset":43154,"endOffset":43455,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeAnnotation","ranges":[{"startOffset":43457,"endOffset":43762,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeParam","ranges":[{"startOffset":43764,"endOffset":44059,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericTypeAnnotation","ranges":[{"startOffset":44061,"endOffset":44364,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredPredicate","ranges":[{"startOffset":44366,"endOffset":44661,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceExtends","ranges":[{"startOffset":44663,"endOffset":44956,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":44958,"endOffset":45259,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceTypeAnnotation","ranges":[{"startOffset":45261,"endOffset":45568,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeAnnotation","ranges":[{"startOffset":45570,"endOffset":45883,"count":0}],"isBlockCoverage":false},{"functionName":"isMixedTypeAnnotation","ranges":[{"startOffset":45885,"endOffset":46184,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyTypeAnnotation","ranges":[{"startOffset":46186,"endOffset":46485,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableTypeAnnotation","ranges":[{"startOffset":46487,"endOffset":46792,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteralTypeAnnotation","ranges":[{"startOffset":46794,"endOffset":47109,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberTypeAnnotation","ranges":[{"startOffset":47111,"endOffset":47412,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeAnnotation","ranges":[{"startOffset":47414,"endOffset":47715,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeInternalSlot","ranges":[{"startOffset":47717,"endOffset":48022,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeCallProperty","ranges":[{"startOffset":48024,"endOffset":48329,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeIndexer","ranges":[{"startOffset":48331,"endOffset":48626,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeProperty","ranges":[{"startOffset":48628,"endOffset":48925,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeSpreadProperty","ranges":[{"startOffset":48927,"endOffset":49236,"count":0}],"isBlockCoverage":false},{"functionName":"isOpaqueType","ranges":[{"startOffset":49238,"endOffset":49519,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedTypeIdentifier","ranges":[{"startOffset":49521,"endOffset":49828,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralTypeAnnotation","ranges":[{"startOffset":49830,"endOffset":50145,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTypeAnnotation","ranges":[{"startOffset":50147,"endOffset":50448,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolTypeAnnotation","ranges":[{"startOffset":50450,"endOffset":50751,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotation","ranges":[{"startOffset":50753,"endOffset":51050,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeAnnotation","ranges":[{"startOffset":51052,"endOffset":51351,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeofTypeAnnotation","ranges":[{"startOffset":51353,"endOffset":51654,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":51656,"endOffset":51935,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotation","ranges":[{"startOffset":51937,"endOffset":52226,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeCastExpression","ranges":[{"startOffset":52228,"endOffset":52525,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":52527,"endOffset":52814,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":52816,"endOffset":53125,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterInstantiation","ranges":[{"startOffset":53127,"endOffset":53440,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeAnnotation","ranges":[{"startOffset":53442,"endOffset":53741,"count":0}],"isBlockCoverage":false},{"functionName":"isVariance","ranges":[{"startOffset":53743,"endOffset":54020,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidTypeAnnotation","ranges":[{"startOffset":54022,"endOffset":54319,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":54321,"endOffset":54612,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanBody","ranges":[{"startOffset":54614,"endOffset":54905,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberBody","ranges":[{"startOffset":54907,"endOffset":55196,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringBody","ranges":[{"startOffset":55198,"endOffset":55487,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumSymbolBody","ranges":[{"startOffset":55489,"endOffset":55778,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanMember","ranges":[{"startOffset":55780,"endOffset":56075,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberMember","ranges":[{"startOffset":56077,"endOffset":56370,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringMember","ranges":[{"startOffset":56372,"endOffset":56665,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDefaultedMember","ranges":[{"startOffset":56667,"endOffset":56966,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXAttribute","ranges":[{"startOffset":56968,"endOffset":57253,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingElement","ranges":[{"startOffset":57255,"endOffset":57550,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXElement","ranges":[{"startOffset":57552,"endOffset":57833,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXEmptyExpression","ranges":[{"startOffset":57835,"endOffset":58132,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXExpressionContainer","ranges":[{"startOffset":58134,"endOffset":58439,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadChild","ranges":[{"startOffset":58441,"endOffset":58730,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXIdentifier","ranges":[{"startOffset":58732,"endOffset":59019,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXMemberExpression","ranges":[{"startOffset":59021,"endOffset":59320,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXNamespacedName","ranges":[{"startOffset":59322,"endOffset":59617,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningElement","ranges":[{"startOffset":59619,"endOffset":59914,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadAttribute","ranges":[{"startOffset":59916,"endOffset":60213,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXText","ranges":[{"startOffset":60215,"endOffset":60490,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXFragment","ranges":[{"startOffset":60492,"endOffset":60775,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningFragment","ranges":[{"startOffset":60777,"endOffset":61074,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingFragment","ranges":[{"startOffset":61076,"endOffset":61373,"count":0}],"isBlockCoverage":false},{"functionName":"isNoop","ranges":[{"startOffset":61375,"endOffset":61644,"count":0}],"isBlockCoverage":false},{"functionName":"isPlaceholder","ranges":[{"startOffset":61646,"endOffset":61929,"count":0}],"isBlockCoverage":false},{"functionName":"isV8IntrinsicIdentifier","ranges":[{"startOffset":61931,"endOffset":62234,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentPlaceholder","ranges":[{"startOffset":62236,"endOffset":62535,"count":0}],"isBlockCoverage":false},{"functionName":"isBindExpression","ranges":[{"startOffset":62537,"endOffset":62826,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":62828,"endOffset":63115,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineTopicExpression","ranges":[{"startOffset":63117,"endOffset":63424,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineBareFunction","ranges":[{"startOffset":63426,"endOffset":63727,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelinePrimaryTopicReference","ranges":[{"startOffset":63729,"endOffset":64048,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateProperty","ranges":[{"startOffset":64050,"endOffset":64351,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateMethod","ranges":[{"startOffset":64353,"endOffset":64650,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":64652,"endOffset":64943,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":64945,"endOffset":65224,"count":0}],"isBlockCoverage":false},{"functionName":"isDoExpression","ranges":[{"startOffset":65226,"endOffset":65511,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":65513,"endOffset":65818,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":65820,"endOffset":66103,"count":0}],"isBlockCoverage":false},{"functionName":"isRecordExpression","ranges":[{"startOffset":66105,"endOffset":66398,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleExpression","ranges":[{"startOffset":66400,"endOffset":66691,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalLiteral","ranges":[{"startOffset":66693,"endOffset":66982,"count":0}],"isBlockCoverage":false},{"functionName":"isStaticBlock","ranges":[{"startOffset":66984,"endOffset":67267,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleExpression","ranges":[{"startOffset":67269,"endOffset":67562,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParameterProperty","ranges":[{"startOffset":67564,"endOffset":67863,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareFunction","ranges":[{"startOffset":67865,"endOffset":68160,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareMethod","ranges":[{"startOffset":68162,"endOffset":68453,"count":0}],"isBlockCoverage":false},{"functionName":"isTSQualifiedName","ranges":[{"startOffset":68455,"endOffset":68746,"count":0}],"isBlockCoverage":false},{"functionName":"isTSCallSignatureDeclaration","ranges":[{"startOffset":68748,"endOffset":69061,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructSignatureDeclaration","ranges":[{"startOffset":69063,"endOffset":69386,"count":0}],"isBlockCoverage":false},{"functionName":"isTSPropertySignature","ranges":[{"startOffset":69388,"endOffset":69687,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMethodSignature","ranges":[{"startOffset":69689,"endOffset":69984,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexSignature","ranges":[{"startOffset":69986,"endOffset":70279,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAnyKeyword","ranges":[{"startOffset":70281,"endOffset":70566,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBooleanKeyword","ranges":[{"startOffset":70568,"endOffset":70861,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBigIntKeyword","ranges":[{"startOffset":70863,"endOffset":71154,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntrinsicKeyword","ranges":[{"startOffset":71156,"endOffset":71453,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNeverKeyword","ranges":[{"startOffset":71455,"endOffset":71744,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNullKeyword","ranges":[{"startOffset":71746,"endOffset":72033,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNumberKeyword","ranges":[{"startOffset":72035,"endOffset":72326,"count":0}],"isBlockCoverage":false},{"functionName":"isTSObjectKeyword","ranges":[{"startOffset":72328,"endOffset":72619,"count":0}],"isBlockCoverage":false},{"functionName":"isTSStringKeyword","ranges":[{"startOffset":72621,"endOffset":72912,"count":0}],"isBlockCoverage":false},{"functionName":"isTSSymbolKeyword","ranges":[{"startOffset":72914,"endOffset":73205,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUndefinedKeyword","ranges":[{"startOffset":73207,"endOffset":73504,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnknownKeyword","ranges":[{"startOffset":73506,"endOffset":73799,"count":0}],"isBlockCoverage":false},{"functionName":"isTSVoidKeyword","ranges":[{"startOffset":73801,"endOffset":74088,"count":0}],"isBlockCoverage":false},{"functionName":"isTSThisType","ranges":[{"startOffset":74090,"endOffset":74371,"count":0}],"isBlockCoverage":false},{"functionName":"isTSFunctionType","ranges":[{"startOffset":74373,"endOffset":74662,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructorType","ranges":[{"startOffset":74664,"endOffset":74959,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeReference","ranges":[{"startOffset":74961,"endOffset":75252,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypePredicate","ranges":[{"startOffset":75254,"endOffset":75545,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeQuery","ranges":[{"startOffset":75547,"endOffset":75830,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeLiteral","ranges":[{"startOffset":75832,"endOffset":76119,"count":0}],"isBlockCoverage":false},{"functionName":"isTSArrayType","ranges":[{"startOffset":76121,"endOffset":76404,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTupleType","ranges":[{"startOffset":76406,"endOffset":76689,"count":0}],"isBlockCoverage":false},{"functionName":"isTSOptionalType","ranges":[{"startOffset":76691,"endOffset":76980,"count":0}],"isBlockCoverage":false},{"functionName":"isTSRestType","ranges":[{"startOffset":76982,"endOffset":77263,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamedTupleMember","ranges":[{"startOffset":77265,"endOffset":77562,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnionType","ranges":[{"startOffset":77564,"endOffset":77847,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntersectionType","ranges":[{"startOffset":77849,"endOffset":78146,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConditionalType","ranges":[{"startOffset":78148,"endOffset":78443,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInferType","ranges":[{"startOffset":78445,"endOffset":78728,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParenthesizedType","ranges":[{"startOffset":78730,"endOffset":79029,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeOperator","ranges":[{"startOffset":79031,"endOffset":79320,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexedAccessType","ranges":[{"startOffset":79322,"endOffset":79621,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMappedType","ranges":[{"startOffset":79623,"endOffset":79908,"count":0}],"isBlockCoverage":false},{"functionName":"isTSLiteralType","ranges":[{"startOffset":79910,"endOffset":80197,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExpressionWithTypeArguments","ranges":[{"startOffset":80199,"endOffset":80518,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceDeclaration","ranges":[{"startOffset":80520,"endOffset":80825,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceBody","ranges":[{"startOffset":80827,"endOffset":81118,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAliasDeclaration","ranges":[{"startOffset":81120,"endOffset":81425,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAsExpression","ranges":[{"startOffset":81427,"endOffset":81716,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAssertion","ranges":[{"startOffset":81718,"endOffset":82009,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumDeclaration","ranges":[{"startOffset":82011,"endOffset":82306,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumMember","ranges":[{"startOffset":82308,"endOffset":82593,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleDeclaration","ranges":[{"startOffset":82595,"endOffset":82894,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleBlock","ranges":[{"startOffset":82896,"endOffset":83183,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportType","ranges":[{"startOffset":83185,"endOffset":83470,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportEqualsDeclaration","ranges":[{"startOffset":83472,"endOffset":83783,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExternalModuleReference","ranges":[{"startOffset":83785,"endOffset":84096,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNonNullExpression","ranges":[{"startOffset":84098,"endOffset":84397,"count":1},{"startOffset":84156,"endOffset":84169,"count":0},{"startOffset":84243,"endOffset":84378,"count":0}],"isBlockCoverage":true},{"functionName":"isTSExportAssignment","ranges":[{"startOffset":84399,"endOffset":84696,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamespaceExportDeclaration","ranges":[{"startOffset":84698,"endOffset":85015,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAnnotation","ranges":[{"startOffset":85017,"endOffset":85310,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterInstantiation","ranges":[{"startOffset":85312,"endOffset":85629,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterDeclaration","ranges":[{"startOffset":85631,"endOffset":85944,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameter","ranges":[{"startOffset":85946,"endOffset":86237,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":86239,"endOffset":88233,"count":0}],"isBlockCoverage":false},{"functionName":"isBinary","ranges":[{"startOffset":88235,"endOffset":88554,"count":15},{"startOffset":88280,"endOffset":88293,"count":1},{"startOffset":88293,"endOffset":88363,"count":14},{"startOffset":88363,"endOffset":88398,"count":12},{"startOffset":88400,"endOffset":88535,"count":2},{"startOffset":88465,"endOffset":88531,"count":0},{"startOffset":88535,"endOffset":88553,"count":12}],"isBlockCoverage":true},{"functionName":"isScopable","ranges":[{"startOffset":88556,"endOffset":89512,"count":158},{"startOffset":88603,"endOffset":88616,"count":0},{"startOffset":88914,"endOffset":88944,"count":137},{"startOffset":88945,"endOffset":88978,"count":137},{"startOffset":88979,"endOffset":89011,"count":137},{"startOffset":89012,"endOffset":89053,"count":137},{"startOffset":89054,"endOffset":89087,"count":137},{"startOffset":89088,"endOffset":89122,"count":137},{"startOffset":89123,"endOffset":89155,"count":137},{"startOffset":89156,"endOffset":89185,"count":137},{"startOffset":89186,"endOffset":89222,"count":137},{"startOffset":89223,"endOffset":89252,"count":137},{"startOffset":89253,"endOffset":89284,"count":137},{"startOffset":89285,"endOffset":89356,"count":137},{"startOffset":89315,"endOffset":89356,"count":0},{"startOffset":89358,"endOffset":89493,"count":21},{"startOffset":89423,"endOffset":89489,"count":0},{"startOffset":89493,"endOffset":89511,"count":137}],"isBlockCoverage":true},{"functionName":"isBlockParent","ranges":[{"startOffset":89514,"endOffset":90404,"count":4},{"startOffset":89564,"endOffset":89577,"count":0},{"startOffset":89875,"endOffset":89905,"count":0},{"startOffset":89906,"endOffset":89939,"count":0},{"startOffset":89940,"endOffset":89972,"count":0},{"startOffset":89973,"endOffset":90014,"count":0},{"startOffset":90015,"endOffset":90047,"count":0},{"startOffset":90048,"endOffset":90077,"count":0},{"startOffset":90078,"endOffset":90114,"count":0},{"startOffset":90115,"endOffset":90144,"count":0},{"startOffset":90145,"endOffset":90176,"count":0},{"startOffset":90177,"endOffset":90248,"count":0},{"startOffset":90315,"endOffset":90381,"count":0},{"startOffset":90385,"endOffset":90403,"count":0}],"isBlockCoverage":true},{"functionName":"isBlock","ranges":[{"startOffset":90406,"endOffset":90816,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":90818,"endOffset":92907,"count":0}],"isBlockCoverage":false},{"functionName":"isTerminatorless","ranges":[{"startOffset":92909,"endOffset":93369,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionStatement","ranges":[{"startOffset":93371,"endOffset":93768,"count":0}],"isBlockCoverage":false},{"functionName":"isConditional","ranges":[{"startOffset":93770,"endOffset":94093,"count":0}],"isBlockCoverage":false},{"functionName":"isLoop","ranges":[{"startOffset":94095,"endOffset":94506,"count":0}],"isBlockCoverage":false},{"functionName":"isWhile","ranges":[{"startOffset":94508,"endOffset":94823,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWrapper","ranges":[{"startOffset":94825,"endOffset":95201,"count":0}],"isBlockCoverage":false},{"functionName":"isFor","ranges":[{"startOffset":95203,"endOffset":95545,"count":8},{"startOffset":95245,"endOffset":95258,"count":0},{"startOffset":95391,"endOffset":95526,"count":0}],"isBlockCoverage":true},{"functionName":"isForXStatement","ranges":[{"startOffset":95547,"endOffset":95868,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":95870,"endOffset":96335,"count":8},{"startOffset":95917,"endOffset":95930,"count":0},{"startOffset":96181,"endOffset":96316,"count":0}],"isBlockCoverage":true},{"functionName":"isFunctionParent","ranges":[{"startOffset":96337,"endOffset":96808,"count":1},{"startOffset":96390,"endOffset":96403,"count":0},{"startOffset":96654,"endOffset":96789,"count":0}],"isBlockCoverage":true},{"functionName":"isPureish","ranges":[{"startOffset":96810,"endOffset":97472,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":97474,"endOffset":98753,"count":0}],"isBlockCoverage":false},{"functionName":"isPatternLike","ranges":[{"startOffset":98755,"endOffset":99271,"count":0}],"isBlockCoverage":false},{"functionName":"isLVal","ranges":[{"startOffset":99273,"endOffset":99855,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEntityName","ranges":[{"startOffset":99857,"endOffset":100242,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":100244,"endOffset":100823,"count":2},{"startOffset":100290,"endOffset":100303,"count":0},{"startOffset":100627,"endOffset":100667,"count":0},{"startOffset":100669,"endOffset":100804,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":100825,"endOffset":101676,"count":0}],"isBlockCoverage":false},{"functionName":"isUserWhitespacable","ranges":[{"startOffset":101678,"endOffset":102199,"count":0}],"isBlockCoverage":false},{"functionName":"isMethod","ranges":[{"startOffset":102201,"endOffset":102547,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectMember","ranges":[{"startOffset":102549,"endOffset":102867,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":102869,"endOffset":103223,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryLike","ranges":[{"startOffset":103225,"endOffset":103542,"count":1},{"startOffset":103273,"endOffset":103286,"count":0},{"startOffset":103388,"endOffset":103523,"count":0}],"isBlockCoverage":true},{"functionName":"isPattern","ranges":[{"startOffset":103544,"endOffset":103957,"count":158},{"startOffset":103590,"endOffset":103603,"count":0},{"startOffset":103767,"endOffset":103801,"count":0},{"startOffset":103803,"endOffset":103938,"count":0}],"isBlockCoverage":true},{"functionName":"isClass","ranges":[{"startOffset":103959,"endOffset":104275,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":104277,"endOffset":104695,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":104697,"endOffset":105079,"count":6},{"startOffset":104753,"endOffset":104766,"count":0},{"startOffset":104925,"endOffset":105060,"count":0}],"isBlockCoverage":true},{"functionName":"isModuleSpecifier","ranges":[{"startOffset":105081,"endOffset":105574,"count":0}],"isBlockCoverage":false},{"functionName":"isFlow","ranges":[{"startOffset":105576,"endOffset":107883,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowType","ranges":[{"startOffset":107885,"endOffset":109101,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowBaseAnnotation","ranges":[{"startOffset":109103,"endOffset":109750,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowDeclaration","ranges":[{"startOffset":109752,"endOffset":110470,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowPredicate","ranges":[{"startOffset":110472,"endOffset":110799,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBody","ranges":[{"startOffset":110801,"endOffset":111184,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":111186,"endOffset":111582,"count":0}],"isBlockCoverage":false},{"functionName":"isJSX","ranges":[{"startOffset":111584,"endOffset":112345,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivate","ranges":[{"startOffset":112347,"endOffset":112702,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeElement","ranges":[{"startOffset":112704,"endOffset":113163,"count":0}],"isBlockCoverage":false},{"functionName":"isTSType","ranges":[{"startOffset":113165,"endOffset":114589,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBaseType","ranges":[{"startOffset":114591,"endOffset":115346,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":115348,"endOffset":115718,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexLiteral","ranges":[{"startOffset":115720,"endOffset":116086,"count":0}],"isBlockCoverage":false},{"functionName":"isRestProperty","ranges":[{"startOffset":116088,"endOffset":116452,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadProperty","ranges":[{"startOffset":116454,"endOffset":116826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/utils/shallowEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":310,"count":1}],"isBlockCoverage":true},{"functionName":"shallowEqual","ranges":[{"startOffset":113,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/react/isCompatTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"isCompatTag","ranges":[{"startOffset":112,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/react/buildChildren.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":857,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":289,"endOffset":384,"count":1},{"startOffset":363,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"buildChildren","ranges":[{"startOffset":386,"endOffset":857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"665","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"cleanJSXElementLiteralChild","ranges":[{"startOffset":183,"endOffset":1060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42323,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":13657,"endOffset":13752,"count":1},{"startOffset":13731,"endOffset":13749,"count":0}],"isBlockCoverage":true},{"functionName":"arrayExpression","ranges":[{"startOffset":13754,"endOffset":13857,"count":0}],"isBlockCoverage":false},{"functionName":"assignmentExpression","ranges":[{"startOffset":13859,"endOffset":13985,"count":0}],"isBlockCoverage":false},{"functionName":"binaryExpression","ranges":[{"startOffset":13987,"endOffset":14105,"count":0}],"isBlockCoverage":false},{"functionName":"interpreterDirective","ranges":[{"startOffset":14107,"endOffset":14217,"count":0}],"isBlockCoverage":false},{"functionName":"directive","ranges":[{"startOffset":14219,"endOffset":14307,"count":0}],"isBlockCoverage":false},{"functionName":"directiveLiteral","ranges":[{"startOffset":14309,"endOffset":14411,"count":0}],"isBlockCoverage":false},{"functionName":"blockStatement","ranges":[{"startOffset":14413,"endOffset":14522,"count":0}],"isBlockCoverage":false},{"functionName":"breakStatement","ranges":[{"startOffset":14524,"endOffset":14622,"count":0}],"isBlockCoverage":false},{"functionName":"callExpression","ranges":[{"startOffset":14624,"endOffset":14735,"count":0}],"isBlockCoverage":false},{"functionName":"catchClause","ranges":[{"startOffset":14737,"endOffset":14835,"count":0}],"isBlockCoverage":false},{"functionName":"conditionalExpression","ranges":[{"startOffset":14837,"endOffset":14971,"count":0}],"isBlockCoverage":false},{"functionName":"continueStatement","ranges":[{"startOffset":14973,"endOffset":15077,"count":0}],"isBlockCoverage":false},{"functionName":"debuggerStatement","ranges":[{"startOffset":15079,"endOffset":15178,"count":0}],"isBlockCoverage":false},{"functionName":"doWhileStatement","ranges":[{"startOffset":15180,"endOffset":15287,"count":0}],"isBlockCoverage":false},{"functionName":"emptyStatement","ranges":[{"startOffset":15289,"endOffset":15382,"count":0}],"isBlockCoverage":false},{"functionName":"expressionStatement","ranges":[{"startOffset":15384,"endOffset":15497,"count":0}],"isBlockCoverage":false},{"functionName":"file","ranges":[{"startOffset":15499,"endOffset":15597,"count":0}],"isBlockCoverage":false},{"functionName":"forInStatement","ranges":[{"startOffset":15599,"endOffset":15709,"count":0}],"isBlockCoverage":false},{"functionName":"forStatement","ranges":[{"startOffset":15711,"endOffset":15824,"count":0}],"isBlockCoverage":false},{"functionName":"functionDeclaration","ranges":[{"startOffset":15826,"endOffset":15963,"count":0}],"isBlockCoverage":false},{"functionName":"functionExpression","ranges":[{"startOffset":15965,"endOffset":16100,"count":0}],"isBlockCoverage":false},{"functionName":"identifier","ranges":[{"startOffset":16102,"endOffset":16191,"count":0}],"isBlockCoverage":false},{"functionName":"ifStatement","ranges":[{"startOffset":16193,"endOffset":16307,"count":0}],"isBlockCoverage":false},{"functionName":"labeledStatement","ranges":[{"startOffset":16309,"endOffset":16417,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteral","ranges":[{"startOffset":16419,"endOffset":16515,"count":0}],"isBlockCoverage":false},{"functionName":"numericLiteral","ranges":[{"startOffset":16517,"endOffset":16615,"count":0}],"isBlockCoverage":false},{"functionName":"nullLiteral","ranges":[{"startOffset":16617,"endOffset":16704,"count":0}],"isBlockCoverage":false},{"functionName":"booleanLiteral","ranges":[{"startOffset":16706,"endOffset":16804,"count":0}],"isBlockCoverage":false},{"functionName":"regExpLiteral","ranges":[{"startOffset":16806,"endOffset":16911,"count":0}],"isBlockCoverage":false},{"functionName":"logicalExpression","ranges":[{"startOffset":16913,"endOffset":17033,"count":0}],"isBlockCoverage":false},{"functionName":"memberExpression","ranges":[{"startOffset":17035,"endOffset":17168,"count":0}],"isBlockCoverage":false},{"functionName":"newExpression","ranges":[{"startOffset":17170,"endOffset":17279,"count":0}],"isBlockCoverage":false},{"functionName":"program","ranges":[{"startOffset":17281,"endOffset":17401,"count":0}],"isBlockCoverage":false},{"functionName":"objectExpression","ranges":[{"startOffset":17403,"endOffset":17510,"count":0}],"isBlockCoverage":false},{"functionName":"objectMethod","ranges":[{"startOffset":17512,"endOffset":17652,"count":0}],"isBlockCoverage":false},{"functionName":"objectProperty","ranges":[{"startOffset":17654,"endOffset":17790,"count":0}],"isBlockCoverage":false},{"functionName":"restElement","ranges":[{"startOffset":17792,"endOffset":17887,"count":0}],"isBlockCoverage":false},{"functionName":"returnStatement","ranges":[{"startOffset":17889,"endOffset":17992,"count":0}],"isBlockCoverage":false},{"functionName":"sequenceExpression","ranges":[{"startOffset":17994,"endOffset":18106,"count":0}],"isBlockCoverage":false},{"functionName":"parenthesizedExpression","ranges":[{"startOffset":18108,"endOffset":18229,"count":0}],"isBlockCoverage":false},{"functionName":"switchCase","ranges":[{"startOffset":18231,"endOffset":18332,"count":0}],"isBlockCoverage":false},{"functionName":"switchStatement","ranges":[{"startOffset":18334,"endOffset":18448,"count":0}],"isBlockCoverage":false},{"functionName":"thisExpression","ranges":[{"startOffset":18450,"endOffset":18543,"count":0}],"isBlockCoverage":false},{"functionName":"throwStatement","ranges":[{"startOffset":18545,"endOffset":18646,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatement","ranges":[{"startOffset":18648,"endOffset":18762,"count":0}],"isBlockCoverage":false},{"functionName":"unaryExpression","ranges":[{"startOffset":18764,"endOffset":18885,"count":0}],"isBlockCoverage":false},{"functionName":"updateExpression","ranges":[{"startOffset":18887,"endOffset":19010,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclaration","ranges":[{"startOffset":19012,"endOffset":19133,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclarator","ranges":[{"startOffset":19135,"endOffset":19244,"count":0}],"isBlockCoverage":false},{"functionName":"whileStatement","ranges":[{"startOffset":19246,"endOffset":19349,"count":0}],"isBlockCoverage":false},{"functionName":"withStatement","ranges":[{"startOffset":19351,"endOffset":19454,"count":0}],"isBlockCoverage":false},{"functionName":"assignmentPattern","ranges":[{"startOffset":19456,"endOffset":19566,"count":0}],"isBlockCoverage":false},{"functionName":"arrayPattern","ranges":[{"startOffset":19568,"endOffset":19665,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionExpression","ranges":[{"startOffset":19667,"endOffset":19797,"count":0}],"isBlockCoverage":false},{"functionName":"classBody","ranges":[{"startOffset":19799,"endOffset":19886,"count":0}],"isBlockCoverage":false},{"functionName":"classExpression","ranges":[{"startOffset":19888,"endOffset":20015,"count":0}],"isBlockCoverage":false},{"functionName":"classDeclaration","ranges":[{"startOffset":20017,"endOffset":20146,"count":0}],"isBlockCoverage":false},{"functionName":"exportAllDeclaration","ranges":[{"startOffset":20148,"endOffset":20259,"count":0}],"isBlockCoverage":false},{"functionName":"exportDefaultDeclaration","ranges":[{"startOffset":20261,"endOffset":20385,"count":0}],"isBlockCoverage":false},{"functionName":"exportNamedDeclaration","ranges":[{"startOffset":20387,"endOffset":20527,"count":0}],"isBlockCoverage":false},{"functionName":"exportSpecifier","ranges":[{"startOffset":20529,"endOffset":20639,"count":0}],"isBlockCoverage":false},{"functionName":"forOfStatement","ranges":[{"startOffset":20641,"endOffset":20759,"count":0}],"isBlockCoverage":false},{"functionName":"importDeclaration","ranges":[{"startOffset":20761,"endOffset":20878,"count":0}],"isBlockCoverage":false},{"functionName":"importDefaultSpecifier","ranges":[{"startOffset":20880,"endOffset":20994,"count":0}],"isBlockCoverage":false},{"functionName":"importNamespaceSpecifier","ranges":[{"startOffset":20996,"endOffset":21114,"count":0}],"isBlockCoverage":false},{"functionName":"importSpecifier","ranges":[{"startOffset":21116,"endOffset":21226,"count":0}],"isBlockCoverage":false},{"functionName":"metaProperty","ranges":[{"startOffset":21228,"endOffset":21331,"count":0}],"isBlockCoverage":false},{"functionName":"classMethod","ranges":[{"startOffset":21333,"endOffset":21480,"count":0}],"isBlockCoverage":false},{"functionName":"objectPattern","ranges":[{"startOffset":21482,"endOffset":21583,"count":0}],"isBlockCoverage":false},{"functionName":"spreadElement","ranges":[{"startOffset":21585,"endOffset":21684,"count":0}],"isBlockCoverage":false},{"functionName":"_super","ranges":[{"startOffset":21686,"endOffset":21762,"count":0}],"isBlockCoverage":false},{"functionName":"taggedTemplateExpression","ranges":[{"startOffset":21764,"endOffset":21887,"count":0}],"isBlockCoverage":false},{"functionName":"templateElement","ranges":[{"startOffset":21889,"endOffset":21995,"count":0}],"isBlockCoverage":false},{"functionName":"templateLiteral","ranges":[{"startOffset":21997,"endOffset":22111,"count":0}],"isBlockCoverage":false},{"functionName":"yieldExpression","ranges":[{"startOffset":22113,"endOffset":22226,"count":0}],"isBlockCoverage":false},{"functionName":"awaitExpression","ranges":[{"startOffset":22228,"endOffset":22331,"count":0}],"isBlockCoverage":false},{"functionName":"_import","ranges":[{"startOffset":22333,"endOffset":22411,"count":0}],"isBlockCoverage":false},{"functionName":"bigIntLiteral","ranges":[{"startOffset":22413,"endOffset":22509,"count":0}],"isBlockCoverage":false},{"functionName":"exportNamespaceSpecifier","ranges":[{"startOffset":22511,"endOffset":22632,"count":0}],"isBlockCoverage":false},{"functionName":"optionalMemberExpression","ranges":[{"startOffset":22634,"endOffset":22783,"count":0}],"isBlockCoverage":false},{"functionName":"optionalCallExpression","ranges":[{"startOffset":22785,"endOffset":22922,"count":0}],"isBlockCoverage":false},{"functionName":"anyTypeAnnotation","ranges":[{"startOffset":22924,"endOffset":23023,"count":0}],"isBlockCoverage":false},{"functionName":"arrayTypeAnnotation","ranges":[{"startOffset":23025,"endOffset":23139,"count":0}],"isBlockCoverage":false},{"functionName":"booleanTypeAnnotation","ranges":[{"startOffset":23141,"endOffset":23248,"count":0}],"isBlockCoverage":false},{"functionName":"booleanLiteralTypeAnnotation","ranges":[{"startOffset":23250,"endOffset":23376,"count":0}],"isBlockCoverage":false},{"functionName":"nullLiteralTypeAnnotation","ranges":[{"startOffset":23378,"endOffset":23493,"count":0}],"isBlockCoverage":false},{"functionName":"classImplements","ranges":[{"startOffset":23495,"endOffset":23608,"count":0}],"isBlockCoverage":false},{"functionName":"declareClass","ranges":[{"startOffset":23610,"endOffset":23733,"count":0}],"isBlockCoverage":false},{"functionName":"declareFunction","ranges":[{"startOffset":23735,"endOffset":23832,"count":0}],"isBlockCoverage":false},{"functionName":"declareInterface","ranges":[{"startOffset":23834,"endOffset":23965,"count":0}],"isBlockCoverage":false},{"functionName":"declareModule","ranges":[{"startOffset":23967,"endOffset":24072,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleExports","ranges":[{"startOffset":24074,"endOffset":24193,"count":0}],"isBlockCoverage":false},{"functionName":"declareTypeAlias","ranges":[{"startOffset":24195,"endOffset":24317,"count":0}],"isBlockCoverage":false},{"functionName":"declareOpaqueType","ranges":[{"startOffset":24319,"endOffset":24447,"count":0}],"isBlockCoverage":false},{"functionName":"declareVariable","ranges":[{"startOffset":24449,"endOffset":24546,"count":0}],"isBlockCoverage":false},{"functionName":"declareExportDeclaration","ranges":[{"startOffset":24548,"endOffset":24692,"count":0}],"isBlockCoverage":false},{"functionName":"declareExportAllDeclaration","ranges":[{"startOffset":24694,"endOffset":24819,"count":0}],"isBlockCoverage":false},{"functionName":"declaredPredicate","ranges":[{"startOffset":24821,"endOffset":24925,"count":0}],"isBlockCoverage":false},{"functionName":"existsTypeAnnotation","ranges":[{"startOffset":24927,"endOffset":25032,"count":0}],"isBlockCoverage":false},{"functionName":"functionTypeAnnotation","ranges":[{"startOffset":25034,"endOffset":25183,"count":0}],"isBlockCoverage":false},{"functionName":"functionTypeParam","ranges":[{"startOffset":25185,"endOffset":25304,"count":0}],"isBlockCoverage":false},{"functionName":"genericTypeAnnotation","ranges":[{"startOffset":25306,"endOffset":25431,"count":0}],"isBlockCoverage":false},{"functionName":"inferredPredicate","ranges":[{"startOffset":25433,"endOffset":25532,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceExtends","ranges":[{"startOffset":25534,"endOffset":25649,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceDeclaration","ranges":[{"startOffset":25651,"endOffset":25790,"count":0}],"isBlockCoverage":false},{"functionName":"interfaceTypeAnnotation","ranges":[{"startOffset":25792,"endOffset":25917,"count":0}],"isBlockCoverage":false},{"functionName":"intersectionTypeAnnotation","ranges":[{"startOffset":25919,"endOffset":26041,"count":0}],"isBlockCoverage":false},{"functionName":"mixedTypeAnnotation","ranges":[{"startOffset":26043,"endOffset":26146,"count":0}],"isBlockCoverage":false},{"functionName":"emptyTypeAnnotation","ranges":[{"startOffset":26148,"endOffset":26251,"count":0}],"isBlockCoverage":false},{"functionName":"nullableTypeAnnotation","ranges":[{"startOffset":26253,"endOffset":26376,"count":0}],"isBlockCoverage":false},{"functionName":"numberLiteralTypeAnnotation","ranges":[{"startOffset":26378,"endOffset":26502,"count":0}],"isBlockCoverage":false},{"functionName":"numberTypeAnnotation","ranges":[{"startOffset":26504,"endOffset":26609,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeAnnotation","ranges":[{"startOffset":26611,"endOffset":26774,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeInternalSlot","ranges":[{"startOffset":26776,"endOffset":26921,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeCallProperty","ranges":[{"startOffset":26923,"endOffset":27037,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeIndexer","ranges":[{"startOffset":27039,"endOffset":27162,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeProperty","ranges":[{"startOffset":27164,"endOffset":27285,"count":0}],"isBlockCoverage":false},{"functionName":"objectTypeSpreadProperty","ranges":[{"startOffset":27287,"endOffset":27408,"count":0}],"isBlockCoverage":false},{"functionName":"opaqueType","ranges":[{"startOffset":27410,"endOffset":27534,"count":0}],"isBlockCoverage":false},{"functionName":"qualifiedTypeIdentifier","ranges":[{"startOffset":27536,"endOffset":27664,"count":0}],"isBlockCoverage":false},{"functionName":"stringLiteralTypeAnnotation","ranges":[{"startOffset":27666,"endOffset":27790,"count":0}],"isBlockCoverage":false},{"functionName":"stringTypeAnnotation","ranges":[{"startOffset":27792,"endOffset":27897,"count":0}],"isBlockCoverage":false},{"functionName":"symbolTypeAnnotation","ranges":[{"startOffset":27899,"endOffset":28004,"count":0}],"isBlockCoverage":false},{"functionName":"thisTypeAnnotation","ranges":[{"startOffset":28006,"endOffset":28107,"count":0}],"isBlockCoverage":false},{"functionName":"tupleTypeAnnotation","ranges":[{"startOffset":28109,"endOffset":28217,"count":0}],"isBlockCoverage":false},{"functionName":"typeofTypeAnnotation","ranges":[{"startOffset":28219,"endOffset":28332,"count":0}],"isBlockCoverage":false},{"functionName":"typeAlias","ranges":[{"startOffset":28334,"endOffset":28442,"count":0}],"isBlockCoverage":false},{"functionName":"typeAnnotation","ranges":[{"startOffset":28444,"endOffset":28551,"count":0}],"isBlockCoverage":false},{"functionName":"typeCastExpression","ranges":[{"startOffset":28553,"endOffset":28680,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameter","ranges":[{"startOffset":28682,"endOffset":28798,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterDeclaration","ranges":[{"startOffset":28800,"endOffset":28919,"count":0}],"isBlockCoverage":false},{"functionName":"typeParameterInstantiation","ranges":[{"startOffset":28921,"endOffset":29044,"count":0}],"isBlockCoverage":false},{"functionName":"unionTypeAnnotation","ranges":[{"startOffset":29046,"endOffset":29154,"count":0}],"isBlockCoverage":false},{"functionName":"variance","ranges":[{"startOffset":29156,"endOffset":29241,"count":0}],"isBlockCoverage":false},{"functionName":"voidTypeAnnotation","ranges":[{"startOffset":29243,"endOffset":29344,"count":0}],"isBlockCoverage":false},{"functionName":"enumDeclaration","ranges":[{"startOffset":29346,"endOffset":29449,"count":0}],"isBlockCoverage":false},{"functionName":"enumBooleanBody","ranges":[{"startOffset":29451,"endOffset":29553,"count":0}],"isBlockCoverage":false},{"functionName":"enumNumberBody","ranges":[{"startOffset":29555,"endOffset":29655,"count":0}],"isBlockCoverage":false},{"functionName":"enumStringBody","ranges":[{"startOffset":29657,"endOffset":29757,"count":0}],"isBlockCoverage":false},{"functionName":"enumSymbolBody","ranges":[{"startOffset":29759,"endOffset":29859,"count":0}],"isBlockCoverage":false},{"functionName":"enumBooleanMember","ranges":[{"startOffset":29861,"endOffset":29962,"count":0}],"isBlockCoverage":false},{"functionName":"enumNumberMember","ranges":[{"startOffset":29964,"endOffset":30069,"count":0}],"isBlockCoverage":false},{"functionName":"enumStringMember","ranges":[{"startOffset":30071,"endOffset":30176,"count":0}],"isBlockCoverage":false},{"functionName":"enumDefaultedMember","ranges":[{"startOffset":30178,"endOffset":30283,"count":0}],"isBlockCoverage":false},{"functionName":"jsxAttribute","ranges":[{"startOffset":30285,"endOffset":30385,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingElement","ranges":[{"startOffset":30387,"endOffset":30490,"count":0}],"isBlockCoverage":false},{"functionName":"jsxElement","ranges":[{"startOffset":30492,"endOffset":30630,"count":0}],"isBlockCoverage":false},{"functionName":"jsxEmptyExpression","ranges":[{"startOffset":30632,"endOffset":30733,"count":0}],"isBlockCoverage":false},{"functionName":"jsxExpressionContainer","ranges":[{"startOffset":30735,"endOffset":30854,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadChild","ranges":[{"startOffset":30856,"endOffset":30959,"count":0}],"isBlockCoverage":false},{"functionName":"jsxIdentifier","ranges":[{"startOffset":30961,"endOffset":31056,"count":0}],"isBlockCoverage":false},{"functionName":"jsxMemberExpression","ranges":[{"startOffset":31058,"endOffset":31177,"count":0}],"isBlockCoverage":false},{"functionName":"jsxNamespacedName","ranges":[{"startOffset":31179,"endOffset":31293,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningElement","ranges":[{"startOffset":31295,"endOffset":31423,"count":0}],"isBlockCoverage":false},{"functionName":"jsxSpreadAttribute","ranges":[{"startOffset":31425,"endOffset":31534,"count":0}],"isBlockCoverage":false},{"functionName":"jsxText","ranges":[{"startOffset":31536,"endOffset":31620,"count":0}],"isBlockCoverage":false},{"functionName":"jsxFragment","ranges":[{"startOffset":31622,"endOffset":31751,"count":0}],"isBlockCoverage":false},{"functionName":"jsxOpeningFragment","ranges":[{"startOffset":31753,"endOffset":31854,"count":0}],"isBlockCoverage":false},{"functionName":"jsxClosingFragment","ranges":[{"startOffset":31856,"endOffset":31957,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":31959,"endOffset":32032,"count":0}],"isBlockCoverage":false},{"functionName":"placeholder","ranges":[{"startOffset":32034,"endOffset":32139,"count":0}],"isBlockCoverage":false},{"functionName":"v8IntrinsicIdentifier","ranges":[{"startOffset":32141,"endOffset":32252,"count":0}],"isBlockCoverage":false},{"functionName":"argumentPlaceholder","ranges":[{"startOffset":32254,"endOffset":32357,"count":0}],"isBlockCoverage":false},{"functionName":"bindExpression","ranges":[{"startOffset":32359,"endOffset":32466,"count":0}],"isBlockCoverage":false},{"functionName":"classProperty","ranges":[{"startOffset":32468,"endOffset":32616,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineTopicExpression","ranges":[{"startOffset":32618,"endOffset":32739,"count":0}],"isBlockCoverage":false},{"functionName":"pipelineBareFunction","ranges":[{"startOffset":32741,"endOffset":32852,"count":0}],"isBlockCoverage":false},{"functionName":"pipelinePrimaryTopicReference","ranges":[{"startOffset":32854,"endOffset":32977,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateProperty","ranges":[{"startOffset":32979,"endOffset":33115,"count":0}],"isBlockCoverage":false},{"functionName":"classPrivateMethod","ranges":[{"startOffset":33117,"endOffset":33250,"count":0}],"isBlockCoverage":false},{"functionName":"importAttribute","ranges":[{"startOffset":33252,"endOffset":33357,"count":0}],"isBlockCoverage":false},{"functionName":"decorator","ranges":[{"startOffset":33359,"endOffset":33452,"count":0}],"isBlockCoverage":false},{"functionName":"doExpression","ranges":[{"startOffset":33454,"endOffset":33547,"count":0}],"isBlockCoverage":false},{"functionName":"exportDefaultSpecifier","ranges":[{"startOffset":33549,"endOffset":33666,"count":0}],"isBlockCoverage":false},{"functionName":"privateName","ranges":[{"startOffset":33668,"endOffset":33757,"count":0}],"isBlockCoverage":false},{"functionName":"recordExpression","ranges":[{"startOffset":33759,"endOffset":33866,"count":0}],"isBlockCoverage":false},{"functionName":"tupleExpression","ranges":[{"startOffset":33868,"endOffset":33971,"count":0}],"isBlockCoverage":false},{"functionName":"decimalLiteral","ranges":[{"startOffset":33973,"endOffset":34071,"count":0}],"isBlockCoverage":false},{"functionName":"staticBlock","ranges":[{"startOffset":34073,"endOffset":34164,"count":0}],"isBlockCoverage":false},{"functionName":"moduleExpression","ranges":[{"startOffset":34166,"endOffset":34267,"count":0}],"isBlockCoverage":false},{"functionName":"tsParameterProperty","ranges":[{"startOffset":34269,"endOffset":34381,"count":0}],"isBlockCoverage":false},{"functionName":"tsDeclareFunction","ranges":[{"startOffset":34383,"endOffset":34520,"count":0}],"isBlockCoverage":false},{"functionName":"tsDeclareMethod","ranges":[{"startOffset":34522,"endOffset":34668,"count":0}],"isBlockCoverage":false},{"functionName":"tsQualifiedName","ranges":[{"startOffset":34670,"endOffset":34776,"count":0}],"isBlockCoverage":false},{"functionName":"tsCallSignatureDeclaration","ranges":[{"startOffset":34778,"endOffset":34937,"count":0}],"isBlockCoverage":false},{"functionName":"tsConstructSignatureDeclaration","ranges":[{"startOffset":34939,"endOffset":35108,"count":0}],"isBlockCoverage":false},{"functionName":"tsPropertySignature","ranges":[{"startOffset":35110,"endOffset":35245,"count":0}],"isBlockCoverage":false},{"functionName":"tsMethodSignature","ranges":[{"startOffset":35247,"endOffset":35393,"count":0}],"isBlockCoverage":false},{"functionName":"tsIndexSignature","ranges":[{"startOffset":35395,"endOffset":35518,"count":0}],"isBlockCoverage":false},{"functionName":"tsAnyKeyword","ranges":[{"startOffset":35520,"endOffset":35609,"count":0}],"isBlockCoverage":false},{"functionName":"tsBooleanKeyword","ranges":[{"startOffset":35611,"endOffset":35708,"count":0}],"isBlockCoverage":false},{"functionName":"tsBigIntKeyword","ranges":[{"startOffset":35710,"endOffset":35805,"count":0}],"isBlockCoverage":false},{"functionName":"tsIntrinsicKeyword","ranges":[{"startOffset":35807,"endOffset":35908,"count":0}],"isBlockCoverage":false},{"functionName":"tsNeverKeyword","ranges":[{"startOffset":35910,"endOffset":36003,"count":0}],"isBlockCoverage":false},{"functionName":"tsNullKeyword","ranges":[{"startOffset":36005,"endOffset":36096,"count":0}],"isBlockCoverage":false},{"functionName":"tsNumberKeyword","ranges":[{"startOffset":36098,"endOffset":36193,"count":0}],"isBlockCoverage":false},{"functionName":"tsObjectKeyword","ranges":[{"startOffset":36195,"endOffset":36290,"count":0}],"isBlockCoverage":false},{"functionName":"tsStringKeyword","ranges":[{"startOffset":36292,"endOffset":36387,"count":0}],"isBlockCoverage":false},{"functionName":"tsSymbolKeyword","ranges":[{"startOffset":36389,"endOffset":36484,"count":0}],"isBlockCoverage":false},{"functionName":"tsUndefinedKeyword","ranges":[{"startOffset":36486,"endOffset":36587,"count":0}],"isBlockCoverage":false},{"functionName":"tsUnknownKeyword","ranges":[{"startOffset":36589,"endOffset":36686,"count":0}],"isBlockCoverage":false},{"functionName":"tsVoidKeyword","ranges":[{"startOffset":36688,"endOffset":36779,"count":0}],"isBlockCoverage":false},{"functionName":"tsThisType","ranges":[{"startOffset":36781,"endOffset":36866,"count":0}],"isBlockCoverage":false},{"functionName":"tsFunctionType","ranges":[{"startOffset":36868,"endOffset":37003,"count":0}],"isBlockCoverage":false},{"functionName":"tsConstructorType","ranges":[{"startOffset":37005,"endOffset":37146,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeReference","ranges":[{"startOffset":37148,"endOffset":37267,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypePredicate","ranges":[{"startOffset":37269,"endOffset":37402,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeQuery","ranges":[{"startOffset":37404,"endOffset":37499,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeLiteral","ranges":[{"startOffset":37501,"endOffset":37599,"count":0}],"isBlockCoverage":false},{"functionName":"tsArrayType","ranges":[{"startOffset":37601,"endOffset":37699,"count":0}],"isBlockCoverage":false},{"functionName":"tsTupleType","ranges":[{"startOffset":37701,"endOffset":37800,"count":0}],"isBlockCoverage":false},{"functionName":"tsOptionalType","ranges":[{"startOffset":37802,"endOffset":37909,"count":0}],"isBlockCoverage":false},{"functionName":"tsRestType","ranges":[{"startOffset":37911,"endOffset":38010,"count":0}],"isBlockCoverage":false},{"functionName":"tsNamedTupleMember","ranges":[{"startOffset":38012,"endOffset":38141,"count":0}],"isBlockCoverage":false},{"functionName":"tsUnionType","ranges":[{"startOffset":38143,"endOffset":38235,"count":0}],"isBlockCoverage":false},{"functionName":"tsIntersectionType","ranges":[{"startOffset":38237,"endOffset":38343,"count":0}],"isBlockCoverage":false},{"functionName":"tsConditionalType","ranges":[{"startOffset":38345,"endOffset":38487,"count":0}],"isBlockCoverage":false},{"functionName":"tsInferType","ranges":[{"startOffset":38489,"endOffset":38589,"count":0}],"isBlockCoverage":false},{"functionName":"tsParenthesizedType","ranges":[{"startOffset":38591,"endOffset":38708,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeOperator","ranges":[{"startOffset":38710,"endOffset":38817,"count":0}],"isBlockCoverage":false},{"functionName":"tsIndexedAccessType","ranges":[{"startOffset":38819,"endOffset":38943,"count":0}],"isBlockCoverage":false},{"functionName":"tsMappedType","ranges":[{"startOffset":38945,"endOffset":39073,"count":0}],"isBlockCoverage":false},{"functionName":"tsLiteralType","ranges":[{"startOffset":39075,"endOffset":39173,"count":0}],"isBlockCoverage":false},{"functionName":"tsExpressionWithTypeArguments","ranges":[{"startOffset":39175,"endOffset":39324,"count":0}],"isBlockCoverage":false},{"functionName":"tsInterfaceDeclaration","ranges":[{"startOffset":39326,"endOffset":39469,"count":0}],"isBlockCoverage":false},{"functionName":"tsInterfaceBody","ranges":[{"startOffset":39471,"endOffset":39570,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAliasDeclaration","ranges":[{"startOffset":39572,"endOffset":39715,"count":0}],"isBlockCoverage":false},{"functionName":"tsAsExpression","ranges":[{"startOffset":39717,"endOffset":39836,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAssertion","ranges":[{"startOffset":39838,"endOffset":39959,"count":0}],"isBlockCoverage":false},{"functionName":"tsEnumDeclaration","ranges":[{"startOffset":39961,"endOffset":40071,"count":0}],"isBlockCoverage":false},{"functionName":"tsEnumMember","ranges":[{"startOffset":40073,"endOffset":40177,"count":0}],"isBlockCoverage":false},{"functionName":"tsModuleDeclaration","ranges":[{"startOffset":40179,"endOffset":40290,"count":0}],"isBlockCoverage":false},{"functionName":"tsModuleBlock","ranges":[{"startOffset":40292,"endOffset":40387,"count":0}],"isBlockCoverage":false},{"functionName":"tsImportType","ranges":[{"startOffset":40389,"endOffset":40513,"count":0}],"isBlockCoverage":false},{"functionName":"tsImportEqualsDeclaration","ranges":[{"startOffset":40515,"endOffset":40649,"count":0}],"isBlockCoverage":false},{"functionName":"tsExternalModuleReference","ranges":[{"startOffset":40651,"endOffset":40776,"count":0}],"isBlockCoverage":false},{"functionName":"tsNonNullExpression","ranges":[{"startOffset":40778,"endOffset":40891,"count":0}],"isBlockCoverage":false},{"functionName":"tsExportAssignment","ranges":[{"startOffset":40893,"endOffset":41004,"count":0}],"isBlockCoverage":false},{"functionName":"tsNamespaceExportDeclaration","ranges":[{"startOffset":41006,"endOffset":41129,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeAnnotation","ranges":[{"startOffset":41131,"endOffset":41242,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameterInstantiation","ranges":[{"startOffset":41244,"endOffset":41371,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameterDeclaration","ranges":[{"startOffset":41373,"endOffset":41496,"count":0}],"isBlockCoverage":false},{"functionName":"tsTypeParameter","ranges":[{"startOffset":41498,"endOffset":41619,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":41621,"endOffset":41797,"count":0}],"isBlockCoverage":false},{"functionName":"RegexLiteral","ranges":[{"startOffset":41799,"endOffset":41971,"count":0}],"isBlockCoverage":false},{"functionName":"RestProperty","ranges":[{"startOffset":41973,"endOffset":42143,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadProperty","ranges":[{"startOffset":42145,"endOffset":42323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1031,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":231,"endOffset":326,"count":1},{"startOffset":305,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":328,"endOffset":1031,"count":0}],"isBlockCoverage":false}]},{"scriptId":"668","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2285,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":156,"endOffset":205,"count":238}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":284,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":418,"endOffset":473,"count":133}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":553,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":682,"endOffset":731,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":815,"endOffset":867,"count":21}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":959,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1100,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1243,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1400,"endOffset":1470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"669","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":48201,"count":1},{"startOffset":1965,"endOffset":1976,"count":0},{"startOffset":2707,"endOffset":2802,"count":0},{"startOffset":5732,"endOffset":5736,"count":0},{"startOffset":8029,"endOffset":8112,"count":0},{"startOffset":8586,"endOffset":8704,"count":0},{"startOffset":17479,"endOffset":17483,"count":0},{"startOffset":19099,"endOffset":19103,"count":0},{"startOffset":20291,"endOffset":20295,"count":0},{"startOffset":22700,"endOffset":22773,"count":0},{"startOffset":26352,"endOffset":26414,"count":0},{"startOffset":47109,"endOffset":47208,"count":0},{"startOffset":47839,"endOffset":47938,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":639,"endOffset":825,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":827,"endOffset":1570,"count":1},{"startOffset":909,"endOffset":982,"count":0},{"startOffset":984,"endOffset":1080,"count":0},{"startOffset":1082,"endOffset":1210,"count":0},{"startOffset":1233,"endOffset":1569,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1572,"endOffset":1667,"count":2},{"startOffset":1646,"endOffset":1664,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2133,"endOffset":2596,"count":1},{"startOffset":2263,"endOffset":2595,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2422,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3212,"endOffset":3648,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":3400,"endOffset":3546,"count":0}],"isBlockCoverage":false},{"functionName":"fields.comments.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.each.oneOfNodeTypes","ranges":[{"startOffset":7924,"endOffset":7932,"count":0}],"isBlockCoverage":false},{"functionName":"fields.tokens.validate.Object.assign.type","ranges":[{"startOffset":8209,"endOffset":8217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10952,"endOffset":11261,"count":1},{"startOffset":11027,"endOffset":11260,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11018,"endOffset":11026,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11104,"endOffset":11256,"count":0}],"isBlockCoverage":false},{"functionName":"fields.Object.assign.name.validate.Object.assign.type","ranges":[{"startOffset":12383,"endOffset":12620,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12772,"endOffset":13980,"count":0}],"isBlockCoverage":false},{"functionName":"fields.flags.validate.Object.assign.type","ranges":[{"startOffset":15792,"endOffset":16042,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16839,"endOffset":17280,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":17027,"endOffset":17164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19177,"endOffset":19658,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":19385,"endOffset":19522,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20382,"endOffset":20863,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":20590,"endOffset":20727,"count":0}],"isBlockCoverage":false},{"functionName":"fields.shorthand.validate.Object.assign.type","ranges":[{"startOffset":21070,"endOffset":21315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21353,"endOffset":21634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21970,"endOffset":22363,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22133,"endOffset":22358,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":22789,"endOffset":23156,"count":0}],"isBlockCoverage":false},{"functionName":"fields.block.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":25196,"endOffset":25431,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":27101,"endOffset":27442,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27557,"endOffset":28006,"count":1},{"startOffset":27684,"endOffset":28005,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27865,"endOffset":27997,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":33661,"endOffset":33964,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33751,"endOffset":33959,"count":0}],"isBlockCoverage":false},{"functionName":"fields.declaration.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":35155,"endOffset":35405,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35459,"endOffset":35672,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36003,"endOffset":36443,"count":1},{"startOffset":36280,"endOffset":36442,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36296,"endOffset":36434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37203,"endOffset":37779,"count":1},{"startOffset":37353,"endOffset":37778,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":37565,"endOffset":37770,"count":0}],"isBlockCoverage":false},{"functionName":"fields.meta.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":39772,"endOffset":40324,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40924,"endOffset":41252,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41114,"endOffset":41245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44531,"endOffset":44817,"count":0}],"isBlockCoverage":false},{"functionName":"fields.delegate.validate.Object.assign.type","ranges":[{"startOffset":45097,"endOffset":45347,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46535,"endOffset":46946,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":46708,"endOffset":46845,"count":0}],"isBlockCoverage":false}]},{"scriptId":"670","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":916,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":371,"endOffset":466,"count":3},{"startOffset":445,"endOffset":463,"count":0}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":468,"endOffset":916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"671","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":529,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":154,"endOffset":529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isPlaceholderType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"isPlaceholderType","ranges":[{"startOffset":165,"endOffset":468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"673","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isValidIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":540,"count":1}],"isBlockCoverage":true},{"functionName":"isValidIdentifier","ranges":[{"startOffset":199,"endOffset":540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-identifier/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":303,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":447,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":589,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":739,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":899,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1051,"endOffset":1110,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1188,"endOffset":1236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-identifier/lib/identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11642,"count":1}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":10182,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":10435,"endOffset":10780,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierChar","ranges":[{"startOffset":10782,"endOffset":11228,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierName","ranges":[{"startOffset":11230,"endOffset":11642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-validator-identifier/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":1020,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":1123,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":1251,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":1347,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1487,"endOffset":1544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/constants/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3242,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2238,"endOffset":2252,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2280,"endOffset":2294,"count":3}],"isBlockCoverage":true}]},{"scriptId":"678","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8631,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1041,"endOffset":1136,"count":1},{"startOffset":1115,"endOffset":1133,"count":0}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1624,"endOffset":1783,"count":13},{"startOffset":1674,"endOffset":1699,"count":0},{"startOffset":1723,"endOffset":1747,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1785,"endOffset":1845,"count":137}],"isBlockCoverage":true},{"functionName":"typeIs","ranges":[{"startOffset":1847,"endOffset":1972,"count":168},{"startOffset":1913,"endOffset":1939,"count":150},{"startOffset":1940,"endOffset":1969,"count":18}],"isBlockCoverage":true},{"functionName":"validateType","ranges":[{"startOffset":1974,"endOffset":2046,"count":93}],"isBlockCoverage":true},{"functionName":"validateOptional","ranges":[{"startOffset":2048,"endOffset":2136,"count":35}],"isBlockCoverage":true},{"functionName":"validateOptionalType","ranges":[{"startOffset":2138,"endOffset":2248,"count":41}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":2250,"endOffset":2350,"count":34}],"isBlockCoverage":true},{"functionName":"arrayOfType","ranges":[{"startOffset":2352,"endOffset":2422,"count":34}],"isBlockCoverage":true},{"functionName":"validateArrayOfType","ranges":[{"startOffset":2424,"endOffset":2508,"count":12}],"isBlockCoverage":true},{"functionName":"assertEach","ranges":[{"startOffset":2510,"endOffset":2910,"count":78}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":2544,"endOffset":2858,"count":0}],"isBlockCoverage":false},{"functionName":"assertOneOf","ranges":[{"startOffset":2912,"endOffset":3208,"count":22}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2948,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeType","ranges":[{"startOffset":3210,"endOffset":3684,"count":368}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3248,"endOffset":3627,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeOrValueType","ranges":[{"startOffset":3686,"endOffset":4199,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3731,"endOffset":4135,"count":0}],"isBlockCoverage":false},{"functionName":"assertValueType","ranges":[{"startOffset":4201,"endOffset":4482,"count":153}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4236,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"assertShape","ranges":[{"startOffset":4484,"endOffset":5094,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4516,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalChainStart","ranges":[{"startOffset":5096,"endOffset":5819,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":5821,"endOffset":6198,"count":86},{"startOffset":6004,"endOffset":6030,"count":82},{"startOffset":6031,"endOffset":6053,"count":77},{"startOffset":6055,"endOffset":6176,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":5848,"endOffset":5933,"count":0}],"isBlockCoverage":false},{"functionName":"defineType","ranges":[{"startOffset":6371,"endOffset":8612,"count":243},{"startOffset":6443,"endOffset":6466,"count":3},{"startOffset":6467,"endOffset":6472,"count":240},{"startOffset":6518,"endOffset":7104,"count":25},{"startOffset":6563,"endOffset":7100,"count":1},{"startOffset":6660,"endOffset":7094,"count":5},{"startOffset":6773,"endOffset":6789,"count":0},{"startOffset":6796,"endOffset":6822,"count":0},{"startOffset":6824,"endOffset":6929,"count":0},{"startOffset":6993,"endOffset":6997,"count":0},{"startOffset":7137,"endOffset":7156,"count":42},{"startOffset":7157,"endOffset":7162,"count":39},{"startOffset":7195,"endOffset":7214,"count":26},{"startOffset":7215,"endOffset":7220,"count":25},{"startOffset":7253,"endOffset":7272,"count":181},{"startOffset":7273,"endOffset":7288,"count":178},{"startOffset":7289,"endOffset":7294,"count":23},{"startOffset":7334,"endOffset":7452,"count":711},{"startOffset":7377,"endOffset":7448,"count":0},{"startOffset":7482,"endOffset":7537,"count":4},{"startOffset":7584,"endOffset":7626,"count":820},{"startOffset":7616,"endOffset":7621,"count":1},{"startOffset":7669,"endOffset":8182,"count":560},{"startOffset":7739,"endOffset":7769,"count":112},{"startOffset":7771,"endOffset":7807,"count":45},{"startOffset":7846,"endOffset":7881,"count":448},{"startOffset":7881,"endOffset":8004,"count":112},{"startOffset":7907,"endOffset":7931,"count":13},{"startOffset":7933,"endOffset":8004,"count":13},{"startOffset":8046,"endOffset":8178,"count":1337},{"startOffset":8092,"endOffset":8172,"count":0},{"startOffset":8531,"endOffset":8587,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8385,"endOffset":8506,"count":466},{"startOffset":8454,"endOffset":8459,"count":45}],"isBlockCoverage":true}]},{"scriptId":"679","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":842,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":234,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"validateField","ranges":[{"startOffset":473,"endOffset":651,"count":0}],"isBlockCoverage":false},{"functionName":"validateChild","ranges":[{"startOffset":653,"endOffset":842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17320,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true},{"functionName":"defineInterfaceishType","ranges":[{"startOffset":1038,"endOffset":1822,"count":3}],"isBlockCoverage":true}]},{"scriptId":"681","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5531,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true}]},{"scriptId":"682","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1554,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":122,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":310,"endOffset":1053,"count":1},{"startOffset":392,"endOffset":465,"count":0},{"startOffset":467,"endOffset":563,"count":0},{"startOffset":565,"endOffset":693,"count":0},{"startOffset":716,"endOffset":1052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"683","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/placeholders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1070,"count":1},{"startOffset":567,"endOffset":682,"count":8},{"startOffset":630,"endOffset":645,"count":4},{"startOffset":647,"endOffset":680,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":828,"endOffset":1068,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":873,"endOffset":1064,"count":15},{"startOffset":956,"endOffset":1009,"count":11}],"isBlockCoverage":true}]},{"scriptId":"684","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/experimental.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6616,"count":1},{"startOffset":1462,"endOffset":1624,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":106,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":294,"endOffset":1037,"count":1},{"startOffset":376,"endOffset":449,"count":0},{"startOffset":451,"endOffset":547,"count":0},{"startOffset":549,"endOffset":677,"count":0},{"startOffset":700,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.object.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":1281,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.callee.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":1392,"endOffset":1400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/definitions/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14689,"count":1},{"startOffset":4523,"endOffset":4633,"count":13}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":106,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":294,"endOffset":1037,"count":1},{"startOffset":376,"endOffset":449,"count":0},{"startOffset":451,"endOffset":547,"count":0},{"startOffset":549,"endOffset":677,"count":0},{"startOffset":700,"endOffset":1036,"count":0}],"isBlockCoverage":true}]},{"scriptId":"686","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/to-fast-properties/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"FastObject","ranges":[{"startOffset":349,"endOffset":856,"count":18},{"startOffset":635,"endOffset":663,"count":9},{"startOffset":665,"endOffset":804,"count":9},{"startOffset":804,"endOffset":825,"count":1},{"startOffset":826,"endOffset":829,"count":8}],"isBlockCoverage":true},{"functionName":"toFastproperties","ranges":[{"startOffset":944,"endOffset":999,"count":8}],"isBlockCoverage":true}]},{"scriptId":"687","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/asserts/assertNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":545,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":257,"endOffset":275,"count":0}],"isBlockCoverage":true},{"functionName":"assertNode","ranges":[{"startOffset":280,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":154,"endOffset":238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/asserts/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43407,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16498,"endOffset":16593,"count":1},{"startOffset":16572,"endOffset":16590,"count":0}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":16595,"endOffset":16803,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayExpression","ranges":[{"startOffset":16805,"endOffset":16892,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentExpression","ranges":[{"startOffset":16894,"endOffset":16991,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinaryExpression","ranges":[{"startOffset":16993,"endOffset":17082,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterpreterDirective","ranges":[{"startOffset":17084,"endOffset":17181,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirective","ranges":[{"startOffset":17183,"endOffset":17258,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirectiveLiteral","ranges":[{"startOffset":17260,"endOffset":17349,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockStatement","ranges":[{"startOffset":17351,"endOffset":17436,"count":0}],"isBlockCoverage":false},{"functionName":"assertBreakStatement","ranges":[{"startOffset":17438,"endOffset":17523,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallExpression","ranges":[{"startOffset":17525,"endOffset":17610,"count":0}],"isBlockCoverage":false},{"functionName":"assertCatchClause","ranges":[{"startOffset":17612,"endOffset":17691,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditionalExpression","ranges":[{"startOffset":17693,"endOffset":17792,"count":0}],"isBlockCoverage":false},{"functionName":"assertContinueStatement","ranges":[{"startOffset":17794,"endOffset":17885,"count":0}],"isBlockCoverage":false},{"functionName":"assertDebuggerStatement","ranges":[{"startOffset":17887,"endOffset":17978,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoWhileStatement","ranges":[{"startOffset":17980,"endOffset":18069,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyStatement","ranges":[{"startOffset":18071,"endOffset":18156,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionStatement","ranges":[{"startOffset":18158,"endOffset":18253,"count":0}],"isBlockCoverage":false},{"functionName":"assertFile","ranges":[{"startOffset":18255,"endOffset":18320,"count":0}],"isBlockCoverage":false},{"functionName":"assertForInStatement","ranges":[{"startOffset":18322,"endOffset":18407,"count":0}],"isBlockCoverage":false},{"functionName":"assertForStatement","ranges":[{"startOffset":18409,"endOffset":18490,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionDeclaration","ranges":[{"startOffset":18492,"endOffset":18587,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionExpression","ranges":[{"startOffset":18589,"endOffset":18682,"count":0}],"isBlockCoverage":false},{"functionName":"assertIdentifier","ranges":[{"startOffset":18684,"endOffset":18761,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfStatement","ranges":[{"startOffset":18763,"endOffset":18842,"count":0}],"isBlockCoverage":false},{"functionName":"assertLabeledStatement","ranges":[{"startOffset":18844,"endOffset":18933,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteral","ranges":[{"startOffset":18935,"endOffset":19018,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumericLiteral","ranges":[{"startOffset":19020,"endOffset":19105,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteral","ranges":[{"startOffset":19107,"endOffset":19186,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteral","ranges":[{"startOffset":19188,"endOffset":19273,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegExpLiteral","ranges":[{"startOffset":19275,"endOffset":19358,"count":0}],"isBlockCoverage":false},{"functionName":"assertLogicalExpression","ranges":[{"startOffset":19360,"endOffset":19451,"count":0}],"isBlockCoverage":false},{"functionName":"assertMemberExpression","ranges":[{"startOffset":19453,"endOffset":19542,"count":0}],"isBlockCoverage":false},{"functionName":"assertNewExpression","ranges":[{"startOffset":19544,"endOffset":19627,"count":0}],"isBlockCoverage":false},{"functionName":"assertProgram","ranges":[{"startOffset":19629,"endOffset":19700,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectExpression","ranges":[{"startOffset":19702,"endOffset":19791,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMethod","ranges":[{"startOffset":19793,"endOffset":19874,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectProperty","ranges":[{"startOffset":19876,"endOffset":19961,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestElement","ranges":[{"startOffset":19963,"endOffset":20042,"count":0}],"isBlockCoverage":false},{"functionName":"assertReturnStatement","ranges":[{"startOffset":20044,"endOffset":20131,"count":0}],"isBlockCoverage":false},{"functionName":"assertSequenceExpression","ranges":[{"startOffset":20133,"endOffset":20226,"count":0}],"isBlockCoverage":false},{"functionName":"assertParenthesizedExpression","ranges":[{"startOffset":20228,"endOffset":20331,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchCase","ranges":[{"startOffset":20333,"endOffset":20410,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchStatement","ranges":[{"startOffset":20412,"endOffset":20499,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisExpression","ranges":[{"startOffset":20501,"endOffset":20586,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrowStatement","ranges":[{"startOffset":20588,"endOffset":20673,"count":0}],"isBlockCoverage":false},{"functionName":"assertTryStatement","ranges":[{"startOffset":20675,"endOffset":20756,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryExpression","ranges":[{"startOffset":20758,"endOffset":20845,"count":0}],"isBlockCoverage":false},{"functionName":"assertUpdateExpression","ranges":[{"startOffset":20847,"endOffset":20936,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclaration","ranges":[{"startOffset":20938,"endOffset":21033,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclarator","ranges":[{"startOffset":21035,"endOffset":21128,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhileStatement","ranges":[{"startOffset":21130,"endOffset":21215,"count":0}],"isBlockCoverage":false},{"functionName":"assertWithStatement","ranges":[{"startOffset":21217,"endOffset":21300,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentPattern","ranges":[{"startOffset":21302,"endOffset":21393,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayPattern","ranges":[{"startOffset":21395,"endOffset":21476,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrowFunctionExpression","ranges":[{"startOffset":21478,"endOffset":21581,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassBody","ranges":[{"startOffset":21583,"endOffset":21658,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassExpression","ranges":[{"startOffset":21660,"endOffset":21747,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassDeclaration","ranges":[{"startOffset":21749,"endOffset":21838,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportAllDeclaration","ranges":[{"startOffset":21840,"endOffset":21937,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultDeclaration","ranges":[{"startOffset":21939,"endOffset":22044,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamedDeclaration","ranges":[{"startOffset":22046,"endOffset":22147,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportSpecifier","ranges":[{"startOffset":22149,"endOffset":22236,"count":0}],"isBlockCoverage":false},{"functionName":"assertForOfStatement","ranges":[{"startOffset":22238,"endOffset":22323,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDeclaration","ranges":[{"startOffset":22325,"endOffset":22416,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDefaultSpecifier","ranges":[{"startOffset":22418,"endOffset":22519,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportNamespaceSpecifier","ranges":[{"startOffset":22521,"endOffset":22626,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportSpecifier","ranges":[{"startOffset":22628,"endOffset":22715,"count":0}],"isBlockCoverage":false},{"functionName":"assertMetaProperty","ranges":[{"startOffset":22717,"endOffset":22798,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassMethod","ranges":[{"startOffset":22800,"endOffset":22879,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectPattern","ranges":[{"startOffset":22881,"endOffset":22964,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadElement","ranges":[{"startOffset":22966,"endOffset":23049,"count":0}],"isBlockCoverage":false},{"functionName":"assertSuper","ranges":[{"startOffset":23051,"endOffset":23118,"count":0}],"isBlockCoverage":false},{"functionName":"assertTaggedTemplateExpression","ranges":[{"startOffset":23120,"endOffset":23225,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateElement","ranges":[{"startOffset":23227,"endOffset":23314,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateLiteral","ranges":[{"startOffset":23316,"endOffset":23403,"count":0}],"isBlockCoverage":false},{"functionName":"assertYieldExpression","ranges":[{"startOffset":23405,"endOffset":23492,"count":0}],"isBlockCoverage":false},{"functionName":"assertAwaitExpression","ranges":[{"startOffset":23494,"endOffset":23581,"count":0}],"isBlockCoverage":false},{"functionName":"assertImport","ranges":[{"startOffset":23583,"endOffset":23652,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigIntLiteral","ranges":[{"startOffset":23654,"endOffset":23737,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamespaceSpecifier","ranges":[{"startOffset":23739,"endOffset":23844,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalMemberExpression","ranges":[{"startOffset":23846,"endOffset":23951,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalCallExpression","ranges":[{"startOffset":23953,"endOffset":24054,"count":0}],"isBlockCoverage":false},{"functionName":"assertAnyTypeAnnotation","ranges":[{"startOffset":24056,"endOffset":24147,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayTypeAnnotation","ranges":[{"startOffset":24149,"endOffset":24244,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanTypeAnnotation","ranges":[{"startOffset":24246,"endOffset":24345,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteralTypeAnnotation","ranges":[{"startOffset":24347,"endOffset":24460,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteralTypeAnnotation","ranges":[{"startOffset":24462,"endOffset":24569,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassImplements","ranges":[{"startOffset":24571,"endOffset":24658,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareClass","ranges":[{"startOffset":24660,"endOffset":24741,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareFunction","ranges":[{"startOffset":24743,"endOffset":24830,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareInterface","ranges":[{"startOffset":24832,"endOffset":24921,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModule","ranges":[{"startOffset":24923,"endOffset":25006,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModuleExports","ranges":[{"startOffset":25008,"endOffset":25105,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareTypeAlias","ranges":[{"startOffset":25107,"endOffset":25196,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareOpaqueType","ranges":[{"startOffset":25198,"endOffset":25289,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareVariable","ranges":[{"startOffset":25291,"endOffset":25378,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportDeclaration","ranges":[{"startOffset":25380,"endOffset":25485,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportAllDeclaration","ranges":[{"startOffset":25487,"endOffset":25598,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaredPredicate","ranges":[{"startOffset":25600,"endOffset":25691,"count":0}],"isBlockCoverage":false},{"functionName":"assertExistsTypeAnnotation","ranges":[{"startOffset":25693,"endOffset":25790,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeAnnotation","ranges":[{"startOffset":25792,"endOffset":25893,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeParam","ranges":[{"startOffset":25895,"endOffset":25986,"count":0}],"isBlockCoverage":false},{"functionName":"assertGenericTypeAnnotation","ranges":[{"startOffset":25988,"endOffset":26087,"count":0}],"isBlockCoverage":false},{"functionName":"assertInferredPredicate","ranges":[{"startOffset":26089,"endOffset":26180,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceExtends","ranges":[{"startOffset":26182,"endOffset":26271,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceDeclaration","ranges":[{"startOffset":26273,"endOffset":26370,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceTypeAnnotation","ranges":[{"startOffset":26372,"endOffset":26475,"count":0}],"isBlockCoverage":false},{"functionName":"assertIntersectionTypeAnnotation","ranges":[{"startOffset":26477,"endOffset":26586,"count":0}],"isBlockCoverage":false},{"functionName":"assertMixedTypeAnnotation","ranges":[{"startOffset":26588,"endOffset":26683,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyTypeAnnotation","ranges":[{"startOffset":26685,"endOffset":26780,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullableTypeAnnotation","ranges":[{"startOffset":26782,"endOffset":26883,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteralTypeAnnotation","ranges":[{"startOffset":26885,"endOffset":26996,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberTypeAnnotation","ranges":[{"startOffset":26998,"endOffset":27095,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeAnnotation","ranges":[{"startOffset":27097,"endOffset":27194,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeInternalSlot","ranges":[{"startOffset":27196,"endOffset":27297,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeCallProperty","ranges":[{"startOffset":27299,"endOffset":27400,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeIndexer","ranges":[{"startOffset":27402,"endOffset":27493,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeProperty","ranges":[{"startOffset":27495,"endOffset":27588,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeSpreadProperty","ranges":[{"startOffset":27590,"endOffset":27695,"count":0}],"isBlockCoverage":false},{"functionName":"assertOpaqueType","ranges":[{"startOffset":27697,"endOffset":27774,"count":0}],"isBlockCoverage":false},{"functionName":"assertQualifiedTypeIdentifier","ranges":[{"startOffset":27776,"endOffset":27879,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteralTypeAnnotation","ranges":[{"startOffset":27881,"endOffset":27992,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringTypeAnnotation","ranges":[{"startOffset":27994,"endOffset":28091,"count":0}],"isBlockCoverage":false},{"functionName":"assertSymbolTypeAnnotation","ranges":[{"startOffset":28093,"endOffset":28190,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisTypeAnnotation","ranges":[{"startOffset":28192,"endOffset":28285,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleTypeAnnotation","ranges":[{"startOffset":28287,"endOffset":28382,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeofTypeAnnotation","ranges":[{"startOffset":28384,"endOffset":28481,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAlias","ranges":[{"startOffset":28483,"endOffset":28558,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAnnotation","ranges":[{"startOffset":28560,"endOffset":28645,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeCastExpression","ranges":[{"startOffset":28647,"endOffset":28740,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameter","ranges":[{"startOffset":28742,"endOffset":28825,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterDeclaration","ranges":[{"startOffset":28827,"endOffset":28932,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterInstantiation","ranges":[{"startOffset":28934,"endOffset":29043,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnionTypeAnnotation","ranges":[{"startOffset":29045,"endOffset":29140,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariance","ranges":[{"startOffset":29142,"endOffset":29215,"count":0}],"isBlockCoverage":false},{"functionName":"assertVoidTypeAnnotation","ranges":[{"startOffset":29217,"endOffset":29310,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDeclaration","ranges":[{"startOffset":29312,"endOffset":29399,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanBody","ranges":[{"startOffset":29401,"endOffset":29488,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberBody","ranges":[{"startOffset":29490,"endOffset":29575,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringBody","ranges":[{"startOffset":29577,"endOffset":29662,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumSymbolBody","ranges":[{"startOffset":29664,"endOffset":29749,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanMember","ranges":[{"startOffset":29751,"endOffset":29842,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberMember","ranges":[{"startOffset":29844,"endOffset":29933,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringMember","ranges":[{"startOffset":29935,"endOffset":30024,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDefaultedMember","ranges":[{"startOffset":30026,"endOffset":30121,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXAttribute","ranges":[{"startOffset":30123,"endOffset":30204,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingElement","ranges":[{"startOffset":30206,"endOffset":30297,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXElement","ranges":[{"startOffset":30299,"endOffset":30376,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXEmptyExpression","ranges":[{"startOffset":30378,"endOffset":30471,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXExpressionContainer","ranges":[{"startOffset":30473,"endOffset":30574,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadChild","ranges":[{"startOffset":30576,"endOffset":30661,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXIdentifier","ranges":[{"startOffset":30663,"endOffset":30746,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXMemberExpression","ranges":[{"startOffset":30748,"endOffset":30843,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXNamespacedName","ranges":[{"startOffset":30845,"endOffset":30936,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningElement","ranges":[{"startOffset":30938,"endOffset":31029,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadAttribute","ranges":[{"startOffset":31031,"endOffset":31124,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXText","ranges":[{"startOffset":31126,"endOffset":31197,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXFragment","ranges":[{"startOffset":31199,"endOffset":31278,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningFragment","ranges":[{"startOffset":31280,"endOffset":31373,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingFragment","ranges":[{"startOffset":31375,"endOffset":31468,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoop","ranges":[{"startOffset":31470,"endOffset":31535,"count":0}],"isBlockCoverage":false},{"functionName":"assertPlaceholder","ranges":[{"startOffset":31537,"endOffset":31616,"count":0}],"isBlockCoverage":false},{"functionName":"assertV8IntrinsicIdentifier","ranges":[{"startOffset":31618,"endOffset":31717,"count":0}],"isBlockCoverage":false},{"functionName":"assertArgumentPlaceholder","ranges":[{"startOffset":31719,"endOffset":31814,"count":0}],"isBlockCoverage":false},{"functionName":"assertBindExpression","ranges":[{"startOffset":31816,"endOffset":31901,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassProperty","ranges":[{"startOffset":31903,"endOffset":31986,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineTopicExpression","ranges":[{"startOffset":31988,"endOffset":32091,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineBareFunction","ranges":[{"startOffset":32093,"endOffset":32190,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelinePrimaryTopicReference","ranges":[{"startOffset":32192,"endOffset":32307,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateProperty","ranges":[{"startOffset":32309,"endOffset":32406,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateMethod","ranges":[{"startOffset":32408,"endOffset":32501,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportAttribute","ranges":[{"startOffset":32503,"endOffset":32590,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecorator","ranges":[{"startOffset":32592,"endOffset":32667,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoExpression","ranges":[{"startOffset":32669,"endOffset":32750,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultSpecifier","ranges":[{"startOffset":32752,"endOffset":32853,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivateName","ranges":[{"startOffset":32855,"endOffset":32934,"count":0}],"isBlockCoverage":false},{"functionName":"assertRecordExpression","ranges":[{"startOffset":32936,"endOffset":33025,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleExpression","ranges":[{"startOffset":33027,"endOffset":33114,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecimalLiteral","ranges":[{"startOffset":33116,"endOffset":33201,"count":0}],"isBlockCoverage":false},{"functionName":"assertStaticBlock","ranges":[{"startOffset":33203,"endOffset":33282,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleExpression","ranges":[{"startOffset":33284,"endOffset":33373,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParameterProperty","ranges":[{"startOffset":33375,"endOffset":33470,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareFunction","ranges":[{"startOffset":33472,"endOffset":33563,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareMethod","ranges":[{"startOffset":33565,"endOffset":33652,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSQualifiedName","ranges":[{"startOffset":33654,"endOffset":33741,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSCallSignatureDeclaration","ranges":[{"startOffset":33743,"endOffset":33852,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructSignatureDeclaration","ranges":[{"startOffset":33854,"endOffset":33973,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSPropertySignature","ranges":[{"startOffset":33975,"endOffset":34070,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMethodSignature","ranges":[{"startOffset":34072,"endOffset":34163,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexSignature","ranges":[{"startOffset":34165,"endOffset":34254,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAnyKeyword","ranges":[{"startOffset":34256,"endOffset":34337,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBooleanKeyword","ranges":[{"startOffset":34339,"endOffset":34428,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBigIntKeyword","ranges":[{"startOffset":34430,"endOffset":34517,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntrinsicKeyword","ranges":[{"startOffset":34519,"endOffset":34612,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNeverKeyword","ranges":[{"startOffset":34614,"endOffset":34699,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNullKeyword","ranges":[{"startOffset":34701,"endOffset":34784,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNumberKeyword","ranges":[{"startOffset":34786,"endOffset":34873,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSObjectKeyword","ranges":[{"startOffset":34875,"endOffset":34962,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSStringKeyword","ranges":[{"startOffset":34964,"endOffset":35051,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSSymbolKeyword","ranges":[{"startOffset":35053,"endOffset":35140,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUndefinedKeyword","ranges":[{"startOffset":35142,"endOffset":35235,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnknownKeyword","ranges":[{"startOffset":35237,"endOffset":35326,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSVoidKeyword","ranges":[{"startOffset":35328,"endOffset":35411,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSThisType","ranges":[{"startOffset":35413,"endOffset":35490,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSFunctionType","ranges":[{"startOffset":35492,"endOffset":35577,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructorType","ranges":[{"startOffset":35579,"endOffset":35670,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeReference","ranges":[{"startOffset":35672,"endOffset":35759,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypePredicate","ranges":[{"startOffset":35761,"endOffset":35848,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeQuery","ranges":[{"startOffset":35850,"endOffset":35929,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeLiteral","ranges":[{"startOffset":35931,"endOffset":36014,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSArrayType","ranges":[{"startOffset":36016,"endOffset":36095,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTupleType","ranges":[{"startOffset":36097,"endOffset":36176,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSOptionalType","ranges":[{"startOffset":36178,"endOffset":36263,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSRestType","ranges":[{"startOffset":36265,"endOffset":36342,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamedTupleMember","ranges":[{"startOffset":36344,"endOffset":36437,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnionType","ranges":[{"startOffset":36439,"endOffset":36518,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntersectionType","ranges":[{"startOffset":36520,"endOffset":36613,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConditionalType","ranges":[{"startOffset":36615,"endOffset":36706,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInferType","ranges":[{"startOffset":36708,"endOffset":36787,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParenthesizedType","ranges":[{"startOffset":36789,"endOffset":36884,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeOperator","ranges":[{"startOffset":36886,"endOffset":36971,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexedAccessType","ranges":[{"startOffset":36973,"endOffset":37068,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMappedType","ranges":[{"startOffset":37070,"endOffset":37151,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSLiteralType","ranges":[{"startOffset":37153,"endOffset":37236,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExpressionWithTypeArguments","ranges":[{"startOffset":37238,"endOffset":37353,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceDeclaration","ranges":[{"startOffset":37355,"endOffset":37456,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceBody","ranges":[{"startOffset":37458,"endOffset":37545,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAliasDeclaration","ranges":[{"startOffset":37547,"endOffset":37648,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAsExpression","ranges":[{"startOffset":37650,"endOffset":37735,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAssertion","ranges":[{"startOffset":37737,"endOffset":37824,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumDeclaration","ranges":[{"startOffset":37826,"endOffset":37917,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumMember","ranges":[{"startOffset":37919,"endOffset":38000,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleDeclaration","ranges":[{"startOffset":38002,"endOffset":38097,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleBlock","ranges":[{"startOffset":38099,"endOffset":38182,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportType","ranges":[{"startOffset":38184,"endOffset":38265,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportEqualsDeclaration","ranges":[{"startOffset":38267,"endOffset":38374,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExternalModuleReference","ranges":[{"startOffset":38376,"endOffset":38483,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNonNullExpression","ranges":[{"startOffset":38485,"endOffset":38580,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExportAssignment","ranges":[{"startOffset":38582,"endOffset":38675,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamespaceExportDeclaration","ranges":[{"startOffset":38677,"endOffset":38790,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAnnotation","ranges":[{"startOffset":38792,"endOffset":38881,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterInstantiation","ranges":[{"startOffset":38883,"endOffset":38996,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterDeclaration","ranges":[{"startOffset":38998,"endOffset":39107,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameter","ranges":[{"startOffset":39109,"endOffset":39196,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpression","ranges":[{"startOffset":39198,"endOffset":39275,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinary","ranges":[{"startOffset":39277,"endOffset":39346,"count":0}],"isBlockCoverage":false},{"functionName":"assertScopable","ranges":[{"startOffset":39348,"endOffset":39421,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockParent","ranges":[{"startOffset":39423,"endOffset":39502,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlock","ranges":[{"startOffset":39504,"endOffset":39571,"count":0}],"isBlockCoverage":false},{"functionName":"assertStatement","ranges":[{"startOffset":39573,"endOffset":39648,"count":0}],"isBlockCoverage":false},{"functionName":"assertTerminatorless","ranges":[{"startOffset":39650,"endOffset":39735,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompletionStatement","ranges":[{"startOffset":39737,"endOffset":39832,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditional","ranges":[{"startOffset":39834,"endOffset":39913,"count":0}],"isBlockCoverage":false},{"functionName":"assertLoop","ranges":[{"startOffset":39915,"endOffset":39980,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhile","ranges":[{"startOffset":39982,"endOffset":40049,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionWrapper","ranges":[{"startOffset":40051,"endOffset":40142,"count":0}],"isBlockCoverage":false},{"functionName":"assertFor","ranges":[{"startOffset":40144,"endOffset":40207,"count":0}],"isBlockCoverage":false},{"functionName":"assertForXStatement","ranges":[{"startOffset":40209,"endOffset":40292,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":40294,"endOffset":40367,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionParent","ranges":[{"startOffset":40369,"endOffset":40454,"count":0}],"isBlockCoverage":false},{"functionName":"assertPureish","ranges":[{"startOffset":40456,"endOffset":40527,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaration","ranges":[{"startOffset":40529,"endOffset":40608,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternLike","ranges":[{"startOffset":40610,"endOffset":40689,"count":0}],"isBlockCoverage":false},{"functionName":"assertLVal","ranges":[{"startOffset":40691,"endOffset":40756,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEntityName","ranges":[{"startOffset":40758,"endOffset":40839,"count":0}],"isBlockCoverage":false},{"functionName":"assertLiteral","ranges":[{"startOffset":40841,"endOffset":40912,"count":0}],"isBlockCoverage":false},{"functionName":"assertImmutable","ranges":[{"startOffset":40914,"endOffset":40989,"count":0}],"isBlockCoverage":false},{"functionName":"assertUserWhitespacable","ranges":[{"startOffset":40991,"endOffset":41082,"count":0}],"isBlockCoverage":false},{"functionName":"assertMethod","ranges":[{"startOffset":41084,"endOffset":41153,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMember","ranges":[{"startOffset":41155,"endOffset":41236,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":41238,"endOffset":41311,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryLike","ranges":[{"startOffset":41313,"endOffset":41388,"count":0}],"isBlockCoverage":false},{"functionName":"assertPattern","ranges":[{"startOffset":41390,"endOffset":41461,"count":0}],"isBlockCoverage":false},{"functionName":"assertClass","ranges":[{"startOffset":41463,"endOffset":41530,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleDeclaration","ranges":[{"startOffset":41532,"endOffset":41623,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDeclaration","ranges":[{"startOffset":41625,"endOffset":41716,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleSpecifier","ranges":[{"startOffset":41718,"endOffset":41805,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlow","ranges":[{"startOffset":41807,"endOffset":41872,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowType","ranges":[{"startOffset":41874,"endOffset":41947,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowBaseAnnotation","ranges":[{"startOffset":41949,"endOffset":42042,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowDeclaration","ranges":[{"startOffset":42044,"endOffset":42131,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowPredicate","ranges":[{"startOffset":42133,"endOffset":42216,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBody","ranges":[{"startOffset":42218,"endOffset":42291,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumMember","ranges":[{"startOffset":42293,"endOffset":42370,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSX","ranges":[{"startOffset":42372,"endOffset":42435,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivate","ranges":[{"startOffset":42437,"endOffset":42508,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeElement","ranges":[{"startOffset":42510,"endOffset":42593,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSType","ranges":[{"startOffset":42595,"endOffset":42664,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBaseType","ranges":[{"startOffset":42666,"endOffset":42743,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteral","ranges":[{"startOffset":42745,"endOffset":42911,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegexLiteral","ranges":[{"startOffset":42913,"endOffset":43075,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestProperty","ranges":[{"startOffset":43077,"endOffset":43237,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadProperty","ranges":[{"startOffset":43239,"endOffset":43407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"690","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1086,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeAnnotationBasedOnTypeof","ranges":[{"startOffset":177,"endOffset":1086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"691","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":605,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":274,"endOffset":369,"count":1},{"startOffset":348,"endOffset":366,"count":0}],"isBlockCoverage":true},{"functionName":"createFlowUnionType","ranges":[{"startOffset":371,"endOffset":605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1763,"count":1}],"isBlockCoverage":true},{"functionName":"getQualifiedName","ranges":[{"startOffset":178,"endOffset":330,"count":0}],"isBlockCoverage":false},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":332,"endOffset":1763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"693","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":675,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":278,"endOffset":373,"count":1},{"startOffset":352,"endOffset":370,"count":0}],"isBlockCoverage":true},{"functionName":"createTSUnionType","ranges":[{"startOffset":375,"endOffset":675,"count":0}],"isBlockCoverage":false}]},{"scriptId":"694","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1047,"count":1}],"isBlockCoverage":true},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":178,"endOffset":1047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/builders/generated/uppercase.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34453,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":300,"endOffset":357,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":442,"endOffset":495,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":584,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":719,"endOffset":765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":850,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":986,"endOffset":1037,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1120,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1254,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1385,"endOffset":1433,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1523,"endOffset":1581,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1667,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1807,"endOffset":1861,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1946,"endOffset":1999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2082,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2221,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2350,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2474,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2606,"endOffset":2655,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2743,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2886,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3020,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3147,"endOffset":3195,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3280,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3415,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3548,"endOffset":3599,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3679,"endOffset":3727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3810,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3943,"endOffset":3993,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4079,"endOffset":4133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4218,"endOffset":4271,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4353,"endOffset":4403,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4479,"endOffset":4523,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4608,"endOffset":4661,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4742,"endOffset":4791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4874,"endOffset":4925,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5005,"endOffset":5053,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5137,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5276,"endOffset":5331,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5423,"endOffset":5483,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5562,"endOffset":5609,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5693,"endOffset":5745,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5828,"endOffset":5879,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5962,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6094,"endOffset":6143,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6227,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6364,"endOffset":6417,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6505,"endOffset":6561,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6648,"endOffset":6703,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6786,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6919,"endOffset":6969,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7055,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7190,"endOffset":7239,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7331,"endOffset":7391,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7469,"endOffset":7515,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7599,"endOffset":7651,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7736,"endOffset":7789,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7878,"endOffset":7935,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8028,"endOffset":8089,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8180,"endOffset":8239,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8323,"endOffset":8375,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8458,"endOffset":8509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8595,"endOffset":8649,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8740,"endOffset":8799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8892,"endOffset":8953,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9037,"endOffset":9089,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9170,"endOffset":9219,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9299,"endOffset":9347,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9429,"endOffset":9479,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9561,"endOffset":9611,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9685,"endOffset":9727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9820,"endOffset":9881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9965,"endOffset":10017,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10101,"endOffset":10153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10237,"endOffset":10289,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10373,"endOffset":10425,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10500,"endOffset":10543,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10625,"endOffset":10675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10768,"endOffset":10829,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10922,"endOffset":10983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11074,"endOffset":11133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11219,"endOffset":11273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11361,"endOffset":11417,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11507,"endOffset":11565,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11662,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11821,"endOffset":11883,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":11967,"endOffset":12019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12100,"endOffset":12149,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12233,"endOffset":12285,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12370,"endOffset":12423,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12505,"endOffset":12555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12644,"endOffset":12701,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12786,"endOffset":12839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":12925,"endOffset":12979,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13063,"endOffset":13115,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13208,"endOffset":13269,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13365,"endOffset":13429,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13515,"endOffset":13569,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13658,"endOffset":13715,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13806,"endOffset":13865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13951,"endOffset":14005,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14095,"endOffset":14153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14239,"endOffset":14293,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14378,"endOffset":14431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14520,"endOffset":14577,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14669,"endOffset":14729,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14824,"endOffset":14887,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14975,"endOffset":15031,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15119,"endOffset":15175,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15266,"endOffset":15325,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15421,"endOffset":15485,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15574,"endOffset":15631,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15720,"endOffset":15777,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15868,"endOffset":15927,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16018,"endOffset":16077,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16163,"endOffset":16217,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16304,"endOffset":16359,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16452,"endOffset":16513,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16592,"endOffset":16639,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16731,"endOffset":16791,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16887,"endOffset":16951,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17040,"endOffset":17097,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17186,"endOffset":17243,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17330,"endOffset":17385,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17473,"endOffset":17529,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17618,"endOffset":17675,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17753,"endOffset":17799,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17882,"endOffset":17933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18020,"endOffset":18075,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18157,"endOffset":18207,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18300,"endOffset":18361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18456,"endOffset":18519,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18607,"endOffset":18663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18740,"endOffset":18785,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18872,"endOffset":18927,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19011,"endOffset":19063,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19147,"endOffset":19199,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19282,"endOffset":19333,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19416,"endOffset":19467,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19550,"endOffset":19601,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19687,"endOffset":19741,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19826,"endOffset":19879,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":19964,"endOffset":20017,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20105,"endOffset":20161,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20242,"endOffset":20291,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20377,"endOffset":20431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20510,"endOffset":20557,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20644,"endOffset":20699,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20790,"endOffset":20849,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20932,"endOffset":20983,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21065,"endOffset":21115,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21203,"endOffset":21259,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21345,"endOffset":21399,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21485,"endOffset":21539,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21626,"endOffset":21681,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21757,"endOffset":21801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21881,"endOffset":21929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22016,"endOffset":22071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22158,"endOffset":22213,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22286,"endOffset":22327,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22407,"endOffset":22455,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22545,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22691,"endOffset":22747,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22830,"endOffset":22881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22963,"endOffset":23013,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23105,"endOffset":23165,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23254,"endOffset":23311,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23409,"endOffset":23475,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23564,"endOffset":23621,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23708,"endOffset":23763,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23847,"endOffset":23899,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23977,"endOffset":24023,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24104,"endOffset":24153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24244,"endOffset":24303,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24383,"endOffset":24431,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24516,"endOffset":24569,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24653,"endOffset":24705,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24788,"endOffset":24839,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24919,"endOffset":24967,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25052,"endOffset":25105,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25193,"endOffset":25249,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25335,"endOffset":25389,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25473,"endOffset":25525,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25609,"endOffset":25661,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25756,"endOffset":25819,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25919,"endOffset":25987,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26075,"endOffset":26131,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26217,"endOffset":26271,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26356,"endOffset":26409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26490,"endOffset":26539,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26624,"endOffset":26677,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26761,"endOffset":26813,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26900,"endOffset":26955,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27038,"endOffset":27089,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27171,"endOffset":27221,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27305,"endOffset":27357,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27441,"endOffset":27493,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27577,"endOffset":27629,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27713,"endOffset":27765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27852,"endOffset":27907,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27992,"endOffset":28045,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28127,"endOffset":28177,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28256,"endOffset":28303,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28386,"endOffset":28437,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28523,"endOffset":28577,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28661,"endOffset":28713,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28797,"endOffset":28849,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":28929,"endOffset":28977,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29059,"endOffset":29109,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29189,"endOffset":29237,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29317,"endOffset":29365,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29448,"endOffset":29499,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29578,"endOffset":29625,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29712,"endOffset":29767,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29847,"endOffset":29895,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":29982,"endOffset":30037,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30123,"endOffset":30177,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30257,"endOffset":30305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30393,"endOffset":30449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30532,"endOffset":30583,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30671,"endOffset":30727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30808,"endOffset":30857,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":30939,"endOffset":30989,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31087,"endOffset":31153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31244,"endOffset":31303,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31387,"endOffset":31439,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31530,"endOffset":31589,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31672,"endOffset":31723,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31807,"endOffset":31859,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31945,"endOffset":31999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32080,"endOffset":32129,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32217,"endOffset":32273,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32355,"endOffset":32405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32486,"endOffset":32535,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32629,"endOffset":32691,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32785,"endOffset":32847,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":32935,"endOffset":32991,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33078,"endOffset":33133,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33230,"endOffset":33295,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33380,"endOffset":33433,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33530,"endOffset":33595,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33690,"endOffset":33753,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33837,"endOffset":33889,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33971,"endOffset":34021,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34102,"endOffset":34151,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34232,"endOffset":34281,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34364,"endOffset":34415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2587,"count":1}],"isBlockCoverage":true},{"functionName":"cloneIfNode","ranges":[{"startOffset":277,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"cloneIfNodeOrArray","ranges":[{"startOffset":435,"endOffset":632,"count":0}],"isBlockCoverage":false},{"functionName":"cloneNode","ranges":[{"startOffset":634,"endOffset":2292,"count":0}],"isBlockCoverage":false},{"functionName":"cloneCommentsWithoutLoc","ranges":[{"startOffset":2294,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCloneComments","ranges":[{"startOffset":2440,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":340,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":246,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":269,"endOffset":340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":176,"endOffset":271,"count":1},{"startOffset":250,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":273,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":260,"endOffset":278,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeepWithoutLoc","ranges":[{"startOffset":283,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":256,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"cloneWithoutLoc","ranges":[{"startOffset":279,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/addComment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":453,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":255,"endOffset":273,"count":0}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":278,"endOffset":453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/addComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":448,"count":1}],"isBlockCoverage":true},{"functionName":"addComments","ranges":[{"startOffset":112,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritInnerComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":264,"endOffset":282,"count":0}],"isBlockCoverage":true},{"functionName":"inheritInnerComments","ranges":[{"startOffset":287,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/utils/inherit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"inherit","ranges":[{"startOffset":108,"endOffset":267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritLeadingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":398,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":266,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"inheritLeadingComments","ranges":[{"startOffset":289,"endOffset":398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"706","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritsComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":391,"endOffset":486,"count":3},{"startOffset":465,"endOffset":483,"count":0}],"isBlockCoverage":true},{"functionName":"inheritsComments","ranges":[{"startOffset":488,"endOffset":712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/inheritTrailingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":267,"endOffset":285,"count":0}],"isBlockCoverage":true},{"functionName":"inheritTrailingComments","ranges":[{"startOffset":290,"endOffset":401,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/comments/removeComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"removeComments","ranges":[{"startOffset":158,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/constants/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6598,"count":1}],"isBlockCoverage":true}]},{"scriptId":"710","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/ensureBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":376,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"ensureBlock","ranges":[{"startOffset":271,"endOffset":376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"toBlock","ranges":[{"startOffset":215,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":196,"endOffset":291,"count":1},{"startOffset":270,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"toBindingIdentifierName","ranges":[{"startOffset":293,"endOffset":459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"713","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":819,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":288,"endOffset":383,"count":1},{"startOffset":362,"endOffset":380,"count":0}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":385,"endOffset":819,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toComputedKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":221,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"715","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":699,"count":1}],"isBlockCoverage":true},{"functionName":"toExpression","ranges":[{"startOffset":219,"endOffset":699,"count":0}],"isBlockCoverage":false}]},{"scriptId":"716","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toKeyAlias.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1158,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":341,"endOffset":436,"count":2},{"startOffset":415,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"toKeyAlias","ranges":[{"startOffset":438,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias.increment","ranges":[{"startOffset":1016,"endOffset":1157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"717","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":283,"endOffset":378,"count":2},{"startOffset":357,"endOffset":375,"count":0}],"isBlockCoverage":true},{"functionName":"removePropertiesDeep","ranges":[{"startOffset":380,"endOffset":509,"count":0}],"isBlockCoverage":false}]},{"scriptId":"718","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/traverse/traverseFast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"traverseFast","ranges":[{"startOffset":160,"endOffset":586,"count":166},{"startOffset":216,"endOffset":223,"count":60},{"startOffset":223,"endOffset":290,"count":106},{"startOffset":290,"endOffset":297,"count":0},{"startOffset":297,"endOffset":312,"count":106},{"startOffset":312,"endOffset":317,"count":14},{"startOffset":433,"endOffset":525,"count":46},{"startOffset":469,"endOffset":519,"count":32},{"startOffset":525,"endOffset":580,"count":120},{"startOffset":584,"endOffset":585,"count":106}],"isBlockCoverage":true}]},{"scriptId":"719","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/removeProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":765,"count":1}],"isBlockCoverage":true},{"functionName":"removeProperties","ranges":[{"startOffset":333,"endOffset":765,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toSequenceExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":293,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"toSequenceExpression","ranges":[{"startOffset":316,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"721","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2497,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":408,"endOffset":503,"count":2},{"startOffset":482,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"gatherSequenceExpressions","ranges":[{"startOffset":505,"endOffset":2497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"722","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2531,"count":1}],"isBlockCoverage":true},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":176,"endOffset":1309,"count":5},{"startOffset":330,"endOffset":1292,"count":10},{"startOffset":376,"endOffset":385,"count":0},{"startOffset":483,"endOffset":661,"count":5},{"startOffset":596,"endOffset":638,"count":0},{"startOffset":661,"endOffset":711,"count":5},{"startOffset":711,"endOffset":757,"count":0},{"startOffset":759,"endOffset":887,"count":0},{"startOffset":887,"endOffset":1105,"count":5},{"startOffset":963,"endOffset":1018,"count":0},{"startOffset":1072,"endOffset":1099,"count":0},{"startOffset":1105,"endOffset":1288,"count":5}],"isBlockCoverage":true}]},{"scriptId":"723","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/toStatement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":984,"count":1}],"isBlockCoverage":true},{"functionName":"toStatement","ranges":[{"startOffset":271,"endOffset":984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/converters/valueToNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2332,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":253,"endOffset":348,"count":1},{"startOffset":327,"endOffset":345,"count":0}],"isBlockCoverage":true},{"functionName":"isRegExp","ranges":[{"startOffset":463,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"valueToNode","ranges":[{"startOffset":563,"endOffset":2332,"count":0}],"isBlockCoverage":false}]},{"scriptId":"725","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"appendToMemberExpression","ranges":[{"startOffset":177,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"726","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":1},{"startOffset":316,"endOffset":334,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":339,"endOffset":816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"727","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"prependToMemberExpression","ranges":[{"startOffset":178,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":493,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":197,"endOffset":292,"count":1},{"startOffset":271,"endOffset":289,"count":0}],"isBlockCoverage":true},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":366,"endOffset":493,"count":5}],"isBlockCoverage":true}]},{"scriptId":"729","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/traverse/traverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1198,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":156,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"traverseSimpleImpl","ranges":[{"startOffset":391,"endOffset":1198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"730","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isBinding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":212,"endOffset":307,"count":1},{"startOffset":286,"endOffset":304,"count":0}],"isBlockCoverage":true},{"functionName":"isBinding","ranges":[{"startOffset":309,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isBlockScoped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isBlockScoped","ranges":[{"startOffset":311,"endOffset":470,"count":44}],"isBlockCoverage":true}]},{"scriptId":"732","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isLet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":334,"count":1}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":191,"endOffset":334,"count":44},{"startOffset":267,"endOffset":331,"count":8},{"startOffset":291,"endOffset":330,"count":0}],"isBlockCoverage":true}]},{"scriptId":"733","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isImmutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":311,"endOffset":567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"734","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isNodesEquivalent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1457,"count":1}],"isBlockCoverage":true},{"functionName":"isNodesEquivalent","ranges":[{"startOffset":165,"endOffset":1457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"735","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isReferenced.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2378,"count":1}],"isBlockCoverage":true},{"functionName":"isReferenced","ranges":[{"startOffset":113,"endOffset":2378,"count":11},{"startOffset":193,"endOffset":217,"count":4},{"startOffset":222,"endOffset":249,"count":4},{"startOffset":254,"endOffset":404,"count":4},{"startOffset":323,"endOffset":404,"count":2},{"startOffset":410,"endOffset":471,"count":4},{"startOffset":477,"endOffset":543,"count":0},{"startOffset":549,"endOffset":588,"count":0},{"startOffset":594,"endOffset":613,"count":0},{"startOffset":618,"endOffset":644,"count":0},{"startOffset":649,"endOffset":741,"count":0},{"startOffset":747,"endOffset":769,"count":0},{"startOffset":774,"endOffset":795,"count":0},{"startOffset":800,"endOffset":1036,"count":0},{"startOffset":1042,"endOffset":1066,"count":0},{"startOffset":1071,"endOffset":1135,"count":0},{"startOffset":1141,"endOffset":1205,"count":0},{"startOffset":1211,"endOffset":1272,"count":0},{"startOffset":1278,"endOffset":1322,"count":0},{"startOffset":1328,"endOffset":1367,"count":0},{"startOffset":1373,"endOffset":1412,"count":0},{"startOffset":1418,"endOffset":1440,"count":0},{"startOffset":1445,"endOffset":1490,"count":0},{"startOffset":1496,"endOffset":1523,"count":0},{"startOffset":1528,"endOffset":1574,"count":0},{"startOffset":1580,"endOffset":1612,"count":0},{"startOffset":1617,"endOffset":1667,"count":0},{"startOffset":1673,"endOffset":1818,"count":0},{"startOffset":1824,"endOffset":1854,"count":0},{"startOffset":1859,"endOffset":1891,"count":0},{"startOffset":1896,"endOffset":1939,"count":2},{"startOffset":1945,"endOffset":1985,"count":0},{"startOffset":1991,"endOffset":2012,"count":0},{"startOffset":2017,"endOffset":2057,"count":0},{"startOffset":2063,"endOffset":2103,"count":0},{"startOffset":2109,"endOffset":2169,"count":0},{"startOffset":2175,"endOffset":2228,"count":0},{"startOffset":2234,"endOffset":2356,"count":0},{"startOffset":2360,"endOffset":2377,"count":1}],"isBlockCoverage":true}]},{"scriptId":"736","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isScope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":523,"count":1}],"isBlockCoverage":true},{"functionName":"isScope","ranges":[{"startOffset":150,"endOffset":523,"count":158},{"startOffset":228,"endOffset":308,"count":0},{"startOffset":310,"endOffset":333,"count":0},{"startOffset":373,"endOffset":453,"count":0},{"startOffset":455,"endOffset":477,"count":0}],"isBlockCoverage":true}]},{"scriptId":"737","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isSpecifierDefault.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"isSpecifierDefault","ranges":[{"startOffset":161,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isValidES3Identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"isValidES3Identifier","ranges":[{"startOffset":594,"endOffset":719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/types/lib/validators/isVar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"isVar","ranges":[{"startOffset":191,"endOffset":333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/scope/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24836,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":388,"endOffset":574,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":576,"endOffset":1319,"count":1},{"startOffset":658,"endOffset":731,"count":0},{"startOffset":733,"endOffset":829,"count":0},{"startOffset":831,"endOffset":959,"count":0},{"startOffset":982,"endOffset":1318,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1321,"endOffset":1416,"count":3},{"startOffset":1395,"endOffset":1413,"count":0}],"isBlockCoverage":true},{"functionName":"gatherNodeParts","ranges":[{"startOffset":1455,"endOffset":4955,"count":0}],"isBlockCoverage":false},{"functionName":"For","ranges":[{"startOffset":4986,"endOffset":5266,"count":0}],"isBlockCoverage":false},{"functionName":"Declaration","ranges":[{"startOffset":5271,"endOffset":5498,"count":5},{"startOffset":5321,"endOffset":5328,"count":4},{"startOffset":5328,"endOffset":5365,"count":1},{"startOffset":5365,"endOffset":5372,"count":0},{"startOffset":5372,"endOffset":5455,"count":1}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":5503,"endOffset":5575,"count":3}],"isBlockCoverage":true},{"functionName":"ForXStatement","ranges":[{"startOffset":5580,"endOffset":5748,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":5778,"endOffset":6482,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":6492,"endOffset":6579,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6584,"endOffset":6657,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":6662,"endOffset":6738,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":6743,"endOffset":6869,"count":0}],"isBlockCoverage":false},{"functionName":"BlockScoped","ranges":[{"startOffset":6874,"endOffset":7246,"count":4},{"startOffset":6951,"endOffset":6972,"count":0},{"startOffset":7089,"endOffset":7104,"count":0},{"startOffset":7106,"endOffset":7242,"count":0}],"isBlockCoverage":true},{"functionName":"CatchClause","ranges":[{"startOffset":7251,"endOffset":7319,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":7324,"endOffset":7648,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":7653,"endOffset":7806,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":7841,"endOffset":8475,"count":21},{"startOffset":8252,"endOffset":8260,"count":7},{"startOffset":8261,"endOffset":8274,"count":14},{"startOffset":8286,"endOffset":8314,"count":14},{"startOffset":8314,"endOffset":8474,"count":7}],"isBlockCoverage":true},{"functionName":"get parent","ranges":[{"startOffset":8479,"endOffset":8842,"count":4},{"startOffset":8650,"endOffset":8668,"count":0},{"startOffset":8670,"endOffset":8693,"count":0},{"startOffset":8709,"endOffset":8726,"count":0},{"startOffset":8728,"endOffset":8742,"count":0},{"startOffset":8761,"endOffset":8771,"count":0},{"startOffset":8822,"endOffset":8837,"count":0}],"isBlockCoverage":true},{"functionName":"get parentBlock","ranges":[{"startOffset":8846,"endOffset":8898,"count":0}],"isBlockCoverage":false},{"functionName":"get hub","ranges":[{"startOffset":8902,"endOffset":8943,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":8947,"endOffset":9041,"count":0}],"isBlockCoverage":false},{"functionName":"generateDeclaredUidIdentifier","ranges":[{"startOffset":9045,"endOffset":9196,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidIdentifier","ranges":[{"startOffset":9200,"endOffset":9282,"count":0}],"isBlockCoverage":false},{"functionName":"generateUid","ranges":[{"startOffset":9286,"endOffset":9718,"count":0}],"isBlockCoverage":false},{"functionName":"_generateUid","ranges":[{"startOffset":9722,"endOffset":9813,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidBasedOnNode","ranges":[{"startOffset":9817,"endOffset":10051,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidIdentifierBasedOnNode","ranges":[{"startOffset":10055,"endOffset":10185,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":10189,"endOffset":10518,"count":0}],"isBlockCoverage":false},{"functionName":"maybeGenerateMemoised","ranges":[{"startOffset":10522,"endOffset":10823,"count":0}],"isBlockCoverage":false},{"functionName":"checkBlockScopedCollisions","ranges":[{"startOffset":10827,"endOffset":11248,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":11252,"endOffset":11506,"count":0}],"isBlockCoverage":false},{"functionName":"_renameFromMap","ranges":[{"startOffset":11510,"endOffset":11645,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":11649,"endOffset":12171,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":12175,"endOffset":13200,"count":0}],"isBlockCoverage":false},{"functionName":"hasLabel","ranges":[{"startOffset":13204,"endOffset":13258,"count":0}],"isBlockCoverage":false},{"functionName":"getLabel","ranges":[{"startOffset":13262,"endOffset":13316,"count":0}],"isBlockCoverage":false},{"functionName":"registerLabel","ranges":[{"startOffset":13320,"endOffset":13394,"count":0}],"isBlockCoverage":false},{"functionName":"registerDeclaration","ranges":[{"startOffset":13398,"endOffset":14410,"count":5},{"startOffset":13461,"endOffset":13500,"count":0},{"startOffset":13540,"endOffset":13608,"count":0},{"startOffset":13648,"endOffset":13814,"count":4},{"startOffset":13814,"endOffset":14406,"count":1},{"startOffset":13851,"endOffset":13899,"count":0},{"startOffset":14097,"endOffset":14406,"count":0}],"isBlockCoverage":true},{"functionName":"buildUndefinedNode","ranges":[{"startOffset":14414,"endOffset":14505,"count":0}],"isBlockCoverage":false},{"functionName":"registerConstantViolation","ranges":[{"startOffset":14509,"endOffset":14730,"count":0}],"isBlockCoverage":false},{"functionName":"registerBinding","ranges":[{"startOffset":14734,"endOffset":15758,"count":5},{"startOffset":14799,"endOffset":14837,"count":0},{"startOffset":14877,"endOffset":15046,"count":0},{"startOffset":15334,"endOffset":15460,"count":0},{"startOffset":15481,"endOffset":15547,"count":0}],"isBlockCoverage":true},{"functionName":"addGlobal","ranges":[{"startOffset":15762,"endOffset":15819,"count":3}],"isBlockCoverage":true},{"functionName":"hasUid","ranges":[{"startOffset":15823,"endOffset":15969,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobal","ranges":[{"startOffset":15973,"endOffset":16125,"count":0}],"isBlockCoverage":false},{"functionName":"hasReference","ranges":[{"startOffset":16129,"endOffset":16208,"count":0}],"isBlockCoverage":false},{"functionName":"isPure","ranges":[{"startOffset":16212,"endOffset":18174,"count":0}],"isBlockCoverage":false},{"functionName":"setData","ranges":[{"startOffset":18178,"endOffset":18234,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":18238,"endOffset":18397,"count":0}],"isBlockCoverage":false},{"functionName":"removeData","ranges":[{"startOffset":18401,"endOffset":18574,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":18578,"endOffset":18666,"count":158},{"startOffset":18609,"endOffset":18662,"count":7}],"isBlockCoverage":true},{"functionName":"crawl","ranges":[{"startOffset":18670,"endOffset":20176,"count":7},{"startOffset":18989,"endOffset":18996,"count":0},{"startOffset":19157,"endOffset":19186,"count":0},{"startOffset":19188,"endOffset":19465,"count":0},{"startOffset":19581,"endOffset":19836,"count":0},{"startOffset":19878,"endOffset":20064,"count":3},{"startOffset":19959,"endOffset":20000,"count":0},{"startOffset":20115,"endOffset":20172,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":20180,"endOffset":21257,"count":0}],"isBlockCoverage":false},{"functionName":"getProgramParent","ranges":[{"startOffset":21261,"endOffset":21468,"count":13},{"startOffset":21385,"endOffset":21467,"count":0}],"isBlockCoverage":true},{"functionName":"getFunctionParent","ranges":[{"startOffset":21472,"endOffset":21656,"count":1},{"startOffset":21567,"endOffset":21598,"count":0}],"isBlockCoverage":true},{"functionName":"getBlockParent","ranges":[{"startOffset":21660,"endOffset":21922,"count":4},{"startOffset":21786,"endOffset":21921,"count":0}],"isBlockCoverage":true},{"functionName":"getAllBindings","ranges":[{"startOffset":21926,"endOffset":22235,"count":0}],"isBlockCoverage":false},{"functionName":"getAllBindingsOfKind","ranges":[{"startOffset":22239,"endOffset":22632,"count":0}],"isBlockCoverage":false},{"functionName":"bindingIdentifierEquals","ranges":[{"startOffset":22636,"endOffset":22730,"count":0}],"isBlockCoverage":false},{"functionName":"getBinding","ranges":[{"startOffset":22734,"endOffset":23142,"count":3},{"startOffset":22876,"endOffset":23068,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnBinding","ranges":[{"startOffset":23146,"endOffset":23203,"count":8}],"isBlockCoverage":true},{"functionName":"getBindingIdentifier","ranges":[{"startOffset":23207,"endOffset":23368,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnBindingIdentifier","ranges":[{"startOffset":23372,"endOffset":23506,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnBinding","ranges":[{"startOffset":23510,"endOffset":23574,"count":0}],"isBlockCoverage":false},{"functionName":"hasBinding","ranges":[{"startOffset":23578,"endOffset":23945,"count":0}],"isBlockCoverage":false},{"functionName":"parentHasBinding","ranges":[{"startOffset":23949,"endOffset":24112,"count":0}],"isBlockCoverage":false},{"functionName":"moveBindingTo","ranges":[{"startOffset":24116,"endOffset":24313,"count":0}],"isBlockCoverage":false},{"functionName":"removeOwnBinding","ranges":[{"startOffset":24317,"endOffset":24377,"count":0}],"isBlockCoverage":false},{"functionName":"removeBinding","ranges":[{"startOffset":24381,"endOffset":24689,"count":0}],"isBlockCoverage":false}]},{"scriptId":"742","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/scope/lib/renamer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4723,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":341,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":529,"endOffset":1272,"count":1},{"startOffset":611,"endOffset":684,"count":0},{"startOffset":686,"endOffset":782,"count":0},{"startOffset":784,"endOffset":912,"count":0},{"startOffset":935,"endOffset":1271,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1274,"endOffset":1369,"count":2},{"startOffset":1348,"endOffset":1366,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1397,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":1529,"endOffset":1688,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression|Declaration|VariableDeclarator","ranges":[{"startOffset":1693,"endOffset":1965,"count":0}],"isBlockCoverage":false},{"functionName":"Renamer","ranges":[{"startOffset":1989,"endOffset":2117,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromExportDeclaration","ranges":[{"startOffset":2121,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromClassFunctionDeclaration","ranges":[{"startOffset":2502,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromClassFunctionExpression","ranges":[{"startOffset":2905,"endOffset":3309,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":3313,"endOffset":4444,"count":0}],"isBlockCoverage":false},{"functionName":"skipAllButComputedMethodKey","ranges":[{"startOffset":4477,"endOffset":4723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"743","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/scope/binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1336,"count":1}],"isBlockCoverage":true},{"functionName":"Binding","ranges":[{"startOffset":125,"endOffset":567,"count":5}],"isBlockCoverage":true},{"functionName":"deoptValue","ranges":[{"startOffset":571,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"setValue","ranges":[{"startOffset":649,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"clearValue","ranges":[{"startOffset":762,"endOffset":864,"count":5}],"isBlockCoverage":true},{"functionName":"reassign","ranges":[{"startOffset":868,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"reference","ranges":[{"startOffset":1037,"endOffset":1218,"count":0}],"isBlockCoverage":false},{"functionName":"dereference","ranges":[{"startOffset":1222,"endOffset":1305,"count":0}],"isBlockCoverage":false}]},{"scriptId":"744","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-split-export-declaration/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3108,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":182,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":370,"endOffset":1113,"count":1},{"startOffset":452,"endOffset":525,"count":0},{"startOffset":527,"endOffset":623,"count":0},{"startOffset":625,"endOffset":753,"count":0},{"startOffset":776,"endOffset":1112,"count":0}],"isBlockCoverage":true},{"functionName":"splitExportDeclaration","ranges":[{"startOffset":1115,"endOffset":3108,"count":0}],"isBlockCoverage":false}]},{"scriptId":"745","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":304,"endOffset":355,"count":0}],"isBlockCoverage":false},{"functionName":"clearPath","ranges":[{"startOffset":357,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"clearScope","ranges":[{"startOffset":422,"endOffset":488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"746","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/globals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":58,"count":1}],"isBlockCoverage":true}]},{"scriptId":"747","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2589,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":270,"endOffset":365,"count":2},{"startOffset":344,"endOffset":362,"count":0}],"isBlockCoverage":true},{"functionName":"Generator","ranges":[{"startOffset":412,"endOffset":644,"count":7},{"startOffset":529,"endOffset":565,"count":0}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":648,"endOffset":701,"count":7}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":706,"endOffset":2232,"count":7},{"startOffset":1582,"endOffset":1701,"count":0},{"startOffset":1975,"endOffset":2129,"count":0},{"startOffset":2157,"endOffset":2212,"count":0}],"isBlockCoverage":true},{"functionName":"format.shouldPrintComment","ranges":[{"startOffset":1674,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"format.shouldPrintComment","ranges":[{"startOffset":1771,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"CodeGenerator","ranges":[{"startOffset":2258,"endOffset":2376,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":2380,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":2480,"endOffset":2589,"count":7}],"isBlockCoverage":true}]},{"scriptId":"748","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2204,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":240,"endOffset":245,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMap","ranges":[{"startOffset":289,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":640,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"getRawMappings","ranges":[{"startOffset":1296,"endOffset":1356,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":1360,"endOffset":2171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13461,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":355,"endOffset":541,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":543,"endOffset":1286,"count":3},{"startOffset":625,"endOffset":698,"count":0},{"startOffset":700,"endOffset":796,"count":0},{"startOffset":798,"endOffset":926,"count":0},{"startOffset":949,"endOffset":1285,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1288,"endOffset":1383,"count":1},{"startOffset":1362,"endOffset":1380,"count":0}],"isBlockCoverage":true},{"functionName":"Printer","ranges":[{"startOffset":1566,"endOffset":2052,"count":7}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":2056,"endOffset":2158,"count":7}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":2162,"endOffset":2256,"count":0}],"isBlockCoverage":false},{"functionName":"dedent","ranges":[{"startOffset":2260,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"semicolon","ranges":[{"startOffset":2358,"endOffset":2452,"count":7}],"isBlockCoverage":true},{"functionName":"rightBrace","ranges":[{"startOffset":2456,"endOffset":2573,"count":0}],"isBlockCoverage":false},{"functionName":"space","ranges":[{"startOffset":2577,"endOffset":2758,"count":19},{"startOffset":2629,"endOffset":2636,"count":0},{"startOffset":2716,"endOffset":2724,"count":0}],"isBlockCoverage":true},{"functionName":"word","ranges":[{"startOffset":2762,"endOffset":2971,"count":17},{"startOffset":2823,"endOffset":2848,"count":0},{"startOffset":2850,"endOffset":2878,"count":0}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":2975,"endOffset":3198,"count":0}],"isBlockCoverage":false},{"functionName":"token","ranges":[{"startOffset":3202,"endOffset":3471,"count":25},{"startOffset":3236,"endOffset":3257,"count":0},{"startOffset":3276,"endOffset":3297,"count":1},{"startOffset":3316,"endOffset":3337,"count":0},{"startOffset":3356,"endOffset":3380,"count":2},{"startOffset":3382,"endOffset":3410,"count":0}],"isBlockCoverage":true},{"functionName":"newline","ranges":[{"startOffset":3475,"endOffset":3876,"count":14},{"startOffset":3544,"endOffset":3551,"count":0},{"startOffset":3582,"endOffset":3623,"count":0},{"startOffset":3656,"endOffset":3663,"count":0},{"startOffset":3695,"endOffset":3701,"count":0},{"startOffset":3780,"endOffset":3784,"count":0},{"startOffset":3801,"endOffset":3842,"count":7},{"startOffset":3842,"endOffset":3872,"count":8},{"startOffset":3872,"endOffset":3875,"count":7}],"isBlockCoverage":true},{"functionName":"endsWith","ranges":[{"startOffset":3880,"endOffset":3935,"count":98}],"isBlockCoverage":true},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":3939,"endOffset":4007,"count":0}],"isBlockCoverage":false},{"functionName":"exactSource","ranges":[{"startOffset":4011,"endOffset":4107,"count":10}],"isBlockCoverage":true},{"functionName":"source","ranges":[{"startOffset":4111,"endOffset":4198,"count":0}],"isBlockCoverage":false},{"functionName":"withSource","ranges":[{"startOffset":4202,"endOffset":4305,"count":52}],"isBlockCoverage":true},{"functionName":"_space","ranges":[{"startOffset":4309,"endOffset":4352,"count":19}],"isBlockCoverage":true},{"functionName":"_newline","ranges":[{"startOffset":4356,"endOffset":4402,"count":8}],"isBlockCoverage":true},{"functionName":"_append","ranges":[{"startOffset":4406,"endOffset":4630,"count":76},{"startOffset":4511,"endOffset":4532,"count":34},{"startOffset":4532,"endOffset":4559,"count":42}],"isBlockCoverage":true},{"functionName":"_maybeIndent","ranges":[{"startOffset":4634,"endOffset":4771,"count":76},{"startOffset":4675,"endOffset":4697,"count":0},{"startOffset":4698,"endOffset":4716,"count":0},{"startOffset":4718,"endOffset":4767,"count":0}],"isBlockCoverage":true},{"functionName":"_maybeAddParen","ranges":[{"startOffset":4775,"endOffset":5555,"count":76},{"startOffset":4899,"endOffset":4960,"count":0},{"startOffset":4967,"endOffset":5554,"count":0}],"isBlockCoverage":true},{"functionName":"_catchUp","ranges":[{"startOffset":5559,"endOffset":5859,"count":62},{"startOffset":5622,"endOffset":5654,"count":0},{"startOffset":5655,"endOffset":5661,"count":0},{"startOffset":5685,"endOffset":5693,"count":0},{"startOffset":5694,"endOffset":5704,"count":0},{"startOffset":5715,"endOffset":5855,"count":0}],"isBlockCoverage":true},{"functionName":"_getIndent","ranges":[{"startOffset":5863,"endOffset":5939,"count":0}],"isBlockCoverage":false},{"functionName":"startTerminatorless","ranges":[{"startOffset":5943,"endOffset":6156,"count":0}],"isBlockCoverage":false},{"functionName":"endTerminatorless","ranges":[{"startOffset":6160,"endOffset":6341,"count":0}],"isBlockCoverage":false},{"functionName":"print","ranges":[{"startOffset":6345,"endOffset":7560,"count":71},{"startOffset":6382,"endOffset":6389,"count":19},{"startOffset":6389,"endOffset":6458,"count":52},{"startOffset":6458,"endOffset":6499,"count":0},{"startOffset":6499,"endOffset":6565,"count":52},{"startOffset":6565,"endOffset":6739,"count":0},{"startOffset":6739,"endOffset":6892,"count":52},{"startOffset":6892,"endOffset":6904,"count":0},{"startOffset":7019,"endOffset":7056,"count":0},{"startOffset":7057,"endOffset":7070,"count":0},{"startOffset":7071,"endOffset":7098,"count":0},{"startOffset":7100,"endOffset":7133,"count":0},{"startOffset":7133,"endOffset":7156,"count":52},{"startOffset":7156,"endOffset":7172,"count":0},{"startOffset":7172,"endOffset":7247,"count":52},{"startOffset":7247,"endOffset":7264,"count":45},{"startOffset":7265,"endOffset":7271,"count":14},{"startOffset":7272,"endOffset":7282,"count":38},{"startOffset":7440,"endOffset":7456,"count":0},{"startOffset":7456,"endOffset":7559,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7318,"endOffset":7375,"count":52}],"isBlockCoverage":true},{"functionName":"_maybeAddAuxComment","ranges":[{"startOffset":7564,"endOffset":7734,"count":108},{"startOffset":7644,"endOffset":7674,"count":0}],"isBlockCoverage":true},{"functionName":"_printAuxBeforeComment","ranges":[{"startOffset":7738,"endOffset":8037,"count":0}],"isBlockCoverage":false},{"functionName":"_printAuxAfterComment","ranges":[{"startOffset":8041,"endOffset":8340,"count":108},{"startOffset":8118,"endOffset":8336,"count":0}],"isBlockCoverage":true},{"functionName":"getPossibleRaw","ranges":[{"startOffset":8344,"endOffset":8528,"count":8},{"startOffset":8493,"endOffset":8524,"count":4}],"isBlockCoverage":true},{"functionName":"printJoin","ranges":[{"startOffset":8532,"endOffset":9229,"count":23},{"startOffset":8612,"endOffset":8619,"count":7},{"startOffset":8619,"endOffset":8641,"count":16},{"startOffset":8641,"endOffset":8655,"count":0},{"startOffset":8655,"endOffset":9188,"count":16},{"startOffset":8817,"endOffset":8826,"count":0},{"startOffset":8853,"endOffset":8905,"count":7},{"startOffset":8964,"endOffset":9005,"count":0},{"startOffset":9032,"endOffset":9055,"count":9},{"startOffset":9057,"endOffset":9101,"count":0},{"startOffset":9129,"endOffset":9182,"count":7},{"startOffset":9188,"endOffset":9211,"count":16},{"startOffset":9211,"endOffset":9225,"count":0}],"isBlockCoverage":true},{"functionName":"printAndIndentOnComments","ranges":[{"startOffset":9233,"endOffset":9445,"count":0}],"isBlockCoverage":false},{"functionName":"printBlock","ranges":[{"startOffset":9449,"endOffset":9598,"count":0}],"isBlockCoverage":false},{"functionName":"_printTrailingComments","ranges":[{"startOffset":9602,"endOffset":9693,"count":52}],"isBlockCoverage":true},{"functionName":"_printLeadingComments","ranges":[{"startOffset":9697,"endOffset":9792,"count":52}],"isBlockCoverage":true},{"functionName":"printInnerComments","ranges":[{"startOffset":9796,"endOffset":10081,"count":7},{"startOffset":9929,"endOffset":9958,"count":0},{"startOffset":9968,"endOffset":10077,"count":0}],"isBlockCoverage":true},{"functionName":"printSequence","ranges":[{"startOffset":10085,"endOffset":10205,"count":14}],"isBlockCoverage":true},{"functionName":"printList","ranges":[{"startOffset":10209,"endOffset":10378,"count":9},{"startOffset":10279,"endOffset":10325,"count":5}],"isBlockCoverage":true},{"functionName":"_printNewline","ranges":[{"startOffset":10382,"endOffset":10877,"count":14},{"startOffset":10483,"endOffset":10490,"count":0},{"startOffset":10521,"endOffset":10562,"count":0},{"startOffset":10616,"endOffset":10847,"count":7},{"startOffset":10675,"endOffset":10721,"count":0},{"startOffset":10750,"endOffset":10775,"count":0},{"startOffset":10833,"endOffset":10841,"count":1}],"isBlockCoverage":true},{"functionName":"_getComments","ranges":[{"startOffset":10881,"endOffset":10997,"count":104},{"startOffset":10939,"endOffset":10961,"count":52},{"startOffset":10962,"endOffset":10985,"count":52}],"isBlockCoverage":true},{"functionName":"_printComment","ranges":[{"startOffset":11001,"endOffset":12482,"count":0}],"isBlockCoverage":false},{"functionName":"_printComments","ranges":[{"startOffset":12486,"endOffset":12889,"count":104},{"startOffset":12590,"endOffset":12645,"count":0},{"startOffset":12646,"endOffset":12691,"count":0},{"startOffset":12693,"endOffset":12885,"count":0}],"isBlockCoverage":true},{"functionName":"printAssertions","ranges":[{"startOffset":12893,"endOffset":13234,"count":1},{"startOffset":12997,"endOffset":13023,"count":0},{"startOffset":13025,"endOffset":13230,"count":0}],"isBlockCoverage":true},{"functionName":"Noop","ranges":[{"startOffset":13322,"endOffset":13340,"count":0}],"isBlockCoverage":false},{"functionName":"commaSeparator","ranges":[{"startOffset":13397,"endOffset":13461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6200,"count":1}],"isBlockCoverage":true},{"functionName":"Buffer","ranges":[{"startOffset":154,"endOffset":498,"count":7}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":502,"endOffset":1070,"count":7},{"startOffset":679,"endOffset":701,"count":0},{"startOffset":723,"endOffset":1046,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":833,"endOffset":889,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":900,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":1074,"endOffset":1300,"count":42}],"isBlockCoverage":true},{"functionName":"queue","ranges":[{"startOffset":1304,"endOffset":1662,"count":34},{"startOffset":1339,"endOffset":1459,"count":8},{"startOffset":1415,"endOffset":1453,"count":0}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":1666,"endOffset":1769,"count":49},{"startOffset":1729,"endOffset":1765,"count":34}],"isBlockCoverage":true},{"functionName":"_append","ranges":[{"startOffset":1773,"endOffset":2343,"count":76},{"startOffset":1966,"endOffset":2038,"count":68},{"startOffset":2061,"endOffset":2290,"count":8},{"startOffset":2175,"endOffset":2248,"count":0}],"isBlockCoverage":true},{"functionName":"_mark","ranges":[{"startOffset":2347,"endOffset":2582,"count":68},{"startOffset":2469,"endOffset":2577,"count":0}],"isBlockCoverage":true},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":2586,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"removeLastSemicolon","ranges":[{"startOffset":2716,"endOffset":2839,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":2843,"endOffset":3311,"count":98},{"startOffset":2891,"endOffset":3107,"count":56},{"startOffset":2944,"endOffset":3028,"count":9},{"startOffset":3028,"endOffset":3070,"count":47},{"startOffset":3107,"endOffset":3230,"count":42},{"startOffset":3230,"endOffset":3310,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3157,"endOffset":3185,"count":21}],"isBlockCoverage":true},{"functionName":"hasContent","ranges":[{"startOffset":3315,"endOffset":3384,"count":33},{"startOffset":3364,"endOffset":3379,"count":26}],"isBlockCoverage":true},{"functionName":"exactSource","ranges":[{"startOffset":3388,"endOffset":3528,"count":10}],"isBlockCoverage":true},{"functionName":"source","ranges":[{"startOffset":3532,"endOffset":3662,"count":20},{"startOffset":3581,"endOffset":3588,"count":0}],"isBlockCoverage":true},{"functionName":"withSource","ranges":[{"startOffset":3666,"endOffset":4679,"count":52},{"startOffset":3726,"endOffset":4088,"count":0},{"startOffset":4089,"endOffset":4138,"count":0},{"startOffset":4139,"endOffset":4192,"count":0},{"startOffset":4194,"endOffset":4366,"count":0},{"startOffset":4368,"endOffset":4675,"count":0}],"isBlockCoverage":true},{"functionName":"_disallowPop","ranges":[{"startOffset":4683,"endOffset":4804,"count":10},{"startOffset":4731,"endOffset":4738,"count":0}],"isBlockCoverage":true},{"functionName":"_normalizePosition","ranges":[{"startOffset":4808,"endOffset":5674,"count":30},{"startOffset":4890,"endOffset":4896,"count":0},{"startOffset":4932,"endOffset":5085,"count":10},{"startOffset":5258,"endOffset":5304,"count":20},{"startOffset":5274,"endOffset":5282,"count":0},{"startOffset":5305,"endOffset":5312,"count":10},{"startOffset":5347,"endOffset":5355,"count":0},{"startOffset":5403,"endOffset":5411,"count":0},{"startOffset":5463,"endOffset":5471,"count":0},{"startOffset":5503,"endOffset":5533,"count":20},{"startOffset":5534,"endOffset":5568,"count":10},{"startOffset":5569,"endOffset":5607,"count":0}],"isBlockCoverage":true},{"functionName":"getCurrentColumn","ranges":[{"startOffset":5678,"endOffset":5921,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentLine","ranges":[{"startOffset":5925,"endOffset":6170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":459,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":647,"endOffset":1390,"count":3},{"startOffset":729,"endOffset":802,"count":0},{"startOffset":804,"endOffset":900,"count":0},{"startOffset":902,"endOffset":1030,"count":0},{"startOffset":1053,"endOffset":1389,"count":0}],"isBlockCoverage":true},{"functionName":"expandAliases","ranges":[{"startOffset":1392,"endOffset":1945,"count":3},{"startOffset":1729,"endOffset":1925,"count":61},{"startOffset":1797,"endOffset":1880,"count":6},{"startOffset":1834,"endOffset":1874,"count":25},{"startOffset":1880,"endOffset":1921,"count":55}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1446,"endOffset":1688,"count":80},{"startOffset":1524,"endOffset":1676,"count":15},{"startOffset":1677,"endOffset":1683,"count":65}],"isBlockCoverage":true},{"functionName":"newObj.<computed>","ranges":[{"startOffset":1526,"endOffset":1676,"count":1},{"startOffset":1661,"endOffset":1669,"count":0}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":2122,"endOffset":2250,"count":64},{"startOffset":2210,"endOffset":2240,"count":12},{"startOffset":2241,"endOffset":2247,"count":52}],"isBlockCoverage":true},{"functionName":"isOrHasCallExpression","ranges":[{"startOffset":2252,"endOffset":2423,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespace","ranges":[{"startOffset":2425,"endOffset":2999,"count":10},{"startOffset":2485,"endOffset":2494,"count":0},{"startOffset":2533,"endOffset":2566,"count":2},{"startOffset":2650,"endOffset":2885,"count":9},{"startOffset":2730,"endOffset":2881,"count":3},{"startOffset":2861,"endOffset":2867,"count":0},{"startOffset":2923,"endOffset":2944,"count":3},{"startOffset":2946,"endOffset":2984,"count":1},{"startOffset":2975,"endOffset":2979,"count":0},{"startOffset":2984,"endOffset":2998,"count":9}],"isBlockCoverage":true},{"functionName":"needsWhitespaceBefore","ranges":[{"startOffset":3001,"endOffset":3099,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespaceAfter","ranges":[{"startOffset":3101,"endOffset":3197,"count":7}],"isBlockCoverage":true},{"functionName":"needsParens","ranges":[{"startOffset":3199,"endOffset":3452,"count":52},{"startOffset":3263,"endOffset":3276,"count":7},{"startOffset":3276,"endOffset":3310,"count":45},{"startOffset":3310,"endOffset":3335,"count":0},{"startOffset":3337,"endOffset":3392,"count":0},{"startOffset":3392,"endOffset":3451,"count":45}],"isBlockCoverage":true}]},{"scriptId":"752","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/node/whitespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6041,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":179,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":367,"endOffset":1110,"count":1},{"startOffset":449,"endOffset":522,"count":0},{"startOffset":524,"endOffset":620,"count":0},{"startOffset":622,"endOffset":750,"count":0},{"startOffset":773,"endOffset":1109,"count":0}],"isBlockCoverage":true},{"functionName":"crawl","ranges":[{"startOffset":1112,"endOffset":1752,"count":8},{"startOffset":1219,"endOffset":1307,"count":0},{"startOffset":1334,"endOffset":1367,"count":7},{"startOffset":1369,"endOffset":1433,"count":1},{"startOffset":1433,"endOffset":1733,"count":7},{"startOffset":1468,"endOffset":1503,"count":5},{"startOffset":1505,"endOffset":1567,"count":2},{"startOffset":1567,"endOffset":1733,"count":5},{"startOffset":1597,"endOffset":1632,"count":0},{"startOffset":1664,"endOffset":1733,"count":1}],"isBlockCoverage":true},{"functionName":"isHelper","ranges":[{"startOffset":1754,"endOffset":2235,"count":22},{"startOffset":1814,"endOffset":1880,"count":2},{"startOffset":1880,"endOffset":2233,"count":20},{"startOffset":1912,"endOffset":1977,"count":9},{"startOffset":1949,"endOffset":1972,"count":8},{"startOffset":1977,"endOffset":2233,"count":11},{"startOffset":2013,"endOffset":2052,"count":5},{"startOffset":2052,"endOffset":2233,"count":6},{"startOffset":2079,"endOffset":2112,"count":5},{"startOffset":2114,"endOffset":2204,"count":1},{"startOffset":2153,"endOffset":2175,"count":0},{"startOffset":2204,"endOffset":2233,"count":5}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":2237,"endOffset":2403,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":2423,"endOffset":2643,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":2648,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":2858,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":3005,"endOffset":3140,"count":1},{"startOffset":3085,"endOffset":3136,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":3145,"endOffset":3298,"count":3},{"startOffset":3221,"endOffset":3294,"count":0}],"isBlockCoverage":true},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":3303,"endOffset":3446,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":3451,"endOffset":3909,"count":4},{"startOffset":3619,"endOffset":3642,"count":0},{"startOffset":3749,"endOffset":3765,"count":1},{"startOffset":3766,"endOffset":3786,"count":3},{"startOffset":3816,"endOffset":3899,"count":1},{"startOffset":3905,"endOffset":3908,"count":3}],"isBlockCoverage":true},{"functionName":"IfStatement","ranges":[{"startOffset":3914,"endOffset":4056,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectProperty.nodes.ObjectTypeProperty.nodes.ObjectMethod","ranges":[{"startOffset":4156,"endOffset":4265,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeCallProperty","ranges":[{"startOffset":4299,"endOffset":4523,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeIndexer","ranges":[{"startOffset":4552,"endOffset":4890,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeInternalSlot","ranges":[{"startOffset":4924,"endOffset":5366,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":5386,"endOffset":5470,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5447,"endOffset":5464,"count":3}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":5475,"endOffset":5528,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":5533,"endOffset":5589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5756,"endOffset":6039,"count":6},{"startOffset":5938,"endOffset":5943,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5953,"endOffset":6035,"count":19}],"isBlockCoverage":true},{"functionName":"nodes.<computed>","ranges":[{"startOffset":5989,"endOffset":6030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"753","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/node/parentheses.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8453,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1271,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1459,"endOffset":2202,"count":1},{"startOffset":1541,"endOffset":1614,"count":0},{"startOffset":1616,"endOffset":1712,"count":0},{"startOffset":1714,"endOffset":1842,"count":0},{"startOffset":1865,"endOffset":2201,"count":0}],"isBlockCoverage":true},{"functionName":"isClassExtendsClause","ranges":[{"startOffset":2530,"endOffset":2639,"count":1},{"startOffset":2610,"endOffset":2639,"count":0}],"isBlockCoverage":true},{"functionName":"hasPostfixPart","ranges":[{"startOffset":2665,"endOffset":3002,"count":1},{"startOffset":2754,"endOffset":2779,"count":0},{"startOffset":2879,"endOffset":2904,"count":0},{"startOffset":2945,"endOffset":2967,"count":0}],"isBlockCoverage":true},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":3005,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":3098,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":3376,"endOffset":3496,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":3498,"endOffset":3625,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":3627,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"Binary","ranges":[{"startOffset":3721,"endOffset":4393,"count":1},{"startOffset":3782,"endOffset":3839,"count":0},{"startOffset":3841,"endOffset":3879,"count":0},{"startOffset":3923,"endOffset":3945,"count":0},{"startOffset":4039,"endOffset":4061,"count":0},{"startOffset":4089,"endOffset":4391,"count":0}],"isBlockCoverage":true},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":4395,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":4600,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":4646,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":4693,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":4884,"endOffset":4986,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":4988,"endOffset":5119,"count":1},{"startOffset":5062,"endOffset":5116,"count":0}],"isBlockCoverage":true},{"functionName":"SequenceExpression","ranges":[{"startOffset":5121,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":5589,"endOffset":5876,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":5878,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryLike","ranges":[{"startOffset":6015,"endOffset":6202,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":6204,"endOffset":6342,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":6344,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":6475,"endOffset":6783,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":6785,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6955,"endOffset":7120,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":7122,"endOffset":7517,"count":0}],"isBlockCoverage":false},{"functionName":"isFirstInStatement","ranges":[{"startOffset":7519,"endOffset":8453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"754","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3811,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177,"endOffset":459,"count":3},{"startOffset":243,"endOffset":250,"count":0},{"startOffset":272,"endOffset":314,"count":0},{"startOffset":316,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":395,"endOffset":451,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":543,"endOffset":815,"count":28},{"startOffset":609,"endOffset":616,"count":0},{"startOffset":638,"endOffset":675,"count":0},{"startOffset":677,"endOffset":684,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":756,"endOffset":807,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":896,"endOffset":1166,"count":19},{"startOffset":962,"endOffset":969,"count":0},{"startOffset":991,"endOffset":1027,"count":0},{"startOffset":1029,"endOffset":1036,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1108,"endOffset":1158,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1238,"endOffset":1502,"count":9},{"startOffset":1304,"endOffset":1311,"count":0},{"startOffset":1333,"endOffset":1366,"count":0},{"startOffset":1368,"endOffset":1375,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1447,"endOffset":1494,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1574,"endOffset":1838,"count":9},{"startOffset":1640,"endOffset":1647,"count":0},{"startOffset":1669,"endOffset":1702,"count":0},{"startOffset":1704,"endOffset":1711,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1783,"endOffset":1830,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1910,"endOffset":2174,"count":11},{"startOffset":1976,"endOffset":1983,"count":0},{"startOffset":2005,"endOffset":2038,"count":0},{"startOffset":2040,"endOffset":2047,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2119,"endOffset":2166,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2240,"endOffset":2500,"count":22},{"startOffset":2306,"endOffset":2313,"count":0},{"startOffset":2335,"endOffset":2366,"count":0},{"startOffset":2368,"endOffset":2375,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2447,"endOffset":2492,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2563,"endOffset":2821,"count":65},{"startOffset":2629,"endOffset":2636,"count":0},{"startOffset":2658,"endOffset":2688,"count":0},{"startOffset":2690,"endOffset":2697,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2769,"endOffset":2813,"count":65}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2884,"endOffset":3142,"count":7},{"startOffset":2950,"endOffset":2957,"count":0},{"startOffset":2979,"endOffset":3009,"count":0},{"startOffset":3011,"endOffset":3018,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3090,"endOffset":3134,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3202,"endOffset":3458,"count":15},{"startOffset":3268,"endOffset":3275,"count":0},{"startOffset":3297,"endOffset":3326,"count":0},{"startOffset":3328,"endOffset":3335,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3407,"endOffset":3450,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3539,"endOffset":3809,"count":70},{"startOffset":3605,"endOffset":3612,"count":0},{"startOffset":3634,"endOffset":3670,"count":0},{"startOffset":3672,"endOffset":3679,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3751,"endOffset":3801,"count":70}],"isBlockCoverage":true}]},{"scriptId":"755","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/template-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1856,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":287,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":475,"endOffset":1218,"count":1},{"startOffset":557,"endOffset":630,"count":0},{"startOffset":632,"endOffset":728,"count":0},{"startOffset":730,"endOffset":858,"count":0},{"startOffset":881,"endOffset":1217,"count":0}],"isBlockCoverage":true},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":1220,"endOffset":1366,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":1368,"endOffset":1623,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":1625,"endOffset":1856,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7947,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1365,"endOffset":1551,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1553,"endOffset":2296,"count":2},{"startOffset":1635,"endOffset":1708,"count":0},{"startOffset":1710,"endOffset":1806,"count":0},{"startOffset":1808,"endOffset":1936,"count":0},{"startOffset":1959,"endOffset":2295,"count":0}],"isBlockCoverage":true},{"functionName":"UnaryExpression","ranges":[{"startOffset":2298,"endOffset":2585,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":2587,"endOffset":2684,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":2686,"endOffset":2803,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":2805,"endOffset":3078,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":3080,"endOffset":3326,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":3328,"endOffset":3862,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":3864,"endOffset":3943,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":3945,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"Super","ranges":[{"startOffset":3997,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"Decorator","ranges":[{"startOffset":4041,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":4145,"endOffset":4764,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":4766,"endOffset":5050,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":5052,"endOffset":5277,"count":4}],"isBlockCoverage":true},{"functionName":"Import","ranges":[{"startOffset":5279,"endOffset":5323,"count":1}],"isBlockCoverage":true},{"functionName":"buildYieldAwait","ranges":[{"startOffset":5325,"endOffset":5669,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5370,"endOffset":5666,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyStatement","ranges":[{"startOffset":5858,"endOffset":5911,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":5913,"endOffset":6008,"count":2}],"isBlockCoverage":true},{"functionName":"AssignmentPattern","ranges":[{"startOffset":6010,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6251,"endOffset":6729,"count":1},{"startOffset":6345,"endOffset":6370,"count":0},{"startOffset":6371,"endOffset":6402,"count":0},{"startOffset":6419,"endOffset":6445,"count":0},{"startOffset":6559,"endOffset":6594,"count":0},{"startOffset":6701,"endOffset":6727,"count":0}],"isBlockCoverage":true},{"functionName":"BindExpression","ranges":[{"startOffset":6731,"endOffset":6850,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":6852,"endOffset":7378,"count":2},{"startOffset":6981,"endOffset":7067,"count":0},{"startOffset":7135,"endOffset":7177,"count":0},{"startOffset":7179,"endOffset":7205,"count":0},{"startOffset":7223,"endOffset":7307,"count":0}],"isBlockCoverage":true},{"functionName":"MetaProperty","ranges":[{"startOffset":7380,"endOffset":7496,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":7498,"endOffset":7576,"count":0}],"isBlockCoverage":false},{"functionName":"V8IntrinsicIdentifier","ranges":[{"startOffset":7578,"endOffset":7661,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleExpression","ranges":[{"startOffset":7663,"endOffset":7947,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/statements.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7791,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":839,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1027,"endOffset":1770,"count":1},{"startOffset":1109,"endOffset":1182,"count":0},{"startOffset":1184,"endOffset":1280,"count":0},{"startOffset":1282,"endOffset":1410,"count":0},{"startOffset":1433,"endOffset":1769,"count":0}],"isBlockCoverage":true},{"functionName":"WithStatement","ranges":[{"startOffset":1772,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":1939,"endOffset":2576,"count":0}],"isBlockCoverage":false},{"functionName":"getLastStatement","ranges":[{"startOffset":2578,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":2719,"endOffset":3146,"count":0}],"isBlockCoverage":false},{"functionName":"WhileStatement","ranges":[{"startOffset":3148,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"buildForXStatement","ranges":[{"startOffset":3342,"endOffset":3713,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3367,"endOffset":3710,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":3897,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"buildLabelStatement","ranges":[{"startOffset":4143,"endOffset":4530,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4206,"endOffset":4527,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":4949,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":5084,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":5445,"endOffset":5713,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":5715,"endOffset":6100,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":6102,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"DebuggerStatement","ranges":[{"startOffset":6441,"endOffset":6518,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclarationIndent","ranges":[{"startOffset":6520,"endOffset":6670,"count":0}],"isBlockCoverage":false},{"functionName":"constDeclarationIndent","ranges":[{"startOffset":6672,"endOffset":6819,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":6821,"endOffset":7527,"count":4},{"startOffset":6886,"endOffset":6935,"count":0},{"startOffset":7217,"endOffset":7241,"count":2},{"startOffset":7242,"endOffset":7269,"count":2},{"startOffset":7364,"endOffset":7504,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":7529,"endOffset":7791,"count":4},{"startOffset":7615,"endOffset":7631,"count":0}],"isBlockCoverage":true}]},{"scriptId":"758","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/classes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4268,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":498,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":686,"endOffset":1429,"count":1},{"startOffset":768,"endOffset":841,"count":0},{"startOffset":843,"endOffset":939,"count":0},{"startOffset":941,"endOffset":1069,"count":0},{"startOffset":1092,"endOffset":1428,"count":0}],"isBlockCoverage":true},{"functionName":"ClassDeclaration","ranges":[{"startOffset":1431,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":2293,"endOffset":2610,"count":0}],"isBlockCoverage":false},{"functionName":"ClassProperty","ranges":[{"startOffset":2612,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":3220,"endOffset":3578,"count":0}],"isBlockCoverage":false},{"functionName":"ClassMethod","ranges":[{"startOffset":3580,"endOffset":3689,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateMethod","ranges":[{"startOffset":3691,"endOffset":3807,"count":0}],"isBlockCoverage":false},{"functionName":"_classMethodHead","ranges":[{"startOffset":3809,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"StaticBlock","ranges":[{"startOffset":3999,"endOffset":4268,"count":0}],"isBlockCoverage":false}]},{"scriptId":"759","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/methods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4239,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":472,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":660,"endOffset":1403,"count":1},{"startOffset":742,"endOffset":815,"count":0},{"startOffset":817,"endOffset":913,"count":0},{"startOffset":915,"endOffset":1043,"count":0},{"startOffset":1066,"endOffset":1402,"count":0}],"isBlockCoverage":true},{"functionName":"_params","ranges":[{"startOffset":1405,"endOffset":1588,"count":0}],"isBlockCoverage":false},{"functionName":"_parameters","ranges":[{"startOffset":1590,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"_param","ranges":[{"startOffset":1815,"endOffset":2031,"count":0}],"isBlockCoverage":false},{"functionName":"_methodHead","ranges":[{"startOffset":2033,"endOffset":2617,"count":0}],"isBlockCoverage":false},{"functionName":"_predicate","ranges":[{"startOffset":2619,"endOffset":2790,"count":0}],"isBlockCoverage":false},{"functionName":"_functionHead","ranges":[{"startOffset":2792,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":3075,"endOffset":3188,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":3190,"endOffset":4086,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypes","ranges":[{"startOffset":4088,"endOffset":4239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"760","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6005,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":723,"endOffset":909,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":911,"endOffset":1654,"count":1},{"startOffset":993,"endOffset":1066,"count":0},{"startOffset":1068,"endOffset":1164,"count":0},{"startOffset":1166,"endOffset":1294,"count":0},{"startOffset":1317,"endOffset":1653,"count":0}],"isBlockCoverage":true},{"functionName":"ImportSpecifier","ranges":[{"startOffset":1656,"endOffset":2006,"count":1},{"startOffset":1755,"endOffset":1810,"count":0},{"startOffset":1908,"endOffset":2004,"count":0}],"isBlockCoverage":true},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":2008,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultSpecifier","ranges":[{"startOffset":2083,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"ExportSpecifier","ranges":[{"startOffset":2161,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamespaceSpecifier","ranges":[{"startOffset":2393,"endOffset":2541,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":2543,"endOffset":2859,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":2861,"endOffset":3131,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":3133,"endOffset":3445,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDeclaration","ranges":[{"startOffset":3447,"endOffset":4593,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":4595,"endOffset":5737,"count":1},{"startOffset":4761,"endOffset":4816,"count":0},{"startOffset":5050,"endOffset":5200,"count":0},{"startOffset":5579,"endOffset":5605,"count":0},{"startOffset":5607,"endOffset":5714,"count":0}],"isBlockCoverage":true},{"functionName":"ImportAttribute","ranges":[{"startOffset":5739,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":5860,"endOffset":6005,"count":0}],"isBlockCoverage":false}]},{"scriptId":"761","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6831,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1098,"endOffset":1193,"count":1},{"startOffset":1166,"endOffset":1171,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1195,"endOffset":1381,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1383,"endOffset":2126,"count":1},{"startOffset":1465,"endOffset":1538,"count":0},{"startOffset":1540,"endOffset":1636,"count":0},{"startOffset":1638,"endOffset":1766,"count":0},{"startOffset":1789,"endOffset":2125,"count":0}],"isBlockCoverage":true},{"functionName":"Identifier","ranges":[{"startOffset":2128,"endOffset":2226,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2185,"endOffset":2222,"count":10}],"isBlockCoverage":true},{"functionName":"ArgumentPlaceholder","ranges":[{"startOffset":2228,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":2283,"endOffset":2369,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":2371,"endOffset":2658,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectMethod","ranges":[{"startOffset":2660,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectProperty","ranges":[{"startOffset":2809,"endOffset":3410,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":3412,"endOffset":3812,"count":0}],"isBlockCoverage":false},{"functionName":"RecordExpression","ranges":[{"startOffset":3814,"endOffset":4535,"count":0}],"isBlockCoverage":false},{"functionName":"TupleExpression","ranges":[{"startOffset":4537,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":5279,"endOffset":5358,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":5360,"endOffset":5437,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":5439,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":5488,"endOffset":5898,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":5900,"endOffset":6230,"count":8},{"startOffset":6017,"endOffset":6176,"count":4},{"startOffset":6176,"endOffset":6199,"count":0}],"isBlockCoverage":true},{"functionName":"BigIntLiteral","ranges":[{"startOffset":6232,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"DecimalLiteral","ranges":[{"startOffset":6422,"endOffset":6611,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineTopicExpression","ranges":[{"startOffset":6613,"endOffset":6692,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineBareFunction","ranges":[{"startOffset":6694,"endOffset":6766,"count":0}],"isBlockCoverage":false},{"functionName":"PipelinePrimaryTopicReference","ranges":[{"startOffset":6768,"endOffset":6831,"count":0}],"isBlockCoverage":false}]},{"scriptId":"762","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/jsesc/jsesc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8389,"count":1}],"isBlockCoverage":true},{"functionName":"forOwn","ranges":[{"startOffset":95,"endOffset":229,"count":4},{"startOffset":146,"endOffset":227,"count":12}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":247,"endOffset":404,"count":4},{"startOffset":288,"endOffset":314,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":331,"endOffset":379,"count":12}],"isBlockCoverage":true},{"functionName":"forEach","ranges":[{"startOffset":423,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":670,"endOffset":807,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":826,"endOffset":921,"count":4},{"startOffset":872,"endOffset":918,"count":0}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":940,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":1056,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":1122,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":1200,"endOffset":1262,"count":0}],"isBlockCoverage":false},{"functionName":"jsesc","ranges":[{"startOffset":1765,"endOffset":8336,"count":4},{"startOffset":2327,"endOffset":2385,"count":0},{"startOffset":2491,"endOffset":2524,"count":0},{"startOffset":2528,"endOffset":2561,"count":0},{"startOffset":2612,"endOffset":2668,"count":0},{"startOffset":2933,"endOffset":2939,"count":0},{"startOffset":3199,"endOffset":3210,"count":0},{"startOffset":3211,"endOffset":3241,"count":0},{"startOffset":3243,"endOffset":3279,"count":0},{"startOffset":3307,"endOffset":5799,"count":0},{"startOffset":5972,"endOffset":7995,"count":36},{"startOffset":6035,"endOffset":6736,"count":0},{"startOffset":6952,"endOffset":7254,"count":0},{"startOffset":7258,"endOffset":7298,"count":0},{"startOffset":7299,"endOffset":7347,"count":0},{"startOffset":7352,"endOffset":7625,"count":0},{"startOffset":7626,"endOffset":7647,"count":0},{"startOffset":7649,"endOffset":7855,"count":0},{"startOffset":7892,"endOffset":7897,"count":0},{"startOffset":7898,"endOffset":7903,"count":0},{"startOffset":7948,"endOffset":7952,"count":0},{"startOffset":7953,"endOffset":7957,"count":0},{"startOffset":8074,"endOffset":8124,"count":0},{"startOffset":8155,"endOffset":8318,"count":0}],"isBlockCoverage":true},{"functionName":"increaseIndentation","ranges":[{"startOffset":1819,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4102,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5461,"endOffset":5647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16893,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3210,"endOffset":3262,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3358,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":3547,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":3735,"endOffset":4478,"count":1},{"startOffset":3817,"endOffset":3890,"count":0},{"startOffset":3892,"endOffset":3988,"count":0},{"startOffset":3990,"endOffset":4118,"count":0},{"startOffset":4141,"endOffset":4477,"count":0}],"isBlockCoverage":true},{"functionName":"AnyTypeAnnotation","ranges":[{"startOffset":4480,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":4534,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanTypeAnnotation","ranges":[{"startOffset":4650,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteralTypeAnnotation","ranges":[{"startOffset":4712,"endOffset":4803,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteralTypeAnnotation","ranges":[{"startOffset":4805,"endOffset":4866,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareClass","ranges":[{"startOffset":4868,"endOffset":5070,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareFunction","ranges":[{"startOffset":5072,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"InferredPredicate","ranges":[{"startOffset":5447,"endOffset":5521,"count":0}],"isBlockCoverage":false},{"functionName":"DeclaredPredicate","ranges":[{"startOffset":5523,"endOffset":5671,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareInterface","ranges":[{"startOffset":5673,"endOffset":5783,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModule","ranges":[{"startOffset":5785,"endOffset":5972,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModuleExports","ranges":[{"startOffset":5974,"endOffset":6160,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareTypeAlias","ranges":[{"startOffset":6162,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareOpaqueType","ranges":[{"startOffset":6263,"endOffset":6428,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareVariable","ranges":[{"startOffset":6430,"endOffset":6697,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportDeclaration","ranges":[{"startOffset":6699,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportAllDeclaration","ranges":[{"startOffset":6943,"endOffset":7082,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDeclaration","ranges":[{"startOffset":7084,"endOffset":7244,"count":0}],"isBlockCoverage":false},{"functionName":"enumExplicitType","ranges":[{"startOffset":7246,"endOffset":7446,"count":0}],"isBlockCoverage":false},{"functionName":"enumBody","ranges":[{"startOffset":7448,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanBody","ranges":[{"startOffset":7807,"endOffset":7955,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberBody","ranges":[{"startOffset":7957,"endOffset":8103,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringBody","ranges":[{"startOffset":8105,"endOffset":8251,"count":0}],"isBlockCoverage":false},{"functionName":"EnumSymbolBody","ranges":[{"startOffset":8253,"endOffset":8352,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDefaultedMember","ranges":[{"startOffset":8354,"endOffset":8464,"count":0}],"isBlockCoverage":false},{"functionName":"enumInitializedMember","ranges":[{"startOffset":8466,"endOffset":8692,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMember","ranges":[{"startOffset":8694,"endOffset":8767,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMember","ranges":[{"startOffset":8769,"endOffset":8841,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMember","ranges":[{"startOffset":8843,"endOffset":8915,"count":0}],"isBlockCoverage":false},{"functionName":"FlowExportDeclaration","ranges":[{"startOffset":8917,"endOffset":9439,"count":0}],"isBlockCoverage":false},{"functionName":"ExistsTypeAnnotation","ranges":[{"startOffset":9441,"endOffset":9495,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":9497,"endOffset":10326,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeParam","ranges":[{"startOffset":10328,"endOffset":10538,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceExtends","ranges":[{"startOffset":10540,"endOffset":10645,"count":0}],"isBlockCoverage":false},{"functionName":"_interfaceish","ranges":[{"startOffset":10647,"endOffset":11310,"count":0}],"isBlockCoverage":false},{"functionName":"_variance","ranges":[{"startOffset":11312,"endOffset":11509,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceDeclaration","ranges":[{"startOffset":11511,"endOffset":11621,"count":0}],"isBlockCoverage":false},{"functionName":"andSeparator","ranges":[{"startOffset":11623,"endOffset":11701,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceTypeAnnotation","ranges":[{"startOffset":11703,"endOffset":11971,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionTypeAnnotation","ranges":[{"startOffset":11973,"endOffset":12089,"count":0}],"isBlockCoverage":false},{"functionName":"MixedTypeAnnotation","ranges":[{"startOffset":12091,"endOffset":12147,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyTypeAnnotation","ranges":[{"startOffset":12149,"endOffset":12205,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":12207,"endOffset":12308,"count":0}],"isBlockCoverage":false},{"functionName":"NumberTypeAnnotation","ranges":[{"startOffset":12310,"endOffset":12368,"count":0}],"isBlockCoverage":false},{"functionName":"StringTypeAnnotation","ranges":[{"startOffset":12370,"endOffset":12428,"count":0}],"isBlockCoverage":false},{"functionName":"ThisTypeAnnotation","ranges":[{"startOffset":12430,"endOffset":12484,"count":0}],"isBlockCoverage":false},{"functionName":"TupleTypeAnnotation","ranges":[{"startOffset":12486,"endOffset":12598,"count":0}],"isBlockCoverage":false},{"functionName":"TypeofTypeAnnotation","ranges":[{"startOffset":12600,"endOffset":12713,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAlias","ranges":[{"startOffset":12715,"endOffset":12953,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":12955,"endOffset":13102,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterInstantiation","ranges":[{"startOffset":13104,"endOffset":13228,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameter","ranges":[{"startOffset":13230,"endOffset":13490,"count":0}],"isBlockCoverage":false},{"functionName":"OpaqueType","ranges":[{"startOffset":13492,"endOffset":13916,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":13918,"endOffset":14758,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeInternalSlot","ranges":[{"startOffset":14760,"endOffset":15112,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeCallProperty","ranges":[{"startOffset":15114,"endOffset":15256,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeIndexer","ranges":[{"startOffset":15258,"endOffset":15616,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeProperty","ranges":[{"startOffset":15618,"endOffset":16084,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeSpreadProperty","ranges":[{"startOffset":16086,"endOffset":16185,"count":0}],"isBlockCoverage":false},{"functionName":"QualifiedTypeIdentifier","ranges":[{"startOffset":16187,"endOffset":16317,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolTypeAnnotation","ranges":[{"startOffset":16319,"endOffset":16377,"count":0}],"isBlockCoverage":false},{"functionName":"orSeparator","ranges":[{"startOffset":16379,"endOffset":16456,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":16458,"endOffset":16566,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":16568,"endOffset":16721,"count":0}],"isBlockCoverage":false},{"functionName":"Variance","ranges":[{"startOffset":16723,"endOffset":16837,"count":0}],"isBlockCoverage":false},{"functionName":"VoidTypeAnnotation","ranges":[{"startOffset":16839,"endOffset":16893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3263,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":393,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":581,"endOffset":1324,"count":1},{"startOffset":663,"endOffset":736,"count":0},{"startOffset":738,"endOffset":834,"count":0},{"startOffset":836,"endOffset":964,"count":0},{"startOffset":987,"endOffset":1323,"count":0}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":1326,"endOffset":1458,"count":7}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":1460,"endOffset":1675,"count":7},{"startOffset":1619,"endOffset":1634,"count":0}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":1677,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":2348,"endOffset":2428,"count":0}],"isBlockCoverage":false},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":2543,"endOffset":3020,"count":0}],"isBlockCoverage":false},{"functionName":"InterpreterDirective","ranges":[{"startOffset":3022,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"Placeholder","ranges":[{"startOffset":3098,"endOffset":3263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3965,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":797,"endOffset":983,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":985,"endOffset":1728,"count":1},{"startOffset":1067,"endOffset":1140,"count":0},{"startOffset":1142,"endOffset":1238,"count":0},{"startOffset":1240,"endOffset":1368,"count":0},{"startOffset":1391,"endOffset":1727,"count":0}],"isBlockCoverage":true},{"functionName":"JSXAttribute","ranges":[{"startOffset":1730,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"JSXIdentifier","ranges":[{"startOffset":1874,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"JSXNamespacedName","ranges":[{"startOffset":1932,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"JSXMemberExpression","ranges":[{"startOffset":2056,"endOffset":2181,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":2183,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":2316,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadChild","ranges":[{"startOffset":2434,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"JSXText","ranges":[{"startOffset":2565,"endOffset":2718,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":2720,"endOffset":2992,"count":0}],"isBlockCoverage":false},{"functionName":"spaceSeparator","ranges":[{"startOffset":2994,"endOffset":3039,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":3041,"endOffset":3414,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":3416,"endOffset":3522,"count":0}],"isBlockCoverage":false},{"functionName":"JSXEmptyExpression","ranges":[{"startOffset":3524,"endOffset":3594,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":3596,"endOffset":3818,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":3820,"endOffset":3891,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":3893,"endOffset":3965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/generator/lib/generators/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16668,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":3514,"endOffset":3700,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":3702,"endOffset":4445,"count":1},{"startOffset":3784,"endOffset":3857,"count":0},{"startOffset":3859,"endOffset":3955,"count":0},{"startOffset":3957,"endOffset":4085,"count":0},{"startOffset":4108,"endOffset":4444,"count":0}],"isBlockCoverage":true},{"functionName":"TSTypeAnnotation","ranges":[{"startOffset":4447,"endOffset":4596,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterInstantiation","ranges":[{"startOffset":4598,"endOffset":4724,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameter","ranges":[{"startOffset":4726,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"TSParameterProperty","ranges":[{"startOffset":5037,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareFunction","ranges":[{"startOffset":5267,"endOffset":5422,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareMethod","ranges":[{"startOffset":5424,"endOffset":5509,"count":0}],"isBlockCoverage":false},{"functionName":"TSQualifiedName","ranges":[{"startOffset":5511,"endOffset":5627,"count":0}],"isBlockCoverage":false},{"functionName":"TSCallSignatureDeclaration","ranges":[{"startOffset":5629,"endOffset":5739,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructSignatureDeclaration","ranges":[{"startOffset":5741,"endOffset":5892,"count":0}],"isBlockCoverage":false},{"functionName":"TSPropertySignature","ranges":[{"startOffset":5894,"endOffset":6274,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintPropertyOrMethodName","ranges":[{"startOffset":6276,"endOffset":6499,"count":0}],"isBlockCoverage":false},{"functionName":"TSMethodSignature","ranges":[{"startOffset":6501,"endOffset":6644,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexSignature","ranges":[{"startOffset":6646,"endOffset":6928,"count":0}],"isBlockCoverage":false},{"functionName":"TSAnyKeyword","ranges":[{"startOffset":6930,"endOffset":6977,"count":0}],"isBlockCoverage":false},{"functionName":"TSBigIntKeyword","ranges":[{"startOffset":6979,"endOffset":7032,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnknownKeyword","ranges":[{"startOffset":7034,"endOffset":7089,"count":0}],"isBlockCoverage":false},{"functionName":"TSNumberKeyword","ranges":[{"startOffset":7091,"endOffset":7144,"count":0}],"isBlockCoverage":false},{"functionName":"TSObjectKeyword","ranges":[{"startOffset":7146,"endOffset":7199,"count":0}],"isBlockCoverage":false},{"functionName":"TSBooleanKeyword","ranges":[{"startOffset":7201,"endOffset":7256,"count":0}],"isBlockCoverage":false},{"functionName":"TSStringKeyword","ranges":[{"startOffset":7258,"endOffset":7311,"count":0}],"isBlockCoverage":false},{"functionName":"TSSymbolKeyword","ranges":[{"startOffset":7313,"endOffset":7366,"count":0}],"isBlockCoverage":false},{"functionName":"TSVoidKeyword","ranges":[{"startOffset":7368,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"TSUndefinedKeyword","ranges":[{"startOffset":7419,"endOffset":7478,"count":0}],"isBlockCoverage":false},{"functionName":"TSNullKeyword","ranges":[{"startOffset":7480,"endOffset":7529,"count":0}],"isBlockCoverage":false},{"functionName":"TSNeverKeyword","ranges":[{"startOffset":7531,"endOffset":7582,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntrinsicKeyword","ranges":[{"startOffset":7584,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"TSThisType","ranges":[{"startOffset":7645,"endOffset":7691,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":7693,"endOffset":7773,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructorType","ranges":[{"startOffset":7775,"endOffset":7967,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintFunctionOrConstructorType","ranges":[{"startOffset":7969,"endOffset":8299,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeReference","ranges":[{"startOffset":8301,"endOffset":8411,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypePredicate","ranges":[{"startOffset":8413,"endOffset":8695,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeQuery","ranges":[{"startOffset":8697,"endOffset":8795,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeLiteral","ranges":[{"startOffset":8797,"endOffset":8891,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintTypeLiteralOrInterfaceBody","ranges":[{"startOffset":8893,"endOffset":8991,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintBraced","ranges":[{"startOffset":8993,"endOffset":9293,"count":0}],"isBlockCoverage":false},{"functionName":"TSArrayType","ranges":[{"startOffset":9295,"endOffset":9383,"count":0}],"isBlockCoverage":false},{"functionName":"TSTupleType","ranges":[{"startOffset":9385,"endOffset":9496,"count":0}],"isBlockCoverage":false},{"functionName":"TSOptionalType","ranges":[{"startOffset":9498,"endOffset":9591,"count":0}],"isBlockCoverage":false},{"functionName":"TSRestType","ranges":[{"startOffset":9593,"endOffset":9684,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamedTupleMember","ranges":[{"startOffset":9686,"endOffset":9866,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":9868,"endOffset":9948,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":9950,"endOffset":10037,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintUnionOrIntersectionType","ranges":[{"startOffset":10039,"endOffset":10224,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":10226,"endOffset":10541,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":10543,"endOffset":10646,"count":0}],"isBlockCoverage":false},{"functionName":"TSParenthesizedType","ranges":[{"startOffset":10648,"endOffset":10765,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":10767,"endOffset":10885,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexedAccessType","ranges":[{"startOffset":10887,"endOffset":11036,"count":0}],"isBlockCoverage":false},{"functionName":"TSMappedType","ranges":[{"startOffset":11038,"endOffset":11777,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIfPlusMinus","ranges":[{"startOffset":11779,"endOffset":11866,"count":0}],"isBlockCoverage":false},{"functionName":"TSLiteralType","ranges":[{"startOffset":11868,"endOffset":11934,"count":0}],"isBlockCoverage":false},{"functionName":"TSExpressionWithTypeArguments","ranges":[{"startOffset":11936,"endOffset":12062,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceDeclaration","ranges":[{"startOffset":12064,"endOffset":12556,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceBody","ranges":[{"startOffset":12558,"endOffset":12651,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAliasDeclaration","ranges":[{"startOffset":12653,"endOffset":13046,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":13048,"endOffset":13257,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":13259,"endOffset":13472,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumDeclaration","ranges":[{"startOffset":13474,"endOffset":13830,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumMember","ranges":[{"startOffset":13832,"endOffset":14071,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleDeclaration","ranges":[{"startOffset":14073,"endOffset":14608,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleBlock","ranges":[{"startOffset":14610,"endOffset":14681,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportType","ranges":[{"startOffset":14683,"endOffset":15020,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportEqualsDeclaration","ranges":[{"startOffset":15022,"endOffset":15367,"count":0}],"isBlockCoverage":false},{"functionName":"TSExternalModuleReference","ranges":[{"startOffset":15369,"endOffset":15495,"count":0}],"isBlockCoverage":false},{"functionName":"TSNonNullExpression","ranges":[{"startOffset":15497,"endOffset":15591,"count":0}],"isBlockCoverage":false},{"functionName":"TSExportAssignment","ranges":[{"startOffset":15593,"endOffset":15760,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamespaceExportDeclaration","ranges":[{"startOffset":15762,"endOffset":15954,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintSignatureDeclarationBase","ranges":[{"startOffset":15956,"endOffset":16218,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintClassMemberModifiers","ranges":[{"startOffset":16220,"endOffset":16668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/ancestry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4739,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":618,"endOffset":713,"count":1},{"startOffset":692,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":715,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":903,"endOffset":1646,"count":1},{"startOffset":985,"endOffset":1058,"count":0},{"startOffset":1060,"endOffset":1156,"count":0},{"startOffset":1158,"endOffset":1286,"count":0},{"startOffset":1309,"endOffset":1645,"count":0}],"isBlockCoverage":true},{"functionName":"findParent","ranges":[{"startOffset":1648,"endOffset":1793,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":1795,"endOffset":1938,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionParent","ranges":[{"startOffset":1940,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementParent","ranges":[{"startOffset":2021,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEarliestCommonAncestorFrom","ranges":[{"startOffset":2413,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"getDeepestCommonAncestorFrom","ranges":[{"startOffset":3178,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestry","ranges":[{"startOffset":4176,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"isAncestor","ranges":[{"startOffset":4326,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"isDescendant","ranges":[{"startOffset":4413,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"inType","ranges":[{"startOffset":4519,"endOffset":4739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/inference/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4466,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":474,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":662,"endOffset":1405,"count":2},{"startOffset":744,"endOffset":817,"count":0},{"startOffset":819,"endOffset":915,"count":0},{"startOffset":917,"endOffset":1045,"count":0},{"startOffset":1068,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"getTypeAnnotation","ranges":[{"startOffset":1407,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"_getTypeAnnotation","ranges":[{"startOffset":1711,"endOffset":2805,"count":0}],"isBlockCoverage":false},{"functionName":"isBaseType","ranges":[{"startOffset":2807,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"_isBaseType","ranges":[{"startOffset":2912,"endOffset":3632,"count":0}],"isBlockCoverage":false},{"functionName":"couldBeBaseType","ranges":[{"startOffset":3634,"endOffset":4022,"count":0}],"isBlockCoverage":false},{"functionName":"baseTypeStrictlyMatches","ranges":[{"startOffset":4024,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericType","ranges":[{"startOffset":4288,"endOffset":4466,"count":0}],"isBlockCoverage":false}]},{"scriptId":"769","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/inference/inferers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7648,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1302,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1503,"endOffset":1598,"count":1},{"startOffset":1577,"endOffset":1595,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1600,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1788,"endOffset":2531,"count":1},{"startOffset":1870,"endOffset":1943,"count":0},{"startOffset":1945,"endOffset":2041,"count":0},{"startOffset":2043,"endOffset":2171,"count":0},{"startOffset":2194,"endOffset":2530,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":2533,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":2996,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":3105,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":3235,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":3302,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":3746,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":4441,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":4840,"endOffset":5251,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":5253,"endOffset":5346,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":5348,"endOffset":5439,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":5441,"endOffset":5524,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":5526,"endOffset":5685,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":5687,"endOffset":5750,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":5752,"endOffset":5816,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":5818,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":5885,"endOffset":5951,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":5953,"endOffset":6039,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":6041,"endOffset":6130,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":6132,"endOffset":6219,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":6221,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"Func","ranges":[{"startOffset":6310,"endOffset":6389,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":6664,"endOffset":7136,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":7138,"endOffset":7216,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCall","ranges":[{"startOffset":7218,"endOffset":7648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"770","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5873,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":168,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":356,"endOffset":1099,"count":1},{"startOffset":438,"endOffset":511,"count":0},{"startOffset":513,"endOffset":609,"count":0},{"startOffset":611,"endOffset":739,"count":0},{"startOffset":762,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1101,"endOffset":1648,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationBindingConstantViolations","ranges":[{"startOffset":1650,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantViolationsBefore","ranges":[{"startOffset":2711,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"inferAnnotationFromBinaryExpression","ranges":[{"startOffset":3129,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"getParentConditionalPath","ranges":[{"startOffset":4325,"endOffset":4756,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionalAnnotation","ranges":[{"startOffset":4758,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/replacement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8293,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":678,"endOffset":864,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":866,"endOffset":1609,"count":1},{"startOffset":948,"endOffset":1021,"count":0},{"startOffset":1023,"endOffset":1119,"count":0},{"startOffset":1121,"endOffset":1249,"count":0},{"startOffset":1272,"endOffset":1608,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1611,"endOffset":1706,"count":2},{"startOffset":1685,"endOffset":1703,"count":0}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":1742,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":1784,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWithMultiple","ranges":[{"startOffset":2276,"endOffset":2790,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWithSourceString","ranges":[{"startOffset":2792,"endOffset":3442,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWith","ranges":[{"startOffset":3444,"endOffset":5241,"count":0}],"isBlockCoverage":false},{"functionName":"_replaceWith","ranges":[{"startOffset":5243,"endOffset":5744,"count":0}],"isBlockCoverage":false},{"functionName":"replaceExpressionWithStatements","ranges":[{"startOffset":5746,"endOffset":7912,"count":0}],"isBlockCoverage":false},{"functionName":"replaceInline","ranges":[{"startOffset":7914,"endOffset":8293,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/code-frame/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5666,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":414,"endOffset":1157,"count":1},{"startOffset":496,"endOffset":569,"count":0},{"startOffset":571,"endOffset":667,"count":0},{"startOffset":669,"endOffset":797,"count":0},{"startOffset":820,"endOffset":1156,"count":0}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":1197,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"getMarkerLines","ranges":[{"startOffset":1366,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"codeFrameColumns","ranges":[{"startOffset":2936,"endOffset":4965,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":4967,"endOffset":5666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"773","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/highlight/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2696,"count":1}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":417,"endOffset":718,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenType","ranges":[{"startOffset":870,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":1665,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"highlightTokens","ranges":[{"startOffset":1918,"endOffset":2251,"count":0}],"isBlockCoverage":false},{"functionName":"shouldHighlight","ranges":[{"startOffset":2253,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"getChalk","ranges":[{"startOffset":2346,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"highlight","ranges":[{"startOffset":2478,"endOffset":2696,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/js-tokens/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"exports.matchToToken","ranges":[{"startOffset":917,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"775","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/chalk/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6437,"count":1},{"startOffset":274,"endOffset":336,"count":0},{"startOffset":1637,"endOffset":1678,"count":0},{"startOffset":1723,"endOffset":1982,"count":41},{"startOffset":2227,"endOffset":2673,"count":15},{"startOffset":2257,"endOffset":2273,"count":1},{"startOffset":2273,"endOffset":2673,"count":14},{"startOffset":2825,"endOffset":3344,"count":15},{"startOffset":2855,"endOffset":2871,"count":1},{"startOffset":2871,"endOffset":3344,"count":14}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":619,"endOffset":915,"count":1},{"startOffset":750,"endOffset":769,"count":0},{"startOffset":826,"endOffset":841,"count":0},{"startOffset":879,"endOffset":896,"count":0}],"isBlockCoverage":true},{"functionName":"Chalk","ranges":[{"startOffset":917,"endOffset":1542,"count":1},{"startOffset":1100,"endOffset":1127,"count":0},{"startOffset":1128,"endOffset":1144,"count":0},{"startOffset":1509,"endOffset":1541,"count":0}],"isBlockCoverage":true},{"functionName":"Chalk.chalk.template","ranges":[{"startOffset":1220,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1832,"endOffset":1976,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2004,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2296,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2961,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3384,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":3404,"endOffset":4262,"count":0}],"isBlockCoverage":false},{"functionName":"applyStyle","ranges":[{"startOffset":4264,"endOffset":5737,"count":0}],"isBlockCoverage":false},{"functionName":"chalkTag","ranges":[{"startOffset":5739,"endOffset":6224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"776","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":79,"endOffset":224,"count":43},{"startOffset":126,"endOffset":174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"777","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3574,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":81,"endOffset":197,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":97,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":220,"endOffset":344,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":236,"endOffset":344,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":367,"endOffset":512,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":383,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":515,"endOffset":3456,"count":5},{"startOffset":1771,"endOffset":2251,"count":15},{"startOffset":1855,"endOffset":2070,"count":205},{"startOffset":2828,"endOffset":3437,"count":75},{"startOffset":2875,"endOffset":2893,"count":0},{"startOffset":2955,"endOffset":2977,"count":5},{"startOffset":3004,"endOffset":3126,"count":70},{"startOffset":3154,"endOffset":3286,"count":70},{"startOffset":3310,"endOffset":3434,"count":70}],"isBlockCoverage":true},{"functionName":"ansi2ansi","ranges":[{"startOffset":2272,"endOffset":2278,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":2297,"endOffset":2319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"778","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-convert/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1725,"count":1}],"isBlockCoverage":true},{"functionName":"wrapRaw","ranges":[{"startOffset":136,"endOffset":509,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":176,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"wrapRounded","ranges":[{"startOffset":511,"endOffset":1187,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":555,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1204,"endOffset":1695,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1541,"endOffset":1691,"count":210}],"isBlockCoverage":true}]},{"scriptId":"779","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-convert/conversions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16850,"count":1},{"startOffset":312,"endOffset":401,"count":148},{"startOffset":1111,"endOffset":1793,"count":15},{"startOffset":1190,"endOffset":1254,"count":0},{"startOffset":1293,"endOffset":1363,"count":0},{"startOffset":1429,"endOffset":1501,"count":0}],"isBlockCoverage":true},{"functionName":"convert.rgb.hsl","ranges":[{"startOffset":1813,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hsv","ranges":[{"startOffset":2453,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hwb","ranges":[{"startOffset":3122,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.cmyk","ranges":[{"startOffset":3376,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"comparativeDistance","ranges":[{"startOffset":3776,"endOffset":3913,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.keyword","ranges":[{"startOffset":3937,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"convert.keyword.rgb","ranges":[{"startOffset":4543,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.xyz","ranges":[{"startOffset":4616,"endOffset":5131,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.lab","ranges":[{"startOffset":5152,"endOffset":5603,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.rgb","ranges":[{"startOffset":5624,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hsv","ranges":[{"startOffset":6304,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.rgb","ranges":[{"startOffset":6660,"endOffset":7122,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hsl","ranges":[{"startOffset":7143,"endOffset":7437,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.rgb","ranges":[{"startOffset":7507,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"convert.cmyk.rgb","ranges":[{"startOffset":8228,"endOffset":8523,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.rgb","ranges":[{"startOffset":8544,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.lab","ranges":[{"startOffset":9231,"endOffset":9649,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.xyz","ranges":[{"startOffset":9670,"endOffset":10111,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.lch","ranges":[{"startOffset":10132,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lch.lab","ranges":[{"startOffset":10383,"endOffset":10573,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi16","ranges":[{"startOffset":10597,"endOffset":11000,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.ansi16","ranges":[{"startOffset":11024,"endOffset":11199,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi256","ranges":[{"startOffset":11224,"endOffset":11712,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi16.rgb","ranges":[{"startOffset":11736,"endOffset":12128,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi256.rgb","ranges":[{"startOffset":12153,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hex","ranges":[{"startOffset":12461,"endOffset":12709,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hex.rgb","ranges":[{"startOffset":12730,"endOffset":13168,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hcg","ranges":[{"startOffset":13189,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hcg","ranges":[{"startOffset":13783,"endOffset":14037,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hcg","ranges":[{"startOffset":14058,"endOffset":14233,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.rgb","ranges":[{"startOffset":14254,"endOffset":14993,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsv","ranges":[{"startOffset":15014,"endOffset":15189,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsl","ranges":[{"startOffset":15210,"endOffset":15469,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hwb","ranges":[{"startOffset":15490,"endOffset":15630,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.hcg","ranges":[{"startOffset":15651,"endOffset":15839,"count":0}],"isBlockCoverage":false},{"functionName":"convert.apple.rgb","ranges":[{"startOffset":15862,"endOffset":15970,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.apple","ranges":[{"startOffset":15993,"endOffset":16093,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.rgb","ranges":[{"startOffset":16115,"endOffset":16207,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hsl.convert.gray.hsv","ranges":[{"startOffset":16248,"endOffset":16292,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hwb","ranges":[{"startOffset":16314,"endOffset":16360,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.cmyk","ranges":[{"startOffset":16383,"endOffset":16430,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.lab","ranges":[{"startOffset":16452,"endOffset":16496,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hex","ranges":[{"startOffset":16518,"endOffset":16738,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.gray","ranges":[{"startOffset":16760,"endOffset":16848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4617,"count":1}],"isBlockCoverage":true}]},{"scriptId":"781","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/color-convert/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"buildGraph","ranges":[{"startOffset":389,"endOffset":741,"count":15},{"startOffset":583,"endOffset":723,"count":225}],"isBlockCoverage":true},{"functionName":"deriveBFS","ranges":[{"startOffset":797,"endOffset":1337,"count":15},{"startOffset":965,"endOffset":1319,"count":225},{"startOffset":1106,"endOffset":1316,"count":660},{"startOffset":1201,"endOffset":1312,"count":210}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1339,"endOffset":1421,"count":210}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1373,"endOffset":1418,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConversion","ranges":[{"startOffset":1423,"endOffset":1786,"count":210}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1805,"endOffset":2224,"count":15},{"startOffset":1972,"endOffset":2201,"count":225},{"startOffset":2059,"endOffset":2141,"count":15},{"startOffset":2141,"endOffset":2201,"count":210}],"isBlockCoverage":true}]},{"scriptId":"782","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/chalk/templates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3133,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":528,"endOffset":718,"count":0}],"isBlockCoverage":false},{"functionName":"parseArguments","ranges":[{"startOffset":720,"endOffset":1214,"count":0}],"isBlockCoverage":false},{"functionName":"parseStyle","ranges":[{"startOffset":1216,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"buildStyle","ranges":[{"startOffset":1566,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2181,"endOffset":3131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/evaluation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9193,"count":1}],"isBlockCoverage":true},{"functionName":"evaluateTruthy","ranges":[{"startOffset":239,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deopt","ranges":[{"startOffset":342,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateCached","ranges":[{"startOffset":460,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_evaluate","ranges":[{"startOffset":978,"endOffset":8515,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateQuasis","ranges":[{"startOffset":8517,"endOffset":8904,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":8906,"endOffset":9193,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/conversion.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14343,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":490,"endOffset":585,"count":1},{"startOffset":564,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":587,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":775,"endOffset":1518,"count":1},{"startOffset":857,"endOffset":930,"count":0},{"startOffset":932,"endOffset":1028,"count":0},{"startOffset":1030,"endOffset":1158,"count":0},{"startOffset":1181,"endOffset":1517,"count":0}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":1520,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"ensureBlock","ranges":[{"startOffset":1869,"endOffset":2838,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionToShadowed","ranges":[{"startOffset":2840,"endOffset":2963,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapFunctionEnvironment","ranges":[{"startOffset":2965,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionToExpression","ranges":[{"startOffset":3240,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"hoistFunctionEnvironment","ranges":[{"startOffset":4377,"endOffset":8409,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeSuperProperty","ranges":[{"startOffset":8411,"endOffset":10616,"count":0}],"isBlockCoverage":false},{"functionName":"hasSuperClass","ranges":[{"startOffset":10618,"endOffset":10744,"count":0}],"isBlockCoverage":false},{"functionName":"getThisBinding","ranges":[{"startOffset":10746,"endOffset":11474,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperBinding","ranges":[{"startOffset":11476,"endOffset":11792,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperPropBinding","ranges":[{"startOffset":11794,"endOffset":12593,"count":0}],"isBlockCoverage":false},{"functionName":"getBinding","ranges":[{"startOffset":12595,"endOffset":12945,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeInformation","ranges":[{"startOffset":12947,"endOffset":14343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"785","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-function-name/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5139,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":337,"endOffset":523,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":525,"endOffset":1268,"count":1},{"startOffset":607,"endOffset":680,"count":0},{"startOffset":682,"endOffset":778,"count":0},{"startOffset":780,"endOffset":908,"count":0},{"startOffset":931,"endOffset":1267,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1270,"endOffset":1365,"count":2},{"startOffset":1344,"endOffset":1362,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier|BindingIdentifier","ranges":[{"startOffset":2033,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromLiteralId","ranges":[{"startOffset":2314,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":2658,"endOffset":3520,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":3522,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":3992,"endOffset":5139,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/helper-get-function-arity/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1350,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":168,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":356,"endOffset":1099,"count":1},{"startOffset":438,"endOffset":511,"count":0},{"startOffset":513,"endOffset":609,"count":0},{"startOffset":611,"endOffset":739,"count":0},{"startOffset":762,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1101,"endOffset":1350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":333,"endOffset":428,"count":1},{"startOffset":407,"endOffset":425,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":430,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":618,"endOffset":1361,"count":1},{"startOffset":700,"endOffset":773,"count":0},{"startOffset":775,"endOffset":871,"count":0},{"startOffset":873,"endOffset":1001,"count":0},{"startOffset":1024,"endOffset":1360,"count":0}],"isBlockCoverage":true}]},{"scriptId":"788","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/formatters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2493,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":244,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":432,"endOffset":1175,"count":1},{"startOffset":514,"endOffset":587,"count":0},{"startOffset":589,"endOffset":685,"count":0},{"startOffset":687,"endOffset":815,"count":0},{"startOffset":838,"endOffset":1174,"count":0}],"isBlockCoverage":true},{"functionName":"makeStatementFormatter","ranges":[{"startOffset":1177,"endOffset":1378,"count":3}],"isBlockCoverage":true},{"functionName":"code","ranges":[{"startOffset":1236,"endOffset":1275,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1291,"endOffset":1299,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":1313,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1417,"endOffset":1505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1573,"endOffset":1585,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1662,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"code","ranges":[{"startOffset":1930,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1965,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":2210,"endOffset":2338,"count":0}],"isBlockCoverage":false},{"functionName":"code","ranges":[{"startOffset":2401,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":2425,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":2445,"endOffset":2463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2579,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":282,"endOffset":377,"count":2},{"startOffset":356,"endOffset":374,"count":0}],"isBlockCoverage":true},{"functionName":"createTemplateBuilder","ranges":[{"startOffset":460,"endOffset":2222,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":689,"endOffset":1522,"count":2},{"startOffset":771,"endOffset":815,"count":0},{"startOffset":953,"endOffset":1521,"count":0}],"isBlockCoverage":true},{"functionName":"ast","ranges":[{"startOffset":1535,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"extendedTrace","ranges":[{"startOffset":2224,"endOffset":2579,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2433,"endOffset":2576,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3041,"count":1}],"isBlockCoverage":true},{"functionName":"_objectWithoutPropertiesLoose","ranges":[{"startOffset":188,"endOffset":495,"count":8},{"startOffset":267,"endOffset":277,"count":0},{"startOffset":385,"endOffset":478,"count":1},{"startOffset":449,"endOffset":478,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":497,"endOffset":898,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":900,"endOffset":2627,"count":8},{"startOffset":945,"endOffset":972,"count":1},{"startOffset":974,"endOffset":1029,"count":0},{"startOffset":1051,"endOffset":1056,"count":7},{"startOffset":1361,"endOffset":1402,"count":0},{"startOffset":1404,"endOffset":1491,"count":0},{"startOffset":1526,"endOffset":1568,"count":1},{"startOffset":1569,"endOffset":1600,"count":1},{"startOffset":1602,"endOffset":1697,"count":0},{"startOffset":1730,"endOffset":1770,"count":0},{"startOffset":1772,"endOffset":1859,"count":0},{"startOffset":1897,"endOffset":1942,"count":0},{"startOffset":1944,"endOffset":2036,"count":0},{"startOffset":2075,"endOffset":2138,"count":0},{"startOffset":2140,"endOffset":2278,"count":0},{"startOffset":2415,"endOffset":2426,"count":7},{"startOffset":2427,"endOffset":2447,"count":1},{"startOffset":2508,"endOffset":2526,"count":0},{"startOffset":2597,"endOffset":2620,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReplacements","ranges":[{"startOffset":2629,"endOffset":3041,"count":0}],"isBlockCoverage":false}]},{"scriptId":"791","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":275,"endOffset":370,"count":2},{"startOffset":349,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"stringTemplate","ranges":[{"startOffset":372,"endOffset":710,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":477,"endOffset":707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"792","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5310,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":270,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":458,"endOffset":1201,"count":1},{"startOffset":540,"endOffset":613,"count":0},{"startOffset":615,"endOffset":711,"count":0},{"startOffset":713,"endOffset":841,"count":0},{"startOffset":864,"endOffset":1200,"count":0}],"isBlockCoverage":true},{"functionName":"parseAndBuildMetadata","ranges":[{"startOffset":1237,"endOffset":2037,"count":0}],"isBlockCoverage":false},{"functionName":"placeholderVisitorHandler","ranges":[{"startOffset":2039,"endOffset":4237,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAncestors","ranges":[{"startOffset":4239,"endOffset":4647,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithCodeFrame","ranges":[{"startOffset":4649,"endOffset":5310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4747,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":180,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":368,"endOffset":1111,"count":1},{"startOffset":450,"endOffset":523,"count":0},{"startOffset":525,"endOffset":621,"count":0},{"startOffset":623,"endOffset":751,"count":0},{"startOffset":774,"endOffset":1110,"count":0}],"isBlockCoverage":true},{"functionName":"populatePlaceholders","ranges":[{"startOffset":1113,"endOffset":2311,"count":0}],"isBlockCoverage":false},{"functionName":"applyReplacement","ranges":[{"startOffset":2313,"endOffset":4747,"count":0}],"isBlockCoverage":false}]},{"scriptId":"794","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/template/lib/literal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2221,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":276,"endOffset":371,"count":2},{"startOffset":350,"endOffset":368,"count":0}],"isBlockCoverage":true},{"functionName":"literalTemplate","ranges":[{"startOffset":373,"endOffset":1162,"count":0}],"isBlockCoverage":false},{"functionName":"buildLiteralData","ranges":[{"startOffset":1164,"endOffset":1962,"count":0}],"isBlockCoverage":false},{"functionName":"buildTemplateCode","ranges":[{"startOffset":1964,"endOffset":2221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"795","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/introspection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12259,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1072,"endOffset":1258,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1260,"endOffset":2003,"count":1},{"startOffset":1342,"endOffset":1415,"count":0},{"startOffset":1417,"endOffset":1513,"count":0},{"startOffset":1515,"endOffset":1643,"count":0},{"startOffset":1666,"endOffset":2002,"count":0}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":2005,"endOffset":2116,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2118,"endOffset":2276,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":2278,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"isnt","ranges":[{"startOffset":2378,"endOffset":2425,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":2427,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeType","ranges":[{"startOffset":2495,"endOffset":2560,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveVariableDeclarationOrExpression","ranges":[{"startOffset":2562,"endOffset":2697,"count":0}],"isBlockCoverage":false},{"functionName":"canSwapBetweenExpressionAndStatement","ranges":[{"startOffset":2699,"endOffset":3035,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionRecord","ranges":[{"startOffset":3037,"endOffset":3451,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":3453,"endOffset":3660,"count":0}],"isBlockCoverage":false},{"functionName":"referencesImport","ranges":[{"startOffset":3662,"endOffset":4800,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":4802,"endOffset":4981,"count":0}],"isBlockCoverage":false},{"functionName":"willIMaybeExecuteBefore","ranges":[{"startOffset":4983,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterFunction","ranges":[{"startOffset":5096,"endOffset":5212,"count":0}],"isBlockCoverage":false},{"functionName":"isExecutionUncertain","ranges":[{"startOffset":5214,"endOffset":6025,"count":0}],"isBlockCoverage":false},{"functionName":"isExecutionUncertainInList","ranges":[{"startOffset":6027,"endOffset":6262,"count":0}],"isBlockCoverage":false},{"functionName":"_guessExecutionStatusRelativeTo","ranges":[{"startOffset":6264,"endOffset":7999,"count":0}],"isBlockCoverage":false},{"functionName":"_guessExecutionStatusRelativeToDifferentFunctions","ranges":[{"startOffset":8052,"endOffset":9025,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":9027,"endOffset":9121,"count":0}],"isBlockCoverage":false},{"functionName":"_resolve","ranges":[{"startOffset":9123,"endOffset":10858,"count":0}],"isBlockCoverage":false},{"functionName":"isConstantExpression","ranges":[{"startOffset":10860,"endOffset":11609,"count":0}],"isBlockCoverage":false},{"functionName":"isInStrictMode","ranges":[{"startOffset":11611,"endOffset":12259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5651,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":797,"endOffset":892,"count":1},{"startOffset":871,"endOffset":889,"count":0}],"isBlockCoverage":true},{"functionName":"call","ranges":[{"startOffset":894,"endOffset":1144,"count":146},{"startOffset":1011,"endOffset":1023,"count":0},{"startOffset":1091,"endOffset":1119,"count":62},{"startOffset":1125,"endOffset":1143,"count":0}],"isBlockCoverage":true},{"functionName":"_call","ranges":[{"startOffset":1146,"endOffset":1892,"count":292},{"startOffset":1180,"endOffset":1193,"count":222},{"startOffset":1193,"endOffset":1873,"count":70},{"startOffset":1234,"endOffset":1243,"count":0},{"startOffset":1287,"endOffset":1299,"count":0},{"startOffset":1368,"endOffset":1394,"count":0},{"startOffset":1395,"endOffset":1428,"count":0},{"startOffset":1430,"endOffset":1683,"count":0},{"startOffset":1698,"endOffset":1781,"count":0},{"startOffset":1811,"endOffset":1823,"count":0},{"startOffset":1857,"endOffset":1869,"count":0},{"startOffset":1873,"endOffset":1891,"count":70}],"isBlockCoverage":true},{"functionName":"isDenylisted","ranges":[{"startOffset":1894,"endOffset":2124,"count":73},{"startOffset":2018,"endOffset":2039,"count":0},{"startOffset":2081,"endOffset":2121,"count":0}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":2126,"endOffset":2624,"count":73},{"startOffset":2163,"endOffset":2186,"count":0},{"startOffset":2215,"endOffset":2238,"count":0},{"startOffset":2267,"endOffset":2296,"count":0},{"startOffset":2298,"endOffset":2321,"count":0},{"startOffset":2387,"endOffset":2447,"count":0}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":2626,"endOffset":2671,"count":0}],"isBlockCoverage":false},{"functionName":"skipKey","ranges":[{"startOffset":2673,"endOffset":2787,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":2789,"endOffset":2876,"count":0}],"isBlockCoverage":false},{"functionName":"setScope","ranges":[{"startOffset":2878,"endOffset":3270,"count":158},{"startOffset":2916,"endOffset":2936,"count":151},{"startOffset":2938,"endOffset":2945,"count":0},{"startOffset":3001,"endOffset":3019,"count":0},{"startOffset":3021,"endOffset":3044,"count":0},{"startOffset":3074,"endOffset":3084,"count":246},{"startOffset":3086,"endOffset":3192,"count":137},{"startOffset":3106,"endOffset":3126,"count":123},{"startOffset":3128,"endOffset":3135,"count":0}],"isBlockCoverage":true},{"functionName":"setContext","ranges":[{"startOffset":3272,"endOffset":3538,"count":158},{"startOffset":3332,"endOffset":3361,"count":0},{"startOffset":3406,"endOffset":3501,"count":78}],"isBlockCoverage":true},{"functionName":"resync","ranges":[{"startOffset":3540,"endOffset":3659,"count":73},{"startOffset":3580,"endOffset":3587,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncParent","ranges":[{"startOffset":3661,"endOffset":3758,"count":73},{"startOffset":3711,"endOffset":3756,"count":66}],"isBlockCoverage":true},{"functionName":"_resyncKey","ranges":[{"startOffset":3760,"endOffset":4236,"count":73},{"startOffset":3807,"endOffset":3814,"count":0},{"startOffset":3868,"endOffset":4235,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncList","ranges":[{"startOffset":4238,"endOffset":4446,"count":73},{"startOffset":4299,"endOffset":4306,"count":41},{"startOffset":4306,"endOffset":4403,"count":32},{"startOffset":4403,"endOffset":4443,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncRemoved","ranges":[{"startOffset":4448,"endOffset":4593,"count":0}],"isBlockCoverage":false},{"functionName":"popContext","ranges":[{"startOffset":4595,"endOffset":4787,"count":73},{"startOffset":4675,"endOffset":4742,"count":0}],"isBlockCoverage":true},{"functionName":"pushContext","ranges":[{"startOffset":4789,"endOffset":4881,"count":73}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":4883,"endOffset":5065,"count":85},{"startOffset":5024,"endOffset":5042,"count":14}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":5067,"endOffset":5243,"count":85},{"startOffset":5214,"endOffset":5222,"count":0}],"isBlockCoverage":true},{"functionName":"requeue","ranges":[{"startOffset":5245,"endOffset":5432,"count":0}],"isBlockCoverage":false},{"functionName":"_getQueueContexts","ranges":[{"startOffset":5434,"endOffset":5651,"count":0}],"isBlockCoverage":false}]},{"scriptId":"797","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/removal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2521,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":454,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":642,"endOffset":1385,"count":1},{"startOffset":724,"endOffset":797,"count":0},{"startOffset":799,"endOffset":895,"count":0},{"startOffset":897,"endOffset":1025,"count":0},{"startOffset":1048,"endOffset":1384,"count":0}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":1387,"endOffset":1730,"count":0}],"isBlockCoverage":false},{"functionName":"_removeFromScope","ranges":[{"startOffset":1732,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"_callRemovalHooks","ranges":[{"startOffset":1887,"endOffset":2013,"count":0}],"isBlockCoverage":false},{"functionName":"_remove","ranges":[{"startOffset":2015,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"_markRemoved","ranges":[{"startOffset":2204,"endOffset":2380,"count":0}],"isBlockCoverage":false},{"functionName":"_assertUnremoved","ranges":[{"startOffset":2382,"endOffset":2521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"798","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1313,"count":1}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":119,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"hooks","ranges":[{"startOffset":593,"endOffset":772,"count":0}],"isBlockCoverage":false},{"functionName":"hooks","ranges":[{"startOffset":774,"endOffset":989,"count":0}],"isBlockCoverage":false},{"functionName":"hooks","ranges":[{"startOffset":991,"endOffset":1288,"count":0}],"isBlockCoverage":false}]},{"scriptId":"799","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/modification.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7388,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":725,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":913,"endOffset":1656,"count":1},{"startOffset":995,"endOffset":1068,"count":0},{"startOffset":1070,"endOffset":1166,"count":0},{"startOffset":1168,"endOffset":1296,"count":0},{"startOffset":1319,"endOffset":1655,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1658,"endOffset":1753,"count":2},{"startOffset":1732,"endOffset":1750,"count":0}],"isBlockCoverage":true},{"functionName":"insertBefore","ranges":[{"startOffset":1755,"endOffset":2895,"count":0}],"isBlockCoverage":false},{"functionName":"_containerInsert","ranges":[{"startOffset":2897,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"_containerInsertBefore","ranges":[{"startOffset":3506,"endOffset":3597,"count":0}],"isBlockCoverage":false},{"functionName":"_containerInsertAfter","ranges":[{"startOffset":3599,"endOffset":3693,"count":0}],"isBlockCoverage":false},{"functionName":"insertAfter","ranges":[{"startOffset":3695,"endOffset":5591,"count":0}],"isBlockCoverage":false},{"functionName":"updateSiblingKeys","ranges":[{"startOffset":5593,"endOffset":5831,"count":0}],"isBlockCoverage":false},{"functionName":"_verifyNodeList","ranges":[{"startOffset":5833,"endOffset":6544,"count":0}],"isBlockCoverage":false},{"functionName":"unshiftContainer","ranges":[{"startOffset":6546,"endOffset":6876,"count":0}],"isBlockCoverage":false},{"functionName":"pushContainer","ranges":[{"startOffset":6878,"endOffset":7271,"count":0}],"isBlockCoverage":false},{"functionName":"hoist","ranges":[{"startOffset":7273,"endOffset":7388,"count":0}],"isBlockCoverage":false}]},{"scriptId":"800","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/lib/hoister.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6224,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":166,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":354,"endOffset":1097,"count":1},{"startOffset":436,"endOffset":509,"count":0},{"startOffset":511,"endOffset":607,"count":0},{"startOffset":609,"endOffset":737,"count":0},{"startOffset":760,"endOffset":1096,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1128,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"PathHoister","ranges":[{"startOffset":2025,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"isCompatibleScope","ranges":[{"startOffset":2452,"endOffset":2700,"count":0}],"isBlockCoverage":false},{"functionName":"getCompatibleScopes","ranges":[{"startOffset":2704,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"getAttachmentPath","ranges":[{"startOffset":3013,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"_getAttachmentPath","ranges":[{"startOffset":4017,"endOffset":4626,"count":0}],"isBlockCoverage":false},{"functionName":"getNextScopeAttachmentParent","ranges":[{"startOffset":4630,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"getAttachmentParentForPath","ranges":[{"startOffset":4774,"endOffset":4973,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnParamBindings","ranges":[{"startOffset":4977,"endOffset":5247,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":5251,"endOffset":6189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"801","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/family.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10746,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":836,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1024,"endOffset":1767,"count":1},{"startOffset":1106,"endOffset":1179,"count":0},{"startOffset":1181,"endOffset":1277,"count":0},{"startOffset":1279,"endOffset":1407,"count":0},{"startOffset":1430,"endOffset":1766,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1769,"endOffset":1864,"count":1},{"startOffset":1843,"endOffset":1861,"count":0}],"isBlockCoverage":true},{"functionName":"NormalCompletion","ranges":[{"startOffset":1924,"endOffset":2013,"count":0}],"isBlockCoverage":false},{"functionName":"BreakCompletion","ranges":[{"startOffset":2015,"endOffset":2102,"count":0}],"isBlockCoverage":false},{"functionName":"getOpposite","ranges":[{"startOffset":2104,"endOffset":2289,"count":0}],"isBlockCoverage":false},{"functionName":"addCompletionRecords","ranges":[{"startOffset":2291,"endOffset":2439,"count":0}],"isBlockCoverage":false},{"functionName":"completionRecordForSwitch","ranges":[{"startOffset":2441,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"normalCompletionToBreak","ranges":[{"startOffset":3184,"endOffset":3299,"count":0}],"isBlockCoverage":false},{"functionName":"replaceBreakStatementInBreakCompletion","ranges":[{"startOffset":3301,"endOffset":3626,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementListCompletion","ranges":[{"startOffset":3628,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"_getCompletionRecords","ranges":[{"startOffset":5667,"endOffset":7089,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionRecords","ranges":[{"startOffset":7091,"endOffset":7297,"count":0}],"isBlockCoverage":false},{"functionName":"getSibling","ranges":[{"startOffset":7299,"endOffset":7517,"count":0}],"isBlockCoverage":false},{"functionName":"getPrevSibling","ranges":[{"startOffset":7519,"endOffset":7588,"count":0}],"isBlockCoverage":false},{"functionName":"getNextSibling","ranges":[{"startOffset":7590,"endOffset":7659,"count":0}],"isBlockCoverage":false},{"functionName":"getAllNextSiblings","ranges":[{"startOffset":7661,"endOffset":7898,"count":0}],"isBlockCoverage":false},{"functionName":"getAllPrevSiblings","ranges":[{"startOffset":7900,"endOffset":8137,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8139,"endOffset":8384,"count":5},{"startOffset":8326,"endOffset":8382,"count":0}],"isBlockCoverage":true},{"functionName":"_getKey","ranges":[{"startOffset":8386,"endOffset":8893,"count":5},{"startOffset":8738,"endOffset":8891,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8536,"endOffset":8732,"count":5}],"isBlockCoverage":true},{"functionName":"_getPattern","ranges":[{"startOffset":8895,"endOffset":9201,"count":0}],"isBlockCoverage":false},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":9203,"endOffset":9306,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":9308,"endOffset":9421,"count":5}],"isBlockCoverage":true},{"functionName":"getBindingIdentifierPaths","ranges":[{"startOffset":9423,"endOffset":10630,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterBindingIdentifierPaths","ranges":[{"startOffset":10632,"endOffset":10746,"count":0}],"isBlockCoverage":false}]},{"scriptId":"802","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/path/comments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":271,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":459,"endOffset":1202,"count":1},{"startOffset":541,"endOffset":614,"count":0},{"startOffset":616,"endOffset":712,"count":0},{"startOffset":714,"endOffset":842,"count":0},{"startOffset":865,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"shareCommentsWithSiblings","ranges":[{"startOffset":1204,"endOffset":1778,"count":0}],"isBlockCoverage":false},{"functionName":"addComment","ranges":[{"startOffset":1780,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"addComments","ranges":[{"startOffset":1874,"endOffset":1958,"count":0}],"isBlockCoverage":false}]},{"scriptId":"803","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"804","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4685,"count":1},{"startOffset":846,"endOffset":1451,"count":0},{"startOffset":1454,"endOffset":1555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":334,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1779,"endOffset":1819,"count":232}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1828,"endOffset":2286,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2362,"endOffset":2501,"count":1},{"startOffset":2425,"endOffset":2464,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2574,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":3010,"endOffset":3125,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3214,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3379,"endOffset":3636,"count":1},{"startOffset":3424,"endOffset":3462,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3753,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3964,"endOffset":4167,"count":1},{"startOffset":4100,"endOffset":4165,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4332,"endOffset":4488,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4581,"endOffset":4683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"805","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6029,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":6003,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":422,"endOffset":464,"count":9}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1020,"endOffset":1298,"count":1},{"startOffset":1116,"endOffset":1221,"count":5}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1468,"endOffset":3404,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1550,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3114,"endOffset":3193,"count":219},{"startOffset":3177,"endOffset":3193,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3203,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3407,"endOffset":3610,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3771,"endOffset":4349,"count":1},{"startOffset":3944,"endOffset":3956,"count":0},{"startOffset":4105,"endOffset":4342,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4435,"endOffset":4660,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":4803,"endOffset":5190,"count":219},{"startOffset":4865,"endOffset":4886,"count":0},{"startOffset":4969,"endOffset":5039,"count":0},{"startOffset":5101,"endOffset":5170,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespace","ranges":[{"startOffset":5308,"endOffset":5444,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5533,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5761,"endOffset":5937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"806","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/visitors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6786,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":297,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":485,"endOffset":1228,"count":2},{"startOffset":567,"endOffset":640,"count":0},{"startOffset":642,"endOffset":738,"count":0},{"startOffset":740,"endOffset":868,"count":0},{"startOffset":891,"endOffset":1227,"count":0}],"isBlockCoverage":true},{"functionName":"explode","ranges":[{"startOffset":1230,"endOffset":3177,"count":36},{"startOffset":1283,"endOffset":1298,"count":27},{"startOffset":1298,"endOffset":1375,"count":9},{"startOffset":1375,"endOffset":1633,"count":30},{"startOffset":1412,"endOffset":1421,"count":9},{"startOffset":1421,"endOffset":1498,"count":21},{"startOffset":1498,"endOffset":1633,"count":0},{"startOffset":1633,"endOffset":1798,"count":9},{"startOffset":1798,"endOffset":2339,"count":39},{"startOffset":1835,"endOffset":1844,"count":18},{"startOffset":1844,"endOffset":1907,"count":21},{"startOffset":1907,"endOffset":1916,"count":19},{"startOffset":1916,"endOffset":2106,"count":2},{"startOffset":2106,"endOffset":2291,"count":1},{"startOffset":2148,"endOffset":2285,"count":2},{"startOffset":2177,"endOffset":2229,"count":0},{"startOffset":2291,"endOffset":2335,"count":1},{"startOffset":2339,"endOffset":2388,"count":9},{"startOffset":2388,"endOffset":3012,"count":40},{"startOffset":2425,"endOffset":2434,"count":19},{"startOffset":2434,"endOffset":2599,"count":21},{"startOffset":2599,"endOffset":2739,"count":0},{"startOffset":2739,"endOffset":2759,"count":21},{"startOffset":2759,"endOffset":2768,"count":15},{"startOffset":2768,"endOffset":2833,"count":6},{"startOffset":2833,"endOffset":3008,"count":43},{"startOffset":2895,"endOffset":2938,"count":6},{"startOffset":2938,"endOffset":3002,"count":37},{"startOffset":3008,"endOffset":3012,"count":6},{"startOffset":3012,"endOffset":3061,"count":9},{"startOffset":3061,"endOffset":3156,"count":71},{"startOffset":3098,"endOffset":3107,"count":19},{"startOffset":3107,"endOffset":3156,"count":52},{"startOffset":3156,"endOffset":3176,"count":9}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":3179,"endOffset":4313,"count":9},{"startOffset":3231,"endOffset":3238,"count":0},{"startOffset":3277,"endOffset":3433,"count":0},{"startOffset":3482,"endOffset":4282,"count":30},{"startOffset":3537,"endOffset":3603,"count":0},{"startOffset":3640,"endOffset":3649,"count":9},{"startOffset":3649,"endOffset":3690,"count":21},{"startOffset":3690,"endOffset":3801,"count":0},{"startOffset":3801,"endOffset":3882,"count":21},{"startOffset":3882,"endOffset":4278,"count":2},{"startOffset":4097,"endOffset":4264,"count":0}],"isBlockCoverage":true},{"functionName":"validateVisitorMethods","ranges":[{"startOffset":4315,"endOffset":4555,"count":2},{"startOffset":4451,"endOffset":4549,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":4557,"endOffset":5113,"count":7},{"startOffset":4677,"endOffset":5088,"count":14},{"startOffset":4809,"endOffset":5084,"count":56},{"startOffset":4867,"endOffset":4877,"count":0},{"startOffset":5029,"endOffset":5034,"count":42}],"isBlockCoverage":true},{"functionName":"wrapWithStateOrWrapper","ranges":[{"startOffset":5115,"endOffset":5737,"count":56},{"startOffset":5248,"endOffset":5713,"count":28},{"startOffset":5310,"endOffset":5319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5338,"endOffset":5680,"count":28},{"startOffset":5515,"endOffset":5572,"count":0}],"isBlockCoverage":true},{"functionName":"newFn","ranges":[{"startOffset":5412,"endOffset":5485,"count":15}],"isBlockCoverage":true},{"functionName":"newFn.toString","ranges":[{"startOffset":5625,"endOffset":5644,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEntranceObjects","ranges":[{"startOffset":5739,"endOffset":5979,"count":9},{"startOffset":5815,"endOffset":5977,"count":39},{"startOffset":5847,"endOffset":5856,"count":18},{"startOffset":5856,"endOffset":5919,"count":21},{"startOffset":5919,"endOffset":5973,"count":19}],"isBlockCoverage":true},{"functionName":"ensureCallbackArrays","ranges":[{"startOffset":5981,"endOffset":6157,"count":61},{"startOffset":6034,"endOffset":6062,"count":49},{"startOffset":6064,"endOffset":6088,"count":45},{"startOffset":6104,"endOffset":6131,"count":6},{"startOffset":6133,"endOffset":6155,"count":3}],"isBlockCoverage":true},{"functionName":"wrapCheck","ranges":[{"startOffset":6159,"endOffset":6372,"count":2}],"isBlockCoverage":true},{"functionName":"newFn","ranges":[{"startOffset":6209,"endOffset":6311,"count":50},{"startOffset":6260,"endOffset":6307,"count":7}],"isBlockCoverage":true},{"functionName":"newFn.toString","ranges":[{"startOffset":6333,"endOffset":6352,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnoreKey","ranges":[{"startOffset":6374,"endOffset":6653,"count":249},{"startOffset":6428,"endOffset":6440,"count":90},{"startOffset":6440,"endOffset":6463,"count":159},{"startOffset":6463,"endOffset":6480,"count":157},{"startOffset":6481,"endOffset":6504,"count":157},{"startOffset":6506,"endOffset":6518,"count":2},{"startOffset":6518,"endOffset":6565,"count":157},{"startOffset":6566,"endOffset":6587,"count":157},{"startOffset":6588,"endOffset":6610,"count":157},{"startOffset":6612,"endOffset":6634,"count":0},{"startOffset":6634,"endOffset":6652,"count":157}],"isBlockCoverage":true},{"functionName":"mergePair","ranges":[{"startOffset":6655,"endOffset":6786,"count":63},{"startOffset":6725,"endOffset":6784,"count":35},{"startOffset":6763,"endOffset":6768,"count":32}],"isBlockCoverage":true}]},{"scriptId":"808","url":"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/traverse/lib/hub.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"getCode","ranges":[{"startOffset":121,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"getScope","ranges":[{"startOffset":137,"endOffset":150,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":154,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"buildError","ranges":[{"startOffset":245,"endOffset":318,"count":0}],"isBlockCoverage":false}]}],"timestamp":32887.611593,"source-map-cache":{"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/test/library/visitor.test.js":{"lineLengths":[56,32,23,0,47,0,25,0,25,16,5,39,5,15,7,46,41,0,0,0,0,0,0,0,3,0,30,0,50,59,0,88,0,42,0,3,0,35,0,57,66,0,88,0,42,0,3,0,36,0,51,60,0,88,0,42,0,3,0,27,0,40,49,0,88,0,42,0,3,0,31,0,47,57,0,88,0,42,0,3,0,40,0,73,83,0,88,0,42,0,3,0,45,0,50,60,0,88,0,42,0,3,40],"data":{"version":3,"sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/source/test/library/visitor.test.js"],"names":["createRequire","CreateRequire","Babel","Test","Require","import","meta","url","beforeEach","test","context","option","resolve","codeIn","expectedCodeOut","code","actualCodeOut","transformAsync","is"],"mappings":"AAAA,SAASA,aAAa,IAAIC,aAA1B,QAA+C,QAA/C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,KAAjB;;AAEA,MAAMC,OAAO,GAAGH,aAAa,CAACI,MAAM,CAACC,IAAP,CAAYC,GAAb,CAA7B;;AAEAJ,IAAI,CAACK,UAAL,CAAiBC,IAAD,IAAU;;AAExBA,EAAAA,IAAI,CAACC,OAAL,CAAaC,MAAb,GAAsB;AACpB,eAAW;AACT;AACEP,IAAAA,OAAO,CAACQ,OAAR,CAAgB,iBAAhB,CADF;AAEE;AACE,cAAQ;AACN;AACE,qBAAa,wBADf;AAEE,uBAAe,QAFjB,EADM,CADV,EAFF,CADS,CADS,EAAtB;;;;;;;;AAgBD,CAlBD;;AAoBAT,IAAI,CAAC,QAAD,EAAW,MAAOM,IAAP,IAAgB;;AAE7B,MAAII,MAAM,GAAG,kCAAb;AACA,MAAIC,eAAe,GAAG,kCAAtB;;AAEA,MAAI,EAAEC,IAAI,EAAEC,aAAR,KAA0B,MAAMd,KAAK,CAACe,cAAN,CAAqBJ,MAArB,EAA6BJ,IAAI,CAACC,OAAL,CAAaC,MAA1C,CAApC;;AAEAF,EAAAA,IAAI,CAACS,EAAL,CAAQF,aAAR,EAAuBF,eAAvB;;AAED,CATG,CAAJ;;AAWAX,IAAI,CAAC,aAAD,EAAgB,MAAOM,IAAP,IAAgB;;AAElC,MAAII,MAAM,GAAG,yCAAb;AACA,MAAIC,eAAe,GAAG,yCAAtB;;AAEA,MAAI,EAAEC,IAAI,EAAEC,aAAR,KAA0B,MAAMd,KAAK,CAACe,cAAN,CAAqBJ,MAArB,EAA6BJ,IAAI,CAACC,OAAL,CAAaC,MAA1C,CAApC;;AAEAF,EAAAA,IAAI,CAACS,EAAL,CAAQF,aAAR,EAAuBF,eAAvB;;AAED,CATG,CAAJ;;AAWAX,IAAI,CAAC,cAAD,EAAiB,MAAOM,IAAP,IAAgB;;AAEnC,MAAII,MAAM,GAAG,mCAAb;AACA,MAAIC,eAAe,GAAG,mCAAtB;;AAEA,MAAI,EAAEC,IAAI,EAAEC,aAAR,KAA0B,MAAMd,KAAK,CAACe,cAAN,CAAqBJ,MAArB,EAA6BJ,IAAI,CAACC,OAAL,CAAaC,MAA1C,CAApC;;AAEAF,EAAAA,IAAI,CAACS,EAAL,CAAQF,aAAR,EAAuBF,eAAvB;;AAED,CATG,CAAJ;;AAWAX,IAAI,CAAC,KAAD,EAAQ,MAAOM,IAAP,IAAgB;;AAE1B,MAAII,MAAM,GAAG,wBAAb;AACA,MAAIC,eAAe,GAAG,wBAAtB;;AAEA,MAAI,EAAEC,IAAI,EAAEC,aAAR,KAA0B,MAAMd,KAAK,CAACe,cAAN,CAAqBJ,MAArB,EAA6BJ,IAAI,CAACC,OAAL,CAAaC,MAA1C,CAApC;;AAEAF,EAAAA,IAAI,CAACS,EAAL,CAAQF,aAAR,EAAuBF,eAAvB;;AAED,CATG,CAAJ;;AAWAX,IAAI,CAAC,SAAD,EAAY,MAAOM,IAAP,IAAgB;;AAE9B,MAAII,MAAM,GAAG,+BAAb;AACA,MAAIC,eAAe,GAAG,gCAAtB;;AAEA,MAAI,EAAEC,IAAI,EAAEC,aAAR,KAA0B,MAAMd,KAAK,CAACe,cAAN,CAAqBJ,MAArB,EAA6BJ,IAAI,CAACC,OAAL,CAAaC,MAA1C,CAApC;;AAEAF,EAAAA,IAAI,CAACS,EAAL,CAAQF,aAAR,EAAuBF,eAAvB;;AAED,CATG,CAAJ;;AAWAX,IAAI,CAAC,kBAAD,EAAqB,MAAOM,IAAP,IAAgB;;AAEvC,MAAII,MAAM,GAAG,yDAAb;AACA,MAAIC,eAAe,GAAG,0DAAtB;;AAEA,MAAI,EAAEC,IAAI,EAAEC,aAAR,KAA0B,MAAMd,KAAK,CAACe,cAAN,CAAqBJ,MAArB,EAA6BJ,IAAI,CAACC,OAAL,CAAaC,MAA1C,CAApC;;AAEAF,EAAAA,IAAI,CAACS,EAAL,CAAQF,aAAR,EAAuBF,eAAvB;;AAED,CATG,CAAJ;;AAWAX,IAAI,CAAC,uBAAD,EAA0B,MAAOM,IAAP,IAAgB;;AAE5C,MAAII,MAAM,GAAG,kCAAb;AACA,MAAIC,eAAe,GAAG,mCAAtB;;AAEA,MAAI,EAAEC,IAAI,EAAEC,aAAR,KAA0B,MAAMd,KAAK,CAACe,cAAN,CAAqBJ,MAArB,EAA6BJ,IAAI,CAACC,OAAL,CAAaC,MAA1C,CAApC;;AAEAF,EAAAA,IAAI,CAACS,EAAL,CAAQF,aAAR,EAAuBF,eAAvB;;AAED,CATG,CAAJ","sourcesContent":["import { createRequire as CreateRequire } from 'module'\nimport Babel from '@babel/core'\nimport Test from 'ava'\n\nconst Require = CreateRequire(import.meta.url)\n\nTest.beforeEach((test) => {\n\n  test.context.option = { \n    'plugins': [ \n      [\n        Require.resolve('../../index.cjs'),\n        {\n          'rule': [\n            {\n              'searchFor': /^(\\.{1,2}\\/.*?)\\.js$/gi,\n              'replaceWith': '$1.cjs'\n            }\n          ]\n        }      \n      ]\n    ]\n  }\n  \n})\n\nTest('import', async (test) => {\n\n  let codeIn = 'import { abc } from \\'./abc.js\\''\n  let expectedCodeOut = 'import { abc } from \"./abc.cjs\";'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('import(...)', async (test) => {\n\n  let codeIn = 'const abcPromise = import(\\'./abc.js\\')'\n  let expectedCodeOut = 'const abcPromise = import(\"./abc.cjs\");'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('require(...)', async (test) => {\n\n  let codeIn = 'const abc = require(\\'./abc.js\\')'\n  let expectedCodeOut = 'const abc = require(\"./abc.cjs\");'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('let', async (test) => {\n\n  let codeIn = 'let abc = \\'./abc.js\\''\n  let expectedCodeOut = 'let abc = \"./abc.cjs\";'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('let ...', async (test) => {\n\n  let codeIn = 'let abc = \\'./ab\\' + \\'c.js\\''\n  let expectedCodeOut = 'let abc = \\'./ab\\' + \\'c.js\\';'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('console.log(...)', async (test) => {\n\n  let codeIn = 'console.log(\\'Here at ./abc.js and there at ./def.js\\')'\n  let expectedCodeOut = 'console.log(\\'Here at ./abc.js and there at ./def.js\\');'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n\nTest('fs.readFileAsync(...)', async (test) => {\n\n  let codeIn = 'fs.readFileAsync(\\'./abc.json\\')'\n  let expectedCodeOut = 'fs.readFileAsync(\\'./abc.json\\');'\n\n  let { code: actualCodeOut } = await Babel.transformAsync(codeIn, test.context.option)\n\n  test.is(actualCodeOut, expectedCodeOut)\n\n})\n"],"file":"visitor.test.js","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/install.cjs":{"lineLengths":[13,0,50,0,36,0,95,0,33,36,42,32,91,12,18,5,3,3,36],"data":{"version":3,"sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/source-commonjs/install.cjs"],"names":["SourceMapSupport","install","source","test","retrieveSourceMap","URL","fileURLToPath"],"mappings":";;AAAA;;AAEA;;;;AAEAA,wBAAiBC,OAAjB,CAAyB;AACvB,8BAA4B,KADL;AAEvB,uBAAqB,UAASC,MAAT,EAAiB;AAEpC,QAAI,SAASC,IAAT,CAAcD,MAAd,CAAJ,EAA2B;AACzB,aAAOF,wBAAiBI,iBAAjB,CAAmCC,aAAIC,aAAJ,CAAkBJ,MAAlB,CAAnC,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AAEF;AAVsB,CAAzB","sourcesContent":["import URL from 'url'\n\nimport { SourceMapSupport } from './index.cjs'\n\nSourceMapSupport.install({ \n  'handleUncaughtExceptions': false, \n  'retrieveSourceMap': function(source) {\n\n    if (/^file:/.test(source)) {\n      return SourceMapSupport.retrieveSourceMap(URL.fileURLToPath(source))\n    } else {\n      return null\n    }\n\n  }\n})\n"],"file":"install.cjs","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/release-commonjs/index.cjs":{"lineLengths":[13,0,46,13,3,52,19,20,37,3,3,0,78,0,95,34],"data":{"version":3,"sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-source-map-support/source-commonjs/index.cjs"],"names":[],"mappings":";;;;;;;;;;;;AAAA","sourcesContent":["import SourceMapSupport from 'source-map-support'\n\nexport { SourceMapSupport }\n"],"file":"index.cjs","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/index.cjs":{"lineLengths":[13,0,46,13,3,43,19,20,26,3,3,0,68,0,95,34],"data":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[],"file":"index.cjs","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/library/index.cjs":{"lineLengths":[13,0,46,13,3,25,0,70,0,40,0,61,0,27,34],"data":{"version":3,"sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/source/library/index.cjs"],"names":["Plugin","createPlugin","Visitor"],"mappings":";;;;;;;AAAA;;AAEA;;eAEeA,eAAOC,YAAP,CAAoBC,gBAApB,C","sourcesContent":["import { Plugin } from '@virtualpatterns/mablung-babel-plugin/plugin'\n\nimport { Visitor } from './visitor.cjs'\n\nexport default Plugin.createPlugin(Visitor)\n"],"file":"index.cjs","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/plugin.cjs":{"lineLengths":[13,0,46,13,3,24,0,65,0,186,0,743,0,7,24,15,0,14,37,63,29,72,52,97,36,10,0,43,44,8,0,44,43,8,0,46,29,36,57,0,44,60,59,12,9,0,67,65,0,86,37,32,55,68,15,14,0,31,54,67,15,13,0,12,9,9,43,26,6,3,0,1,0,24,35],"data":{"version":3,"sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/source/library/plugin.cjs"],"names":["pascalCase","PascalCase","ChangeCase","Plugin","createPlugin","visitorClass","babel","visitorInstance","pluginObject","pre","state","onBeforeNode","post","onAfterNode","nodeType","visitorObject","forEach","onNodeName","path","onEnterNodeName","onExitNodeName","enter","exit","visitor"],"mappings":";;;;;;;AAAA;;;;;;AAEA,MAAM;AAAEA,EAAAA,UAAU,EAAEC;AAAd,IAA6BC,UAAnC;;AAEA,MAAMC,MAAN,CAAa;AAEQ,SAAZC,YAAY,CAACC,YAAD,EAAe;AAChC;AAEA,WAAO,UAASC,KAAT,EAAgB;AACrB;AAEA,UAAIC,eAAe,GAAG,IAAIF,YAAJ,CAAiBC,KAAjB,CAAtB;AAEA,UAAIE,YAAY,GAAG,EAAnB,CALqB,CAOrB;AACA;AACA;;AAEAA,MAAAA,YAAY,CAACC,GAAb,GAAmB,UAASC,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACI,YAAhB,CAA6BD,KAA7B;AAAqC,OAA1E;;AACAF,MAAAA,YAAY,CAACI,IAAb,GAAoB,UAASF,KAAT,EAAgB;AAAEH,QAAAA,eAAe,CAACM,WAAhB,CAA4BH,KAA5B;AAAoC,OAA1E;;AAEA,UAAII,QAAQ,GAAGP,eAAe,CAACO,QAA/B;AACA,UAAIC,aAAa,GAAG,EAApB;AAEAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBF,QAAD,IAAc;AAE7B,YAAIG,UAAU,GAAI,KAAIhB,UAAU,CAACa,QAAD,CAAW,MAA3C;;AAEA,YAAIG,UAAU,IAAIV,eAAlB,EAAmC;AACjCQ,UAAAA,aAAa,CAACD,QAAD,CAAb,GAA0B,UAASI,IAAT,EAAeR,KAAf,EAAsB;AAAEH,YAAAA,eAAe,CAACU,UAAD,CAAf,CAA4BC,IAA5B,EAAkCR,KAAlC,EAAyC,IAAzC;AAAgD,WAAlG;AACD;;AAED,YAAIS,eAAe,GAAI,UAASlB,UAAU,CAACa,QAAD,CAAW,MAArD;AACA,YAAIM,cAAc,GAAI,SAAQnB,UAAU,CAACa,QAAD,CAAW,MAAnD;;AAEA,YAAIK,eAAe,IAAIZ,eAAnB,IACAa,cAAc,IAAIb,eADtB,EACuC;AAErCQ,UAAAA,aAAa,CAACD,QAAD,CAAb,GAA0B;AAExBO,YAAAA,KAAK,CAACH,IAAD,EAAOR,KAAP,EAAc;AACjB,kBAAIS,eAAe,IAAIZ,eAAvB,EAAwC;AACtCA,gBAAAA,eAAe,CAACY,eAAD,CAAf,CAAiCD,IAAjC,EAAuCR,KAAvC,EAA8C,IAA9C;AACD;AACF,aANuB;;AAQxBY,YAAAA,IAAI,CAACJ,IAAD,EAAOR,KAAP,EAAc;AAChB,kBAAIU,cAAc,IAAIb,eAAtB,EAAuC;AACrCA,gBAAAA,eAAe,CAACa,cAAD,CAAf,CAAgCF,IAAhC,EAAsCR,KAAtC,EAA6C,IAA7C;AACD;AACF;;AAZuB,WAA1B;AAgBD;AAEF,OAhCD;AAkCAF,MAAAA,YAAY,CAACe,OAAb,GAAuBR,aAAvB;AAEA,aAAOP,YAAP;AAED,KAvDD;AAyDD;;AA9DU","sourcesContent":["import * as ChangeCase from 'change-case'\n\nconst { pascalCase: PascalCase } = ChangeCase\n\nclass Plugin {\n\n  static createPlugin(visitorClass) {\n    // console.log(`Plugin.createPlugin(${visitorClass.name})`)\n\n    return function(babel) {\n      // console.log(`Plugin.createPlugin(${visitorClass.name})(babel)`)\n\n      let visitorInstance = new visitorClass(babel)\n\n      let pluginObject = {}\n\n      // pluginObject.manipulateOptions = function(option, parserOption) {\n      //   console.dir(parserOption)\n      // }\n\n      pluginObject.pre = function(state) { visitorInstance.onBeforeNode(state) }\n      pluginObject.post = function(state) { visitorInstance.onAfterNode(state) }\n\n      let nodeType = visitorInstance.nodeType\n      let visitorObject = {}\n\n      nodeType.forEach((nodeType) => {\n\n        let onNodeName = `on${PascalCase(nodeType)}Node`\n\n        if (onNodeName in visitorInstance) {\n          visitorObject[nodeType] = function(path, state) { visitorInstance[onNodeName](path, state, this) }\n        }\n\n        let onEnterNodeName = `onEnter${PascalCase(nodeType)}Node`\n        let onExitNodeName = `onExit${PascalCase(nodeType)}Node`\n\n        if (onEnterNodeName in visitorInstance ||\n            onExitNodeName in visitorInstance) {\n\n          visitorObject[nodeType] = { \n\n            enter(path, state) {\n              if (onEnterNodeName in visitorInstance) {\n                visitorInstance[onEnterNodeName](path, state, this)\n              }\n            }, \n\n            exit(path, state) {\n              if (onExitNodeName in visitorInstance) {\n                visitorInstance[onExitNodeName](path, state, this)\n              }\n            } \n\n          }\n\n        }\n\n      })\n\n      pluginObject.visitor = visitorObject\n\n      return pluginObject\n\n    }\n\n  }\n\n}\n\nexport { Plugin }\n"],"file":"plugin.cjs","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/change-case/dist/index.js":{"lineLengths":[13,62,31,53,55,56,51,54,50,53,54,52,56,53,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/change-case/src/index.ts"],"names":[],"mappings":";;;AAAA,qDAA2B;AAC3B,uDAA6B;AAC7B,wDAA8B;AAC9B,mDAAyB;AACzB,sDAA4B;AAC5B,kDAAwB;AACxB,qDAA2B;AAC3B,sDAA4B;AAC5B,oDAA0B;AAC1B,wDAA8B;AAC9B,qDAA2B","sourcesContent":["export * from \"camel-case\";\nexport * from \"capital-case\";\nexport * from \"constant-case\";\nexport * from \"dot-case\";\nexport * from \"header-case\";\nexport * from \"no-case\";\nexport * from \"param-case\";\nexport * from \"pascal-case\";\nexport * from \"path-case\";\nexport * from \"sentence-case\";\nexport * from \"snake-case\";\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/camel-case/dist/index.js":{"lineLengths":[13,62,90,31,43,43,20,35,59,1,48,48,20,35,57,1,58,36,45,105,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/camel-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,2CAKqB;AAIrB,SAAgB,kBAAkB,CAAC,KAAa,EAAE,KAAa;IAC7D,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,iCAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3C,CAAC;AAHD,gDAGC;AAED,SAAgB,uBAAuB,CAAC,KAAa,EAAE,KAAa;IAClE,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,KAAK,CAAC,WAAW,EAAE,CAAC;IAC5C,OAAO,sCAAwB,CAAC,KAAK,CAAC,CAAC;AACzC,CAAC;AAHD,0DAGC;AAED,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,wBAAU,CAAC,KAAK,qBACrB,SAAS,EAAE,kBAAkB,IAC1B,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import {\n  pascalCase,\n  pascalCaseTransform,\n  pascalCaseTransformMerge,\n  Options,\n} from \"pascal-case\";\n\nexport { Options };\n\nexport function camelCaseTransform(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransform(input, index);\n}\n\nexport function camelCaseTransformMerge(input: string, index: number) {\n  if (index === 0) return input.toLowerCase();\n  return pascalCaseTransformMerge(input);\n}\n\nexport function camelCase(input: string, options: Options = {}) {\n  return pascalCase(input, {\n    transform: camelCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/pascal-case/dist/index.js":{"lineLengths":[13,62,93,31,35,44,36,51,60,44,5,53,1,50,42,72,1,60,37,45,113,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/pascal-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAI1C,SAAgB,mBAAmB,CAAC,KAAa,EAAE,KAAa;IAC9D,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjD,IAAI,KAAK,GAAG,CAAC,IAAI,SAAS,IAAI,GAAG,IAAI,SAAS,IAAI,GAAG,EAAE;QACrD,OAAO,MAAI,SAAS,GAAG,UAAY,CAAC;KACrC;IACD,OAAO,KAAG,SAAS,CAAC,WAAW,EAAE,GAAG,UAAY,CAAC;AACnD,CAAC;AAPD,kDAOC;AAED,SAAgB,wBAAwB,CAAC,KAAa;IACpD,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACtE,CAAC;AAFD,4DAEC;AAED,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,EAAE,EACb,SAAS,EAAE,mBAAmB,IAC3B,OAAO,EACV,CAAC;AACL,CAAC;AAND,gCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function pascalCaseTransform(input: string, index: number) {\n  const firstChar = input.charAt(0);\n  const lowerChars = input.substr(1).toLowerCase();\n  if (index > 0 && firstChar >= \"0\" && firstChar <= \"9\") {\n    return `_${firstChar}${lowerChars}`;\n  }\n  return `${firstChar.toUpperCase()}${lowerChars}`;\n}\n\nexport function pascalCaseTransformMerge(input: string) {\n  return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();\n}\n\nexport function pascalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"\",\n    transform: pascalCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/no-case/dist/index.js":{"lineLengths":[13,62,24,41,84,74,34,42,3,77,3,33,45,316,83,18,28,56,41,16,43,14,42,79,1,24,3,63,3,36,29,40,87,1,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/no-case/src/index.ts"],"names":[],"mappings":";;;AAAA,yCAAuC;AASvC,oFAAoF;AACpF,IAAM,oBAAoB,GAAG,CAAC,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;AAE5E,kCAAkC;AAClC,IAAM,oBAAoB,GAAG,cAAc,CAAC;AAE5C;;GAEG;AACH,SAAgB,MAAM,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAEvD,IAAA,KAIE,OAAO,YAJyB,EAAlC,WAAW,mBAAG,oBAAoB,KAAA,EAClC,KAGE,OAAO,YAHyB,EAAlC,WAAW,mBAAG,oBAAoB,KAAA,EAClC,KAEE,OAAO,UAFY,EAArB,SAAS,mBAAG,sBAAS,KAAA,EACrB,KACE,OAAO,UADM,EAAf,SAAS,mBAAG,GAAG,KAAA,CACL;IAEZ,IAAI,MAAM,GAAG,OAAO,CAClB,OAAO,CAAC,KAAK,EAAE,WAAW,EAAE,QAAQ,CAAC,EACrC,WAAW,EACX,IAAI,CACL,CAAC;IACF,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAExB,oDAAoD;IACpD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI;QAAE,KAAK,EAAE,CAAC;IAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,IAAI;QAAE,GAAG,EAAE,CAAC;IAE9C,sCAAsC;IACtC,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7E,CAAC;AAtBD,wBAsBC;AAED;;GAEG;AACH,SAAS,OAAO,CAAC,KAAa,EAAE,EAAqB,EAAE,KAAa;IAClE,IAAI,EAAE,YAAY,MAAM;QAAE,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAC1D,OAAO,EAAE,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,EAAE,IAAK,OAAA,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,EAAxB,CAAwB,EAAE,KAAK,CAAC,CAAC;AACnE,CAAC","sourcesContent":["import { lowerCase } from \"lower-case\";\n\nexport interface Options {\n  splitRegexp?: RegExp | RegExp[];\n  stripRegexp?: RegExp | RegExp[];\n  delimiter?: string;\n  transform?: (part: string, index: number, parts: string[]) => string;\n}\n\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nconst DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n\n// Remove all non-word characters.\nconst DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input: string, options: Options = {}) {\n  const {\n    splitRegexp = DEFAULT_SPLIT_REGEXP,\n    stripRegexp = DEFAULT_STRIP_REGEXP,\n    transform = lowerCase,\n    delimiter = \" \",\n  } = options;\n\n  let result = replace(\n    replace(input, splitRegexp, \"$1\\0$2\"),\n    stripRegexp,\n    \"\\0\"\n  );\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === \"\\0\") start++;\n  while (result.charAt(end - 1) === \"\\0\") end--;\n\n  // Transform each token independently.\n  return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input: string, re: RegExp | RegExp[], value: string) {\n  if (re instanceof RegExp) return input.replace(re, value);\n  return re.reduce((input, re) => input.replace(re, value), input);\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lower-case/dist/index.js":{"lineLengths":[13,62,53,3,72,3,24,9,46,14,24,24,25,10,6,9,26,14,24,24,25,10,6,9,61,14,30,30,30,36,36,36,10,6,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/lower-case/src/index.ts"],"names":[],"mappings":";;;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,6BAA6B;QACrC,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,SAAS;QACjB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;YACX,CAAC,EAAE,QAAQ;YACX,EAAE,EAAE,QAAQ;SACb;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,4CAA4C;QACpD,GAAG,EAAE;YACH,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,cAAc;YACjB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;YACvB,CAAC,EAAE,oBAAoB;SACxB;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACzE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  az: {\n    regexp: /\\u0130/g,\n    map: {\n      İ: \"\\u0069\",\n      I: \"\\u0131\",\n      İ: \"\\u0069\",\n    },\n  },\n  lt: {\n    regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n    map: {\n      I: \"\\u0069\\u0307\",\n      J: \"\\u006A\\u0307\",\n      Į: \"\\u012F\\u0307\",\n      Ì: \"\\u0069\\u0307\\u0300\",\n      Í: \"\\u0069\\u0307\\u0301\",\n      Ĩ: \"\\u0069\\u0307\\u0303\",\n    },\n  },\n};\n\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return lowerCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return lowerCase(str);\n}\n\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str: string) {\n  return str.toLowerCase();\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/capital-case/dist/index.js":{"lineLengths":[13,62,60,31,35,53,38,66,1,52,38,45,115,1,34,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/capital-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,oBAAoB,CAAC,KAAa;IAChD,OAAO,iCAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AAC7C,CAAC;AAFD,oDAEC;AAED,SAAgB,WAAW,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC9D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,oBAAoB,IAC5B,OAAO,EACV,CAAC;AACL,CAAC;AAND,kCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case-first/dist/index.js":{"lineLengths":[13,62,32,3,53,3,32,59,1,40,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case-first/src/index.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,SAAgB,cAAc,CAAC,KAAa;IAC1C,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC;AAFD,wCAEC","sourcesContent":["/**\n * Upper case the first character of an input string.\n */\nexport function upperCaseFirst(input: string) {\n  return input.charAt(0).toUpperCase() + input.substr(1);\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/constant-case/dist/index.js":{"lineLengths":[13,62,30,31,35,41,39,45,117,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/constant-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAC1C,yCAAuC;AAIvC,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,sBAAS,IACjB,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCase } from \"upper-case\";\n\nexport { Options };\n\nexport function constantCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \"_\",\n    transform: upperCase,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case/dist/index.js":{"lineLengths":[13,62,53,3,72,3,24,9,28,14,24,10,6,9,28,14,24,10,6,9,79,14,25,25,25,26,26,26,10,6,2,3,24,3,39,54,13,89,26,1,42,3,28,3,25,29,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/upper-case/src/index.ts"],"names":[],"mappings":";;;AAQA;;GAEG;AACH,IAAM,gBAAgB,GAA2B;IAC/C,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,WAAW;QACnB,GAAG,EAAE;YACH,CAAC,EAAE,QAAQ;SACZ;KACF;IACD,EAAE,EAAE;QACF,MAAM,EAAE,8DAA8D;QACtE,GAAG,EAAE;YACH,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,EAAE,EAAE,QAAQ;YACZ,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;YACb,GAAG,EAAE,QAAQ;SACd;KACF;CACF,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe,CAAC,GAAW,EAAE,MAAc;IACzD,IAAM,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,IAAI,IAAI;QAAE,OAAO,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,CAAC,IAAK,OAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC;IACzE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;AAJD,0CAIC;AAED;;GAEG;AACH,SAAgB,SAAS,CAAC,GAAW;IACnC,OAAO,GAAG,CAAC,WAAW,EAAE,CAAC;AAC3B,CAAC;AAFD,8BAEC","sourcesContent":["/**\n * Locale character mapping rules.\n */\ninterface Locale {\n  regexp: RegExp;\n  map: Record<string, string>;\n}\n\n/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nconst SUPPORTED_LOCALE: Record<string, Locale> = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      i: \"\\u0130\",\n    },\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      i̇: \"\\u0049\",\n      j̇: \"\\u004A\",\n      į̇: \"\\u012E\",\n      i̇̀: \"\\u00CC\",\n      i̇́: \"\\u00CD\",\n      i̇̃: \"\\u0128\",\n    },\n  },\n};\n\n/**\n * Localized upper case.\n */\nexport function localeUpperCase(str: string, locale: string) {\n  const lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n  if (lang) return upperCase(str.replace(lang.regexp, (m) => lang.map[m]));\n  return upperCase(str);\n}\n\n/**\n * Upper case as a function.\n */\nexport function upperCase(str: string) {\n  return str.toUpperCase();\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/dot-case/dist/index.js":{"lineLengths":[13,62,25,31,35,34,45,82,1,26,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/dot-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAI1C,SAAgB,OAAO,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC1D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,0BAKC","sourcesContent":["import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/header-case/dist/index.js":{"lineLengths":[13,62,28,31,45,37,45,92,1,32,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/header-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,6CAAoD;AAIpD,SAAgB,UAAU,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC7D,OAAO,0BAAW,CAAC,KAAK,qBACtB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,gCAKC","sourcesContent":["import { capitalCase, Options } from \"capital-case\";\n\nexport { Options };\n\nexport function headerCase(input: string, options: Options = {}) {\n  return capitalCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/param-case/dist/index.js":{"lineLengths":[13,62,27,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/param-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-case/dist/index.js":{"lineLengths":[13,62,26,31,37,35,45,84,1,28,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/path-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,qCAA4C;AAI5C,SAAgB,QAAQ,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC3D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,4BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function pathCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"/\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/sentence-case/dist/index.js":{"lineLengths":[13,62,62,31,35,53,46,37,20,57,18,1,54,39,45,116,1,36,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/sentence-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,mCAA0C;AAC1C,qDAAkD;AAIlD,SAAgB,qBAAqB,CAAC,KAAa,EAAE,KAAa;IAChE,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IACnC,IAAI,KAAK,KAAK,CAAC;QAAE,OAAO,iCAAc,CAAC,MAAM,CAAC,CAAC;IAC/C,OAAO,MAAM,CAAC;AAChB,CAAC;AAJD,sDAIC;AAED,SAAgB,YAAY,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC/D,OAAO,gBAAM,CAAC,KAAK,qBACjB,SAAS,EAAE,GAAG,EACd,SAAS,EAAE,qBAAqB,IAC7B,OAAO,EACV,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/snake-case/dist/index.js":{"lineLengths":[13,62,27,31,37,36,45,84,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/snake-case/src/index.ts"],"names":[],"mappings":";;;;AAAA,qCAA4C;AAI5C,SAAgB,SAAS,CAAC,KAAa,EAAE,OAAqB;IAArB,wBAAA,EAAA,YAAqB;IAC5D,OAAO,kBAAO,CAAC,KAAK,qBAClB,SAAS,EAAE,GAAG,IACX,OAAO,EACV,CAAC;AACL,CAAC;AALD,8BAKC","sourcesContent":["import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function snakeCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"_\",\n    ...options,\n  });\n}\n"]},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/release/library/visitor.cjs":{"lineLengths":[13,0,46,13,3,25,0,53,0,72,0,95,0,40,22,17,3,0,18,29,3,0,36,77,28,27,26,165,89,7,3,0,6,14,8,50,30,8,6,10,0,0,26,36],"data":{"version":3,"sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/source/library/visitor.cjs"],"names":["Visitor","BaseVisitor","constructor","babel","nodeType","onStringLiteralNode","path","state","option","opts","rule","forEach","searchForPattern","Is","regexp","searchFor","RegExp","node","value","replace","replaceWith"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,OAAN,SAAsBC,gBAAtB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEW,MAARC,QAAQ,GAAG;AACb,WAAO,CAAE,eAAF,CAAP;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,IAAD,EAAOC,KAAP,EAAc;AAC/B;AAEA,QAAIC,MAAM,GAAGD,KAAK,CAACE,IAAnB;AACA,QAAIC,IAAI,GAAGF,MAAM,CAACE,IAAlB;AAEAA,IAAAA,IAAI,CAACC,OAAL,CAAcD,IAAD,IAAU;AAErBA,MAAAA,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAA7B,GAAgDC,YAAGC,MAAH,CAAUJ,IAAI,CAACK,SAAf,IAA4BL,IAAI,CAACK,SAAjC,GAA6C,IAAIC,MAAJ,CAAWN,IAAI,CAACK,SAAhB,EAA2B,IAA3B,CAArH;AAEAT,MAAAA,IAAI,CAACW,IAAL,CAAUC,KAAV,GAAkBZ,IAAI,CAACW,IAAL,CAAUC,KAAV,CAAgBC,OAAhB,CAAwBT,IAAI,CAACE,gBAA7B,EAA+CF,IAAI,CAACU,WAApD,CAAlB;AAED,KAND;AAQD;;AAxB+B,C,CA8BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Is from '@pwn/is'\nimport { Visitor as BaseVisitor } from '@virtualpatterns/mablung-babel-plugin/visitor'\n\nclass Visitor extends BaseVisitor {\n\n  constructor(babel) {\n    super(babel)\n  }\n\n  get nodeType() {\n    return [ 'StringLiteral' ]\n  }\n\n  onStringLiteralNode(path, state) {\n    // console.log(`Visitor.onStringLiteralNode('${path.node.name}', state)`)\n\n    let option = state.opts\n    let rule = option.rule\n\n    rule.forEach((rule) => {\n\n      rule.searchForPattern = rule.searchForPattern ? rule.searchForPattern : Is.regexp(rule.searchFor) ? rule.searchFor : new RegExp(rule.searchFor, 'gi')\n\n      path.node.value = path.node.value.replace(rule.searchForPattern, rule.replaceWith)\n\n    })\n\n  }\n\n}\n\nexport { Visitor }\n\n// {\n//   'rule': [\n//     {\n//       'searchFor': '../error/replace-error.js',\n//       'replaceWith': '...',\n//     }\n//   ]\n// }      \n"],"file":"visitor.cjs","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/release/library/visitor.cjs":{"lineLengths":[13,0,46,13,3,25,0,15,22,24,3,0,18,12,24,6,3,0,16,13,56,68,6,0,0,15,13,4,0,1,0,26,36],"data":{"version":3,"sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@virtualpatterns/mablung-babel-plugin/source/library/visitor.cjs"],"names":["Visitor","constructor","babel","_babel","nodeType","onBeforeNode","onAfterNode"],"mappings":";;;;;;;AAAA,MAAMA,OAAN,CAAc;AAEZC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKC,MAAL,GAAcD,KAAd;AACD;;AAEW,MAARE,QAAQ,GAAG;AACb,WAAO;AAAE;AAAF,KAAP;AACD;;AAEDC,EAAAA,YAAY;AAAE;AAAc,GAAE,CAVlB,CAYZ;AACA;AACA;;;AAEAC,EAAAA,WAAW;AAAE;AAAc,GAAE;;AAhBjB","sourcesContent":["class Visitor {\n\n  constructor(babel) {\n    this._babel = babel\n  }\n\n  get nodeType() {\n    return [ /* 'Identifier' */ ]\n  }\n  \n  onBeforeNode( /* state */ ) {}\n\n  // onIdentifierNode( /* path, state, context */ ) {\n  //   console.log('Visitor.onIdentifierNode(path, state, context)')\n  // }\n  \n  onAfterNode( /* state */ ) {}\n\n}\n\nexport { Visitor }"],"file":"visitor.cjs","sourceRoot":""},"url":null},"file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/lib/index.js":{"lineLengths":[13,0,62,0,24,24,20,22,20,21,17,33,24,26,29,29,35,25,27,25,26,24,32,23,32,40,40,52,32,36,32,34,56,30,3,0,1,27,0,44,25,45,28,15,1,0,35,30,15,9,5,1,0,15,29,14,5,35,14,5,37,14,5,35,14,5,35,14,5,31,14,5,28,32,15,14,5,37,15,14,5,36,15,14,5,31,35,30,15,14,5,34,15,14,5,35,15,14,5,29,33,30,15,14,5,29,29,14,5,28,14,5,29,14,5,36,14,5,26,32,14,5,35,30,14,5,38,34,14,5,33,14,5,37,15,14,5,25,28,14,5,47,26,15,12,5,31,15,12,5,34,11,12,14,5,28,15,11,14,5,29,15,11,14,5,33,42,34,35,33,34,34,44,42,40,33,15,13,11,14,5,30,15,14,14,5,28,13,5,30,33,15,14,26,5,33,32,14,5,33,39,39,38,14,5,28,11,14,5,32,14,5,37,30,10,5,40,14,5,27,36,14,5,35,34,15,11,14,5,29,29,33,34,10,5,31,30,15,14,5,32,14,5,34,14,5,34,14,5,38,14,5,35,36,14,5,32,14,5,32,14,5,34,14,5,28,15,12,5,44,15,12,5,36,15,11,14,5,32,15,11,14,5,36,15,11,14,4,2,0,43,53,26,17,12,12,14,14,18,0,12,19,3,1,55,29,17,16,16,16,12,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,12,19,3,1,0,16,26,23,25,21,22,3,0,1,22,27,24,22,27,33,23,19,3,0,1,37,15,20,12,27,0,68,11,37,3,0,48,1,0,18,17,35,45,3,0,19,34,3,0,33,70,3,0,1,0,22,33,1,0,41,23,60,46,45,3,0,69,50,13,5,0,27,28,0,43,34,5,0,31,13,5,0,65,83,48,12,7,5,0,35,0,65,59,0,42,49,0,31,50,14,9,14,50,37,9,0,51,7,5,0,57,0,41,57,60,40,5,3,0,24,64,42,54,0,49,61,55,41,14,47,7,34,38,0,94,56,44,7,5,0,62,31,5,0,65,30,5,0,57,0,21,26,32,71,16,0,29,77,16,0,30,70,16,0,31,69,16,0,28,75,16,7,242,84,5,0,20,38,126,59,43,16,71,65,80,20,13,11,9,7,55,63,45,67,89,54,18,13,11,9,0,52,60,42,9,14,65,63,18,11,9,0,71,0,37,49,9,0,63,0,44,34,9,7,5,0,42,0,27,121,46,14,105,0,44,84,84,16,51,9,7,5,0,21,3,0,1,0,37,55,81,115,87,97,86,108,76,63,66,82,76,92,68,63,61,70,188,106,139,71,71,64,127,66,72,90,55,60,56,55,160,97,85,76,106,41,108,48,125,95,50,64,61,85,91,48,47,36,46,57,71,62,45,45,60,34,92,56,77,67,61,97,67,55,101,68,58,47,87,40,68,114,83,93,94,100,54,55,51,54,55,129,109,83,90,35,70,59,122,99,102,85,96,132,127,57,176,180,182,68,68,140,74,57,58,60,103,79,77,38,165,65,70,174,178,180,67,126,64,83,47,91,98,66,87,180,58,73,43,121,69,83,106,74,74,84,98,137,46,56,53,48,64,81,75,80,3,0,42,31,12,303,15,3,0,40,72,3,0,49,49,107,0,37,39,0,52,32,0,32,39,19,13,37,16,9,7,5,0,24,10,9,16,3,0,54,49,107,38,10,9,23,3,0,33,41,37,0,37,57,17,12,16,5,3,0,1,0,54,28,12,9,6,21,0,9,41,18,0,48,18,14,11,6,16,3,0,35,15,0,9,29,23,20,5,0,49,46,16,3,0,36,25,50,47,16,3,0,29,47,3,0,30,45,72,92,62,48,111,61,92,3,0,31,38,28,3,0,26,54,40,12,35,5,3,0,40,31,3,0,26,30,0,231,3,0,25,50,40,61,21,3,0,33,40,82,54,27,3,0,94,106,0,32,58,35,5,0,32,3,0,38,30,21,24,57,0,24,63,0,24,63,0,25,64,0,23,45,0,23,45,0,24,46,0,14,56,5,3,0,34,54,0,89,62,5,0,16,3,0,47,46,16,19,21,36,16,3,0,23,59,39,5,0,45,3,0,26,59,42,5,0,21,3,0,49,69,30,22,16,3,0,62,61,58,3,0,104,36,30,118,41,25,26,0,40,28,5,0,30,39,3,0,31,59,0,58,47,5,0,24,3,0,38,66,0,58,47,36,5,0,24,3,0,72,92,0,15,29,53,29,5,0,16,3,0,81,101,0,15,25,29,5,0,16,3,0,37,54,43,18,5,0,43,3,0,51,53,67,29,65,12,60,5,3,0,40,47,0,40,37,38,28,25,5,0,16,3,0,31,43,13,5,0,38,3,0,21,28,0,24,34,29,14,0,36,101,45,54,33,9,0,14,5,0,16,3,0,60,80,0,36,95,43,7,0,23,49,32,57,7,84,28,5,0,16,3,0,34,42,29,5,0,48,3,0,25,43,3,0,26,76,3,0,24,69,3,0,3,0,18,55,24,25,32,27,23,27,41,29,3,0,1,17,45,45,47,45,45,45,68,55,54,2,0,71,40,34,11,3,0,37,0,81,35,3,0,39,2,0,48,22,0,31,124,21,5,3,0,35,0,30,34,3,2,0,50,106,32,2,0,48,49,32,2,0,50,133,94,32,2,0,44,0,82,250,56,10,55,3,0,33,2,0,45,47,29,10,46,3,0,33,2,0,46,52,32,2,0,4315,2645,85,106,62,1815,929,0,35,20,0,60,18,33,22,33,3,0,15,1,0,34,36,30,36,31,0,23,83,3,0,57,1,33,36,29,30,30,36,31,0,23,78,3,0,103,1,0,23,329,109,35,2,50,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,30,1,0,52,41,39,1,0,32,34,35,32,39,32,39,32,39,36,67,39,38,38,42,43,39,40,42,48,49,50,92,66,58,68,68,48,96,62,46,63,67,64,56,40,40,40,90,90,90,64,64,30,0,13,22,24,18,22,24,23,3,0,1,20,32,25,38,43,23,29,3,0,20,63,3,0,20,61,3,0,26,68,3,0,17,61,3,0,23,68,3,0,28,64,3,0,29,64,3,0,22,28,3,0,16,50,3,0,10,26,3,0,37,93,3,0,39,36,0,80,68,0,46,35,14,33,7,0,45,45,7,46,61,35,70,29,45,43,7,5,0,55,41,5,3,0,35,55,41,5,3,0,60,61,60,5,3,0,49,55,0,43,116,5,0,44,121,5,0,193,3,0,24,167,51,5,3,0,18,55,3,0,21,52,39,0,36,21,7,5,3,0,22,52,39,0,99,21,7,5,3,0,1,0,31,24,19,31,3,0,1,0,45,22,32,3,0,39,38,0,51,68,43,40,13,5,0,36,3,0,49,61,0,51,120,5,0,17,3,0,24,70,33,5,3,0,1,0,178,34,110,198,58,81,102,80,137,127,207,126,145,123,111,156,148,108,155,72,207,99,100,66,128,133,89,78,107,72,59,89,132,72,85,75,140,91,107,56,88,94,90,82,104,166,89,106,54,3,0,38,248,1,0,34,68,1,0,38,87,1,0,27,30,28,22,31,2,0,32,19,19,0,41,59,3,0,24,1,0,51,27,12,0,43,26,21,34,5,0,23,30,5,0,24,79,5,0,24,53,5,0,28,96,44,33,9,7,0,42,5,0,25,42,62,0,57,35,45,37,16,52,9,7,0,39,5,0,35,42,31,38,40,36,18,5,0,26,36,44,41,32,44,38,0,91,77,7,0,35,44,34,58,14,58,7,5,0,44,42,31,31,22,27,0,37,38,46,14,36,38,0,39,48,9,7,0,31,5,0,33,18,45,51,5,0,36,18,50,40,45,0,35,75,14,39,7,0,32,53,35,31,32,32,90,89,75,32,23,80,54,5,0,42,37,48,47,51,42,51,48,36,58,16,29,80,11,0,51,9,45,52,47,53,50,52,45,74,14,32,7,5,0,36,18,62,68,23,54,5,0,34,36,0,37,39,14,41,7,0,52,38,32,0,41,40,0,40,22,0,73,96,11,0,37,16,91,59,9,0,28,7,0,24,32,50,22,34,35,42,36,81,11,0,22,65,32,84,11,0,30,81,11,0,28,33,9,9,37,52,5,0,59,33,0,37,70,69,16,50,27,9,0,28,65,14,137,41,54,105,9,0,127,71,33,69,168,42,0,57,46,35,37,13,0,46,24,11,7,0,30,5,0,41,18,39,59,23,59,5,0,37,18,36,37,18,5,0,38,18,43,38,18,5,0,37,18,39,55,5,0,50,67,98,0,35,71,14,35,7,0,24,27,23,0,37,12,62,52,7,0,40,20,0,12,61,40,7,0,44,20,0,12,65,40,7,0,44,29,26,27,28,27,9,5,0,33,36,56,0,35,73,14,35,7,0,55,5,0,30,39,59,5,0,30,25,78,7,5,0,52,43,114,5,0,57,78,43,5,0,30,64,72,0,35,71,14,35,7,0,59,23,48,5,0,40,36,63,72,0,35,71,14,35,7,0,28,0,36,68,7,0,27,0,21,64,7,0,23,49,5,0,52,41,36,48,62,29,31,40,0,33,27,44,14,29,68,9,7,0,52,5,0,41,42,36,23,31,0,68,20,14,26,7,0,34,0,10,75,40,0,36,33,9,0,38,35,9,40,0,33,36,63,5,0,43,36,42,23,31,33,66,44,0,39,47,0,38,35,9,7,0,60,33,36,65,5,0,52,36,42,23,31,33,0,39,70,0,38,35,9,7,0,33,36,65,5,0,30,36,41,24,0,37,12,62,40,7,0,44,27,26,27,26,27,9,62,5,0,34,115,5,0,58,29,0,50,52,51,14,23,40,7,0,34,51,31,56,5,0,53,29,50,34,34,0,63,27,30,101,14,28,0,39,31,9,0,53,7,0,61,5,0,40,23,23,33,23,0,35,71,7,0,32,0,36,58,30,0,40,35,9,7,0,72,65,0,40,35,9,7,0,37,59,7,0,32,56,61,5,0,53,41,29,64,61,5,0,25,18,17,18,17,18,8,42,31,41,36,32,30,35,19,16,26,0,54,37,35,21,14,34,32,22,7,0,30,0,37,29,30,32,38,0,55,45,0,84,24,42,32,11,9,0,57,45,0,84,24,28,11,9,0,50,0,39,35,40,11,0,41,27,46,13,0,95,18,95,11,72,35,40,11,0,25,44,11,0,94,16,28,0,69,47,0,115,38,26,13,11,0,168,0,39,27,51,18,53,11,9,0,39,0,88,81,9,7,0,28,0,24,36,7,0,69,36,17,5,0,104,37,140,0,29,29,83,37,79,11,0,25,67,11,0,22,9,0,27,79,9,0,33,38,9,0,23,64,9,0,45,65,14,53,31,40,25,29,0,65,29,0,35,40,11,0,25,44,11,0,103,0,49,51,11,0,83,87,11,16,49,30,0,41,28,11,0,55,35,9,0,33,59,7,5,0,43,57,35,82,0,32,149,7,0,34,38,58,16,58,9,7,0,59,64,7,5,0,31,121,26,7,5,0,62,46,49,64,0,35,59,35,60,65,7,0,18,5,0,50,56,33,78,0,35,73,7,0,60,5,0,27,36,33,50,59,5,0,26,36,22,34,0,75,46,46,33,7,0,34,58,5,0,39,22,27,32,36,34,53,0,66,31,66,9,0,44,0,39,26,0,23,73,11,9,0,57,14,46,7,0,23,31,43,56,5,0,46,64,23,28,33,56,5,0,46,22,23,0,36,54,26,0,40,35,9,7,0,72,60,0,40,35,9,7,0,37,54,7,0,14,15,13,13,8,5,0,61,24,19,60,0,20,23,64,0,21,62,0,21,62,0,22,63,0,22,63,0,22,63,0,16,43,67,7,5,0,28,40,43,36,14,15,32,66,0,32,24,47,49,11,0,98,0,26,43,31,30,30,30,30,13,0,29,43,31,29,30,30,31,13,0,28,48,43,64,22,0,30,41,75,38,53,37,33,34,38,37,51,67,11,0,16,0,26,22,0,73,68,50,80,20,35,13,11,0,30,50,40,66,0,147,40,26,20,36,13,11,0,21,100,18,53,11,0,35,31,32,36,35,49,37,65,0,26,84,0,25,26,47,22,71,0,27,41,24,0,40,117,13,0,43,117,13,0,88,11,0,34,0,23,84,0,26,84,0,25,22,61,0,25,22,68,0,25,22,61,0,24,22,63,0,16,53,46,47,48,24,55,11,0,7,0,30,5,0,28,40,43,45,0,72,58,32,36,36,60,7,0,18,5,0,27,36,0,37,57,63,14,43,7,5,0,42,47,0,68,68,71,25,25,47,35,63,7,0,19,5,0,33,36,33,61,26,0,42,67,7,0,98,5,0,26,36,32,52,26,0,41,58,7,0,91,5,0,21,42,31,45,36,87,18,5,0,44,71,42,45,44,67,14,36,7,5,0,31,36,60,53,5,0,64,107,0,36,62,37,7,0,19,5,0,31,59,99,29,5,0,25,26,0,38,36,0,39,33,16,34,9,0,20,46,7,0,22,5,0,68,32,112,7,0,60,5,0,62,36,42,96,103,7,0,61,5,0,39,92,43,0,74,40,22,47,9,72,38,20,51,7,0,59,0,74,31,7,0,18,5,0,42,39,38,153,47,11,44,42,49,44,49,46,57,11,9,7,0,56,5,0,36,200,5,0,32,195,21,7,0,46,5,0,36,65,38,20,51,7,0,50,5,0,66,51,0,29,93,0,27,72,22,9,0,56,27,7,0,34,39,53,56,11,19,14,47,70,0,41,49,0,33,29,43,0,52,45,11,0,12,23,18,52,70,9,0,41,72,9,0,43,29,66,12,23,18,52,9,7,0,53,47,31,23,35,129,60,5,0,37,66,56,46,49,14,19,14,8,5,0,52,27,24,0,34,33,0,54,56,45,18,30,11,0,32,59,38,37,9,7,0,28,65,28,7,0,99,5,0,33,22,0,121,53,43,24,5,0,51,17,0,76,68,25,51,14,25,7,0,20,5,0,46,60,0,37,29,36,7,0,36,66,39,69,67,7,0,18,5,0,35,252,15,7,0,42,5,0,23,43,0,91,53,7,0,18,5,0,34,38,33,49,20,0,39,57,37,22,16,58,9,47,33,49,20,64,50,33,49,20,56,72,34,49,20,62,14,50,7,5,0,25,57,0,78,33,20,20,20,7,0,19,5,0,46,35,74,0,55,29,7,0,26,5,0,49,56,0,35,71,7,5,0,48,35,0,41,67,17,9,0,30,7,0,55,0,27,128,60,36,82,9,7,5,0,28,61,0,41,49,69,50,52,48,47,37,32,14,44,7,5,0,35,26,26,29,28,33,22,0,32,11,52,55,126,15,11,0,30,47,0,29,50,0,31,76,0,36,39,0,39,34,52,0,32,40,28,0,16,23,7,5,0,39,47,73,14,47,7,5,0,57,49,33,0,75,55,9,7,0,71,5,0,53,49,24,0,33,0,176,78,9,7,0,22,5,0,71,91,0,63,45,7,0,18,5,0,30,47,46,7,5,0,30,36,61,7,0,44,5,0,37,36,61,7,0,51,5,0,21,61,5,0,23,64,5,0,36,78,5,0,24,66,5,0,96,28,47,7,0,29,0,35,73,7,0,103,0,43,37,0,63,76,9,94,43,0,63,76,9,7,5,0,69,28,47,7,0,29,0,35,73,7,0,76,5,0,27,34,0,54,78,7,0,44,20,49,0,12,40,61,0,39,77,18,39,11,0,69,40,7,5,0,37,44,63,0,30,32,0,63,72,45,72,9,7,5,0,51,48,70,31,17,5,0,115,26,45,7,0,27,25,0,50,66,57,7,0,122,0,27,61,7,5,0,41,37,42,69,9,0,38,72,9,0,30,7,0,36,62,43,72,7,0,60,63,7,0,35,19,5,0,49,69,0,117,80,7,0,18,5,0,36,37,52,7,0,46,5,0,74,122,72,61,5,0,44,32,22,0,38,24,45,22,7,0,17,36,0,56,36,9,0,93,22,33,9,7,0,58,5,0,32,41,45,54,35,0,45,41,37,50,39,9,7,0,28,0,73,52,0,96,40,51,47,16,42,38,51,9,101,56,49,0,39,51,16,27,57,9,14,50,99,9,0,25,40,36,55,7,0,55,65,0,54,82,7,0,54,82,7,0,69,82,7,0,72,74,5,0,24,32,25,44,0,16,42,7,5,0,47,29,0,71,71,7,0,54,5,0,28,35,0,36,64,39,7,5,0,51,36,68,45,57,62,7,0,65,5,0,29,70,5,0,77,15,0,23,14,0,95,35,120,40,15,17,23,0,61,30,68,30,9,7,0,73,25,0,44,27,46,36,0,68,95,105,68,26,13,0,165,20,11,0,75,47,64,33,18,35,0,110,47,35,107,13,0,30,11,0,39,9,0,50,37,26,9,0,30,39,33,9,0,67,44,93,7,0,91,5,0,22,36,44,70,47,44,98,64,59,58,26,11,39,56,109,7,0,36,5,0,24,65,5,0,46,76,29,14,55,7,5,0,57,95,15,7,0,52,56,76,9,7,0,45,5,0,52,123,5,0,56,113,20,58,27,80,55,97,41,123,62,108,61,0,25,39,28,9,0,26,40,29,9,0,42,7,0,70,5,0,71,72,50,0,22,37,22,9,0,20,58,27,72,34,80,29,53,81,58,27,44,83,36,82,72,85,11,0,26,58,29,9,7,0,85,5,0,29,23,0,62,94,7,0,33,36,5,0,59,56,37,41,62,5,0,33,61,0,68,42,28,25,15,7,0,40,5,0,30,61,0,41,42,15,7,0,37,5,0,34,58,0,38,71,7,0,22,5,0,24,69,40,62,9,0,40,49,41,15,7,0,38,67,0,25,82,9,0,33,15,7,0,31,5,0,23,13,11,21,40,0,88,36,7,0,73,77,0,37,45,7,0,119,46,7,0,37,41,7,0,19,5,0,32,59,0,23,76,7,5,0,51,15,16,8,88,5,0,41,15,16,8,75,90,5,0,43,15,16,8,80,5,0,48,14,8,73,5,0,43,15,18,8,165,5,0,48,15,19,16,8,25,0,29,23,22,22,71,16,0,22,70,16,0,16,71,7,0,74,5,0,50,15,16,8,87,5,0,61,14,8,86,5,0,26,40,0,82,0,32,23,11,82,0,30,22,31,35,30,16,13,0,20,30,27,14,11,0,26,11,81,0,30,22,31,35,30,16,13,0,20,30,27,14,11,0,25,26,11,55,0,30,22,32,35,30,16,13,0,20,30,27,14,11,0,16,18,28,25,12,7,5,0,25,35,44,69,21,11,8,14,11,12,8,5,0,67,13,20,18,0,34,15,7,0,42,65,7,5,0,21,15,18,8,34,23,27,26,26,28,8,36,0,41,39,35,16,9,0,44,15,13,14,37,35,0,32,19,9,0,40,57,21,22,13,9,0,40,59,21,22,13,9,0,34,25,19,23,20,10,27,0,28,25,13,83,43,92,20,13,0,24,13,82,43,90,20,13,0,24,13,82,43,90,20,13,0,25,13,82,13,0,22,13,37,31,83,24,0,30,82,24,0,24,100,15,13,9,0,40,35,9,7,0,14,16,25,8,5,0,65,14,8,44,32,49,34,71,50,81,20,13,9,0,32,14,48,81,20,13,9,0,34,7,5,0,31,14,8,37,38,73,21,30,13,9,0,15,15,23,20,0,100,67,21,31,13,9,0,21,7,0,18,5,0,24,15,13,8,59,16,9,32,13,16,25,32,17,20,9,49,0,29,23,35,48,36,58,0,22,35,47,36,57,0,22,35,102,20,13,36,57,0,22,50,36,57,0,16,11,33,32,40,61,14,0,38,59,57,57,65,0,69,29,47,106,24,17,40,61,74,62,77,27,44,19,15,0,52,40,62,74,62,76,27,44,19,15,0,51,40,61,20,67,24,17,29,13,11,7,5,0,36,40,19,55,26,25,9,54,5,0,29,175,39,14,38,7,5,0,27,41,0,47,58,52,7,0,19,5,0,41,73,5,0,11,3,0,18,17,11,17,10,10,17,18,17,18,19,16,19,17,16,17,17,18,16,16,16,17,16,19,17,17,18,18,17,19,18,17,17,18,19,19,19,19,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,18,19,19,19,18,17,19,18,18,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,19,19,19,19,18,17,19,18,17,18,18,19,19,17,17,17,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,18,16,20,16,16,16,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,19,18,16,20,16,16,16,18,21,18,16,17,17,19,17,16,16,16,18,18,18,18,18,18,18,18,19,19,17,19,19,18,18,19,19,18,18,17,18,19,17,18,20,17,17,17,17,17,18,17,17,17,17,17,19,17,18,18,18,17,18,15,17,16,18,19,18,17,18,16,16,15,16,16,16,19,16,17,18,15,18,15,15,16,16,17,17,17,18,19,17,17,18,18,19,19,17,17,16,19,18,19,17,2,0,35,31,33,82,78,77,139,87,54,130,3,47,48,62,41,42,18,3,50,18,3,45,0,47,42,42,33,2,0,53,39,0,85,29,66,10,34,3,2,0,29,103,1,0,38,40,23,3,0,44,58,3,0,46,91,3,0,62,1,0,51,18,17,36,0,14,42,77,7,0,55,0,19,16,17,52,54,31,57,13,0,46,11,0,62,54,0,16,62,38,38,16,0,16,17,0,16,30,64,45,40,18,29,11,0,7,5,3,0,33,53,12,21,0,68,23,42,12,36,5,0,25,42,15,3,0,24,17,38,0,14,42,77,7,0,55,30,0,22,60,36,36,33,60,42,36,14,25,7,5,0,58,47,3,0,19,17,18,15,40,38,0,58,40,0,23,29,31,32,0,39,63,13,18,32,0,43,63,13,11,16,33,9,0,14,7,0,16,5,0,18,32,17,5,0,18,3,0,17,11,33,0,8,51,48,0,84,3,0,24,34,0,36,35,41,42,12,24,5,0,16,50,3,0,28,38,41,43,44,54,26,42,54,3,0,25,38,41,45,0,44,18,5,0,33,59,28,51,61,5,0,16,3,0,28,13,0,30,24,32,20,54,0,60,61,9,0,20,0,29,24,36,0,14,74,5,3,0,29,83,96,3,0,29,16,45,30,51,3,0,37,35,55,12,48,35,5,0,30,59,3,0,23,34,0,33,34,53,32,57,5,0,46,75,49,3,0,48,54,0,38,35,57,5,0,43,54,3,0,41,26,0,70,48,5,0,33,45,33,54,3,0,48,54,0,38,35,57,5,0,43,33,54,3,0,41,54,24,77,30,0,38,26,34,33,40,43,24,0,40,81,29,13,0,70,18,0,29,48,18,0,28,13,44,26,0,47,62,22,70,15,0,20,13,0,18,36,9,7,0,70,78,77,119,78,100,121,9,7,5,0,37,44,44,12,43,43,5,0,29,0,33,81,5,0,115,3,0,21,38,41,16,54,3,0,38,36,60,47,36,88,42,36,12,54,5,3,0,26,71,38,0,37,33,5,0,67,36,34,7,0,24,25,49,7,0,71,40,7,5,0,100,23,49,5,0,40,3,0,27,35,43,0,42,57,49,55,14,38,7,0,36,75,37,46,37,12,43,5,3,0,3,0,37,24,19,20,20,25,22,33,3,0,1,0,51,22,38,3,0,39,38,0,50,43,42,13,5,0,36,0,39,45,70,45,7,0,29,5,0,65,76,65,3,0,49,41,45,67,61,36,7,0,18,5,0,77,45,49,14,21,7,5,0,73,18,5,0,51,3,0,24,124,33,5,3,0,1,0,21,27,27,28,24,34,17,21,3,0,16,28,3,0,10,22,3,0,18,47,3,0,18,51,3,0,18,51,3,0,19,52,3,0,15,48,3,0,1,46,71,1,0,21,18,46,3,0,11,1,0,20,11,35,3,1,0,32,110,76,78,94,87,96,73,48,56,60,62,100,72,84,98,82,80,79,85,95,98,127,86,102,85,98,114,144,103,101,69,79,86,104,127,3,0,37,18,15,28,0,19,32,0,18,31,0,17,30,0,18,31,0,18,31,0,18,31,0,18,31,0,21,34,0,19,32,0,12,23,3,1,0,39,85,1,0,58,21,34,3,0,20,34,3,0,34,16,215,3,0,37,34,23,5,0,38,0,117,22,5,0,21,3,0,84,14,40,125,27,0,41,37,72,16,44,9,14,61,69,9,0,34,7,0,82,54,7,5,3,0,28,19,25,25,40,0,35,40,0,31,42,0,39,38,5,0,35,3,0,35,22,0,44,34,5,0,18,3,0,44,78,3,0,65,22,0,14,42,14,7,0,37,0,28,25,7,0,27,0,34,17,7,0,42,14,7,0,26,33,7,0,23,5,0,18,3,0,69,26,20,36,14,35,7,5,0,65,0,18,34,12,33,5,0,18,3,0,23,34,31,30,0,36,75,5,0,41,30,0,30,52,5,0,33,56,5,0,49,3,0,41,40,0,33,48,25,60,56,5,0,18,3,0,26,34,50,0,66,56,5,0,52,3,0,33,16,43,29,60,25,52,3,0,25,34,16,47,3,0,22,34,31,0,36,47,12,51,5,0,48,3,0,26,34,53,62,53,52,3,0,30,33,42,5,3,0,27,34,0,66,18,12,24,5,0,124,0,35,59,5,0,63,3,0,35,49,18,41,5,0,16,3,0,43,60,63,30,65,0,30,88,41,88,5,3,0,36,67,147,92,7,0,21,7,3,0,32,33,23,5,3,0,38,44,38,39,3,0,37,16,59,3,0,34,109,23,5,0,32,38,53,30,32,27,49,41,38,53,3,0,52,55,25,0,61,21,68,7,0,29,48,40,58,12,31,45,51,47,40,62,5,3,0,23,34,0,61,77,5,0,33,34,18,0,63,84,14,52,66,7,5,0,153,52,0,14,17,5,0,40,72,3,0,24,34,51,50,3,0,30,30,87,30,19,3,0,27,16,0,34,43,5,0,40,18,5,0,38,19,5,0,16,0,33,19,5,0,16,33,3,0,32,34,53,60,52,3,0,23,34,30,0,36,39,18,40,48,27,5,0,32,59,73,32,0,36,39,18,34,42,27,5,0,48,21,30,49,3,0,22,34,125,36,31,46,27,0,11,12,22,0,146,75,7,0,134,0,34,49,32,7,0,54,100,0,42,81,7,7,48,3,0,29,11,22,14,19,42,34,46,42,0,18,53,38,0,107,42,14,65,33,7,0,51,64,26,58,45,65,5,0,15,60,37,53,5,0,16,3,0,30,34,30,45,30,56,3,0,52,34,0,39,33,32,18,5,0,44,39,3,0,28,34,0,27,32,23,26,26,25,26,38,0,16,34,7,9,0,50,3,0,32,34,45,50,3,0,31,53,45,3,0,40,51,0,67,56,12,25,5,3,0,25,30,22,23,23,9,149,0,70,42,24,47,11,0,45,9,0,24,21,24,23,24,45,0,25,39,40,45,0,80,36,11,0,48,56,9,0,14,0,23,57,0,25,39,0,25,40,0,24,126,0,26,39,0,24,47,0,27,49,5,0,28,3,0,30,42,0,71,39,48,32,36,52,14,48,31,44,36,60,7,5,0,16,3,0,33,34,36,29,61,0,34,50,5,0,51,3,0,42,39,25,25,15,0,14,60,5,3,0,22,34,35,43,71,75,48,3,0,33,87,146,3,0,72,34,50,21,0,8,41,33,0,52,22,5,0,23,39,3,0,37,132,3,0,30,128,3,0,29,33,18,5,0,110,3,0,26,60,18,18,5,0,35,32,18,0,37,39,30,46,30,9,0,20,7,0,18,5,0,37,32,18,0,37,41,30,48,30,9,0,20,7,0,18,5,0,17,3,0,42,16,0,65,18,5,0,38,117,20,7,0,37,20,0,38,22,9,7,5,0,17,3,0,53,32,33,31,36,85,0,47,74,0,54,49,30,71,16,67,43,9,0,45,54,7,0,121,0,35,23,54,9,0,52,31,68,54,7,0,53,49,33,29,66,52,7,3,0,45,104,3,0,30,78,3,0,20,48,3,0,32,38,0,67,18,16,5,3,0,33,100,19,5,0,47,16,0,62,19,5,0,22,95,5,0,16,3,0,64,25,45,44,7,50,3,0,17,30,50,0,68,18,5,0,44,26,56,32,39,29,40,54,3,0,36,81,3,0,31,41,69,5,0,33,72,55,78,5,0,43,3,0,26,34,0,56,0,63,31,45,52,3,0,37,43,129,0,32,78,5,0,25,3,0,40,34,52,0,33,56,5,0,66,3,0,37,37,83,58,0,35,59,5,0,34,72,57,59,3,0,37,37,67,58,47,28,0,82,38,20,59,7,0,32,7,21,59,3,0,21,42,41,0,9,18,15,38,5,3,0,16,40,29,0,9,18,15,36,5,3,0,29,71,3,0,32,60,3,0,25,53,3,0,25,32,11,32,7,3,0,23,34,91,0,29,56,5,0,49,3,0,41,35,37,104,30,95,30,54,3,0,24,34,34,30,84,22,50,3,0,61,37,0,18,84,5,0,30,37,60,24,12,40,34,44,28,24,5,0,56,3,0,49,38,25,39,42,37,12,24,5,0,35,40,34,44,28,24,12,23,5,0,56,3,0,50,38,37,71,26,58,0,93,75,5,0,43,21,62,3,0,33,75,3,0,28,118,3,0,36,34,37,30,0,36,30,5,0,43,30,62,3,0,18,37,20,23,15,3,0,25,58,57,52,23,3,0,17,37,23,0,51,20,12,25,23,5,3,0,27,34,13,5,0,36,13,0,35,29,19,5,0,42,26,29,30,64,0,26,30,52,0,26,79,38,42,59,11,0,24,42,52,0,24,11,43,0,37,72,20,64,13,11,7,7,3,0,33,77,3,0,42,24,21,9,59,0,28,39,31,11,0,16,9,0,20,39,44,38,27,28,24,47,28,32,61,9,0,14,0,14,63,5,3,0,41,20,22,103,55,9,0,14,0,18,45,32,58,9,0,14,0,23,73,56,9,0,14,0,20,47,41,70,46,66,11,9,0,14,0,23,73,64,9,0,14,0,18,73,56,9,0,14,5,3,0,31,15,53,18,18,5,0,36,3,0,59,34,23,5,0,72,45,47,56,57,38,71,31,18,7,66,0,15,23,5,0,54,3,0,26,34,64,33,97,8,0,35,58,5,0,35,31,65,3,0,26,33,33,24,23,20,25,22,25,20,22,7,5,0,17,3,0,30,50,44,3,0,55,38,41,22,25,0,39,49,54,0,68,67,7,5,0,42,44,73,0,36,54,0,30,35,7,0,58,43,0,74,72,7,0,25,56,5,0,28,35,5,0,15,3,0,60,34,79,5,0,135,0,79,42,13,5,0,78,72,0,25,71,15,7,5,0,59,3,0,37,32,64,12,54,5,3,0,37,27,75,81,7,7,3,0,42,46,20,3,0,27,47,0,42,53,5,0,16,3,0,60,66,37,18,69,42,71,5,0,33,52,58,92,0,29,32,11,9,0,58,27,58,0,28,51,84,60,48,0,44,36,13,0,78,51,95,50,26,11,9,0,26,9,32,5,0,74,3,0,27,33,60,49,57,20,9,0,27,45,7,5,0,34,3,0,58,105,64,29,0,58,0,19,37,14,57,7,0,46,26,73,5,0,72,3,0,64,0,28,0,21,30,0,87,35,0,153,33,20,33,7,0,62,57,7,5,0,47,0,141,119,5,0,22,3,0,21,36,18,0,73,33,20,14,34,7,0,61,36,26,49,23,59,42,24,41,39,23,67,12,80,20,33,14,34,7,0,37,5,3,0,21,83,3,0,34,33,35,18,26,39,17,5,0,43,87,32,5,0,48,3,0,44,43,37,0,64,38,34,38,55,7,5,0,58,3,0,25,68,3,0,46,81,0,40,55,6,0,25,52,12,29,5,3,0,68,71,54,0,14,31,0,28,69,7,0,21,67,7,0,33,96,7,0,27,68,7,0,13,5,0,57,75,5,0,75,3,0,46,46,47,0,60,70,5,0,59,69,5,3,0,40,102,62,3,0,34,49,48,3,0,64,59,80,5,0,89,0,23,68,18,5,0,52,23,3,0,44,58,0,35,27,34,5,0,34,64,37,65,67,5,0,16,3,0,32,38,41,52,0,94,85,5,0,20,0,33,55,5,0,23,55,5,0,135,31,5,0,35,63,33,5,0,23,3,0,47,74,13,5,0,99,59,61,3,0,38,49,27,5,0,49,41,3,0,28,44,0,62,77,5,0,42,3,0,35,24,65,5,0,29,90,5,0,44,49,3,0,94,59,0,42,78,5,0,63,101,3,0,67,59,63,74,3,0,25,32,0,52,61,5,0,43,65,5,3,0,36,59,61,43,3,0,45,59,61,52,3,0,26,33,0,64,27,5,0,49,0,15,36,37,5,3,0,49,34,53,5,0,63,3,0,29,69,0,14,12,17,0,93,33,72,38,13,15,21,0,59,28,66,28,7,5,0,75,45,5,0,23,40,42,39,0,52,51,0,119,16,7,0,104,62,7,0,43,18,14,58,0,15,37,77,48,5,0,46,33,22,5,0,21,35,24,5,0,59,38,27,5,0,63,40,83,137,3,0,40,59,41,12,56,5,3,0,20,34,45,82,75,26,9,33,0,27,56,38,7,5,0,34,3,0,39,35,94,60,7,0,28,5,0,49,42,33,17,3,0,37,24,34,73,0,33,47,0,37,69,0,28,33,29,68,20,0,14,47,5,3,0,52,35,28,33,29,37,68,20,0,14,47,5,3,0,48,21,0,24,34,15,0,33,70,15,0,28,29,148,79,16,9,0,77,15,0,33,69,15,0,14,59,15,5,3,0,22,30,23,42,0,14,40,5,3,0,38,33,56,0,37,62,44,20,7,0,54,5,0,52,3,0,30,103,18,12,39,5,3,0,19,59,3,0,21,88,3,0,30,50,0,115,80,5,0,16,3,0,26,60,48,12,42,5,3,0,18,39,59,0,39,28,35,7,5,3,0,30,47,31,26,0,26,36,55,16,0,30,31,51,57,18,75,11,0,16,7,5,0,48,3,0,29,57,97,27,3,0,22,63,3,0,27,68,3,0,29,69,3,0,41,33,87,61,5,0,55,3,0,45,70,61,33,105,55,3,0,27,48,49,0,15,34,35,5,0,17,3,0,26,60,39,0,9,18,15,56,5,3,0,29,58,49,0,9,45,15,54,5,3,0,36,35,27,48,48,42,29,82,20,54,7,12,42,5,3,0,24,46,0,26,85,0,20,15,13,19,159,7,5,0,18,3,0,3,0,41,18,3,60,34,40,36,18,61,46,61,37,56,5,3,0,41,76,37,68,3,0,26,74,49,5,0,48,3,0,19,84,3,0,21,86,3,0,27,66,3,0,22,84,3,0,19,67,3,0,22,84,36,18,5,0,44,3,0,18,31,18,5,0,36,19,5,0,30,39,0,47,18,5,0,17,3,0,29,64,44,3,0,40,80,58,5,0,34,24,62,18,47,55,5,0,21,26,53,3,0,16,85,3,0,21,86,3,0,45,70,16,30,40,60,0,22,100,30,46,23,69,43,14,58,7,12,55,5,0,31,104,39,3,0,21,60,61,0,65,27,25,76,61,5,0,43,39,37,77,35,3,0,30,37,41,0,52,97,22,9,7,5,0,44,3,0,42,56,18,5,0,64,3,0,21,11,16,13,0,50,88,5,0,28,33,3,0,21,60,61,25,0,65,73,23,56,5,0,56,34,57,36,0,32,69,64,5,0,34,43,21,54,3,0,23,91,3,0,3,0,59,22,35,48,36,29,0,35,64,61,50,0,39,28,9,7,0,40,5,3,0,19,72,3,0,3,0,35,33,32,32,12,29,5,5,1,49,41,32,32,12,29,5,5,0,40,29,3,0,14,1,58,54,35,41,50,89,5,0,100,0,41,296,61,69,5,3,0,71,67,3,0,80,76,3,0,137,151,3,0,47,49,87,5,0,103,0,60,184,5,3,0,146,162,3,1,22,9,6,7,13,14,14,2,51,0,24,23,28,15,35,36,37,33,32,14,19,16,16,40,22,2,27,21,0,50,79,3,0,17,1,0,13,17,25,26,27,25,21,31,24,40,40,28,24,36,32,32,28,34,33,25,34,25,6,27,44,21,31,23,31,30,27,36,17,23,26,22,19,17,30,32,26,24,44,28,29,34,34,26,3,0,17,89,37,53,3,0,17,65,3,0,21,30,35,0,60,26,26,0,46,26,7,0,23,5,0,17,3,0,1,0,39,34,2,66,43,48,24,2,43,47,103,87,130,13,22,27,29,29,25,64,3,0,1,37,31,12,30,21,29,29,23,31,29,3,0,20,49,28,30,3,0,10,28,33,0,32,46,7,5,0,43,47,49,53,21,3,0,13,27,18,18,12,19,5,3,0,15,36,3,0,15,27,33,28,16,29,28,21,16,3,0,20,52,3,0,28,35,49,32,3,0,23,56,3,0,21,31,0,17,82,38,5,3,0,16,61,3,0,15,41,76,38,51,0,40,34,13,5,0,71,0,19,21,12,68,5,3,0,58,21,51,18,19,15,47,6,53,38,29,3,0,22,46,33,61,79,29,33,14,0,83,27,59,5,0,33,120,3,0,30,33,46,64,0,39,64,51,7,5,0,33,140,3,0,15,48,55,0,19,16,17,15,27,16,0,16,65,29,11,0,16,18,18,27,31,48,16,0,16,62,20,38,20,0,20,38,20,0,20,25,11,0,16,0,16,33,29,18,23,11,0,7,5,3,0,26,36,49,37,27,27,56,3,0,26,63,13,5,0,39,48,0,35,79,5,0,74,42,0,76,176,7,0,25,43,14,45,7,0,26,12,35,5,3,0,19,59,0,35,28,13,5,0,74,26,39,12,23,34,5,3,0,21,55,23,24,13,5,0,59,0,22,37,12,36,5,3,0,27,62,55,32,33,24,0,62,49,5,0,62,56,16,3,0,31,55,18,57,47,0,37,14,55,28,5,0,38,14,26,5,0,31,3,0,28,59,0,24,61,39,14,76,7,0,13,5,0,23,24,41,15,7,0,61,77,100,9,0,42,15,7,0,60,77,99,9,0,44,15,7,5,0,22,37,13,5,0,72,3,0,21,59,0,22,37,12,41,5,3,0,28,59,0,24,159,32,25,25,15,7,0,37,13,5,0,22,37,12,38,5,3,0,25,59,17,0,24,85,0,64,46,15,7,0,42,13,5,0,159,30,23,23,13,5,0,22,15,5,0,42,3,0,27,59,0,22,94,13,5,0,37,26,36,13,5,0,58,3,0,24,59,60,0,22,25,39,14,50,7,62,26,42,12,23,39,5,3,0,26,19,14,29,15,0,14,25,39,15,0,14,25,39,15,0,14,25,37,15,0,14,25,38,15,0,14,100,79,103,11,0,46,30,16,27,43,9,0,15,0,14,25,41,15,0,15,100,79,104,11,0,44,30,16,27,41,9,0,15,0,15,25,39,15,0,14,97,46,16,27,40,9,0,15,0,14,34,15,0,14,25,42,15,0,14,9,65,0,44,37,19,11,0,44,36,19,11,0,43,36,19,11,9,0,14,14,14,14,14,14,14,14,14,31,15,0,14,14,30,15,0,14,31,15,0,14,14,41,15,0,15,14,38,15,0,14,31,15,0,14,14,38,15,0,14,14,35,15,0,14,14,37,15,0,15,38,15,0,14,25,35,15,0,14,36,15,0,14,24,15,0,14,38,26,17,9,0,5,0,105,3,0,24,72,27,32,3,0,16,33,25,0,14,42,66,7,0,51,0,31,66,7,0,20,24,14,25,25,43,26,44,16,9,0,30,7,0,23,5,0,60,21,18,0,42,46,62,0,40,38,77,9,65,75,14,14,7,0,23,19,5,0,36,23,17,7,3,0,59,33,129,222,24,18,0,67,57,14,0,24,63,63,0,51,79,120,79,9,0,33,85,9,0,25,17,7,0,23,29,30,29,34,24,14,23,7,0,25,53,18,82,30,18,25,16,16,9,7,0,23,34,5,0,95,18,5,0,17,3,0,26,33,25,24,36,0,22,74,5,0,55,0,23,23,22,30,60,5,0,68,71,5,0,19,79,42,13,5,0,37,3,0,29,33,24,25,26,28,24,0,54,53,5,0,94,0,25,62,75,0,31,51,0,32,85,9,7,0,56,5,0,53,0,34,23,23,21,51,5,0,52,53,0,39,25,7,0,38,66,7,0,21,25,51,5,0,23,38,62,7,0,23,22,5,0,23,51,0,42,56,7,0,23,23,5,0,68,71,5,0,78,0,19,42,13,5,0,20,43,13,5,0,61,37,3,0,33,53,13,0,21,39,110,23,0,45,29,62,16,22,9,7,12,56,5,0,16,3,0,21,17,38,0,14,42,77,7,0,55,30,0,22,60,43,36,46,25,29,46,33,77,14,25,7,5,0,58,40,3,0,19,17,36,32,0,14,42,79,7,0,55,0,88,80,26,32,49,19,18,29,46,19,11,9,0,60,71,15,7,0,22,60,51,0,31,33,16,25,9,0,36,33,60,25,0,21,18,63,31,13,0,18,24,18,0,18,43,18,9,0,29,46,36,14,25,7,5,3,0,40,65,31,12,48,5,3,0,31,39,55,21,0,17,15,20,0,15,20,0,15,9,66,66,9,0,15,9,58,67,9,0,15,20,0,14,20,0,15,24,0,15,20,0,14,59,27,9,0,14,46,29,0,16,16,18,0,14,14,25,22,16,93,9,0,14,35,45,82,34,44,0,28,45,42,11,0,48,61,0,63,29,26,20,86,13,11,0,44,9,0,39,5,3,0,46,35,53,0,21,27,65,14,37,7,5,0,13,3,0,15,18,35,33,36,0,42,56,0,33,47,54,25,29,38,61,40,96,0,62,73,19,9,0,25,45,0,27,38,75,11,0,44,9,0,36,14,14,7,5,0,63,3,0,20,63,3,0,14,34,50,0,82,72,5,0,33,3,0,25,39,0,39,81,5,3,0,26,37,0,88,18,5,0,112,28,5,0,90,42,5,0,145,18,5,0,36,47,5,0,90,19,5,0,40,18,5,0,35,3,0,27,33,15,0,85,37,45,34,12,47,5,3,0,1,0,18,17,34,35,43,3,0,1,25,22,20,43,23,3,0,13,45,3,0,11,38,3,0,10,43,35,0,80,20,55,55,9,14,75,7,5,3,0,46,38,54,0,52,71,0,21,63,66,63,66,67,62,30,56,7,5,0,20,68,5,0,38,50,3,0,29,19,0,36,52,5,0,21,54,12,73,5,3,0,1,0,22,42,47,32,0,23,35,23,21,3,0,36,111,3,0,37,47,3,0,1,0,53,21,16,28,3,0,40,34,3,0,30,28,3,0,27,34,3,0,1,0,30,22,41,23,3,0,16,27,3,0,10,21,3,0,49,11,11,13,29,25,0,54,51,51,14,15,7,0,25,5,0,29,3,0,52,11,11,13,42,0,50,31,56,49,12,13,5,3,0,49,11,11,13,29,25,0,52,64,51,7,0,25,5,3,0,23,11,11,13,49,63,50,31,31,27,0,54,41,27,7,7,3,0,1,41,52,1,30,68,1,31,73,1,31,31,1,0,36,28,22,48,21,3,0,20,67,3,0,24,32,18,12,46,5,3,0,22,90,3,0,41,44,145,3,0,31,39,49,3,0,23,59,3,0,35,66,3,0,24,93,3,0,27,85,3,0,27,83,3,0,22,61,3,0,30,74,70,3,0,21,49,3,0,48,51,49,5,3,0,55,44,76,5,0,74,3,0,27,32,70,29,84,5,0,16,3,0,31,46,70,28,116,5,3,0,47,25,16,6,0,9,40,32,26,9,0,62,37,30,16,15,58,24,25,19,10,7,0,14,13,20,22,23,23,8,21,35,28,0,41,16,21,16,23,25,19,10,7,0,34,16,33,22,24,24,19,10,7,0,18,5,3,0,56,43,11,22,17,28,67,0,31,39,5,0,27,60,5,3,0,27,173,3,0,23,39,3,0,26,24,3,0,34,127,3,0,25,94,3,0,26,42,3,0,24,40,3,0,69,40,27,66,40,38,29,32,48,72,40,54,42,67,52,77,18,36,62,34,28,36,38,48,6,3,0,24,27,0,59,32,5,0,36,37,3,0,1,24,17,30,26,3,0,1,0,12,33,23,24,22,22,24,34,35,32,24,19,21,17,39,71,79,3,0,13,31,35,0,60,26,0,95,33,7,5,0,19,3,0,1,0,36,15,65,3,0,25,36,3,0,25,56,3,0,26,90,3,0,38,0,21,19,23,49,30,16,3,0,45,23,30,51,3,0,90,19,26,49,3,0,50,78,3,0,1,0,47,105,2,0,36,37,34,0,34,0,117,58,0,18,50,124,63,79,9,14,77,7,5,0,24,24,27,26,31,14,0,30,36,0,94,27,0,42,36,69,0,123,60,11,9,0,14,0,28,45,14,0,27,9,43,36,36,40,16,9,0,29,35,127,14,0,34,36,73,9,0,40,29,44,14,0,37,48,14,5,0,16,3,0,57,39,131,40,58,40,12,37,5,3,0,55,30,0,14,37,0,66,14,75,34,32,38,49,0,138,37,9,0,31,61,9,0,14,7,5,0,35,30,0,16,38,0,41,43,9,7,5,0,20,3,0,51,20,3,0,55,57,0,34,70,49,7,5,3,0,54,34,16,99,50,3,0,22,34,16,44,48,3,0,22,30,26,9,40,22,74,55,9,0,24,56,5,0,34,3,0,70,20,21,0,30,18,22,14,33,7,0,50,24,35,14,46,78,48,27,14,14,30,0,67,84,9,0,38,49,9,0,76,7,5,0,16,3,0,55,42,44,73,0,28,35,5,0,15,3,0,39,17,3,0,47,36,0,80,77,68,41,54,21,48,54,3,0,125,24,24,9,17,16,19,0,142,147,11,0,29,41,62,20,37,13,11,0,53,70,11,0,43,66,11,0,16,9,0,30,40,78,9,0,14,0,27,43,106,110,9,0,14,0,26,43,21,111,11,9,0,14,0,31,83,14,0,25,81,14,0,37,95,14,0,14,9,141,9,5,3,0,31,91,82,5,3,0,30,34,47,59,14,48,7,5,3,0,25,58,3,0,36,53,3,0,1,0,43,61,104,13,5,0,25,66,0,31,21,59,15,7,0,26,34,55,56,11,16,62,9,7,0,27,5,3,0,48,86,3,0,19,27,0,59,32,5,0,36,37,21,40,0,33,24,5,0,40,36,0,30,32,5,0,16,3,0,52,21,85,5,0,80,3,0,44,38,41,60,0,34,56,32,0,37,74,7,0,46,57,5,0,16,3,0,85,114,3,0,82,111,3,0,75,38,41,0,37,36,38,37,0,29,69,9,0,20,7,5,0,28,0,30,34,12,51,33,5,0,61,53,5,0,81,0,25,65,5,0,35,56,40,31,0,33,50,45,14,25,7,0,67,49,7,0,52,18,43,59,37,60,5,0,16,3,0,64,38,41,57,56,0,60,18,5,0,77,3,0,64,35,56,23,55,31,47,60,5,0,16,3,0,37,38,41,57,59,0,60,18,5,0,58,3,0,58,37,0,75,27,35,0,36,48,0,54,24,11,0,39,64,9,0,66,25,41,74,56,0,23,40,9,0,20,0,106,98,95,11,9,0,57,94,39,0,135,86,9,0,75,7,5,0,16,3,0,34,38,41,0,17,26,71,23,58,110,15,0,24,62,56,15,9,0,14,55,5,3,0,38,38,41,111,3,0,36,37,88,5,3,0,50,38,41,47,0,43,18,55,59,18,5,0,107,42,5,0,44,34,0,33,39,25,0,37,46,7,0,49,18,55,60,0,42,34,0,40,61,56,67,9,7,0,20,61,56,7,5,0,69,0,18,142,0,51,150,51,7,5,0,16,3,0,50,17,56,55,5,0,38,41,61,76,0,67,56,39,26,27,48,18,55,5,0,16,3,0,44,38,41,57,57,0,60,18,5,0,58,3,0,54,19,33,55,17,6,0,8,75,36,26,0,16,3,0,60,50,70,45,81,5,0,25,0,40,55,26,20,7,0,50,18,5,0,47,93,79,73,12,24,18,5,3,0,58,54,46,23,29,90,0,39,41,62,7,0,86,5,0,29,0,19,34,5,0,36,31,63,12,55,5,3,0,55,54,23,41,22,102,3,0,78,72,45,16,52,23,0,32,55,5,0,36,31,5,0,19,78,12,147,5,0,63,0,77,24,47,34,96,12,34,36,7,0,39,5,0,66,16,3,0,52,67,3,0,66,54,20,42,0,36,69,5,0,61,3,0,30,208,3,0,40,40,40,50,48,9,7,0,69,178,14,43,45,74,11,9,7,5,0,89,3,0,106,20,21,80,50,0,30,18,22,14,33,0,32,108,95,11,0,29,82,11,0,22,16,9,7,0,125,16,40,5,0,74,16,3,0,27,65,3,0,49,20,0,29,131,16,3,0,21,38,41,80,3,0,38,59,72,13,0,30,24,33,0,25,32,20,0,36,52,9,0,40,79,9,0,47,0,23,32,20,55,0,22,9,53,44,0,82,46,57,0,75,50,15,0,68,26,83,48,59,13,11,0,84,24,84,11,0,20,9,0,21,9,32,9,0,24,9,41,65,39,35,22,9,0,21,69,0,24,68,0,25,69,0,24,68,0,23,32,20,52,0,23,24,42,0,24,67,0,29,30,9,147,9,0,26,9,87,9,0,27,28,9,142,9,0,24,9,87,9,0,27,50,0,20,31,0,24,32,34,44,0,22,42,0,27,41,0,29,9,34,22,29,62,0,51,59,18,74,11,9,0,22,9,38,36,0,83,86,13,0,24,0,78,75,13,0,42,74,11,0,64,0,59,43,52,0,40,45,86,53,107,20,43,13,0,24,11,9,0,28,9,41,78,0,71,68,15,11,9,0,14,32,5,3,0,36,42,71,44,26,0,39,74,5,0,29,50,16,3,0,13,39,34,16,40,27,34,34,49,3,0,16,34,16,0,108,60,81,60,5,0,93,61,5,0,42,3,0,25,34,41,16,51,3,0,47,45,0,20,78,0,34,73,7,0,36,18,70,43,50,12,40,5,3,0,33,34,16,0,59,81,18,56,5,0,36,3,0,47,21,0,62,44,42,51,26,7,5,0,47,47,0,61,102,5,0,49,3,0,33,75,16,0,36,27,38,57,50,7,0,36,5,0,52,3,0,49,44,47,54,43,75,23,16,39,3,0,50,38,41,12,16,52,72,80,45,50,43,46,24,55,30,14,6,21,20,27,0,39,18,22,14,65,0,39,48,16,9,7,0,39,52,55,39,108,37,14,14,112,7,5,0,46,49,30,66,74,57,0,92,47,34,60,23,5,0,32,0,27,47,5,0,64,50,58,72,46,0,30,59,33,77,12,24,5,0,55,48,49,17,5,0,65,37,64,27,3,0,22,38,3,0,20,32,18,5,3,0,44,16,3,0,25,34,16,0,32,76,18,68,0,66,54,0,48,42,9,0,42,7,0,22,5,0,31,3,0,18,41,0,40,78,51,77,45,72,5,0,33,50,3,0,27,33,52,34,28,12,26,5,3,0,34,34,0,36,22,86,7,5,0,18,86,30,6,16,44,52,3,0,27,34,16,26,53,27,0,26,38,62,32,69,5,0,16,52,3,0,31,34,3,0,68,19,42,5,0,80,50,41,21,34,25,16,0,32,18,22,14,33,0,32,72,16,9,7,0,80,0,23,71,7,0,86,68,7,0,27,47,7,0,33,5,0,35,16,74,34,0,20,29,26,32,5,0,39,3,0,34,150,3,0,59,24,0,31,41,81,7,0,36,47,7,5,0,34,28,24,27,17,17,0,37,47,0,22,20,47,38,52,7,0,32,5,0,28,35,22,5,0,24,0,43,34,37,5,0,21,41,5,0,47,52,0,92,31,0,65,23,43,44,7,0,51,26,28,0,37,29,81,22,9,0,44,7,5,0,119,16,3,0,45,41,3,0,40,25,3,0,35,16,0,70,61,31,0,39,34,56,14,56,7,5,0,125,62,5,3,0,72,21,79,41,18,5,0,61,39,27,25,88,5,3,0,81,27,0,32,145,53,5,0,59,73,0,22,84,63,57,65,9,0,84,14,40,7,0,28,53,5,3,0,113,177,33,16,3,0,49,35,27,48,34,12,58,39,198,0,42,30,7,0,52,5,0,20,3,0,31,19,27,27,3,0,104,37,35,41,132,65,51,54,26,22,16,3,0,69,18,42,5,0,80,50,34,16,83,74,82,3,0,65,51,46,0,62,24,5,0,32,37,72,0,17,47,70,5,0,46,39,26,22,66,60,3,0,62,73,3,0,60,50,32,3,0,62,70,53,0,23,42,60,12,42,42,29,73,74,63,0,50,125,75,9,0,66,134,0,43,106,9,9,28,34,36,5,3,0,29,56,56,5,0,16,3,0,81,35,0,38,134,5,3,0,71,20,21,0,30,18,22,14,33,0,32,29,82,11,0,22,16,9,7,0,73,5,0,16,3,0,90,12,0,34,24,71,7,0,17,44,50,53,129,44,46,0,30,82,7,0,36,18,57,12,101,5,0,15,3,0,28,34,63,45,3,0,32,21,35,47,3,0,37,13,11,12,10,19,0,30,30,30,26,43,0,155,33,7,12,30,5,0,18,35,12,65,5,0,16,16,3,0,63,54,65,13,5,0,27,36,67,15,78,80,15,14,109,7,5,0,87,59,13,5,0,43,66,13,5,0,123,0,44,71,5,3,0,20,45,0,75,18,5,0,17,3,0,34,54,115,0,31,62,5,0,76,36,48,14,38,7,5,0,32,55,5,0,52,3,0,22,274,3,0,16,34,101,16,0,123,28,27,12,43,46,5,0,52,3,0,52,75,47,79,7,5,3,0,63,70,83,3,0,64,34,76,63,73,5,3,0,70,58,70,0,28,40,12,63,64,7,0,44,5,0,109,3,0,33,30,30,81,0,24,20,0,14,21,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,44,60,32,0,9,24,15,56,5,3,0,24,48,45,0,25,45,0,11,26,17,30,7,5,0,22,3,0,27,48,46,0,27,46,0,11,26,17,30,7,5,0,22,3,0,28,46,3,0,57,65,3,0,48,103,3,0,33,38,41,51,80,49,83,74,15,3,0,27,38,34,16,27,53,30,37,0,9,69,15,21,5,0,27,53,3,0,1,0,19,14,2,21,16,2,28,29,37,31,41,48,32,46,40,55,41,3,0,80,36,59,50,0,104,69,58,67,7,5,0,47,3,0,25,33,74,67,55,58,48,53,102,77,3,0,31,50,18,5,0,34,34,16,57,3,0,18,36,19,5,0,38,3,0,25,39,47,35,30,36,0,36,25,0,60,14,7,0,48,62,5,0,17,3,0,37,31,33,5,0,57,3,0,44,36,34,13,0,30,29,19,5,0,24,24,27,73,0,27,49,0,21,43,0,22,44,0,27,51,0,22,34,71,63,71,11,9,0,66,0,24,39,43,0,21,43,0,25,47,0,25,47,0,24,46,0,22,44,0,24,22,40,0,40,83,9,0,50,0,24,46,0,23,45,0,24,33,0,22,46,0,25,9,61,0,69,20,13,9,0,25,9,71,79,11,0,22,21,0,44,44,0,111,44,13,18,44,0,261,44,13,11,0,45,24,9,0,14,9,39,26,96,13,0,24,69,11,9,5,0,39,40,0,90,72,12,55,5,3,0,33,70,38,55,44,5,3,0,24,87,0,28,35,59,75,5,3,0,29,36,3,0,32,101,0,34,46,47,5,0,36,25,26,7,0,106,73,7,49,83,5,3,0,20,62,34,16,0,39,41,40,43,15,0,35,38,34,14,43,0,37,60,29,53,32,59,9,7,0,64,38,12,51,5,0,46,3,0,38,33,46,25,78,44,53,5,0,16,3,0,46,40,16,0,34,24,12,42,23,5,0,44,83,3,0,38,40,10,0,52,39,0,63,72,41,7,5,0,41,74,5,3,0,32,16,21,54,3,0,27,30,39,30,15,3,0,26,16,38,81,28,30,45,25,53,3,0,27,16,38,21,0,63,40,5,0,34,30,0,33,25,33,7,0,39,5,0,51,55,0,70,36,52,18,38,51,0,97,52,7,0,25,33,7,0,39,5,0,55,65,44,0,43,37,55,7,0,36,76,40,50,12,60,5,0,23,31,5,0,37,3,0,62,16,114,3,0,26,16,45,48,78,48,3,0,30,80,64,5,0,16,0,34,27,12,45,23,5,0,52,3,0,30,16,53,34,30,40,34,12,0,54,66,47,52,43,28,20,0,21,44,16,27,88,11,0,28,26,9,0,33,14,18,57,16,28,9,7,5,0,22,48,16,28,52,3,0,29,16,0,39,73,5,0,43,21,51,3,0,27,42,47,54,56,17,3,0,27,16,35,24,0,35,38,18,0,37,34,52,34,14,28,38,7,0,89,24,60,5,0,73,0,43,61,5,0,49,3,0,33,16,37,21,56,3,0,29,16,45,38,84,28,51,3,0,28,28,61,5,0,16,47,83,50,3,0,29,16,51,3,0,57,44,37,76,7,5,0,95,0,61,41,0,48,48,26,14,14,7,5,0,28,22,17,38,7,119,28,22,53,3,0,40,27,21,56,3,0,86,34,0,26,38,5,0,30,0,32,36,5,0,85,0,32,24,5,0,51,3,0,26,131,3,0,73,32,44,117,3,0,81,40,39,35,0,30,55,0,46,42,55,37,0,82,42,33,11,0,19,9,0,34,40,7,0,22,5,0,26,57,5,0,21,28,5,0,16,3,0,24,21,26,71,26,75,30,82,22,28,49,3,0,35,42,16,0,18,49,12,32,5,0,190,98,51,67,5,0,21,83,30,82,22,28,80,3,0,31,48,54,21,0,14,36,34,0,31,95,14,86,30,113,11,117,117,9,0,25,7,0,69,40,5,0,16,3,0,26,38,121,3,0,67,51,66,71,37,0,55,84,5,0,42,0,22,48,5,0,72,46,37,65,0,23,39,5,0,42,43,104,7,26,22,0,45,45,5,0,66,16,3,0,30,79,3,0,45,30,63,81,32,3,0,37,25,182,3,0,45,16,30,40,29,53,31,66,87,3,0,21,86,3,0,19,36,3,0,34,123,3,0,53,28,19,29,27,6,24,39,24,30,43,41,35,38,86,11,0,19,9,0,35,49,19,9,0,40,0,32,41,65,26,9,0,56,0,97,71,9,7,7,34,16,0,28,74,5,0,27,51,3,0,51,43,0,31,28,29,30,23,28,74,18,40,26,28,21,26,57,18,5,0,17,3,0,46,49,0,19,65,15,7,0,35,54,15,7,5,0,74,3,0,68,32,33,30,31,32,38,29,0,31,29,41,0,43,75,15,7,0,54,81,7,0,79,13,5,0,47,51,46,47,53,52,0,31,29,0,22,76,15,7,0,70,36,0,26,42,0,68,68,9,0,36,57,7,0,100,40,22,62,14,54,7,94,47,0,34,49,7,0,29,41,54,0,43,81,14,56,79,9,0,87,7,144,29,47,0,43,76,14,56,82,9,0,82,7,0,49,41,22,62,14,54,7,12,24,5,3,0,33,53,0,103,59,5,0,82,72,5,0,15,3,0,44,27,0,56,69,40,27,32,34,75,26,22,34,64,0,88,67,5,3,0,38,98,70,5,0,55,3,0,45,64,54,30,109,3,0,94,127,3,0,67,63,106,30,233,94,3,0,47,0,35,32,21,57,3,0,28,55,43,5,0,32,21,50,3,0,26,48,53,32,76,32,26,22,3,0,73,33,39,0,24,59,7,12,39,23,14,62,7,5,3,0,25,83,3,0,21,67,67,66,82,94,49,0,35,40,39,59,5,0,69,0,129,48,5,0,23,0,42,29,49,12,62,5,0,60,57,61,5,0,35,61,41,63,5,0,46,3,0,23,32,3,0,42,42,45,41,54,79,18,5,0,17,3,0,44,34,49,94,18,56,83,18,5,0,17,3,0,41,35,49,60,25,30,18,5,0,17,3,0,37,46,27,25,59,18,5,0,17,3,0,21,50,39,114,3,0,34,34,43,0,49,18,0,20,20,7,0,82,42,47,38,105,74,7,0,34,47,84,81,12,49,23,17,5,3,0,32,37,3,0,30,33,37,0,76,21,7,0,83,35,0,85,55,23,9,7,45,19,5,0,39,60,0,82,18,5,0,48,86,58,5,0,17,3,0,33,37,45,29,59,0,23,37,7,12,19,26,14,27,7,5,0,21,3,0,34,31,64,0,41,75,81,16,22,9,7,5,0,207,3,0,52,21,22,52,0,50,33,0,47,0,217,87,11,9,61,50,17,20,24,95,62,0,43,19,19,26,0,49,106,20,75,49,13,11,9,36,110,41,56,52,69,68,50,11,9,7,5,0,101,0,42,77,5,3,0,26,37,50,47,43,36,7,46,41,19,38,9,7,48,40,45,43,51,39,5,3,0,37,60,126,5,0,46,3,0,27,21,21,30,0,37,18,22,14,33,42,7,0,36,48,101,59,5,0,17,3,0,27,35,45,74,58,0,22,122,7,0,20,5,0,38,3,0,21,25,0,36,69,61,76,71,36,5,0,43,57,0,21,35,12,61,0,25,39,9,7,0,21,54,3,0,23,53,32,3,0,34,34,3,0,72,45,70,59,3,0,24,21,32,0,8,37,14,7,0,36,39,0,37,63,14,46,7,0,31,0,31,92,7,0,35,93,7,0,29,0,38,91,7,0,72,47,23,36,0,17,3,0,32,67,44,18,12,56,18,5,0,21,33,0,8,36,44,0,37,98,7,0,42,99,7,0,36,31,0,38,91,7,0,72,47,23,36,0,17,3,0,32,71,44,18,12,56,18,5,0,27,44,27,17,3,0,42,46,115,18,5,0,17,3,0,39,33,41,18,34,112,18,5,0,17,3,0,36,21,30,0,37,18,22,14,36,83,9,0,33,42,7,0,38,5,3,0,30,39,54,0,35,47,12,13,16,20,0,46,95,7,0,73,43,5,0,70,72,3,0,1,0,38,31,34,26,27,28,52,43,3,0,21,24,3,0,11,30,34,37,21,23,38,36,16,3,0,1,0,30,30,0,33,74,65,3,0,19,1,0,32,15,0,88,41,0,9,36,47,33,0,37,19,7,0,47,13,40,51,28,14,42,7,0,17,27,11,38,49,27,0,24,5,10,45,3,1,42,43,0,34,31,3,0,32,1,0,36,19,0,43,37,42,3,0,33,1,0,28,0,45,90,35,34,0,13,17,0,38,38,5,0,32,3,0,13,1,0,22,42,25,33,0],"data":{"version":3,"file":"index.js","sources":["file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/types.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/whitespace.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/location.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/base.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/comments.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/error-message.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/error.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/estree.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/context.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/identifier.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/scopeflags.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/scope.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/flow/scope.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/flow/index.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/jsx/xhtml.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/jsx/index.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/typescript/scope.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/production-parameter.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/typescript/index.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/placeholders.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugins/v8intrinsic.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/plugin-utils.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/options.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/state.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/tokenizer/index.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/class-scope.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/util/expression-scope.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/util.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/node.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/lval.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/expression.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/statement.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/parser/index.js","file:///Volumes/Data/Users/fficnar/Projects/mablung-babel-plugin-replace-string-literal/node_modules/@babel/parser/src/index.js"],"sourcesContent":["// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass:\n    \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitBindingIdentifierInStaticBlock:\n    \"Can not use 'await' as identifier inside a static block\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext:\n    \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString:\n    \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString:\n    'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent:\n    \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate:\n    \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport { ErrorMessages as Errors } from \"./error-message\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt.decimal:\n          return this.estreeParseDecimalLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      this.state.value === \"of\" &&\n      !this.state.exprAllowed &&\n      prevType !== tt._function &&\n      prevType !== tt._class\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(prevType === tt._return && this.hasPrecedingLineBreak()) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\ntt.braceHashL.updateContext = function () {\n  this.state.context.push(types.recordExpression);\n  this.state.exprAllowed = true; /* tt.braceHashL.beforeExpr */\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inStaticBlock() {\n    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: string[] = [];\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.includes(name) &&\n        (scope.lexical.includes(name) || scope.functions.includes(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors } from \"../../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  ThisParamAnnotationRequired:\n    \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor:\n    \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst:\n    \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction:\n    \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // determine whether a parameter is a this param\n    isThisParam(param) {\n      return param.type === \"Identifier\" && param.name === \"this\";\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdent.type === \"StringLiteral\") {\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  UnexpectedSequenceExpression:\n    \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(\n                this.state.pos,\n                `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              );\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = Object.freeze({\n  AbstractMethodHasImplementation:\n    \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters:\n    \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer:\n    \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation:\n    \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare:\n    \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasDeclare:\n    \"Index signatures cannot have the 'declare' modifier\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidTupleMemberLabel:\n    \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements:\n    \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod:\n    \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer:\n    \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  ReadonlyForMethodSignature:\n    \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier:\n    \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.hash) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: string,\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\"],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInDeclareContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers !== undefined) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n        if (allowModifiers === false && (accessibility || readonly)) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = false;\n              }\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      this.tsParseModifiers(member, [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n      ]);\n\n      const callParseClassMember = () => {\n        super.parseClassMember(classBody, member, state);\n      };\n      if (member.declare) {\n        this.tsInDeclareContext(callParseClassMember);\n      } else {\n        callParseClassMember();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isDeclareContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isDeclareContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isDeclareContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInDeclareContext<T>(cb: () => T): T {\n      const oldIsDeclareContext = this.state.isDeclareContext;\n      this.state.isDeclareContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isDeclareContext = oldIsDeclareContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\"\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\n        \"Cannot combine importAssertions and moduleAttributes plugins.\",\n      );\n    }\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n  isDeclareContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, string> = new Map();\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: string) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return this.hasPrecedingLineBreak();\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\ntype raiseFunction = (number, string, ...any) => void;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ string> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, message: string) {\n    this.errors.set(pos, message);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (message: string, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {string} message Error message\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, message);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {string} message\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(pos: number, message: string): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, message);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, message);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {string} message\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, message: string): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, message);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((message, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, message);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.state.exportedIdentifiers;\n    this.state.exportedIdentifiers = [];\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.state.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors } from \"./error\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      ),\n    );\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        // If we have [Yield] production, `yield` will start a YieldExpression thus\n        // regex is allowed following. Otherwise `yield` is an identifier and regex\n        // is disallowed in tt.name.updateContext\n        this.state.exprAllowed = true;\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    if (\n      this.isContextual(\"module\") &&\n      this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n      !this.hasFollowingLineBreak()\n    ) {\n      return this.parseModuleExpression();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(\n          startPos,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const property = computed\n      ? this.parseExpression()\n      : this.parseMaybePrivateName(true);\n\n    if (this.isPrivateName(property)) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(\n        this.getPrivateNameSV(property),\n        property.start,\n      );\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        state.maybeAsyncArrow,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        // todo(Babel 8): remove the if condition,\n        // moduleAttributes is renamed to importAssertions\n        if (!this.hasPlugin(\"moduleAttributes\")) {\n          this.expectPlugin(\"importAssertions\");\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            const last = this.state.context.length - 1;\n            if (this.state.context[last] !== ct.functionStatement) {\n              // Since \"async\" is an identifier and normally identifiers\n              // can't be followed by expression, the tokenizer assumes\n              // that \"function\" starts a statement.\n              // Fixing it in the tokenizer would mean tracking not only the\n              // previous token (\"async\"), but also the one before to know\n              // its beforeExpr value.\n              // It's easier and more efficient to adjust the context here.\n              throw new Error(\"Internal error\");\n            }\n            this.state.context[last] = ct.functionExpression;\n\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            return this.parseAsyncArrowUnaryFunction(id);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo();\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.decimal:\n        return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(\n              this.getPrivateNameSV(node),\n              node.start,\n            );\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              this.getPrivateNameSV(node),\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  parseDo(): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    const node = this.startNode();\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    node.body = this.parseBlock();\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    // The tokenizer uses `braceIsBlock` to detect whether `{` starts a block statement.\n    // If `{` is a block statement, `exprAllowed` will be `true`.\n    // However the tokenizer can not handle edge cases like `0 ? a : { a : 1 } / 2`, here\n    // we update `exprAllowed` when an object-like is parsed.\n    this.state.exprAllowed = false;\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) ||\n        this.match(tt.string) ||\n        this.match(tt.bigint) ||\n        this.match(tt.decimal)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (!this.isPrivateName(prop.key)) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const curContext = this.curContext();\n      if (\n        (type === tt._class || type === tt._function) &&\n        (curContext === ct.functionStatement ||\n          curContext === ct.functionExpression)\n      ) {\n        this.state.context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsInClass);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n    if (isForOf || this.match(tt._in)) {\n      if (isForOf && startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      }\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      constructorAllowsSuper,\n      hadConstructor: false,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassElementName(method);\n\n      if (this.isPrivateName(method.key)) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassElementName(member);\n    const isPrivate = this.isPrivateName(key);\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isPrivateName(method.key)) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassElementName(publicMethod);\n\n      if (this.isPrivateName(method.key)) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (\n      this.isPrivateName(key) &&\n      this.getPrivateNameSV(key) === \"constructor\"\n    ) {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation || this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n    }\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type === \"StringLiteral\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      this.expectPlugin(\"moduleStringNames\");\n      const result = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    }\n    // todo(Babel 8): remove module attributes support\n    else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      if (this.match(tt.string)) {\n        node.key = this.parseLiteral<N.StringLiteral>(keyName, \"StringLiteral\");\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (keyName !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          keyName,\n        );\n      }\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral<N.StringLiteral>(\n        this.state.value,\n        \"StringLiteral\",\n      );\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (imported.type === \"StringLiteral\") {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n"],"names":["beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","name","options","token","set","createBinop","types","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","getLineInfo","input","offset","lineStart","match","lastIndex","exec","index","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","stack","length","CommentsParser","addComment","comment","loc","state","trailingComments","push","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","processComment","type","body","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","slice","innerComments","firstTrailingCommentIndex","findIndex","ErrorMessages","Object","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","raiseOverwrite","message","replace","_","errorRecovery","errors","error","_raise","data","errorContext","err","SyntaxError","isLookahead","superClass","estreeParseRegExpLiteral","pattern","flags","regex","e","estreeParseLiteral","estreeParseBigIntLiteral","value","bigInt","BigInt","String","estreeParseDecimalLiteral","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","extra","expressionValue","raw","finishNodeAt","initFunction","isAsync","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","method","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","args","directiveStatements","directives","map","d","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","refExpressionErrors","tt","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","id","isPrivateName","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","prop","isPattern","isAccessor","shorthand","parseObjectProperty","toAssignable","isLHS","toAssignableObjectExpressionProp","key","Errors","finishCallExpression","optional","callee","toReferencedArguments","parseExport","exported","specifiers","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","indexOf","checkLocalExport","FlowScope","declareFunctions","FlowScopeHandler","includes","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","finishToken","val","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","this","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","bodyNode","parseImport","hasModuleExport","forEach","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","first","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","topLevel","flowParseEnumDeclaration","parseExpressionStatement","expr","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","refNeedsArrowPos","result","tryParse","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parse","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","getTokenFromCode","charCodeAt","finishOp","readWord","isBinding","element","operator","exprList","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","close","canBePattern","isTuple","maybeInArrowParameters","checkLVal","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","contextDescription","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseBindingAtom","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","toUpperCase","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","str","count","entity","substr","fromCodePoint","parseInt","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsNextTokenCanFollowModifier","isLiteralPropertyName","tsParseModifier","allowedModifiers","tsTryParse","bind","tsParseModifiers","modified","disallowedModifiers","accessibility","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","containsEsc","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","hasFollowingLineBreak","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","parseAccessModifier","elt","pp","parameter","bodilessType","isDeclareContext","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","parseStatementContent","callParseClassMember","parseClassMemberWithIsStatic","inAbstractClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","ct","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","checkCommaAfterRest","readToken_lt_gt","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsDeclareContext","oldInAbstractClass","hasBody","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","oldStrict","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","some","Array","isArray","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","join","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","strictErrors","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","setStrict","clear","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","size","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","escaped","charAt","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","octal","n","readWord1","escStart","identifierCheck","esc","keywordTypes","parent","update","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","declarePrivateName","classScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","UtilParser","op","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","expectOnePlugin","names","fn","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","initializeScopes","oldLabels","oldExportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","Node","parser","range","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","isLast","raiseRestNotLast","checkToRestConversion","arg","raiseTrailingCommaAfterRest","toReferencedListDeep","parseSpread","parseRestBinding","parseObjectLike","closeCharCode","allowEmpty","elts","parseDecorator","checkClashes","disallowLetBinding","strictModeChanged","elem","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","getExpression","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","parseMaybeAssignDisallowIn","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","checkExponentialAfterUnary","sawUnary","isAwait","isAwaitAllowed","parseAwait","parseModuleExpression","isDelete","parseUpdate","isAmbiguousAwait","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","lookaheadCh","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","create","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","oldInPropertyName","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","reservedTest","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","ret","revertScopes","parseProgram","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","loneSurrogate","StatementParser","interpreter","parseInterpreterDirective","isLetKeyword","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","isForOf","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","simple","handler","clause","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","constructorAllowsSuper","hadConstructor","parseClassStaticBlock","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","nodes","surrogate","toString","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList"],"mappings":"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","sourceRoot":""},"url":null}}}