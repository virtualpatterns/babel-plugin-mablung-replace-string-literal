{"version":3,"sources":["../../source/library/visitor.cjs"],"names":["Visitor","BaseVisitor","constructor","babel","nodeType","onStringLiteralNode","path","state","option","opts","rule","forEach","searchForPattern","Is","regexp","searchFor","RegExp","node","value","replace","replaceWith"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,OAAN,SAAsBC,gBAAtB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAED,MAAIC,QAAJ,GAAe;AACb,WAAO,CAAE,eAAF,CAAP;AACD;;AAEDC,EAAAA,mBAAmB,CAACC,IAAD,EAAOC,KAAP,EAAc;AAC/B;AAEA,QAAIC,MAAM,GAAGD,KAAK,CAACE,IAAnB;AACA,QAAIC,IAAI,GAAGF,MAAM,CAACE,IAAlB;AAEAA,IAAAA,IAAI,CAACC,OAAL,CAAcD,IAAD,IAAU;AAErBA,MAAAA,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAA7B,GAAgDC,YAAGC,MAAH,CAAUJ,IAAI,CAACK,SAAf,IAA4BL,IAAI,CAACK,SAAjC,GAA6C,IAAIC,MAAJ,CAAWN,IAAI,CAACK,SAAhB,EAA2B,IAA3B,CAArH;AAEAT,MAAAA,IAAI,CAACW,IAAL,CAAUC,KAAV,GAAkBZ,IAAI,CAACW,IAAL,CAAUC,KAAV,CAAgBC,OAAhB,CAAwBT,IAAI,CAACE,gBAA7B,EAA+CF,IAAI,CAACU,WAApD,CAAlB;AAED,KAND;AAQD;;AAxB+B,C,CA8BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Is from '@pwn/is'\nimport { Visitor as BaseVisitor } from '@virtualpatterns/mablung-babel-plugin/visitor'\n\nclass Visitor extends BaseVisitor {\n\n  constructor(babel) {\n    super(babel)\n  }\n\n  get nodeType() {\n    return [ 'StringLiteral' ]\n  }\n\n  onStringLiteralNode(path, state) {\n    // console.log(`Visitor.onStringLiteralNode('${path.node.name}', state)`)\n\n    let option = state.opts\n    let rule = option.rule\n\n    rule.forEach((rule) => {\n\n      rule.searchForPattern = rule.searchForPattern ? rule.searchForPattern : Is.regexp(rule.searchFor) ? rule.searchFor : new RegExp(rule.searchFor, 'gi')\n\n      path.node.value = path.node.value.replace(rule.searchForPattern, rule.replaceWith)\n\n    })\n\n  }\n\n}\n\nexport { Visitor }\n\n// {\n//   'rule': [\n//     {\n//       'searchFor': '../error/replace-error.js',\n//       'replaceWith': '...',\n//     }\n//   ]\n// }      \n"],"file":"visitor.cjs"}